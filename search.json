[{"title":"Windows 11 use half a year experience & worth teasing","path":"/2022/05/02/Win11/","content":"Since Microsoft released Windows 11, I’ve been upgrading my 20-year-old PC. After six months with Windows 11, I feel I’m qualified to talk about my experience.First of all, when upgrading, my computer did not have TPM 2.0. When the preview came out, I installed various preview virtual machines until the official release. 点击此处查看简体中文页面 (Click here to view the simplified Chinese page)I stayed up late to watch several events and learned a lot about Windows 11. New features &amp; new look &amp; must be teasedThis time Windows 11 moved the taskbar icon to the center, or center. Center probably does not have what substantive use to me, but each have each view and be fond of, anyway I think center only use is for beautiful. But… For those of you who don’t know about macOS, the Windows 11 taskbar does pay homage to the Dock in a sense, and it’s mostly cosmetic. The downside of the Windows 11 taskbar is that it’s not as bottomless as the Dock. Windows 11’s taskbar is always limited, and unlike the Dock, it shrinks itself to make more space. When I used macOS primarily, I had a habit of putting all the apps I had installed on the Dock. Windows 11 didn’t allow me to do that, so I decided to uncenter the taskbar so I could cram more. To Be Continued","tags":["Software testing and evaluation","Essay","Windows"],"categories":["Numerical code"]},{"title":"Money, mobile phone and computer? Apple's spring 2022 event is back","path":"/2022/04/24/苹果发布会/","content":"Apple held a press conference at the beginning of the month. I watched the press conference with dark circles under my eyes. Today, we don’t talk about products, we don’t talk about software, we will talk about this new product conference. First up was the new Apple TV Plus. Apple TV Plus is a video subscription service from Apple 点击此处查看简体中文页面 (Click here to view the simplified Chinese page) The advantage of it is that there are no advertisements and you don’t need to have a membership to watch the show, but… It costs a lot to subscribe to. The event was dominated by a lot of talk about the new Apple TV Plus series, etc. The next entry was, of course, the iPhone. This time, the new green was introduced, and the iPhone 13 Pro also ushered in a new green, showing apple’s modern vitality. Third came chips that Apple has never been short of, and the iPhone SE. This time, Apple has added the bionic chip of the A15 to the iPhone SE, which is an exact copy of the iPhone 8. The iPhone SE is the 2022 iPhone 8, and the starting price is only 3,999, although that price can buy a high-end Android phone, which is affordable for Apple. But the iPhone SE is 26 times faster than the iPhone 8 and runs iOS 15. It even has the same glass back as the iPhone 13 series. It’s powered by Apple’s advanced Touch ID. There is a very important is that more than three thousand mobile phones have 5G. The iPhone SE is made of eco-friendly materials. Fourth came the iPad, which is as important as the iPhone. This time, it’s the new iPad Air. The iPad Air 5 is a huge performance boost because it features a new Mac line, the same chip as its older brother, the iPad Pro, the Apple M1, which is 60 percent better than its predecessor. Let’s talk about the lens. This time, the front-facing camera has been upgraded to 12 megapixels, which is the same as the rear of the iPhone 13. The rear of the iPhone 13 was hit by an Air. The iPhone SE has 5G, but how can the iPad Air not have 5G? In addition, the iPad Air 5 also features a smart keyboard, giving it a chance to be productive, at least until it becomes iQiyi again. Such excellent performance, starting at 4,399, is still acceptable. There’s another one, which also runs iPadOS 15. Finally, Apple is as green as ever. The fifth entry was the Mac, as important as the iPhone and iPad. The first is its chip. Chips in the Mac line include M1, M1 Pro, and M1 Max. This time, Apple announced the M1 Ultra. The announcement says it can bring unmatched performance to computers. Apple has always tried to improve performance by improving architecture, and this time… Apple merged the two M1 Max’s together. This is not a simple fit, even with two CPU connections, it can achieve a staggering 2.5TB&#x2F;s of processing speed and low power consumption. It comes with an equally impressive 128GB of ram and the fastest processing speed on the planet. With chips out of the way, now comes the big story, which is apple’s Mac Studio for The Studio, and the Studio Display. It’s compact, but bigger than two Mac Minis. It is quiet and carries the M1 Ultra. It has a powerful interface and can connect up to four monitors at once. It is powerful enough to play 18 8K ProRes timelines simultaneously. Finally, environmental protection…","tags":["Channel video manuscript"],"categories":["Technology"]},{"title":"What is a chip? What is a lithography machine? How does China transform from a chip power to a chip power?","path":"/2022/04/24/芯片/","content":"When people use their mobile phones to surf Microblogs, Douyin, or play large games and follow popular TV series on the computer, they all sigh at the magic of artificial intelligence, big data and cloud computing, and feel proud of being in such an era of rapid development of science and technology. But many people may not know just how big a role chips play. 点击此处查看简体中文页面 (Click here to view the simplified Chinese page) Chips are everywhere in our daily life. Chips are not only installed in computers, but also in our mobile phones, TV sets, air conditioners, water heaters and even remote controls. The US had banned ZTE from buying or selling any products, software or technology subject to US export control regulations for seven years. The move has pushed ZTE to the edge of a cliff. Zte’s core components such as mobile phone chips, baseband chips, memory chips and optical components are all from us tech giants such as Qualcomm, Broadcom, Intel and Xinfei Com. It is difficult to find a substitute with comparable performance in the short term, or even impossible to replace at all. Zte is one of The largest telecom equipment companies in China, but it will take a long time to replace its reliance on U.S. chip technology. Zte incident reflects the serious “lack of core” problem in the domestic communication industry. China’s chip market demand accounts for more than 50% of the world, some chips account for 70%~80%, and 90% rely on imports, domestic chips can only supply about 8%. Obviously, the demand for chips in China is very large In fact, the move, more than ZTE. Take Huawei for example. Huawei’s P50, which was just released last year, is equipped with its own Kirin chip only Pro series. As for the rest, In order to retain the Chinese market, Qualcomm allowed huawei to export chips, but only 4G chips. So, huawei’s new phone in addition to its own chips, almost said goodbye to 5G. Chips, are they really that hard to make? A chip, also known as a microcircuit, is a piece of silicon containing integrated circuits. It is very small and is an important part of a computer or other electronic equipment, which is also known as the central processing unit, CPU. When it comes to core making, there’s a term that’s bound to come up: lithography. Photolithography, as the name implies, the so-called photolithography machine, with light as the media, depicting micro nano in the square inch, to achieve a variety of micron or even nano level of graphic processing. At present, the most advanced lithography machine can process the smallest line is 13 nanometers. Our human hair is between 50 and 70 microns in diameter, so photolithography can carve lines that are only 1&#x2F;5,000 of the diameter of a human hair. Isn’t that awesome? China, a great country, can’t even make a lithography machine? Why will domestic chip technology be “stuck”? The ZTE incident has brought to light China’s difficulties with communications technology. Integrated circuit practitioners know that China’s lack of indigenous innovation in the high-end chip industry is a time bomb for the industry. There are many domestic home appliance manufacturers, the demand for chips is very large, although the domestic research chips can be supplied, but most power plants will choose higher high-end chips abroad. So we have to admit that China’s chip technology is not very mature. Experts from the Chinese Academy of Sciences have also said that China’s current chip technology, compared with the world’s giants, there are still many shortcomings, if China is still so dependent on imports, it means that China’s artificial intelligence technology, also under the control of others. How to break through the industry bottleneck, from a chip power to a chip power, has always been a thorny problem for the Chinese government and industry. Some Chinese enterprises have made some attempts at independent innovation, but they have not achieved success. The development of high-end chips requires long-term accumulation of technology and talents, and independent innovation in the short term will face huge challenges. Remarkable achievements have been made in Cambrian science and technology and the Qilin in the Sea. They have made great contributions to the development of Chinese chip technology. Thank them!","tags":["Channel video manuscript","Hardcore science"],"categories":["Technology"]},{"title":"Which of the major search engines is better? Market mainstream search engine use experience horizontal comment","path":"/2022/04/24/搜索引擎/","content":"Search engines are probably the most widely used software for all kinds of people. And the search engine is also the starting point for most people to surf the Internet, the entrance to all kinds of websites. There are many entrances like this. So, what kind of search engine experience is better? 点击此处查看简体中文页面 (Click here to view the simplified Chinese page) In this way, I did a survey and asked many friends around me, as well as my fans. Most of them used Baidu to search, while a small part used Google to search, and basically had no other answers. In fact, there are a lot of search engines on the market now, I found the current mainstream search engines to conduct reviews, respectively Bing, Baidu, 360, Sogou and so on. We measure a search engine in terms of relevance, feature integrity, and AD volume, and use a few keywords for examples. All tests did not open the AD blocking plug-in, this video is not exactly food, please rest assured to eat. Google search engine should be familiar to everyone, because it is the global search engine market in the market share of the highest, a large user group, high quality content, basically achieved no advertising, but unfortunately lost the Chinese market, most users can not use it. So we’re not going to review it. Baidu. As the world’s largest Chinese search engine, Baidu search ranks second only to Google in global search engine market share. The majority of Baidu search users are Chinese, most of them prefer Baidu and probably know that baidu is the only search engine on earth. But baidu’s search results are not good. Let’s look at an example. It is not difficult to find that the first few baidu search results are advertising, the real results in about ten lines later. Let’s try it again just to make sure it’s reasonable. In fact, Baidu will search content according to your domain, to give you the right advertising, really disgusting! Baidu has web pages, information, video, library, pictures and other search methods, is not small. Finally, to summarize: 1. More ads; 2. Low relevance; 3. It is recommended. Bing. Bing, now owned by Microsoft, ranks third in global search engine market share behind Baidu inc. Bing is now my main search engine, so far the experience is good, there is nothing to joke about. Of course, it is not comparable to Google search, but in the domestic mainstream search engine, its experience is like the camel among the sheep. Let’s look at an example. We can see that bing search results always have the most relevant results at the top, with negligible advertising. We tested other search terms and the results were the same. Bing’s search methods include web pages, images, videos, academics and dictionaries. Another feature that I think is very powerful is access to national and global search results. Conclusion: 1. No advertising 2. High relevance 3. Recommended. Third, 360 search. 360search’s market share is less than 4 percent domestically and less than 0.1 percent abroad. Most of its users were forced to bundle up after installing 360familybucket, tampering with the browser home page. In 360’s search results, it can be found that the results are basically advertising, and the advertising marks are not obvious, which is very unfriendly to the elderly. The real results are hidden, undifferentiated from advertising, and have no official logo. Its search function is fairly complete, comparable to Baidu, but not as comprehensive as Baidu’s information. Use experience, disgusting! Conclusion: 1. Excessive advertising; 2. Low relevancy; 3. Not recommended. Four, sogou search. Sogou has a domestic market share of about 12 percent, ranking second only to Baidu. Sogou search even before the fire over Baidu, and sogou browser’s own search engine is sogou search. But its search results aren’t great either. On the first page are either ads or highly irrelevant results, while the real results are on the last line. In a word, in a word, gross! Disgusting! The function that sogou searches also is equal with Baidu, do not have Baidu likewise comprehensive, but a few better than 360. Overall use: 1. More advertisements; 2. Low relevancy; 3. It is recommended. Finally, I recommend Google and Bing. I don’t like the others very much. It depends on personal preference.","tags":["Channel video manuscript","Software testing and evaluation","Hardcore science"],"categories":["Software"]},{"title":"Mi Band 6, the peak of smart band world? Daily use experience of Xiaomi Wristband","path":"/2022/04/24/小米手环6/","content":"Mi Band 6 is a new generation of mi band released in March last year. Compared with previous generations of Mi band, you can find it has a huge improvement in all aspects, and even it is not praised as the peak of smart band industry. Mi Band 6, what on earth is worth my recommendation? 点击此处查看简体中文页面 (Click here to view the simplified Chinese page) First of all, compared with the previous generation, the biggest improvement of this generation is the appearance. In terms of appearance, mi Band 6 is the first to use an AMOLED runway display, which increases the screen area by 50% compared to mi Band 5. The information displayed on the screen can be swiped to view, more smoothly, is really deep in my heart. Don’t use a brighter dial, wouldn’t it be a waste of such a smooth runway screen? This time, Millet provided more than 130 dial, colorful dial, really too in line with my colorful personality. The Mi Band 6 has an IP68 rating for dust and water resistance, which makes me never take it off when I shower or sleep. This time, magnetic charge is also used, and there is a charging animation for the runway full screen. Secondly, as a sports bracelet, Mi Band 6 also has a lot of motivation for people like me who do not like sports. First, a reminder about sitting. I sometimes cut a video and sit for seven or eight hours, which is very unfriendly to my back. At this point, the bracelet will remind me, it’s time to get up and exercise. The Mi Band 6 supports 30 sports modes this time, less than the watch, but enough for me. Most of the use of a few, running, walking, cycling and so on. Why does it motivate me? Because is an individual can feel so rich motion function, need not come to motion is not wasted? In addition, mi bracelet 6 for my student party or very helpful. It has an alarm clock to prevent me from being late for school. It has a tomato clock, which can improve my study efficiency. It has a countdown that controls when I do my homework. It also has breathing training and pressure detection, which enables me to know my pressure condition and relieve it when the study pressure is very heavy. When the Mi Band 6 connects to the phone, it can display notifications on the phone without missing any of your friends. Occasionally, a simple notification view is possible. Mi Band 6 also has a very YYDS function, which is remote photo control. You can connect on your phone, and then you can. Use a wristband to control taking photos. The use scenario is that when taking a group photo, there is no one to take the photo, and everyone can be in the picture. The Mi Band 6 is an epic upgrade over its predecessor. Feature rich and complete, but also super cost-effective, for the student party is very friendly. It supports non-Xiaomi phone users, such as iOS users. I believe the future of Mi bracelet will be better.","tags":["Channel video manuscript","Measurement of the hardware"],"categories":["Numerical code"]},{"title":"What's the Mi 6 like in 2022? 5 years later mi6 reviews","path":"/2022/04/24/小米6/","content":"Mi 6, has been on sale for a year. In the years since its release, there has been a saying in mobile phone circles: buy new, don’t buy old, unless mi 6. Mi 6, the digital flagship released by Xiaomi Company in 2017, has become a king of the generation with the advantages that are difficult to be achieved by the current digital flagship, as well as the excellent performance that now seems to be very outstanding 点击此处查看简体中文页面 (Click here to view the simplified Chinese page)And let its users, millet history, the most difficult to pull a batch of nail households. What’s the magic of a phone like this?The Mi 6, powered by a Qualcomm Snapdragon 835 processor, was a king at the time. With an eight-core processor and a 10nm process, performance-wise, it’s a no-brainer. Such a high performance chip, but low power consumption, no heat, at that time can be said to be the flagship of the flagship processing platform. Use it to run some games, no problem, no stress. The rest of the mainstream software is very smooth to use, nothing to say. With performance out of the way, let’s talk about how it looks and feels. To Be Continued","tags":["Channel video manuscript","Measurement of the hardware"],"categories":["Numerical code"]},{"title":"Salvage MIUI's reputation? MIUI 13 development version daily use experience for a week","path":"/2022/04/24/MIUI 13/","content":"Last week, I upgraded MIUI 13 on my Xiaomi phone and used it and played with it for a week.At the end of 2021, Xiaomi held a new product release conference, MIUI 13, which was expected to be released. With the arrival of MIUI 12, we looked at the various new functions at the conference. Did MIUI 13 really restore MIUI’s reputation? 点击此处查看简体中文页面 (Click here to view the simplified Chinese page)First of all, the big improvement is fluency. There was no pressure to use it on my mid-range machine, either to exit animations, or to break animations or small pieces of animation, at least on my mid-range machine there were no frames dropped or stuck. Then there’s the new feature I’m most looking forward to: widgets. To add widgets, simply hold down on a blank area of the desktop, click Add Widget, select a widget you like, and drag it onto the desktop. In the appearance, it adds some personalized flavor, practical, convenient to check some important information at any time, such as time, date, and weather. And negative one screen also uses small pieces to arrange information. In addition, I found a very interesting place, is the memory free widget. One of my favorite updates is the “no word” mode, which makes the text under the ICONS disappear, making the desktop much cleaner, and adding a row of ICONS to display. Also added personalized flavor is, the new custom xiaoai function. You can customize the sex of xiao Ai and what to wear. MIUI 13 also features new fonts that are more nuanced and, importantly, free to use commercially.What’s left is a few functional updates, starting with the features recommended in MIUI 13’s welcome screen, the global sidebar, and the front-facing camera assistant. Let’s start with the Global sidebar. If you open it in features, you’ll see a little white bar on the side of the screen. If you swipe inward, you’ll see a menu, and you can choose any app you want, and then you’ll open a little window. In fact, I think the MIUI widget has always been a good feature for opening other apps, such as replying to messages, without breaking the current one. There’s also the front-facing camera Assistant, which can also be turned on in features and can glow around the screen during a video call, supplementing the front-facing camera. There are also some more important features, which are about privacy. The first one is face verification protection, which is actually very important to prevent third-party apps from capturing the rest of your upper body during verification. The second is privacy watermark, when uploading ID photos, to prevent stolen use, even commercial. The third is fraud protection, can effectively prevent fraud phone calls, SMS fraud. Personally, I think it’s very useful. Another privacy-related feature is the clean mode, which will limit apps that have not been approved by Xiaomi, mainly by downloading self-installed packages, to improve system security. OK, finally, MIUI 13 has a lot of new features this time around. It is said that everything is based on MIUI. I personally am very optimistic about the future of MIUI and believe that Xiaomi can do MIUI better!","tags":["Channel video manuscript","Software testing and evaluation"],"categories":["Software"]},{"title":"(Top) Hi, welcome to visit \"MuyangLarry.github.io\"","path":"/2022/04/23/README/","content":"This site supports automatically following the system’s night color reversal mode, without the use of browser plug-in to achieve, we recommend that you close the plug-in to get the best browsing effect. In addition, you can set the dark mode in the on-site menu bar or right-click menu.点击此处查看简体中文页面 (Click here to view the simplified Chinese page)Welcome to “MuyangLarry.GitHub.io”.First, you can get to know this blog. 点击此处查看简体中文页面 (Click here to view the simplified Chinese page)This blog was created in 2021, and what you’re seeing now is a revamped version from 2022. This blog is built using GitHub Pages + Hexo. If you want to access this site GitHub Pages open source address，click here;To access the GitHub open source address for this site,click here。 The author of this website is MuyangLarry, born after 2005.","tags":["Welcome","Essay"],"categories":["Others"]},{"title":"About","path":"/about/index.html","content":"点击此处查看简体中文页面 (Click here to view the simplified Chinese page) About MuyangLarry.Github.ioThis blog was created in 2021, and what you’re seeing now is a revamped version from 2022. This blog is built using GitHub Pages + Hexo. If you want to access this site GitHub Pages open source address，click here;To access the GitHub open source address for this site,click here。 About the author MuyangLarryMuyangLarry, After 2005 young people, programming has a certain interest and understanding at present. Still have a lot of don’t understand place on program development, if have incorrect place, still ask big guy to point out, thank! 联系作者E-mail: lxn2314@outlook.com 了解作者GitHub: https://github.com/MuyangLarryWeibo: https://weibo.com/u/7728786772bilibili: https://space.bilibili.com/1118890188?spm_id_from&#x3D;333.1007.0.0 Anything else I want to sayAt present, the blog platform is also built to let me master and understand the information better output. At present, other blogging platforms include Bilibili column and news, and we plan to open CSDN blog and public account in the future. Personal channel currently only bilibili, is expected to open a YouTube channel, welcome to subscribe."},{"title":"Categories","path":"/categories/index.html","content":"Technology Numerical code Software Develop Others"},{"title":"Tags","path":"/tags/index.html","content":"Welcome Channel video manuscript Hardcore science Software testing and evaluation Measurement of the hardware Essay Others Windows"},{"path":"/lib/pdf/README.html","content":"PDF.js for NexTIntroduceThis is a plugin that allows to preview PDF files in the blog pages. If the browser supports embedded PDFs natively, NexT will create a &lt;embed&gt; tag and include the PDF file on your website. Otherwise it will create a &lt;iframe&gt; tag and uses PDF.js by @mozilla to render the pdf file. Follow the guide below to install dependencies. InstallationStep 1 &rarr; Go to Hexo dirChange dir to Hexo directory. There must be source, themes and other directories: 1234$ cd hexo-site$ ls_config.next.yml db.json package-lock.json scaffolds themes_config.yml node_modules package.json source Step 2 &rarr; Get moduleInstall module to source/lib directory: 1$ git clone https://github.com/next-theme/theme-next-pdf source/lib/pdf Step 3 &rarr; Set it upEnable module in NexT _config.next.yml file: 12345678# PDF tag# NexT will try to load pdf files natively, if failed, pdf.js will be used.# So, you have to install the dependency of pdf.js if you want to use pdf tag and make it available to all browsers.# See: https://github.com/next-theme/theme-next-pdfpdf: enable: true # Default height height: 500px Find and edit skip_render settings in Hexo _config.yml file: 12skip_render: - lib/**/* UsageIn order to embed PDF files in the article, you just need to create an pdf tag with the URL of your local PDF file, e.g. 1&#123;% pdf /path/to/your/file.pdf %&#125; Notice: Do not use cross-origin PDF files, it might be blocked by the CORS policy. Enjoy it! Update12$ cd hexo-site/source/lib/pdf$ git pull"},{"path":"/lib/pdf/build/pdf.js","content":"/** * @licstart The following is the entire license notice for the * JavaScript code in this page * * Copyright 2022 Mozilla Foundation * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * @licend The above is the entire license notice for the * JavaScript code in this page */ (function webpackUniversalModuleDefinition(root, factory) { if(typeof exports === 'object' && typeof module === 'object') module.exports = factory(); else if(typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory); else if(typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory(); else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory(); })(this, () => { return /******/ (() => { // webpackBootstrap /******/ \"use strict\"; /******/ var __webpack_modules__ = ([ /* 0 */, /* 1 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.UNSUPPORTED_FEATURES = exports.TextRenderingMode = exports.StreamType = exports.RenderingIntentFlag = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMode = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0; exports.arrayByteLength = arrayByteLength; exports.arraysToBytes = arraysToBytes; exports.assert = assert; exports.bytesToString = bytesToString; exports.createPromiseCapability = createPromiseCapability; exports.createValidAbsoluteUrl = createValidAbsoluteUrl; exports.escapeString = escapeString; exports.getModificationDate = getModificationDate; exports.getVerbosityLevel = getVerbosityLevel; exports.info = info; exports.isArrayBuffer = isArrayBuffer; exports.isArrayEqual = isArrayEqual; exports.isAscii = isAscii; exports.objectFromMap = objectFromMap; exports.objectSize = objectSize; exports.setVerbosityLevel = setVerbosityLevel; exports.shadow = shadow; exports.string32 = string32; exports.stringToBytes = stringToBytes; exports.stringToPDFString = stringToPDFString; exports.stringToUTF16BEString = stringToUTF16BEString; exports.stringToUTF8String = stringToUTF8String; exports.unreachable = unreachable; exports.utf8StringToString = utf8StringToString; exports.warn = warn; __w_pdfjs_require__(2); const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0]; exports.IDENTITY_MATRIX = IDENTITY_MATRIX; const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0]; exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX; const RenderingIntentFlag = { ANY: 0x01, DISPLAY: 0x02, PRINT: 0x04, ANNOTATIONS_FORMS: 0x10, ANNOTATIONS_STORAGE: 0x20, ANNOTATIONS_DISABLE: 0x40, OPLIST: 0x100 }; exports.RenderingIntentFlag = RenderingIntentFlag; const AnnotationMode = { DISABLE: 0, ENABLE: 1, ENABLE_FORMS: 2, ENABLE_STORAGE: 3 }; exports.AnnotationMode = AnnotationMode; const PermissionFlag = { PRINT: 0x04, MODIFY_CONTENTS: 0x08, COPY: 0x10, MODIFY_ANNOTATIONS: 0x20, FILL_INTERACTIVE_FORMS: 0x100, COPY_FOR_ACCESSIBILITY: 0x200, ASSEMBLE: 0x400, PRINT_HIGH_QUALITY: 0x800 }; exports.PermissionFlag = PermissionFlag; const TextRenderingMode = { FILL: 0, STROKE: 1, FILL_STROKE: 2, INVISIBLE: 3, FILL_ADD_TO_PATH: 4, STROKE_ADD_TO_PATH: 5, FILL_STROKE_ADD_TO_PATH: 6, ADD_TO_PATH: 7, FILL_STROKE_MASK: 3, ADD_TO_PATH_FLAG: 4 }; exports.TextRenderingMode = TextRenderingMode; const ImageKind = { GRAYSCALE_1BPP: 1, RGB_24BPP: 2, RGBA_32BPP: 3 }; exports.ImageKind = ImageKind; const AnnotationType = { TEXT: 1, LINK: 2, FREETEXT: 3, LINE: 4, SQUARE: 5, CIRCLE: 6, POLYGON: 7, POLYLINE: 8, HIGHLIGHT: 9, UNDERLINE: 10, SQUIGGLY: 11, STRIKEOUT: 12, STAMP: 13, CARET: 14, INK: 15, POPUP: 16, FILEATTACHMENT: 17, SOUND: 18, MOVIE: 19, WIDGET: 20, SCREEN: 21, PRINTERMARK: 22, TRAPNET: 23, WATERMARK: 24, THREED: 25, REDACT: 26 }; exports.AnnotationType = AnnotationType; const AnnotationStateModelType = { MARKED: \"Marked\", REVIEW: \"Review\" }; exports.AnnotationStateModelType = AnnotationStateModelType; const AnnotationMarkedState = { MARKED: \"Marked\", UNMARKED: \"Unmarked\" }; exports.AnnotationMarkedState = AnnotationMarkedState; const AnnotationReviewState = { ACCEPTED: \"Accepted\", REJECTED: \"Rejected\", CANCELLED: \"Cancelled\", COMPLETED: \"Completed\", NONE: \"None\" }; exports.AnnotationReviewState = AnnotationReviewState; const AnnotationReplyType = { GROUP: \"Group\", REPLY: \"R\" }; exports.AnnotationReplyType = AnnotationReplyType; const AnnotationFlag = { INVISIBLE: 0x01, HIDDEN: 0x02, PRINT: 0x04, NOZOOM: 0x08, NOROTATE: 0x10, NOVIEW: 0x20, READONLY: 0x40, LOCKED: 0x80, TOGGLENOVIEW: 0x100, LOCKEDCONTENTS: 0x200 }; exports.AnnotationFlag = AnnotationFlag; const AnnotationFieldFlag = { READONLY: 0x0000001, REQUIRED: 0x0000002, NOEXPORT: 0x0000004, MULTILINE: 0x0001000, PASSWORD: 0x0002000, NOTOGGLETOOFF: 0x0004000, RADIO: 0x0008000, PUSHBUTTON: 0x0010000, COMBO: 0x0020000, EDIT: 0x0040000, SORT: 0x0080000, FILESELECT: 0x0100000, MULTISELECT: 0x0200000, DONOTSPELLCHECK: 0x0400000, DONOTSCROLL: 0x0800000, COMB: 0x1000000, RICHTEXT: 0x2000000, RADIOSINUNISON: 0x2000000, COMMITONSELCHANGE: 0x4000000 }; exports.AnnotationFieldFlag = AnnotationFieldFlag; const AnnotationBorderStyleType = { SOLID: 1, DASHED: 2, BEVELED: 3, INSET: 4, UNDERLINE: 5 }; exports.AnnotationBorderStyleType = AnnotationBorderStyleType; const AnnotationActionEventType = { E: \"Mouse Enter\", X: \"Mouse Exit\", D: \"Mouse Down\", U: \"Mouse Up\", Fo: \"Focus\", Bl: \"Blur\", PO: \"PageOpen\", PC: \"PageClose\", PV: \"PageVisible\", PI: \"PageInvisible\", K: \"Keystroke\", F: \"Format\", V: \"Validate\", C: \"Calculate\" }; exports.AnnotationActionEventType = AnnotationActionEventType; const DocumentActionEventType = { WC: \"WillClose\", WS: \"WillSave\", DS: \"DidSave\", WP: \"WillPrint\", DP: \"DidPrint\" }; exports.DocumentActionEventType = DocumentActionEventType; const PageActionEventType = { O: \"PageOpen\", C: \"PageClose\" }; exports.PageActionEventType = PageActionEventType; const StreamType = { UNKNOWN: \"UNKNOWN\", FLATE: \"FLATE\", LZW: \"LZW\", DCT: \"DCT\", JPX: \"JPX\", JBIG: \"JBIG\", A85: \"A85\", AHX: \"AHX\", CCF: \"CCF\", RLX: \"RLX\" }; exports.StreamType = StreamType; const FontType = { UNKNOWN: \"UNKNOWN\", TYPE1: \"TYPE1\", TYPE1STANDARD: \"TYPE1STANDARD\", TYPE1C: \"TYPE1C\", CIDFONTTYPE0: \"CIDFONTTYPE0\", CIDFONTTYPE0C: \"CIDFONTTYPE0C\", TRUETYPE: \"TRUETYPE\", CIDFONTTYPE2: \"CIDFONTTYPE2\", TYPE3: \"TYPE3\", OPENTYPE: \"OPENTYPE\", TYPE0: \"TYPE0\", MMTYPE1: \"MMTYPE1\" }; exports.FontType = FontType; const VerbosityLevel = { ERRORS: 0, WARNINGS: 1, INFOS: 5 }; exports.VerbosityLevel = VerbosityLevel; const CMapCompressionType = { NONE: 0, BINARY: 1, STREAM: 2 }; exports.CMapCompressionType = CMapCompressionType; const OPS = { dependency: 1, setLineWidth: 2, setLineCap: 3, setLineJoin: 4, setMiterLimit: 5, setDash: 6, setRenderingIntent: 7, setFlatness: 8, setGState: 9, save: 10, restore: 11, transform: 12, moveTo: 13, lineTo: 14, curveTo: 15, curveTo2: 16, curveTo3: 17, closePath: 18, rectangle: 19, stroke: 20, closeStroke: 21, fill: 22, eoFill: 23, fillStroke: 24, eoFillStroke: 25, closeFillStroke: 26, closeEOFillStroke: 27, endPath: 28, clip: 29, eoClip: 30, beginText: 31, endText: 32, setCharSpacing: 33, setWordSpacing: 34, setHScale: 35, setLeading: 36, setFont: 37, setTextRenderingMode: 38, setTextRise: 39, moveText: 40, setLeadingMoveText: 41, setTextMatrix: 42, nextLine: 43, showText: 44, showSpacedText: 45, nextLineShowText: 46, nextLineSetSpacingShowText: 47, setCharWidth: 48, setCharWidthAndBounds: 49, setStrokeColorSpace: 50, setFillColorSpace: 51, setStrokeColor: 52, setStrokeColorN: 53, setFillColor: 54, setFillColorN: 55, setStrokeGray: 56, setFillGray: 57, setStrokeRGBColor: 58, setFillRGBColor: 59, setStrokeCMYKColor: 60, setFillCMYKColor: 61, shadingFill: 62, beginInlineImage: 63, beginImageData: 64, endInlineImage: 65, paintXObject: 66, markPoint: 67, markPointProps: 68, beginMarkedContent: 69, beginMarkedContentProps: 70, endMarkedContent: 71, beginCompat: 72, endCompat: 73, paintFormXObjectBegin: 74, paintFormXObjectEnd: 75, beginGroup: 76, endGroup: 77, beginAnnotations: 78, endAnnotations: 79, beginAnnotation: 80, endAnnotation: 81, paintJpegXObject: 82, paintImageMaskXObject: 83, paintImageMaskXObjectGroup: 84, paintImageXObject: 85, paintInlineImageXObject: 86, paintInlineImageXObjectGroup: 87, paintImageXObjectRepeat: 88, paintImageMaskXObjectRepeat: 89, paintSolidColorImageMask: 90, constructPath: 91 }; exports.OPS = OPS; const UNSUPPORTED_FEATURES = { unknown: \"unknown\", forms: \"forms\", javaScript: \"javaScript\", signatures: \"signatures\", smask: \"smask\", shadingPattern: \"shadingPattern\", font: \"font\", errorTilingPattern: \"errorTilingPattern\", errorExtGState: \"errorExtGState\", errorXObject: \"errorXObject\", errorFontLoadType3: \"errorFontLoadType3\", errorFontState: \"errorFontState\", errorFontMissing: \"errorFontMissing\", errorFontTranslate: \"errorFontTranslate\", errorColorSpace: \"errorColorSpace\", errorOperatorList: \"errorOperatorList\", errorFontToUnicode: \"errorFontToUnicode\", errorFontLoadNative: \"errorFontLoadNative\", errorFontBuildPath: \"errorFontBuildPath\", errorFontGetPath: \"errorFontGetPath\", errorMarkedContent: \"errorMarkedContent\", errorContentSubStream: \"errorContentSubStream\" }; exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES; const PasswordResponses = { NEED_PASSWORD: 1, INCORRECT_PASSWORD: 2 }; exports.PasswordResponses = PasswordResponses; let verbosity = VerbosityLevel.WARNINGS; function setVerbosityLevel(level) { if (Number.isInteger(level)) { verbosity = level; } } function getVerbosityLevel() { return verbosity; } function info(msg) { if (verbosity >= VerbosityLevel.INFOS) { console.log(`Info: ${msg}`); } } function warn(msg) { if (verbosity >= VerbosityLevel.WARNINGS) { console.log(`Warning: ${msg}`); } } function unreachable(msg) { throw new Error(msg); } function assert(cond, msg) { if (!cond) { unreachable(msg); } } function _isValidProtocol(url) { if (!url) { return false; } switch (url.protocol) { case \"http:\": case \"https:\": case \"ftp:\": case \"mailto:\": case \"tel:\": return true; default: return false; } } function createValidAbsoluteUrl(url, baseUrl = null, options = null) { if (!url) { return null; } try { if (options && typeof url === \"string\") { if (options.addDefaultProtocol && url.startsWith(\"www.\")) { const dots = url.match(/\\./g); if (dots && dots.length >= 2) { url = `http://${url}`; } } if (options.tryConvertEncoding) { try { url = stringToUTF8String(url); } catch (ex) {} } } const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url); if (_isValidProtocol(absoluteUrl)) { return absoluteUrl; } } catch (ex) {} return null; } function shadow(obj, prop, value) { Object.defineProperty(obj, prop, { value, enumerable: true, configurable: true, writable: false }); return value; } const BaseException = function BaseExceptionClosure() { function BaseException(message, name) { if (this.constructor === BaseException) { unreachable(\"Cannot initialize BaseException.\"); } this.message = message; this.name = name; } BaseException.prototype = new Error(); BaseException.constructor = BaseException; return BaseException; }(); exports.BaseException = BaseException; class PasswordException extends BaseException { constructor(msg, code) { super(msg, \"PasswordException\"); this.code = code; } } exports.PasswordException = PasswordException; class UnknownErrorException extends BaseException { constructor(msg, details) { super(msg, \"UnknownErrorException\"); this.details = details; } } exports.UnknownErrorException = UnknownErrorException; class InvalidPDFException extends BaseException { constructor(msg) { super(msg, \"InvalidPDFException\"); } } exports.InvalidPDFException = InvalidPDFException; class MissingPDFException extends BaseException { constructor(msg) { super(msg, \"MissingPDFException\"); } } exports.MissingPDFException = MissingPDFException; class UnexpectedResponseException extends BaseException { constructor(msg, status) { super(msg, \"UnexpectedResponseException\"); this.status = status; } } exports.UnexpectedResponseException = UnexpectedResponseException; class FormatError extends BaseException { constructor(msg) { super(msg, \"FormatError\"); } } exports.FormatError = FormatError; class AbortException extends BaseException { constructor(msg) { super(msg, \"AbortException\"); } } exports.AbortException = AbortException; function bytesToString(bytes) { if (typeof bytes !== \"object\" || bytes === null || bytes.length === undefined) { unreachable(\"Invalid argument for bytesToString\"); } const length = bytes.length; const MAX_ARGUMENT_COUNT = 8192; if (length < MAX_ARGUMENT_COUNT) { return String.fromCharCode.apply(null, bytes); } const strBuf = []; for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) { const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length); const chunk = bytes.subarray(i, chunkEnd); strBuf.push(String.fromCharCode.apply(null, chunk)); } return strBuf.join(\"\"); } function stringToBytes(str) { if (typeof str !== \"string\") { unreachable(\"Invalid argument for stringToBytes\"); } const length = str.length; const bytes = new Uint8Array(length); for (let i = 0; i < length; ++i) { bytes[i] = str.charCodeAt(i) & 0xff; } return bytes; } function arrayByteLength(arr) { if (arr.length !== undefined) { return arr.length; } if (arr.byteLength !== undefined) { return arr.byteLength; } unreachable(\"Invalid argument for arrayByteLength\"); } function arraysToBytes(arr) { const length = arr.length; if (length === 1 && arr[0] instanceof Uint8Array) { return arr[0]; } let resultLength = 0; for (let i = 0; i < length; i++) { resultLength += arrayByteLength(arr[i]); } let pos = 0; const data = new Uint8Array(resultLength); for (let i = 0; i < length; i++) { let item = arr[i]; if (!(item instanceof Uint8Array)) { if (typeof item === \"string\") { item = stringToBytes(item); } else { item = new Uint8Array(item); } } const itemLength = item.byteLength; data.set(item, pos); pos += itemLength; } return data; } function string32(value) { return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff); } function objectSize(obj) { return Object.keys(obj).length; } function objectFromMap(map) { const obj = Object.create(null); for (const [key, value] of map) { obj[key] = value; } return obj; } function isLittleEndian() { const buffer8 = new Uint8Array(4); buffer8[0] = 1; const view32 = new Uint32Array(buffer8.buffer, 0, 1); return view32[0] === 1; } function isEvalSupported() { try { new Function(\"\"); return true; } catch (e) { return false; } } class FeatureTest { static get isLittleEndian() { return shadow(this, \"isLittleEndian\", isLittleEndian()); } static get isEvalSupported() { return shadow(this, \"isEvalSupported\", isEvalSupported()); } static get isOffscreenCanvasSupported() { return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\"); } } exports.FeatureTest = FeatureTest; const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\")); class Util { static makeHexColor(r, g, b) { return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`; } static scaleMinMax(transform, minMax) { let temp; if (transform[0]) { if (transform[0] < 0) { temp = minMax[0]; minMax[0] = minMax[1]; minMax[1] = temp; } minMax[0] *= transform[0]; minMax[1] *= transform[0]; if (transform[3] < 0) { temp = minMax[2]; minMax[2] = minMax[3]; minMax[3] = temp; } minMax[2] *= transform[3]; minMax[3] *= transform[3]; } else { temp = minMax[0]; minMax[0] = minMax[2]; minMax[2] = temp; temp = minMax[1]; minMax[1] = minMax[3]; minMax[3] = temp; if (transform[1] < 0) { temp = minMax[2]; minMax[2] = minMax[3]; minMax[3] = temp; } minMax[2] *= transform[1]; minMax[3] *= transform[1]; if (transform[2] < 0) { temp = minMax[0]; minMax[0] = minMax[1]; minMax[1] = temp; } minMax[0] *= transform[2]; minMax[1] *= transform[2]; } minMax[0] += transform[4]; minMax[1] += transform[4]; minMax[2] += transform[5]; minMax[3] += transform[5]; } static transform(m1, m2) { return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]]; } static applyTransform(p, m) { const xt = p[0] * m[0] + p[1] * m[2] + m[4]; const yt = p[0] * m[1] + p[1] * m[3] + m[5]; return [xt, yt]; } static applyInverseTransform(p, m) { const d = m[0] * m[3] - m[1] * m[2]; const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d; const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d; return [xt, yt]; } static getAxialAlignedBoundingBox(r, m) { const p1 = Util.applyTransform(r, m); const p2 = Util.applyTransform(r.slice(2, 4), m); const p3 = Util.applyTransform([r[0], r[3]], m); const p4 = Util.applyTransform([r[2], r[1]], m); return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])]; } static inverseTransform(m) { const d = m[0] * m[3] - m[1] * m[2]; return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d]; } static apply3dTransform(m, v) { return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]]; } static singularValueDecompose2dScale(m) { const transpose = [m[0], m[2], m[1], m[3]]; const a = m[0] * transpose[0] + m[1] * transpose[2]; const b = m[0] * transpose[1] + m[1] * transpose[3]; const c = m[2] * transpose[0] + m[3] * transpose[2]; const d = m[2] * transpose[1] + m[3] * transpose[3]; const first = (a + d) / 2; const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2; const sx = first + second || 1; const sy = first - second || 1; return [Math.sqrt(sx), Math.sqrt(sy)]; } static normalizeRect(rect) { const r = rect.slice(0); if (rect[0] > rect[2]) { r[0] = rect[2]; r[2] = rect[0]; } if (rect[1] > rect[3]) { r[1] = rect[3]; r[3] = rect[1]; } return r; } static intersect(rect1, rect2) { const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2])); const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2])); if (xLow > xHigh) { return null; } const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3])); const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3])); if (yLow > yHigh) { return null; } return [xLow, yLow, xHigh, yHigh]; } static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) { const tvalues = [], bounds = [[], []]; let a, b, c, t, t1, t2, b2ac, sqrtb2ac; for (let i = 0; i < 2; ++i) { if (i === 0) { b = 6 * x0 - 12 * x1 + 6 * x2; a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3; c = 3 * x1 - 3 * x0; } else { b = 6 * y0 - 12 * y1 + 6 * y2; a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3; c = 3 * y1 - 3 * y0; } if (Math.abs(a) < 1e-12) { if (Math.abs(b) < 1e-12) { continue; } t = -c / b; if (0 < t && t < 1) { tvalues.push(t); } continue; } b2ac = b * b - 4 * c * a; sqrtb2ac = Math.sqrt(b2ac); if (b2ac < 0) { continue; } t1 = (-b + sqrtb2ac) / (2 * a); if (0 < t1 && t1 < 1) { tvalues.push(t1); } t2 = (-b - sqrtb2ac) / (2 * a); if (0 < t2 && t2 < 1) { tvalues.push(t2); } } let j = tvalues.length, mt; const jlen = j; while (j--) { t = tvalues[j]; mt = 1 - t; bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3; bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3; } bounds[0][jlen] = x0; bounds[1][jlen] = y0; bounds[0][jlen + 1] = x3; bounds[1][jlen + 1] = y3; bounds[0].length = bounds[1].length = jlen + 2; return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])]; } } exports.Util = Util; const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac]; function stringToPDFString(str) { if (str[0] >= \"\\xEF\") { let encoding; if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") { encoding = \"utf-16be\"; } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") { encoding = \"utf-16le\"; } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") { encoding = \"utf-8\"; } if (encoding) { try { const decoder = new TextDecoder(encoding, { fatal: true }); const buffer = stringToBytes(str); return decoder.decode(buffer); } catch (ex) { warn(`stringToPDFString: \"${ex}\".`); } } } const strBuf = []; for (let i = 0, ii = str.length; i < ii; i++) { const code = PDFStringTranslateTable[str.charCodeAt(i)]; strBuf.push(code ? String.fromCharCode(code) : str.charAt(i)); } return strBuf.join(\"\"); } function escapeString(str) { return str.replace(/([()\\\\ \\r])/g, match => { if (match === \" \") { return \"\\ \"; } else if (match === \"\\r\") { return \"\\\\r\"; } return `\\\\${match}`; }); } function isAscii(str) { return /^[\\x00-\\x7F]*$/.test(str); } function stringToUTF16BEString(str) { const buf = [\"\\xFE\\xFF\"]; for (let i = 0, ii = str.length; i < ii; i++) { const char = str.charCodeAt(i); buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff)); } return buf.join(\"\"); } function stringToUTF8String(str) { return decodeURIComponent(escape(str)); } function utf8StringToString(str) { return unescape(encodeURIComponent(str)); } function isArrayBuffer(v) { return typeof v === \"object\" && v !== null && v.byteLength !== undefined; } function isArrayEqual(arr1, arr2) { if (arr1.length !== arr2.length) { return false; } for (let i = 0, ii = arr1.length; i < ii; i++) { if (arr1[i] !== arr2[i]) { return false; } } return true; } function getModificationDate(date = new Date()) { const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")]; return buffer.join(\"\"); } function createPromiseCapability() { const capability = Object.create(null); let isSettled = false; Object.defineProperty(capability, \"settled\", { get() { return isSettled; } }); capability.promise = new Promise(function (resolve, reject) { capability.resolve = function (data) { isSettled = true; resolve(data); }; capability.reject = function (reason) { isSettled = true; reject(reason); }; }); return capability; } /***/ }), /* 2 */ /***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => { var _is_node = __w_pdfjs_require__(3); ; /***/ }), /* 3 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.isNodeJS = void 0; const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\"); exports.isNodeJS = isNodeJS; /***/ }), /* 4 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.build = exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0; exports.getDocument = getDocument; exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory; exports.version = void 0; var _util = __w_pdfjs_require__(1); var _display_utils = __w_pdfjs_require__(5); var _font_loader = __w_pdfjs_require__(7); var _node_utils = __w_pdfjs_require__(8); var _annotation_storage = __w_pdfjs_require__(9); var _canvas = __w_pdfjs_require__(10); var _worker_options = __w_pdfjs_require__(13); var _is_node = __w_pdfjs_require__(3); var _message_handler = __w_pdfjs_require__(14); var _metadata = __w_pdfjs_require__(15); var _optional_content_config = __w_pdfjs_require__(16); var _transport_stream = __w_pdfjs_require__(17); var _xfa_text = __w_pdfjs_require__(18); const DEFAULT_RANGE_CHUNK_SIZE = 65536; const RENDERING_CANCELLED_TIMEOUT = 100; const DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory; exports.DefaultCanvasFactory = DefaultCanvasFactory; const DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory; exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory; const DefaultStandardFontDataFactory = _is_node.isNodeJS ? _node_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory; exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory; let createPDFNetworkStream; function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) { createPDFNetworkStream = pdfNetworkStreamFactory; } function getDocument(src) { const task = new PDFDocumentLoadingTask(); let source; if (typeof src === \"string\" || src instanceof URL) { source = { url: src }; } else if ((0, _util.isArrayBuffer)(src)) { source = { data: src }; } else if (src instanceof PDFDataRangeTransport) { source = { range: src }; } else { if (typeof src !== \"object\") { throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, Uint8Array, or parameter object.\"); } if (!src.url && !src.data && !src.range) { throw new Error(\"Invalid parameter object: need either .data, .range or .url\"); } source = src; } const params = Object.create(null); let rangeTransport = null, worker = null; for (const key in source) { const value = source[key]; switch (key) { case \"url\": if (typeof window !== \"undefined\") { try { params[key] = new URL(value, window.location).href; continue; } catch (ex) { (0, _util.warn)(`Cannot create valid URL: \"${ex}\".`); } } else if (typeof value === \"string\" || value instanceof URL) { params[key] = value.toString(); continue; } throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\"); case \"range\": rangeTransport = value; continue; case \"worker\": worker = value; continue; case \"data\": if (_is_node.isNodeJS && typeof Buffer !== \"undefined\" && value instanceof Buffer) { params[key] = new Uint8Array(value); } else if (value instanceof Uint8Array) { break; } else if (typeof value === \"string\") { params[key] = (0, _util.stringToBytes)(value); } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) { params[key] = new Uint8Array(value); } else if ((0, _util.isArrayBuffer)(value)) { params[key] = new Uint8Array(value); } else { throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string, or array-like object is expected in the data property.\"); } continue; } params[key] = value; } params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory; params.StandardFontDataFactory = params.StandardFontDataFactory || DefaultStandardFontDataFactory; params.ignoreErrors = params.stopAtErrors !== true; params.fontExtraProperties = params.fontExtraProperties === true; params.pdfBug = params.pdfBug === true; params.enableXfa = params.enableXfa === true; if (!Number.isInteger(params.rangeChunkSize) || params.rangeChunkSize < 1) { params.rangeChunkSize = DEFAULT_RANGE_CHUNK_SIZE; } if (typeof params.docBaseUrl !== \"string\" || (0, _display_utils.isDataScheme)(params.docBaseUrl)) { params.docBaseUrl = null; } if (!Number.isInteger(params.maxImageSize) || params.maxImageSize < -1) { params.maxImageSize = -1; } if (typeof params.cMapUrl !== \"string\") { params.cMapUrl = null; } if (typeof params.standardFontDataUrl !== \"string\") { params.standardFontDataUrl = null; } if (typeof params.useWorkerFetch !== \"boolean\") { params.useWorkerFetch = params.CMapReaderFactory === _display_utils.DOMCMapReaderFactory && params.StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory; } if (typeof params.isEvalSupported !== \"boolean\") { params.isEvalSupported = true; } if (typeof params.disableFontFace !== \"boolean\") { params.disableFontFace = _is_node.isNodeJS; } if (typeof params.useSystemFonts !== \"boolean\") { params.useSystemFonts = !_is_node.isNodeJS && !params.disableFontFace; } if (typeof params.ownerDocument !== \"object\" || params.ownerDocument === null) { params.ownerDocument = globalThis.document; } if (typeof params.disableRange !== \"boolean\") { params.disableRange = false; } if (typeof params.disableStream !== \"boolean\") { params.disableStream = false; } if (typeof params.disableAutoFetch !== \"boolean\") { params.disableAutoFetch = false; } (0, _util.setVerbosityLevel)(params.verbosity); if (!worker) { const workerParams = { verbosity: params.verbosity, port: _worker_options.GlobalWorkerOptions.workerPort }; worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams); task._worker = worker; } const docId = task.docId; worker.promise.then(function () { if (task.destroyed) { throw new Error(\"Loading aborted\"); } const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId); const networkStreamPromise = new Promise(function (resolve) { let networkStream; if (rangeTransport) { networkStream = new _transport_stream.PDFDataTransportStream({ length: params.length, initialData: params.initialData, progressiveDone: params.progressiveDone, contentDispositionFilename: params.contentDispositionFilename, disableRange: params.disableRange, disableStream: params.disableStream }, rangeTransport); } else if (!params.data) { networkStream = createPDFNetworkStream({ url: params.url, length: params.length, httpHeaders: params.httpHeaders, withCredentials: params.withCredentials, rangeChunkSize: params.rangeChunkSize, disableRange: params.disableRange, disableStream: params.disableStream }); } resolve(networkStream); }); return Promise.all([workerIdPromise, networkStreamPromise]).then(function ([workerId, networkStream]) { if (task.destroyed) { throw new Error(\"Loading aborted\"); } const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port); const transport = new WorkerTransport(messageHandler, task, networkStream, params); task._transport = transport; messageHandler.send(\"Ready\", null); }); }).catch(task._capability.reject); return task; } async function _fetchDocument(worker, source, pdfDataRangeTransport, docId) { if (worker.destroyed) { throw new Error(\"Worker was destroyed\"); } if (pdfDataRangeTransport) { source.length = pdfDataRangeTransport.length; source.initialData = pdfDataRangeTransport.initialData; source.progressiveDone = pdfDataRangeTransport.progressiveDone; source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename; } const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", { docId, apiVersion: '2.14.0', source: { data: source.data, url: source.url, password: source.password, disableAutoFetch: source.disableAutoFetch, rangeChunkSize: source.rangeChunkSize, length: source.length }, maxImageSize: source.maxImageSize, disableFontFace: source.disableFontFace, docBaseUrl: source.docBaseUrl, ignoreErrors: source.ignoreErrors, isEvalSupported: source.isEvalSupported, fontExtraProperties: source.fontExtraProperties, enableXfa: source.enableXfa, useSystemFonts: source.useSystemFonts, cMapUrl: source.useWorkerFetch ? source.cMapUrl : null, standardFontDataUrl: source.useWorkerFetch ? source.standardFontDataUrl : null }); if (worker.destroyed) { throw new Error(\"Worker was destroyed\"); } return workerId; } class PDFDocumentLoadingTask { static #docId = 0; constructor() { this._capability = (0, _util.createPromiseCapability)(); this._transport = null; this._worker = null; this.docId = `d${PDFDocumentLoadingTask.#docId++}`; this.destroyed = false; this.onPassword = null; this.onProgress = null; this.onUnsupportedFeature = null; } get promise() { return this._capability.promise; } async destroy() { this.destroyed = true; await this._transport?.destroy(); this._transport = null; if (this._worker) { this._worker.destroy(); this._worker = null; } } } exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask; class PDFDataRangeTransport { constructor(length, initialData, progressiveDone = false, contentDispositionFilename = null) { this.length = length; this.initialData = initialData; this.progressiveDone = progressiveDone; this.contentDispositionFilename = contentDispositionFilename; this._rangeListeners = []; this._progressListeners = []; this._progressiveReadListeners = []; this._progressiveDoneListeners = []; this._readyCapability = (0, _util.createPromiseCapability)(); } addRangeListener(listener) { this._rangeListeners.push(listener); } addProgressListener(listener) { this._progressListeners.push(listener); } addProgressiveReadListener(listener) { this._progressiveReadListeners.push(listener); } addProgressiveDoneListener(listener) { this._progressiveDoneListeners.push(listener); } onDataRange(begin, chunk) { for (const listener of this._rangeListeners) { listener(begin, chunk); } } onDataProgress(loaded, total) { this._readyCapability.promise.then(() => { for (const listener of this._progressListeners) { listener(loaded, total); } }); } onDataProgressiveRead(chunk) { this._readyCapability.promise.then(() => { for (const listener of this._progressiveReadListeners) { listener(chunk); } }); } onDataProgressiveDone() { this._readyCapability.promise.then(() => { for (const listener of this._progressiveDoneListeners) { listener(); } }); } transportReady() { this._readyCapability.resolve(); } requestDataRange(begin, end) { (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\"); } abort() {} } exports.PDFDataRangeTransport = PDFDataRangeTransport; class PDFDocumentProxy { constructor(pdfInfo, transport) { this._pdfInfo = pdfInfo; this._transport = transport; Object.defineProperty(this, \"fingerprint\", { get() { (0, _display_utils.deprecated)(\"`PDFDocumentProxy.fingerprint`, \" + \"please use `PDFDocumentProxy.fingerprints` instead.\"); return this.fingerprints[0]; } }); Object.defineProperty(this, \"getStats\", { value: async () => { (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getStats`, \" + \"please use the `PDFDocumentProxy.stats`-getter instead.\"); return this.stats || { streamTypes: {}, fontTypes: {} }; } }); } get annotationStorage() { return this._transport.annotationStorage; } get numPages() { return this._pdfInfo.numPages; } get fingerprints() { return this._pdfInfo.fingerprints; } get stats() { return this._transport.stats; } get isPureXfa() { return !!this._transport._htmlForXfa; } get allXfaHtml() { return this._transport._htmlForXfa; } getPage(pageNumber) { return this._transport.getPage(pageNumber); } getPageIndex(ref) { return this._transport.getPageIndex(ref); } getDestinations() { return this._transport.getDestinations(); } getDestination(id) { return this._transport.getDestination(id); } getPageLabels() { return this._transport.getPageLabels(); } getPageLayout() { return this._transport.getPageLayout(); } getPageMode() { return this._transport.getPageMode(); } getViewerPreferences() { return this._transport.getViewerPreferences(); } getOpenAction() { return this._transport.getOpenAction(); } getAttachments() { return this._transport.getAttachments(); } getJavaScript() { return this._transport.getJavaScript(); } getJSActions() { return this._transport.getDocJSActions(); } getOutline() { return this._transport.getOutline(); } getOptionalContentConfig() { return this._transport.getOptionalContentConfig(); } getPermissions() { return this._transport.getPermissions(); } getMetadata() { return this._transport.getMetadata(); } getMarkInfo() { return this._transport.getMarkInfo(); } getData() { return this._transport.getData(); } getDownloadInfo() { return this._transport.downloadInfoCapability.promise; } cleanup(keepLoadedFonts = false) { return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa); } destroy() { return this.loadingTask.destroy(); } get loadingParams() { return this._transport.loadingParams; } get loadingTask() { return this._transport.loadingTask; } saveDocument() { if (this._transport.annotationStorage.size { for (const annotation of annotations) { if (annotation.titleObj !== undefined) { Object.defineProperty(annotation, \"title\", { get() { (0, _display_utils.deprecated)(\"`title`-property on annotation, please use `titleObj` instead.\"); return annotation.titleObj.str; } }); } if (annotation.contentsObj !== undefined) { Object.defineProperty(annotation, \"contents\", { get() { (0, _display_utils.deprecated)(\"`contents`-property on annotation, please use `contentsObj` instead.\"); return annotation.contentsObj.str; } }); } } return annotations; }); } return promise; } getJSActions() { return this._jsActionsPromise ||= this._transport.getPageJSActions(this._pageIndex); } async getXfa() { return this._transport._htmlForXfa?.children[this._pageIndex] || null; } render({ canvasContext, viewport, intent = \"display\", annotationMode = _util.AnnotationMode.ENABLE, transform = null, imageLayer = null, canvasFactory = null, background = null, optionalContentConfigPromise = null, annotationCanvasMap = null }) { if (arguments[0]?.renderInteractiveForms !== undefined) { (0, _display_utils.deprecated)(\"render no longer accepts the `renderInteractiveForms`-option, \" + \"please use the `annotationMode`-option instead.\"); if (arguments[0].renderInteractiveForms === true && annotationMode === _util.AnnotationMode.ENABLE) { annotationMode = _util.AnnotationMode.ENABLE_FORMS; } } if (arguments[0]?.includeAnnotationStorage !== undefined) { (0, _display_utils.deprecated)(\"render no longer accepts the `includeAnnotationStorage`-option, \" + \"please use the `annotationMode`-option instead.\"); if (arguments[0].includeAnnotationStorage === true && annotationMode === _util.AnnotationMode.ENABLE) { annotationMode = _util.AnnotationMode.ENABLE_STORAGE; } } if (this._stats) { this._stats.time(\"Overall\"); } const intentArgs = this._transport.getRenderingIntent(intent, annotationMode); this.pendingCleanup = false; if (!optionalContentConfigPromise) { optionalContentConfigPromise = this._transport.getOptionalContentConfig(); } let intentState = this._intentStates.get(intentArgs.cacheKey); if (!intentState) { intentState = Object.create(null); this._intentStates.set(intentArgs.cacheKey, intentState); } if (intentState.streamReaderCancelTimeout) { clearTimeout(intentState.streamReaderCancelTimeout); intentState.streamReaderCancelTimeout = null; } const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({ ownerDocument: this._ownerDocument }); const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT); if (!intentState.displayReadyCapability) { intentState.displayReadyCapability = (0, _util.createPromiseCapability)(); intentState.operatorList = { fnArray: [], argsArray: [], lastChunk: false }; if (this._stats) { this._stats.time(\"Page Request\"); } this._pumpOperatorList(intentArgs); } const complete = error => { intentState.renderTasks.delete(internalRenderTask); if (this.cleanupAfterRender || intentPrint) { this.pendingCleanup = true; } this._tryCleanup(); if (error) { internalRenderTask.capability.reject(error); this._abortOperatorList({ intentState, reason: error instanceof Error ? error : new Error(error) }); } else { internalRenderTask.capability.resolve(); } if (this._stats) { this._stats.timeEnd(\"Rendering\"); this._stats.timeEnd(\"Overall\"); } }; const internalRenderTask = new InternalRenderTask({ callback: complete, params: { canvasContext, viewport, transform, imageLayer, background }, objs: this.objs, commonObjs: this.commonObjs, annotationCanvasMap, operatorList: intentState.operatorList, pageIndex: this._pageIndex, canvasFactory: canvasFactoryInstance, useRequestAnimationFrame: !intentPrint, pdfBug: this._pdfBug }); (intentState.renderTasks ||= new Set()).add(internalRenderTask); const renderTask = internalRenderTask.task; Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(([transparency, optionalContentConfig]) => { if (this.pendingCleanup) { complete(); return; } if (this._stats) { this._stats.time(\"Rendering\"); } internalRenderTask.initializeGraphics({ transparency, optionalContentConfig }); internalRenderTask.operatorListChanged(); }).catch(complete); return renderTask; } getOperatorList({ intent = \"display\", annotationMode = _util.AnnotationMode.ENABLE } = {}) { function operatorListChanged() { if (intentState.operatorList.lastChunk) { intentState.opListReadCapability.resolve(intentState.operatorList); intentState.renderTasks.delete(opListTask); } } const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, true); let intentState = this._intentStates.get(intentArgs.cacheKey); if (!intentState) { intentState = Object.create(null); this._intentStates.set(intentArgs.cacheKey, intentState); } let opListTask; if (!intentState.opListReadCapability) { opListTask = Object.create(null); opListTask.operatorListChanged = operatorListChanged; intentState.opListReadCapability = (0, _util.createPromiseCapability)(); (intentState.renderTasks ||= new Set()).add(opListTask); intentState.operatorList = { fnArray: [], argsArray: [], lastChunk: false }; if (this._stats) { this._stats.time(\"Page Request\"); } this._pumpOperatorList(intentArgs); } return intentState.opListReadCapability.promise; } streamTextContent({ disableCombineTextItems = false, includeMarkedContent = false } = {}) { const TEXT_CONTENT_CHUNK_SIZE = 100; return this._transport.messageHandler.sendWithStream(\"GetTextContent\", { pageIndex: this._pageIndex, combineTextItems: disableCombineTextItems !== true, includeMarkedContent: includeMarkedContent === true }, { highWaterMark: TEXT_CONTENT_CHUNK_SIZE, size(textContent) { return textContent.items.length; } }); } getTextContent(params = {}) { if (this._transport._htmlForXfa) { return this.getXfa().then(xfa => { return _xfa_text.XfaText.textContent(xfa); }); } const readableStream = this.streamTextContent(params); return new Promise(function (resolve, reject) { function pump() { reader.read().then(function ({ value, done }) { if (done) { resolve(textContent); return; } Object.assign(textContent.styles, value.styles); textContent.items.push(...value.items); pump(); }, reject); } const reader = readableStream.getReader(); const textContent = { items: [], styles: Object.create(null) }; pump(); }); } getStructTree() { return this._structTreePromise ||= this._transport.getStructTree(this._pageIndex); } _destroy() { this.destroyed = true; const waitOn = []; for (const intentState of this._intentStates.values()) { this._abortOperatorList({ intentState, reason: new Error(\"Page was destroyed.\"), force: true }); if (intentState.opListReadCapability) { continue; } for (const internalRenderTask of intentState.renderTasks) { waitOn.push(internalRenderTask.completed); internalRenderTask.cancel(); } } this.objs.clear(); for (const bitmap of this._bitmaps) { bitmap.close(); } this._bitmaps.clear(); this._annotationPromises.clear(); this._jsActionsPromise = null; this._structTreePromise = null; this.pendingCleanup = false; return Promise.all(waitOn); } cleanup(resetStats = false) { this.pendingCleanup = true; return this._tryCleanup(resetStats); } _tryCleanup(resetStats = false) { if (!this.pendingCleanup) { return false; } for (const { renderTasks, operatorList } of this._intentStates.values()) { if (renderTasks.size > 0 || !operatorList.lastChunk) { return false; } } this._intentStates.clear(); this.objs.clear(); this._annotationPromises.clear(); this._jsActionsPromise = null; this._structTreePromise = null; if (resetStats && this._stats) { this._stats = new _display_utils.StatTimer(); } for (const bitmap of this._bitmaps) { bitmap.close(); } this._bitmaps.clear(); this.pendingCleanup = false; return true; } _startRenderPage(transparency, cacheKey) { const intentState = this._intentStates.get(cacheKey); if (!intentState) { return; } if (this._stats) { this._stats.timeEnd(\"Page Request\"); } if (intentState.displayReadyCapability) { intentState.displayReadyCapability.resolve(transparency); } } _renderPageChunk(operatorListChunk, intentState) { for (let i = 0, ii = operatorListChunk.length; i < ii; i++) { intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]); intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]); } intentState.operatorList.lastChunk = operatorListChunk.lastChunk; for (const internalRenderTask of intentState.renderTasks) { internalRenderTask.operatorListChanged(); } if (operatorListChunk.lastChunk) { this._tryCleanup(); } } _pumpOperatorList({ renderingIntent, cacheKey }) { const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", { pageIndex: this._pageIndex, intent: renderingIntent, cacheKey, annotationStorage: renderingIntent & _util.RenderingIntentFlag.ANNOTATIONS_STORAGE ? this._transport.annotationStorage.serializable : null }); const reader = readableStream.getReader(); const intentState = this._intentStates.get(cacheKey); intentState.streamReader = reader; const pump = () => { reader.read().then(({ value, done }) => { if (done) { intentState.streamReader = null; return; } if (this._transport.destroyed) { return; } this._renderPageChunk(value, intentState); pump(); }, reason => { intentState.streamReader = null; if (this._transport.destroyed) { return; } if (intentState.operatorList) { intentState.operatorList.lastChunk = true; for (const internalRenderTask of intentState.renderTasks) { internalRenderTask.operatorListChanged(); } this._tryCleanup(); } if (intentState.displayReadyCapability) { intentState.displayReadyCapability.reject(reason); } else if (intentState.opListReadCapability) { intentState.opListReadCapability.reject(reason); } else { throw reason; } }); }; pump(); } _abortOperatorList({ intentState, reason, force = false }) { if (!intentState.streamReader) { return; } if (!force) { if (intentState.renderTasks.size > 0) { return; } if (reason instanceof _display_utils.RenderingCancelledException) { intentState.streamReaderCancelTimeout = setTimeout(() => { this._abortOperatorList({ intentState, reason, force: true }); intentState.streamReaderCancelTimeout = null; }, RENDERING_CANCELLED_TIMEOUT); return; } } intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {}); intentState.streamReader = null; if (this._transport.destroyed) { return; } for (const [curCacheKey, curIntentState] of this._intentStates) { if (curIntentState === intentState) { this._intentStates.delete(curCacheKey); break; } } this.cleanup(); } get stats() { return this._stats; } } exports.PDFPageProxy = PDFPageProxy; class LoopbackPort { constructor() { this._listeners = []; this._deferred = Promise.resolve(); } postMessage(obj, transfers) { const event = { data: structuredClone(obj, transfers) }; this._deferred.then(() => { for (const listener of this._listeners) { listener.call(this, event); } }); } addEventListener(name, listener) { this._listeners.push(listener); } removeEventListener(name, listener) { const i = this._listeners.indexOf(listener); this._listeners.splice(i, 1); } terminate() { this._listeners.length = 0; } } exports.LoopbackPort = LoopbackPort; const PDFWorkerUtil = { isWorkerDisabled: false, fallbackWorkerSrc: null, fakeWorkerId: 0 }; exports.PDFWorkerUtil = PDFWorkerUtil; { if (_is_node.isNodeJS && typeof require === \"function\") { PDFWorkerUtil.isWorkerDisabled = true; PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\"; } else if (typeof document === \"object\") { const pdfjsFilePath = document?.currentScript?.src; if (pdfjsFilePath) { PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\"); } } PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) { let base; try { base = new URL(baseUrl); if (!base.origin || base.origin === \"null\") { return false; } } catch (e) { return false; } const other = new URL(otherUrl, base); return base.origin === other.origin; }; PDFWorkerUtil.createCDNWrapper = function (url) { const wrapper = `importScripts(\"${url}\");`; return URL.createObjectURL(new Blob([wrapper])); }; } class PDFWorker { static #workerPorts = new WeakMap(); constructor({ name = null, port = null, verbosity = (0, _util.getVerbosityLevel)() } = {}) { if (port && PDFWorker.#workerPorts.has(port)) { throw new Error(\"Cannot use more than one PDFWorker per port.\"); } this.name = name; this.destroyed = false; this.verbosity = verbosity; this._readyCapability = (0, _util.createPromiseCapability)(); this._port = null; this._webWorker = null; this._messageHandler = null; if (port) { PDFWorker.#workerPorts.set(port, this); this._initializeFromPort(port); return; } this._initialize(); } get promise() { return this._readyCapability.promise; } get port() { return this._port; } get messageHandler() { return this._messageHandler; } _initializeFromPort(port) { this._port = port; this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port); this._messageHandler.on(\"ready\", function () {}); this._readyCapability.resolve(); } _initialize() { if (typeof Worker !== \"undefined\" && !PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) { let workerSrc = PDFWorker.workerSrc; try { if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) { workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href); } const worker = new Worker(workerSrc); const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker); const terminateEarly = () => { worker.removeEventListener(\"error\", onWorkerError); messageHandler.destroy(); worker.terminate(); if (this.destroyed) { this._readyCapability.reject(new Error(\"Worker was destroyed\")); } else { this._setupFakeWorker(); } }; const onWorkerError = () => { if (!this._webWorker) { terminateEarly(); } }; worker.addEventListener(\"error\", onWorkerError); messageHandler.on(\"test\", data => { worker.removeEventListener(\"error\", onWorkerError); if (this.destroyed) { terminateEarly(); return; } if (data) { this._messageHandler = messageHandler; this._port = worker; this._webWorker = worker; this._readyCapability.resolve(); messageHandler.send(\"configure\", { verbosity: this.verbosity }); } else { this._setupFakeWorker(); messageHandler.destroy(); worker.terminate(); } }); messageHandler.on(\"ready\", data => { worker.removeEventListener(\"error\", onWorkerError); if (this.destroyed) { terminateEarly(); return; } try { sendTest(); } catch (e) { this._setupFakeWorker(); } }); const sendTest = () => { const testObj = new Uint8Array(); messageHandler.send(\"test\", testObj, [testObj.buffer]); }; sendTest(); return; } catch (e) { (0, _util.info)(\"The worker has been disabled.\"); } } this._setupFakeWorker(); } _setupFakeWorker() { if (!PDFWorkerUtil.isWorkerDisabled) { (0, _util.warn)(\"Setting up fake worker.\"); PDFWorkerUtil.isWorkerDisabled = true; } PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => { if (this.destroyed) { this._readyCapability.reject(new Error(\"Worker was destroyed\")); return; } const port = new LoopbackPort(); this._port = port; const id = `fake${PDFWorkerUtil.fakeWorkerId++}`; const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port); WorkerMessageHandler.setup(workerHandler, port); const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port); this._messageHandler = messageHandler; this._readyCapability.resolve(); messageHandler.send(\"configure\", { verbosity: this.verbosity }); }).catch(reason => { this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`)); }); } destroy() { this.destroyed = true; if (this._webWorker) { this._webWorker.terminate(); this._webWorker = null; } PDFWorker.#workerPorts.delete(this._port); this._port = null; if (this._messageHandler) { this._messageHandler.destroy(); this._messageHandler = null; } } static fromPort(params) { if (!params?.port) { throw new Error(\"PDFWorker.fromPort - invalid method signature.\"); } if (this.#workerPorts.has(params.port)) { return this.#workerPorts.get(params.port); } return new PDFWorker(params); } static get workerSrc() { if (_worker_options.GlobalWorkerOptions.workerSrc) { return _worker_options.GlobalWorkerOptions.workerSrc; } if (PDFWorkerUtil.fallbackWorkerSrc !== null) { if (!_is_node.isNodeJS) { (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.'); } return PDFWorkerUtil.fallbackWorkerSrc; } throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.'); } static get _mainThreadWorkerMessageHandler() { try { return globalThis.pdfjsWorker?.WorkerMessageHandler || null; } catch (ex) { return null; } } static get _setupFakeWorkerGlobal() { const loader = async () => { const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler; if (mainWorkerMessageHandler) { return mainWorkerMessageHandler; } if (_is_node.isNodeJS && typeof require === \"function\") { const worker = eval(\"require\")(this.workerSrc); return worker.WorkerMessageHandler; } await (0, _display_utils.loadScript)(this.workerSrc); return window.pdfjsWorker.WorkerMessageHandler; }; return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader()); } } exports.PDFWorker = PDFWorker; { PDFWorker.getWorkerSrc = function () { (0, _display_utils.deprecated)(\"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"); return this.workerSrc; }; } class WorkerTransport { #docStats = null; #pageCache = new Map(); #pagePromises = new Map(); #metadataPromise = null; constructor(messageHandler, loadingTask, networkStream, params) { this.messageHandler = messageHandler; this.loadingTask = loadingTask; this.commonObjs = new PDFObjects(); this.fontLoader = new _font_loader.FontLoader({ docId: loadingTask.docId, onUnsupportedFeature: this._onUnsupportedFeature.bind(this), ownerDocument: params.ownerDocument, styleElement: params.styleElement }); this._params = params; if (!params.useWorkerFetch) { this.CMapReaderFactory = new params.CMapReaderFactory({ baseUrl: params.cMapUrl, isCompressed: params.cMapPacked }); this.StandardFontDataFactory = new params.StandardFontDataFactory({ baseUrl: params.standardFontDataUrl }); } this.destroyed = false; this.destroyCapability = null; this._passwordCapability = null; this._networkStream = networkStream; this._fullReader = null; this._lastProgress = null; this.downloadInfoCapability = (0, _util.createPromiseCapability)(); this.setupMessageHandler(); } get annotationStorage() { return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage()); } get stats() { return this.#docStats; } getRenderingIntent(intent, annotationMode = _util.AnnotationMode.ENABLE, isOpList = false) { let renderingIntent = _util.RenderingIntentFlag.DISPLAY; let lastModified = \"\"; switch (intent) { case \"any\": renderingIntent = _util.RenderingIntentFlag.ANY; break; case \"display\": break; case \"print\": renderingIntent = _util.RenderingIntentFlag.PRINT; break; default: (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`); } switch (annotationMode) { case _util.AnnotationMode.DISABLE: renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE; break; case _util.AnnotationMode.ENABLE: break; case _util.AnnotationMode.ENABLE_FORMS: renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS; break; case _util.AnnotationMode.ENABLE_STORAGE: renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE; lastModified = this.annotationStorage.lastModified; break; default: (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`); } if (isOpList) { renderingIntent += _util.RenderingIntentFlag.OPLIST; } return { renderingIntent, cacheKey: `${renderingIntent}_${lastModified}` }; } destroy() { if (this.destroyCapability) { return this.destroyCapability.promise; } this.destroyed = true; this.destroyCapability = (0, _util.createPromiseCapability)(); if (this._passwordCapability) { this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\")); } const waitOn = []; for (const page of this.#pageCache.values()) { waitOn.push(page._destroy()); } this.#pageCache.clear(); this.#pagePromises.clear(); if (this.hasOwnProperty(\"annotationStorage\")) { this.annotationStorage.resetModified(); } const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null); waitOn.push(terminated); Promise.all(waitOn).then(() => { this.commonObjs.clear(); this.fontLoader.clear(); this.#metadataPromise = null; this._getFieldObjectsPromise = null; this._hasJSActionsPromise = null; if (this._networkStream) { this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\")); } if (this.messageHandler) { this.messageHandler.destroy(); this.messageHandler = null; } this.destroyCapability.resolve(); }, this.destroyCapability.reject); return this.destroyCapability.promise; } setupMessageHandler() { const { messageHandler, loadingTask } = this; messageHandler.on(\"GetReader\", (data, sink) => { (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\"); this._fullReader = this._networkStream.getFullReader(); this._fullReader.onProgress = evt => { this._lastProgress = { loaded: evt.loaded, total: evt.total }; }; sink.onPull = () => { this._fullReader.read().then(function ({ value, done }) { if (done) { sink.close(); return; } (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\"); sink.enqueue(new Uint8Array(value), 1, [value]); }).catch(reason => { sink.error(reason); }); }; sink.onCancel = reason => { this._fullReader.cancel(reason); sink.ready.catch(readyReason => { if (this.destroyed) { return; } throw readyReason; }); }; }); messageHandler.on(\"ReaderHeadersReady\", data => { const headersCapability = (0, _util.createPromiseCapability)(); const fullReader = this._fullReader; fullReader.headersReady.then(() => { if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) { if (this._lastProgress) { loadingTask.onProgress?.(this._lastProgress); } fullReader.onProgress = evt => { loadingTask.onProgress?.({ loaded: evt.loaded, total: evt.total }); }; } headersCapability.resolve({ isStreamingSupported: fullReader.isStreamingSupported, isRangeSupported: fullReader.isRangeSupported, contentLength: fullReader.contentLength }); }, headersCapability.reject); return headersCapability.promise; }); messageHandler.on(\"GetRangeReader\", (data, sink) => { (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\"); const rangeReader = this._networkStream.getRangeReader(data.begin, data.end); if (!rangeReader) { sink.close(); return; } sink.onPull = () => { rangeReader.read().then(function ({ value, done }) { if (done) { sink.close(); return; } (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\"); sink.enqueue(new Uint8Array(value), 1, [value]); }).catch(reason => { sink.error(reason); }); }; sink.onCancel = reason => { rangeReader.cancel(reason); sink.ready.catch(readyReason => { if (this.destroyed) { return; } throw readyReason; }); }; }); messageHandler.on(\"GetDoc\", ({ pdfInfo }) => { this._numPages = pdfInfo.numPages; this._htmlForXfa = pdfInfo.htmlForXfa; delete pdfInfo.htmlForXfa; loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this)); }); messageHandler.on(\"DocException\", function (ex) { let reason; switch (ex.name) { case \"PasswordException\": reason = new _util.PasswordException(ex.message, ex.code); break; case \"InvalidPDFException\": reason = new _util.InvalidPDFException(ex.message); break; case \"MissingPDFException\": reason = new _util.MissingPDFException(ex.message); break; case \"UnexpectedResponseException\": reason = new _util.UnexpectedResponseException(ex.message, ex.status); break; case \"UnknownErrorException\": reason = new _util.UnknownErrorException(ex.message, ex.details); break; default: (0, _util.unreachable)(\"DocException - expected a valid Error.\"); } loadingTask._capability.reject(reason); }); messageHandler.on(\"PasswordRequest\", exception => { this._passwordCapability = (0, _util.createPromiseCapability)(); if (loadingTask.onPassword) { const updatePassword = password => { if (password instanceof Error) { this._passwordCapability.reject(password); } else { this._passwordCapability.resolve({ password }); } }; try { loadingTask.onPassword(updatePassword, exception.code); } catch (ex) { this._passwordCapability.reject(ex); } } else { this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code)); } return this._passwordCapability.promise; }); messageHandler.on(\"DataLoaded\", data => { loadingTask.onProgress?.({ loaded: data.length, total: data.length }); this.downloadInfoCapability.resolve(data); }); messageHandler.on(\"StartRenderPage\", data => { if (this.destroyed) { return; } const page = this.#pageCache.get(data.pageIndex); page._startRenderPage(data.transparency, data.cacheKey); }); messageHandler.on(\"commonobj\", ([id, type, exportedData]) => { if (this.destroyed) { return; } if (this.commonObjs.has(id)) { return; } switch (type) { case \"Font\": const params = this._params; if (\"error\" in exportedData) { const exportedError = exportedData.error; (0, _util.warn)(`Error during font loading: ${exportedError}`); this.commonObjs.resolve(id, exportedError); break; } let fontRegistry = null; if (params.pdfBug && globalThis.FontInspector?.enabled) { fontRegistry = { registerFont(font, url) { globalThis.FontInspector.fontAdded(font, url); } }; } const font = new _font_loader.FontFaceObject(exportedData, { isEvalSupported: params.isEvalSupported, disableFontFace: params.disableFontFace, ignoreErrors: params.ignoreErrors, onUnsupportedFeature: this._onUnsupportedFeature.bind(this), fontRegistry }); this.fontLoader.bind(font).catch(reason => { return messageHandler.sendWithPromise(\"FontFallback\", { id }); }).finally(() => { if (!params.fontExtraProperties && font.data) { font.data = null; } this.commonObjs.resolve(id, font); }); break; case \"FontPath\": case \"Image\": this.commonObjs.resolve(id, exportedData); break; default: throw new Error(`Got unknown common object type ${type}`); } }); messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => { if (this.destroyed) { return; } const pageProxy = this.#pageCache.get(pageIndex); if (pageProxy.objs.has(id)) { return; } switch (type) { case \"Image\": pageProxy.objs.resolve(id, imageData); const MAX_IMAGE_SIZE_TO_STORE = 8000000; if (imageData) { let length; if (imageData.bitmap) { const { bitmap, width, height } = imageData; length = width * height * 4; pageProxy._bitmaps.add(bitmap); } else { length = imageData.data?.length || 0; } if (length > MAX_IMAGE_SIZE_TO_STORE) { pageProxy.cleanupAfterRender = true; } } break; case \"Pattern\": pageProxy.objs.resolve(id, imageData); break; default: throw new Error(`Got unknown object type ${type}`); } }); messageHandler.on(\"DocProgress\", data => { if (this.destroyed) { return; } loadingTask.onProgress?.({ loaded: data.loaded, total: data.total }); }); messageHandler.on(\"DocStats\", data => { if (this.destroyed) { return; } this.#docStats = Object.freeze({ streamTypes: Object.freeze(data.streamTypes), fontTypes: Object.freeze(data.fontTypes) }); }); messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this)); messageHandler.on(\"FetchBuiltInCMap\", data => { if (this.destroyed) { return Promise.reject(new Error(\"Worker was destroyed.\")); } if (!this.CMapReaderFactory) { return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\")); } return this.CMapReaderFactory.fetch(data); }); messageHandler.on(\"FetchStandardFontData\", data => { if (this.destroyed) { return Promise.reject(new Error(\"Worker was destroyed.\")); } if (!this.StandardFontDataFactory) { return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\")); } return this.StandardFontDataFactory.fetch(data); }); } _onUnsupportedFeature({ featureId }) { if (this.destroyed) { return; } this.loadingTask.onUnsupportedFeature?.(featureId); } getData() { return this.messageHandler.sendWithPromise(\"GetData\", null); } getPage(pageNumber) { if (!Number.isInteger(pageNumber) || pageNumber this._numPages) { return Promise.reject(new Error(\"Invalid page request.\")); } const pageIndex = pageNumber - 1, cachedPromise = this.#pagePromises.get(pageIndex); if (cachedPromise) { return cachedPromise; } const promise = this.messageHandler.sendWithPromise(\"GetPage\", { pageIndex }).then(pageInfo => { if (this.destroyed) { throw new Error(\"Transport destroyed\"); } const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug); this.#pageCache.set(pageIndex, page); return page; }); this.#pagePromises.set(pageIndex, promise); return promise; } getPageIndex(ref) { if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) { return Promise.reject(new Error(\"Invalid pageIndex request.\")); } return this.messageHandler.sendWithPromise(\"GetPageIndex\", { num: ref.num, gen: ref.gen }); } getAnnotations(pageIndex, intent) { return this.messageHandler.sendWithPromise(\"GetAnnotations\", { pageIndex, intent }); } saveDocument() { return this.messageHandler.sendWithPromise(\"SaveDocument\", { isPureXfa: !!this._htmlForXfa, numPages: this._numPages, annotationStorage: this.annotationStorage.serializable, filename: this._fullReader?.filename ?? null }).finally(() => { this.annotationStorage.resetModified(); }); } getFieldObjects() { return this._getFieldObjectsPromise ||= this.messageHandler.sendWithPromise(\"GetFieldObjects\", null); } hasJSActions() { return this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\"HasJSActions\", null); } getCalculationOrderIds() { return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null); } getDestinations() { return this.messageHandler.sendWithPromise(\"GetDestinations\", null); } getDestination(id) { if (typeof id !== \"string\") { return Promise.reject(new Error(\"Invalid destination request.\")); } return this.messageHandler.sendWithPromise(\"GetDestination\", { id }); } getPageLabels() { return this.messageHandler.sendWithPromise(\"GetPageLabels\", null); } getPageLayout() { return this.messageHandler.sendWithPromise(\"GetPageLayout\", null); } getPageMode() { return this.messageHandler.sendWithPromise(\"GetPageMode\", null); } getViewerPreferences() { return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null); } getOpenAction() { return this.messageHandler.sendWithPromise(\"GetOpenAction\", null); } getAttachments() { return this.messageHandler.sendWithPromise(\"GetAttachments\", null); } getJavaScript() { return this.messageHandler.sendWithPromise(\"GetJavaScript\", null); } getDocJSActions() { return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null); } getPageJSActions(pageIndex) { return this.messageHandler.sendWithPromise(\"GetPageJSActions\", { pageIndex }); } getStructTree(pageIndex) { return this.messageHandler.sendWithPromise(\"GetStructTree\", { pageIndex }); } getOutline() { return this.messageHandler.sendWithPromise(\"GetOutline\", null); } getOptionalContentConfig() { return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => { return new _optional_content_config.OptionalContentConfig(results); }); } getPermissions() { return this.messageHandler.sendWithPromise(\"GetPermissions\", null); } getMetadata() { return this.#metadataPromise ||= this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => { return { info: results[0], metadata: results[1] ? new _metadata.Metadata(results[1]) : null, contentDispositionFilename: this._fullReader?.filename ?? null, contentLength: this._fullReader?.contentLength ?? null }; }); } getMarkInfo() { return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null); } async startCleanup(keepLoadedFonts = false) { await this.messageHandler.sendWithPromise(\"Cleanup\", null); if (this.destroyed) { return; } for (const page of this.#pageCache.values()) { const cleanupSuccessful = page.cleanup(); if (!cleanupSuccessful) { throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`); } } this.commonObjs.clear(); if (!keepLoadedFonts) { this.fontLoader.clear(); } this.#metadataPromise = null; this._getFieldObjectsPromise = null; this._hasJSActionsPromise = null; } get loadingParams() { const params = this._params; return (0, _util.shadow)(this, \"loadingParams\", { disableAutoFetch: params.disableAutoFetch, enableXfa: params.enableXfa }); } } class PDFObjects { #objs = Object.create(null); #ensureObj(objId) { const obj = this.#objs[objId]; if (obj) { return obj; } return this.#objs[objId] = { capability: (0, _util.createPromiseCapability)(), data: null }; } get(objId, callback = null) { if (callback) { const obj = this.#ensureObj(objId); obj.capability.promise.then(() => callback(obj.data)); return null; } const obj = this.#objs[objId]; if (!obj?.capability.settled) { throw new Error(`Requesting object that isn't resolved yet ${objId}.`); } return obj.data; } has(objId) { const obj = this.#objs[objId]; return obj?.capability.settled || false; } resolve(objId, data = null) { const obj = this.#ensureObj(objId); obj.data = data; obj.capability.resolve(); } clear() { this.#objs = Object.create(null); } } class RenderTask { constructor(internalRenderTask) { this._internalRenderTask = internalRenderTask; this.onContinue = null; } get promise() { return this._internalRenderTask.capability.promise; } cancel() { this._internalRenderTask.cancel(); } } exports.RenderTask = RenderTask; class InternalRenderTask { static #canvasInUse = new WeakSet(); constructor({ callback, params, objs, commonObjs, annotationCanvasMap, operatorList, pageIndex, canvasFactory, useRequestAnimationFrame = false, pdfBug = false }) { this.callback = callback; this.params = params; this.objs = objs; this.commonObjs = commonObjs; this.annotationCanvasMap = annotationCanvasMap; this.operatorListIdx = null; this.operatorList = operatorList; this._pageIndex = pageIndex; this.canvasFactory = canvasFactory; this._pdfBug = pdfBug; this.running = false; this.graphicsReadyCallback = null; this.graphicsReady = false; this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\"; this.cancelled = false; this.capability = (0, _util.createPromiseCapability)(); this.task = new RenderTask(this); this._cancelBound = this.cancel.bind(this); this._continueBound = this._continue.bind(this); this._scheduleNextBound = this._scheduleNext.bind(this); this._nextBound = this._next.bind(this); this._canvas = params.canvasContext.canvas; } get completed() { return this.capability.promise.catch(function () {}); } initializeGraphics({ transparency = false, optionalContentConfig }) { if (this.cancelled) { return; } if (this._canvas) { if (InternalRenderTask.#canvasInUse.has(this._canvas)) { throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\"); } InternalRenderTask.#canvasInUse.add(this._canvas); } if (this._pdfBug && globalThis.StepperManager?.enabled) { this.stepper = globalThis.StepperManager.create(this._pageIndex); this.stepper.init(this.operatorList); this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint(); } const { canvasContext, viewport, transform, imageLayer, background } = this.params; this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig, this.annotationCanvasMap); this.gfx.beginDrawing({ transform, viewport, transparency, background }); this.operatorListIdx = 0; this.graphicsReady = true; if (this.graphicsReadyCallback) { this.graphicsReadyCallback(); } } cancel(error = null) { this.running = false; this.cancelled = true; if (this.gfx) { this.gfx.endDrawing(); } if (this._canvas) { InternalRenderTask.#canvasInUse.delete(this._canvas); } this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\")); } operatorListChanged() { if (!this.graphicsReady) { if (!this.graphicsReadyCallback) { this.graphicsReadyCallback = this._continueBound; } return; } if (this.stepper) { this.stepper.updateOperatorList(this.operatorList); } if (this.running) { return; } this._continue(); } _continue() { this.running = true; if (this.cancelled) { return; } if (this.task.onContinue) { this.task.onContinue(this._scheduleNextBound); } else { this._scheduleNext(); } } _scheduleNext() { if (this._useRequestAnimationFrame) { window.requestAnimationFrame(() => { this._nextBound().catch(this._cancelBound); }); } else { Promise.resolve().then(this._nextBound).catch(this._cancelBound); } } async _next() { if (this.cancelled) { return; } this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper); if (this.operatorListIdx === this.operatorList.argsArray.length) { this.running = false; if (this.operatorList.lastChunk) { this.gfx.endDrawing(); if (this._canvas) { InternalRenderTask.#canvasInUse.delete(this._canvas); } this.callback(); } } } } const version = '2.14.0'; exports.version = version; const build = '75ac897'; exports.build = build; /***/ }), /* 5 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0; exports.deprecated = deprecated; exports.getFilenameFromUrl = getFilenameFromUrl; exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl; exports.getXfaPageViewport = getXfaPageViewport; exports.isDataScheme = isDataScheme; exports.isPdfFile = isPdfFile; exports.isValidFetchUrl = isValidFetchUrl; exports.loadScript = loadScript; var _base_factory = __w_pdfjs_require__(6); var _util = __w_pdfjs_require__(1); const SVG_NS = \"http://www.w3.org/2000/svg\"; class PixelsPerInch { static CSS = 96.0; static PDF = 72.0; static PDF_TO_CSS_UNITS = this.CSS / this.PDF; } exports.PixelsPerInch = PixelsPerInch; class DOMCanvasFactory extends _base_factory.BaseCanvasFactory { constructor({ ownerDocument = globalThis.document } = {}) { super(); this._document = ownerDocument; } _createCanvas(width, height) { const canvas = this._document.createElement(\"canvas\"); canvas.width = width; canvas.height = height; return canvas; } } exports.DOMCanvasFactory = DOMCanvasFactory; async function fetchData(url, asTypedArray = false) { if (isValidFetchUrl(url, document.baseURI)) { const response = await fetch(url); if (!response.ok) { throw new Error(response.statusText); } return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text()); } return new Promise((resolve, reject) => { const request = new XMLHttpRequest(); request.open(\"GET\", url, true); if (asTypedArray) { request.responseType = \"arraybuffer\"; } request.onreadystatechange = () => { if (request.readyState !== XMLHttpRequest.DONE) { return; } if (request.status === 200 || request.status === 0) { let data; if (asTypedArray && request.response) { data = new Uint8Array(request.response); } else if (!asTypedArray && request.responseText) { data = (0, _util.stringToBytes)(request.responseText); } if (data) { resolve(data); return; } } reject(new Error(request.statusText)); }; request.send(null); }); } class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory { _fetchData(url, compressionType) { return fetchData(url, this.isCompressed).then(data => { return { cMapData: data, compressionType }; }); } } exports.DOMCMapReaderFactory = DOMCMapReaderFactory; class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory { _fetchData(url) { return fetchData(url, true); } } exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory; class DOMSVGFactory extends _base_factory.BaseSVGFactory { _createSVG(type) { return document.createElementNS(SVG_NS, type); } } exports.DOMSVGFactory = DOMSVGFactory; class PageViewport { constructor({ viewBox, scale, rotation, offsetX = 0, offsetY = 0, dontFlip = false }) { this.viewBox = viewBox; this.scale = scale; this.rotation = rotation; this.offsetX = offsetX; this.offsetY = offsetY; const centerX = (viewBox[2] + viewBox[0]) / 2; const centerY = (viewBox[3] + viewBox[1]) / 2; let rotateA, rotateB, rotateC, rotateD; rotation %= 360; if (rotation < 0) { rotation += 360; } switch (rotation) { case 180: rotateA = -1; rotateB = 0; rotateC = 0; rotateD = 1; break; case 90: rotateA = 0; rotateB = 1; rotateC = 1; rotateD = 0; break; case 270: rotateA = 0; rotateB = -1; rotateC = -1; rotateD = 0; break; case 0: rotateA = 1; rotateB = 0; rotateC = 0; rotateD = -1; break; default: throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"); } if (dontFlip) { rotateC = -rotateC; rotateD = -rotateD; } let offsetCanvasX, offsetCanvasY; let width, height; if (rotateA === 0) { offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX; offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY; width = Math.abs(viewBox[3] - viewBox[1]) * scale; height = Math.abs(viewBox[2] - viewBox[0]) * scale; } else { offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX; offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY; width = Math.abs(viewBox[2] - viewBox[0]) * scale; height = Math.abs(viewBox[3] - viewBox[1]) * scale; } this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY]; this.width = width; this.height = height; } clone({ scale = this.scale, rotation = this.rotation, offsetX = this.offsetX, offsetY = this.offsetY, dontFlip = false } = {}) { return new PageViewport({ viewBox: this.viewBox.slice(), scale, rotation, offsetX, offsetY, dontFlip }); } convertToViewportPoint(x, y) { return _util.Util.applyTransform([x, y], this.transform); } convertToViewportRectangle(rect) { const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform); const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform); return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]]; } convertToPdfPoint(x, y) { return _util.Util.applyInverseTransform([x, y], this.transform); } } exports.PageViewport = PageViewport; class RenderingCancelledException extends _util.BaseException { constructor(msg, type) { super(msg, \"RenderingCancelledException\"); this.type = type; } } exports.RenderingCancelledException = RenderingCancelledException; function isDataScheme(url) { const ii = url.length; let i = 0; while (i < ii && url[i].trim() === \"\") { i++; } return url.substring(i, i + 5).toLowerCase() === \"data:\"; } function isPdfFile(filename) { return typeof filename === \"string\" && /\\.pdf$/i.test(filename); } function getFilenameFromUrl(url) { const anchor = url.indexOf(\"#\"); const query = url.indexOf(\"?\"); const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length); return url.substring(url.lastIndexOf(\"/\", end) + 1, end); } function getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") { if (typeof url !== \"string\") { return defaultFilename; } if (isDataScheme(url)) { (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.'); return defaultFilename; } const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/; const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i; const splitURI = reURI.exec(url); let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]); if (suggestedFilename) { suggestedFilename = suggestedFilename[0]; if (suggestedFilename.includes(\"%\")) { try { suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0]; } catch (ex) {} } } return suggestedFilename || defaultFilename; } class StatTimer { constructor() { this.started = Object.create(null); this.times = []; } time(name) { if (name in this.started) { (0, _util.warn)(`Timer is already running for ${name}`); } this.started[name] = Date.now(); } timeEnd(name) { if (!(name in this.started)) { (0, _util.warn)(`Timer has not been started for ${name}`); } this.times.push({ name, start: this.started[name], end: Date.now() }); delete this.started[name]; } toString() { const outBuf = []; let longest = 0; for (const time of this.times) { const name = time.name; if (name.length > longest) { longest = name.length; } } for (const time of this.times) { const duration = time.end - time.start; outBuf.push(`${time.name.padEnd(longest)} ${duration}ms `); } return outBuf.join(\"\"); } } exports.StatTimer = StatTimer; function isValidFetchUrl(url, baseUrl) { try { const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url); return protocol === \"http:\" || protocol === \"https:\"; } catch (ex) { return false; } } function loadScript(src, removeScriptElement = false) { return new Promise((resolve, reject) => { const script = document.createElement(\"script\"); script.src = src; script.onload = function (evt) { if (removeScriptElement) { script.remove(); } resolve(evt); }; script.onerror = function () { reject(new Error(`Cannot load script at: ${script.src}`)); }; (document.head || document.documentElement).appendChild(script); }); } function deprecated(details) { console.log(\"Deprecated API usage: \" + details); } let pdfDateStringRegex; class PDFDateString { static toDateObject(input) { if (!input || typeof input !== \"string\") { return null; } if (!pdfDateStringRegex) { pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\"); } const matches = pdfDateStringRegex.exec(input); if (!matches) { return null; } const year = parseInt(matches[1], 10); let month = parseInt(matches[2], 10); month = month >= 1 && month = 1 && day = 0 && hour = 0 && minute = 0 && second = 0 && offsetHour = 0 && offsetMinute { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0; var _util = __w_pdfjs_require__(1); class BaseCanvasFactory { constructor() { if (this.constructor === BaseCanvasFactory) { (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\"); } } create(width, height) { if (width 0 && context.requests[0].done) { const otherRequest = context.requests.shift(); setTimeout(otherRequest.callback, 0); } } const context = this.loadingContext; const request = { id: `pdfjs-font-loading-${context.nextRequestId++}`, done: false, complete: completeRequest, callback }; context.requests.push(request); return request; } get _loadTestFont() { const getLoadTestFont = function () { return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"); }; return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont()); } _prepareFontLoadEvent(rules, fonts, request) { function int32(data, offset) { return data.charCodeAt(offset) < 24 | data.charCodeAt(offset + 1) < 16 | data.charCodeAt(offset + 2) < 8 | data.charCodeAt(offset + 3) & 0xff; } function spliceString(s, offset, remove, insert) { const chunk1 = s.substring(0, offset); const chunk2 = s.substring(offset + remove); return chunk1 + insert + chunk2; } let i, ii; const canvas = this._document.createElement(\"canvas\"); canvas.width = 1; canvas.height = 1; const ctx = canvas.getContext(\"2d\"); let called = 0; function isFontReady(name, callback) { called++; if (called > 30) { (0, _util.warn)(\"Load test font never loaded.\"); callback(); return; } ctx.font = \"30px \" + name; ctx.fillText(\".\", 0, 20); const imageData = ctx.getImageData(0, 0, 1, 1); if (imageData.data[3] > 0) { callback(); return; } setTimeout(isFontReady.bind(null, name, callback)); } const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`; let data = this._loadTestFont; const COMMENT_OFFSET = 976; data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId); const CFF_CHECKSUM_OFFSET = 16; const XXXX_VALUE = 0x58585858; let checksum = int32(data, CFF_CHECKSUM_OFFSET); for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) { checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0; } if (i < loadTestFontId.length) { checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0; } data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum)); const url = `url(data:font/opentype;base64,${btoa(data)});`; const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`; this.insertRule(rule); const names = []; for (const font of fonts) { names.push(font.loadedName); } names.push(loadTestFontId); const div = this._document.createElement(\"div\"); div.style.visibility = \"hidden\"; div.style.width = div.style.height = \"10px\"; div.style.position = \"absolute\"; div.style.top = div.style.left = \"0px\"; for (const name of names) { const span = this._document.createElement(\"span\"); span.textContent = \"Hi\"; span.style.fontFamily = name; div.appendChild(span); } this._document.body.appendChild(div); isFontReady(loadTestFontId, () => { div.remove(); request.complete(); }); } }; } class FontFaceObject { constructor(translatedData, { isEvalSupported = true, disableFontFace = false, ignoreErrors = false, onUnsupportedFeature, fontRegistry = null }) { this.compiledGlyphs = Object.create(null); for (const i in translatedData) { this[i] = translatedData[i]; } this.isEvalSupported = isEvalSupported !== false; this.disableFontFace = disableFontFace === true; this.ignoreErrors = ignoreErrors === true; this._onUnsupportedFeature = onUnsupportedFeature; this.fontRegistry = fontRegistry; } createNativeFontFace() { if (!this.data || this.disableFontFace) { return null; } let nativeFontFace; if (!this.cssFontInfo) { nativeFontFace = new FontFace(this.loadedName, this.data, {}); } else { const css = { weight: this.cssFontInfo.fontWeight }; if (this.cssFontInfo.italicAngle) { css.style = `oblique ${this.cssFontInfo.italicAngle}deg`; } nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css); } if (this.fontRegistry) { this.fontRegistry.registerFont(this); } return nativeFontFace; } createFontFaceRule() { if (!this.data || this.disableFontFace) { return null; } const data = (0, _util.bytesToString)(this.data); const url = `url(data:${this.mimetype};base64,${btoa(data)});`; let rule; if (!this.cssFontInfo) { rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`; } else { let css = `font-weight: ${this.cssFontInfo.fontWeight};`; if (this.cssFontInfo.italicAngle) { css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`; } rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`; } if (this.fontRegistry) { this.fontRegistry.registerFont(this, url); } return rule; } getPathGenerator(objs, character) { if (this.compiledGlyphs[character] !== undefined) { return this.compiledGlyphs[character]; } let cmds; try { cmds = objs.get(this.loadedName + \"_path_\" + character); } catch (ex) { if (!this.ignoreErrors) { throw ex; } this._onUnsupportedFeature({ featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath }); (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`); return this.compiledGlyphs[character] = function (c, size) {}; } if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) { const jsBuf = []; for (const current of cmds) { const args = current.args !== undefined ? current.args.join(\",\") : \"\"; jsBuf.push(\"c.\", current.cmd, \"(\", args, \"); \"); } return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\")); } return this.compiledGlyphs[character] = function (c, size) { for (const current of cmds) { if (current.cmd === \"scale\") { current.args = [size, -size]; } c[current.cmd].apply(c, current.args); } }; } } exports.FontFaceObject = FontFaceObject; /***/ }), /* 8 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.NodeStandardFontDataFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0; var _base_factory = __w_pdfjs_require__(6); var _is_node = __w_pdfjs_require__(3); var _util = __w_pdfjs_require__(1); let NodeCanvasFactory = class { constructor() { (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\"); } }; exports.NodeCanvasFactory = NodeCanvasFactory; let NodeCMapReaderFactory = class { constructor() { (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\"); } }; exports.NodeCMapReaderFactory = NodeCMapReaderFactory; let NodeStandardFontDataFactory = class { constructor() { (0, _util.unreachable)(\"Not implemented: NodeStandardFontDataFactory\"); } }; exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory; if (_is_node.isNodeJS) { const fetchData = function (url) { return new Promise((resolve, reject) => { const fs = require(\"fs\"); fs.readFile(url, (error, data) => { if (error || !data) { reject(new Error(error)); return; } resolve(new Uint8Array(data)); }); }); }; exports.NodeCanvasFactory = NodeCanvasFactory = class extends _base_factory.BaseCanvasFactory { _createCanvas(width, height) { const Canvas = require(\"canvas\"); return Canvas.createCanvas(width, height); } }; exports.NodeCMapReaderFactory = NodeCMapReaderFactory = class extends _base_factory.BaseCMapReaderFactory { _fetchData(url, compressionType) { return fetchData(url).then(data => { return { cMapData: data, compressionType }; }); } }; exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory = class extends _base_factory.BaseStandardFontDataFactory { _fetchData(url) { return fetchData(url); } }; } /***/ }), /* 9 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.AnnotationStorage = void 0; var _util = __w_pdfjs_require__(1); class AnnotationStorage { constructor() { this._storage = new Map(); this._timeStamp = Date.now(); this._modified = false; this.onSetModified = null; this.onResetModified = null; } getValue(key, defaultValue) { const value = this._storage.get(key); if (value === undefined) { return defaultValue; } return Object.assign(defaultValue, value); } setValue(key, value) { const obj = this._storage.get(key); let modified = false; if (obj !== undefined) { for (const [entry, val] of Object.entries(value)) { if (obj[entry] !== val) { modified = true; obj[entry] = val; } } } else { modified = true; this._storage.set(key, value); } if (modified) { this._timeStamp = Date.now(); this._setModified(); } } getAll() { return this._storage.size > 0 ? (0, _util.objectFromMap)(this._storage) : null; } get size() { return this._storage.size; } _setModified() { if (!this._modified) { this._modified = true; if (typeof this.onSetModified === \"function\") { this.onSetModified(); } } } resetModified() { if (this._modified) { this._modified = false; if (typeof this.onResetModified === \"function\") { this.onResetModified(); } } } get serializable() { return this._storage.size > 0 ? this._storage : null; } get lastModified() { return this._timeStamp.toString(); } } exports.AnnotationStorage = AnnotationStorage; /***/ }), /* 10 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.CanvasGraphics = void 0; var _util = __w_pdfjs_require__(1); var _pattern_helper = __w_pdfjs_require__(11); var _image_utils = __w_pdfjs_require__(12); var _display_utils = __w_pdfjs_require__(5); const MIN_FONT_SIZE = 16; const MAX_FONT_SIZE = 100; const MAX_GROUP_SIZE = 4096; const EXECUTION_TIME = 15; const EXECUTION_STEPS = 10; const COMPILE_TYPE3_GLYPHS = true; const MAX_SIZE_TO_COMPILE = 1000; const FULL_CHUNK_HEIGHT = 16; const LINEWIDTH_SCALE_FACTOR = 1.000001; function mirrorContextOperations(ctx, destCtx) { if (ctx._removeMirroring) { throw new Error(\"Context is already forwarding operations.\"); } ctx.__originalSave = ctx.save; ctx.__originalRestore = ctx.restore; ctx.__originalRotate = ctx.rotate; ctx.__originalScale = ctx.scale; ctx.__originalTranslate = ctx.translate; ctx.__originalTransform = ctx.transform; ctx.__originalSetTransform = ctx.setTransform; ctx.__originalResetTransform = ctx.resetTransform; ctx.__originalClip = ctx.clip; ctx.__originalMoveTo = ctx.moveTo; ctx.__originalLineTo = ctx.lineTo; ctx.__originalBezierCurveTo = ctx.bezierCurveTo; ctx.__originalRect = ctx.rect; ctx.__originalClosePath = ctx.closePath; ctx.__originalBeginPath = ctx.beginPath; ctx._removeMirroring = () => { ctx.save = ctx.__originalSave; ctx.restore = ctx.__originalRestore; ctx.rotate = ctx.__originalRotate; ctx.scale = ctx.__originalScale; ctx.translate = ctx.__originalTranslate; ctx.transform = ctx.__originalTransform; ctx.setTransform = ctx.__originalSetTransform; ctx.resetTransform = ctx.__originalResetTransform; ctx.clip = ctx.__originalClip; ctx.moveTo = ctx.__originalMoveTo; ctx.lineTo = ctx.__originalLineTo; ctx.bezierCurveTo = ctx.__originalBezierCurveTo; ctx.rect = ctx.__originalRect; ctx.closePath = ctx.__originalClosePath; ctx.beginPath = ctx.__originalBeginPath; delete ctx._removeMirroring; }; ctx.save = function ctxSave() { destCtx.save(); this.__originalSave(); }; ctx.restore = function ctxRestore() { destCtx.restore(); this.__originalRestore(); }; ctx.translate = function ctxTranslate(x, y) { destCtx.translate(x, y); this.__originalTranslate(x, y); }; ctx.scale = function ctxScale(x, y) { destCtx.scale(x, y); this.__originalScale(x, y); }; ctx.transform = function ctxTransform(a, b, c, d, e, f) { destCtx.transform(a, b, c, d, e, f); this.__originalTransform(a, b, c, d, e, f); }; ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) { destCtx.setTransform(a, b, c, d, e, f); this.__originalSetTransform(a, b, c, d, e, f); }; ctx.resetTransform = function ctxResetTransform() { destCtx.resetTransform(); this.__originalResetTransform(); }; ctx.rotate = function ctxRotate(angle) { destCtx.rotate(angle); this.__originalRotate(angle); }; ctx.clip = function ctxRotate(rule) { destCtx.clip(rule); this.__originalClip(rule); }; ctx.moveTo = function (x, y) { destCtx.moveTo(x, y); this.__originalMoveTo(x, y); }; ctx.lineTo = function (x, y) { destCtx.lineTo(x, y); this.__originalLineTo(x, y); }; ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) { destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y); this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y); }; ctx.rect = function (x, y, width, height) { destCtx.rect(x, y, width, height); this.__originalRect(x, y, width, height); }; ctx.closePath = function () { destCtx.closePath(); this.__originalClosePath(); }; ctx.beginPath = function () { destCtx.beginPath(); this.__originalBeginPath(); }; } function addContextCurrentTransform(ctx) { if (ctx._transformStack) { ctx._transformStack = []; } if (ctx.mozCurrentTransform) { return; } ctx._originalSave = ctx.save; ctx._originalRestore = ctx.restore; ctx._originalRotate = ctx.rotate; ctx._originalScale = ctx.scale; ctx._originalTranslate = ctx.translate; ctx._originalTransform = ctx.transform; ctx._originalSetTransform = ctx.setTransform; ctx._originalResetTransform = ctx.resetTransform; ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0]; ctx._transformStack = []; try { const desc = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(ctx), \"lineWidth\"); ctx._setLineWidth = desc.set; ctx._getLineWidth = desc.get; Object.defineProperty(ctx, \"lineWidth\", { set: function setLineWidth(width) { this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR); }, get: function getLineWidth() { return this._getLineWidth(); } }); } catch (_) {} Object.defineProperty(ctx, \"mozCurrentTransform\", { get: function getCurrentTransform() { return this._transformMatrix; } }); Object.defineProperty(ctx, \"mozCurrentTransformInverse\", { get: function getCurrentTransformInverse() { const [a, b, c, d, e, f] = this._transformMatrix; const ad_bc = a * d - b * c; const bc_ad = b * c - a * d; return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc]; } }); ctx.save = function ctxSave() { const old = this._transformMatrix; this._transformStack.push(old); this._transformMatrix = old.slice(0, 6); this._originalSave(); }; ctx.restore = function ctxRestore() { if (this._transformStack.length === 0) { (0, _util.warn)(\"Tried to restore a ctx when the stack was already empty.\"); } const prev = this._transformStack.pop(); if (prev) { this._transformMatrix = prev; this._originalRestore(); } }; ctx.translate = function ctxTranslate(x, y) { const m = this._transformMatrix; m[4] = m[0] * x + m[2] * y + m[4]; m[5] = m[1] * x + m[3] * y + m[5]; this._originalTranslate(x, y); }; ctx.scale = function ctxScale(x, y) { const m = this._transformMatrix; m[0] *= x; m[1] *= x; m[2] *= y; m[3] *= y; this._originalScale(x, y); }; ctx.transform = function ctxTransform(a, b, c, d, e, f) { const m = this._transformMatrix; this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]]; ctx._originalTransform(a, b, c, d, e, f); }; ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) { this._transformMatrix = [a, b, c, d, e, f]; ctx._originalSetTransform(a, b, c, d, e, f); }; ctx.resetTransform = function ctxResetTransform() { this._transformMatrix = [1, 0, 0, 1, 0, 0]; ctx._originalResetTransform(); }; ctx.rotate = function ctxRotate(angle) { const cosValue = Math.cos(angle); const sinValue = Math.sin(angle); const m = this._transformMatrix; this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]]; this._originalRotate(angle); }; } class CachedCanvases { constructor(canvasFactory) { this.canvasFactory = canvasFactory; this.cache = Object.create(null); } getCanvas(id, width, height, trackTransform) { let canvasEntry; if (this.cache[id] !== undefined) { canvasEntry = this.cache[id]; this.canvasFactory.reset(canvasEntry, width, height); canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0); } else { canvasEntry = this.canvasFactory.create(width, height); this.cache[id] = canvasEntry; } if (trackTransform) { addContextCurrentTransform(canvasEntry.context); } return canvasEntry; } delete(id) { delete this.cache[id]; } clear() { for (const id in this.cache) { const canvasEntry = this.cache[id]; this.canvasFactory.destroy(canvasEntry); delete this.cache[id]; } } } function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) { const [a, b, c, d, tx, ty] = ctx.mozCurrentTransform; if (b === 0 && c === 0) { const tlX = destX * a + tx; const rTlX = Math.round(tlX); const tlY = destY * d + ty; const rTlY = Math.round(tlY); const brX = (destX + destW) * a + tx; const rWidth = Math.abs(Math.round(brX) - rTlX) || 1; const brY = (destY + destH) * d + ty; const rHeight = Math.abs(Math.round(brY) - rTlY) || 1; ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY); ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight); ctx.setTransform(a, b, c, d, tx, ty); return [rWidth, rHeight]; } if (a === 0 && d === 0) { const tlX = destY * c + tx; const rTlX = Math.round(tlX); const tlY = destX * b + ty; const rTlY = Math.round(tlY); const brX = (destY + destH) * c + tx; const rWidth = Math.abs(Math.round(brX) - rTlX) || 1; const brY = (destX + destW) * b + ty; const rHeight = Math.abs(Math.round(brY) - rTlY) || 1; ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY); ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth); ctx.setTransform(a, b, c, d, tx, ty); return [rHeight, rWidth]; } ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH); const scaleX = Math.hypot(a, b); const scaleY = Math.hypot(c, d); return [scaleX * destW, scaleY * destH]; } function compileType3Glyph(imgData) { const POINT_TO_PROCESS_LIMIT = 1000; const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]); const width = imgData.width, height = imgData.height, width1 = width + 1; let i, ii, j, j0; const points = new Uint8Array(width1 * (height + 1)); const lineSize = width + 7 & ~7, data0 = imgData.data; const data = new Uint8Array(lineSize * height); let pos = 0; for (i = 0, ii = data0.length; i < ii; i++) { const elem = data0[i]; let mask = 128; while (mask > 0) { data[pos++] = elem & mask ? 0 : 255; mask >>= 1; } } let count = 0; pos = 0; if (data[pos] !== 0) { points[0] = 1; ++count; } for (j = 1; j < width; j++) { if (data[pos] !== data[pos + 1]) { points[j] = data[pos] ? 2 : 1; ++count; } pos++; } if (data[pos] !== 0) { points[j] = 2; ++count; } for (i = 1; i < height; i++) { pos = i * lineSize; j0 = i * width1; if (data[pos - lineSize] !== data[pos]) { points[j0] = data[pos] ? 1 : 8; ++count; } let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0); for (j = 1; j < width; j++) { sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0); if (POINT_TYPES[sum]) { points[j0 + j] = POINT_TYPES[sum]; ++count; } pos++; } if (data[pos - lineSize] !== data[pos]) { points[j0 + j] = data[pos] ? 2 : 4; ++count; } if (count > POINT_TO_PROCESS_LIMIT) { return null; } } pos = lineSize * (height - 1); j0 = i * width1; if (data[pos] !== 0) { points[j0] = 8; ++count; } for (j = 1; j < width; j++) { if (data[pos] !== data[pos + 1]) { points[j0 + j] = data[pos] ? 4 : 8; ++count; } pos++; } if (data[pos] !== 0) { points[j0 + j] = 4; ++count; } if (count > POINT_TO_PROCESS_LIMIT) { return null; } const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]); const outlines = []; for (i = 0; count && i 1) { let newWidth = paintWidth, newHeight = paintHeight; if (widthScale > 2 && paintWidth > 1) { newWidth = Math.ceil(paintWidth / 2); widthScale /= paintWidth / newWidth; } if (heightScale > 2 && paintHeight > 1) { newHeight = Math.ceil(paintHeight / 2); heightScale /= paintHeight / newHeight; } tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight, false); tmpCtx = tmpCanvas.context; tmpCtx.clearRect(0, 0, newWidth, newHeight); tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight); img = tmpCanvas.canvas; paintWidth = newWidth; paintHeight = newHeight; tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\"; } return { img, paintWidth, paintHeight }; } _createMaskCanvas(img) { const ctx = this.ctx; const { width, height } = img; const fillColor = this.current.fillColor; const isPatternFill = this.current.patternFill; const currentTransform = ctx.mozCurrentTransform; let cache, cacheKey, scaled, maskCanvas; if ((img.bitmap || img.data) && img.count > 1) { const mainKey = img.bitmap || img.data.buffer; const withoutTranslation = currentTransform.slice(0, 4); cacheKey = JSON.stringify(isPatternFill ? withoutTranslation : [withoutTranslation, fillColor]); cache = this._cachedBitmapsMap.get(mainKey); if (!cache) { cache = new Map(); this._cachedBitmapsMap.set(mainKey, cache); } const cachedImage = cache.get(cacheKey); if (cachedImage && !isPatternFill) { const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]); const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]); return { canvas: cachedImage, offsetX, offsetY }; } scaled = cachedImage; } if (!scaled) { maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height, false); putBinaryImageMask(maskCanvas.context, img); } let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]); maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]); const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas); const cord2 = _util.Util.applyTransform([width, height], maskToCanvas); const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]); const drawnWidth = Math.round(rect[2] - rect[0]) || 1; const drawnHeight = Math.round(rect[3] - rect[1]) || 1; const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight, true); const fillCtx = fillCanvas.context; const offsetX = Math.min(cord1[0], cord2[0]); const offsetY = Math.min(cord1[1], cord2[1]); fillCtx.translate(-offsetX, -offsetY); fillCtx.transform.apply(fillCtx, maskToCanvas); if (!scaled) { scaled = this._scaleImage(maskCanvas.canvas, fillCtx.mozCurrentTransformInverse); scaled = scaled.img; if (cache && isPatternFill) { cache.set(cacheKey, scaled); } } fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(fillCtx.mozCurrentTransform, img.interpolate); drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height); fillCtx.globalCompositeOperation = \"source-in\"; const inverse = _util.Util.transform(fillCtx.mozCurrentTransformInverse, [1, 0, 0, 1, -offsetX, -offsetY]); fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor; fillCtx.fillRect(0, 0, width, height); if (cache && !isPatternFill) { this.cachedCanvases.delete(\"fillCanvas\"); cache.set(cacheKey, fillCanvas.canvas); } return { canvas: fillCanvas.canvas, offsetX: Math.round(offsetX), offsetY: Math.round(offsetY) }; } setLineWidth(width) { if (width !== this.current.lineWidth) { this._cachedScaleForStroking = null; } this.current.lineWidth = width; this.ctx.lineWidth = width; } setLineCap(style) { this.ctx.lineCap = LINE_CAP_STYLES[style]; } setLineJoin(style) { this.ctx.lineJoin = LINE_JOIN_STYLES[style]; } setMiterLimit(limit) { this.ctx.miterLimit = limit; } setDash(dashArray, dashPhase) { const ctx = this.ctx; if (ctx.setLineDash !== undefined) { ctx.setLineDash(dashArray); ctx.lineDashOffset = dashPhase; } } setRenderingIntent(intent) {} setFlatness(flatness) {} setGState(states) { for (let i = 0, ii = states.length; i < ii; i++) { const state = states[i]; const key = state[0]; const value = state[1]; switch (key) { case \"LW\": this.setLineWidth(value); break; case \"LC\": this.setLineCap(value); break; case \"LJ\": this.setLineJoin(value); break; case \"ML\": this.setMiterLimit(value); break; case \"D\": this.setDash(value[0], value[1]); break; case \"RI\": this.setRenderingIntent(value); break; case \"FL\": this.setFlatness(value); break; case \"Font\": this.setFont(value[0], value[1]); break; case \"CA\": this.current.strokeAlpha = state[1]; break; case \"ca\": this.current.fillAlpha = state[1]; this.ctx.globalAlpha = state[1]; break; case \"BM\": this.ctx.globalCompositeOperation = value; break; case \"SMask\": this.current.activeSMask = value ? this.tempSMask : null; this.tempSMask = null; this.checkSMaskState(); break; case \"TR\": this.current.transferMaps = value; } } } get inSMaskMode() { return !!this.suspendedCtx; } checkSMaskState() { const inSMaskMode = this.inSMaskMode; if (this.current.activeSMask && !inSMaskMode) { this.beginSMaskMode(); } else if (!this.current.activeSMask && inSMaskMode) { this.endSMaskMode(); } } beginSMaskMode() { if (this.inSMaskMode) { throw new Error(\"beginSMaskMode called while already in smask mode\"); } const drawnWidth = this.ctx.canvas.width; const drawnHeight = this.ctx.canvas.height; const cacheId = \"smaskGroupAt\" + this.groupLevel; const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true); this.suspendedCtx = this.ctx; this.ctx = scratchCanvas.context; const ctx = this.ctx; ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform); copyCtxState(this.suspendedCtx, ctx); mirrorContextOperations(ctx, this.suspendedCtx); this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]); } endSMaskMode() { if (!this.inSMaskMode) { throw new Error(\"endSMaskMode called while not in smask mode\"); } this.ctx._removeMirroring(); copyCtxState(this.ctx, this.suspendedCtx); this.ctx = this.suspendedCtx; this.suspendedCtx = null; } compose(dirtyBox) { if (!this.current.activeSMask) { return; } if (!dirtyBox) { dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height]; } else { dirtyBox[0] = Math.floor(dirtyBox[0]); dirtyBox[1] = Math.floor(dirtyBox[1]); dirtyBox[2] = Math.ceil(dirtyBox[2]); dirtyBox[3] = Math.ceil(dirtyBox[3]); } const smask = this.current.activeSMask; const suspendedCtx = this.suspendedCtx; composeSMask(suspendedCtx, smask, this.ctx, dirtyBox); this.ctx.save(); this.ctx.setTransform(1, 0, 0, 1, 0, 0); this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height); this.ctx.restore(); } save() { if (this.inSMaskMode) { copyCtxState(this.ctx, this.suspendedCtx); this.suspendedCtx.save(); } else { this.ctx.save(); } const old = this.current; this.stateStack.push(old); this.current = old.clone(); } restore() { if (this.stateStack.length === 0 && this.inSMaskMode) { this.endSMaskMode(); } if (this.stateStack.length !== 0) { this.current = this.stateStack.pop(); if (this.inSMaskMode) { this.suspendedCtx.restore(); copyCtxState(this.suspendedCtx, this.ctx); } else { this.ctx.restore(); } this.checkSMaskState(); this.pendingClip = null; this._cachedScaleForStroking = null; this._cachedGetSinglePixelWidth = null; } } transform(a, b, c, d, e, f) { this.ctx.transform(a, b, c, d, e, f); this._cachedScaleForStroking = null; this._cachedGetSinglePixelWidth = null; } constructPath(ops, args, minMax) { const ctx = this.ctx; const current = this.current; let x = current.x, y = current.y; let startX, startY; const currentTransform = ctx.mozCurrentTransform; const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0; const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null; for (let i = 0, j = 0, ii = ops.length; i < ii; i++) { switch (ops[i] | 0) { case _util.OPS.rectangle: x = args[j++]; y = args[j++]; const width = args[j++]; const height = args[j++]; const xw = x + width; const yh = y + height; ctx.moveTo(x, y); if (width === 0 || height === 0) { ctx.lineTo(xw, yh); } else { ctx.lineTo(xw, y); ctx.lineTo(xw, yh); ctx.lineTo(x, yh); } if (!isScalingMatrix) { current.updateRectMinMax(currentTransform, [x, y, xw, yh]); } ctx.closePath(); break; case _util.OPS.moveTo: x = args[j++]; y = args[j++]; ctx.moveTo(x, y); if (!isScalingMatrix) { current.updatePathMinMax(currentTransform, x, y); } break; case _util.OPS.lineTo: x = args[j++]; y = args[j++]; ctx.lineTo(x, y); if (!isScalingMatrix) { current.updatePathMinMax(currentTransform, x, y); } break; case _util.OPS.curveTo: startX = x; startY = y; x = args[j + 4]; y = args[j + 5]; ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y); current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier); j += 6; break; case _util.OPS.curveTo2: startX = x; startY = y; ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]); current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier); x = args[j + 2]; y = args[j + 3]; j += 4; break; case _util.OPS.curveTo3: startX = x; startY = y; x = args[j + 2]; y = args[j + 3]; ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y); current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier); j += 4; break; case _util.OPS.closePath: ctx.closePath(); break; } } if (isScalingMatrix) { current.updateScalingPathMinMax(currentTransform, minMaxForBezier); } current.setCurrentPoint(x, y); } closePath() { this.ctx.closePath(); } stroke(consumePath) { consumePath = typeof consumePath !== \"undefined\" ? consumePath : true; const ctx = this.ctx; const strokeColor = this.current.strokeColor; ctx.globalAlpha = this.current.strokeAlpha; if (this.contentVisible) { if (typeof strokeColor === \"object\" && strokeColor?.getPattern) { ctx.save(); ctx.strokeStyle = strokeColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.STROKE); this.rescaleAndStroke(false); ctx.restore(); } else { this.rescaleAndStroke(true); } } if (consumePath) { this.consumePath(this.current.getClippedPathBoundingBox()); } ctx.globalAlpha = this.current.fillAlpha; } closeStroke() { this.closePath(); this.stroke(); } fill(consumePath) { consumePath = typeof consumePath !== \"undefined\" ? consumePath : true; const ctx = this.ctx; const fillColor = this.current.fillColor; const isPatternFill = this.current.patternFill; let needRestore = false; if (isPatternFill) { ctx.save(); ctx.fillStyle = fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL); needRestore = true; } const intersect = this.current.getClippedPathBoundingBox(); if (this.contentVisible && intersect !== null) { if (this.pendingEOFill) { ctx.fill(\"evenodd\"); this.pendingEOFill = false; } else { ctx.fill(); } } if (needRestore) { ctx.restore(); } if (consumePath) { this.consumePath(intersect); } } eoFill() { this.pendingEOFill = true; this.fill(); } fillStroke() { this.fill(false); this.stroke(false); this.consumePath(); } eoFillStroke() { this.pendingEOFill = true; this.fillStroke(); } closeFillStroke() { this.closePath(); this.fillStroke(); } closeEOFillStroke() { this.pendingEOFill = true; this.closePath(); this.fillStroke(); } endPath() { this.consumePath(); } clip() { this.pendingClip = NORMAL_CLIP; } eoClip() { this.pendingClip = EO_CLIP; } beginText() { this.current.textMatrix = _util.IDENTITY_MATRIX; this.current.textMatrixScale = 1; this.current.x = this.current.lineX = 0; this.current.y = this.current.lineY = 0; } endText() { const paths = this.pendingTextPaths; const ctx = this.ctx; if (paths === undefined) { ctx.beginPath(); return; } ctx.save(); ctx.beginPath(); for (let i = 0; i < paths.length; i++) { const path = paths[i]; ctx.setTransform.apply(ctx, path.transform); ctx.translate(path.x, path.y); path.addToPath(ctx, path.fontSize); } ctx.restore(); ctx.clip(); ctx.beginPath(); delete this.pendingTextPaths; } setCharSpacing(spacing) { this.current.charSpacing = spacing; } setWordSpacing(spacing) { this.current.wordSpacing = spacing; } setHScale(scale) { this.current.textHScale = scale / 100; } setLeading(leading) { this.current.leading = -leading; } setFont(fontRefName, size) { const fontObj = this.commonObjs.get(fontRefName); const current = this.current; if (!fontObj) { throw new Error(`Can't find font for ${fontRefName}`); } current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX; if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) { (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName); } if (size < 0) { size = -size; current.fontDirection = -1; } else { current.fontDirection = 1; } this.current.font = fontObj; this.current.fontSize = size; if (fontObj.isType3Font) { return; } const name = fontObj.loadedName || \"sans-serif\"; let bold = \"normal\"; if (fontObj.black) { bold = \"900\"; } else if (fontObj.bold) { bold = \"bold\"; } const italic = fontObj.italic ? \"italic\" : \"normal\"; const typeface = `\"${name}\", ${fontObj.fallbackName}`; let browserFontSize = size; if (size < MIN_FONT_SIZE) { browserFontSize = MIN_FONT_SIZE; } else if (size > MAX_FONT_SIZE) { browserFontSize = MAX_FONT_SIZE; } this.current.fontSizeScale = size / browserFontSize; this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`; } setTextRenderingMode(mode) { this.current.textRenderingMode = mode; } setTextRise(rise) { this.current.textRise = rise; } moveText(x, y) { this.current.x = this.current.lineX += x; this.current.y = this.current.lineY += y; } setLeadingMoveText(x, y) { this.setLeading(-y); this.moveText(x, y); } setTextMatrix(a, b, c, d, e, f) { this.current.textMatrix = [a, b, c, d, e, f]; this.current.textMatrixScale = Math.hypot(a, b); this.current.x = this.current.lineX = 0; this.current.y = this.current.lineY = 0; } nextLine() { this.moveText(0, this.current.leading); } paintChar(character, x, y, patternTransform) { const ctx = this.ctx; const current = this.current; const font = current.font; const textRenderingMode = current.textRenderingMode; const fontSize = current.fontSize / current.fontSizeScale; const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK; const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG); const patternFill = current.patternFill && !font.missingFile; let addToPath; if (font.disableFontFace || isAddToPathSet || patternFill) { addToPath = font.getPathGenerator(this.commonObjs, character); } if (font.disableFontFace || patternFill) { ctx.save(); ctx.translate(x, y); ctx.beginPath(); addToPath(ctx, fontSize); if (patternTransform) { ctx.setTransform.apply(ctx, patternTransform); } if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) { ctx.fill(); } if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) { ctx.stroke(); } ctx.restore(); } else { if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) { ctx.fillText(character, x, y); } if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) { ctx.strokeText(character, x, y); } } if (isAddToPathSet) { const paths = this.pendingTextPaths || (this.pendingTextPaths = []); paths.push({ transform: ctx.mozCurrentTransform, x, y, fontSize, addToPath }); } } get isFontSubpixelAAEnabled() { const { context: ctx } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10, false); ctx.scale(1.5, 1); ctx.fillText(\"I\", 0, 10); const data = ctx.getImageData(0, 0, 10, 10).data; let enabled = false; for (let i = 3; i < data.length; i += 4) { if (data[i] > 0 && data[i] < 255) { enabled = true; break; } } return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled); } showText(glyphs) { const current = this.current; const font = current.font; if (font.isType3Font) { return this.showType3Text(glyphs); } const fontSize = current.fontSize; if (fontSize === 0) { return undefined; } const ctx = this.ctx; const fontSizeScale = current.fontSizeScale; const charSpacing = current.charSpacing; const wordSpacing = current.wordSpacing; const fontDirection = current.fontDirection; const textHScale = current.textHScale * fontDirection; const glyphsLength = glyphs.length; const vertical = font.vertical; const spacingDir = vertical ? 1 : -1; const defaultVMetrics = font.defaultVMetrics; const widthAdvanceScale = fontSize * current.fontMatrix[0]; const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill; ctx.save(); ctx.transform.apply(ctx, current.textMatrix); ctx.translate(current.x, current.y + current.textRise); if (fontDirection > 0) { ctx.scale(textHScale, -1); } else { ctx.scale(textHScale, 1); } let patternTransform; if (current.patternFill) { ctx.save(); const pattern = current.fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL); patternTransform = ctx.mozCurrentTransform; ctx.restore(); ctx.fillStyle = pattern; } let lineWidth = current.lineWidth; const scale = current.textMatrixScale; if (scale === 0 || lineWidth === 0) { const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK; if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) { lineWidth = this.getSinglePixelWidth(); } } else { lineWidth /= scale; } if (fontSizeScale !== 1.0) { ctx.scale(fontSizeScale, fontSizeScale); lineWidth /= fontSizeScale; } ctx.lineWidth = lineWidth; let x = 0, i; for (i = 0; i < glyphsLength; ++i) { const glyph = glyphs[i]; if (typeof glyph === \"number\") { x += spacingDir * glyph * fontSize / 1000; continue; } let restoreNeeded = false; const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing; const character = glyph.fontChar; const accent = glyph.accent; let scaledX, scaledY; let width = glyph.width; if (vertical) { const vmetric = glyph.vmetric || defaultVMetrics; const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale; const vy = vmetric[2] * widthAdvanceScale; width = vmetric ? -vmetric[0] : width; scaledX = vx / fontSizeScale; scaledY = (x + vy) / fontSizeScale; } else { scaledX = x / fontSizeScale; scaledY = 0; } if (font.remeasure && width > 0) { const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale; if (width < measuredWidth && this.isFontSubpixelAAEnabled) { const characterScaleX = width / measuredWidth; restoreNeeded = true; ctx.save(); ctx.scale(characterScaleX, 1); scaledX /= characterScaleX; } else if (width !== measuredWidth) { scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale; } } if (this.contentVisible && (glyph.isInFont || font.missingFile)) { if (simpleFillText && !accent) { ctx.fillText(character, scaledX, scaledY); } else { this.paintChar(character, scaledX, scaledY, patternTransform); if (accent) { const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale; const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale; this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform); } } } let charWidth; if (vertical) { charWidth = width * widthAdvanceScale - spacing * fontDirection; } else { charWidth = width * widthAdvanceScale + spacing * fontDirection; } x += charWidth; if (restoreNeeded) { ctx.restore(); } } if (vertical) { current.y -= x; } else { current.x += x * textHScale; } ctx.restore(); this.compose(); return undefined; } showType3Text(glyphs) { const ctx = this.ctx; const current = this.current; const font = current.font; const fontSize = current.fontSize; const fontDirection = current.fontDirection; const spacingDir = font.vertical ? 1 : -1; const charSpacing = current.charSpacing; const wordSpacing = current.wordSpacing; const textHScale = current.textHScale * fontDirection; const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX; const glyphsLength = glyphs.length; const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE; let i, glyph, width, spacingLength; if (isTextInvisible || fontSize === 0) { return; } this._cachedScaleForStroking = null; this._cachedGetSinglePixelWidth = null; ctx.save(); ctx.transform.apply(ctx, current.textMatrix); ctx.translate(current.x, current.y); ctx.scale(textHScale, fontDirection); for (i = 0; i < glyphsLength; ++i) { glyph = glyphs[i]; if (typeof glyph === \"number\") { spacingLength = spacingDir * glyph * fontSize / 1000; this.ctx.translate(spacingLength, 0); current.x += spacingLength * textHScale; continue; } const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing; const operatorList = font.charProcOperatorList[glyph.operatorListId]; if (!operatorList) { (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`); continue; } if (this.contentVisible) { this.processingType3 = glyph; this.save(); ctx.scale(fontSize, fontSize); ctx.transform.apply(ctx, fontMatrix); this.executeOperatorList(operatorList); this.restore(); } const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix); width = transformed[0] * fontSize + spacing; ctx.translate(width, 0); current.x += width * textHScale; } ctx.restore(); this.processingType3 = null; } setCharWidth(xWidth, yWidth) {} setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) { this.ctx.rect(llx, lly, urx - llx, ury - lly); this.ctx.clip(); this.endPath(); } getColorN_Pattern(IR) { let pattern; if (IR[0] === \"TilingPattern\") { const color = IR[1]; const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice(); const canvasGraphicsFactory = { createCanvasGraphics: ctx => { return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory); } }; pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform); } else { pattern = this._getPattern(IR[1], IR[2]); } return pattern; } setStrokeColorN() { this.current.strokeColor = this.getColorN_Pattern(arguments); } setFillColorN() { this.current.fillColor = this.getColorN_Pattern(arguments); this.current.patternFill = true; } setStrokeRGBColor(r, g, b) { const color = _util.Util.makeHexColor(r, g, b); this.ctx.strokeStyle = color; this.current.strokeColor = color; } setFillRGBColor(r, g, b) { const color = _util.Util.makeHexColor(r, g, b); this.ctx.fillStyle = color; this.current.fillColor = color; this.current.patternFill = false; } _getPattern(objId, matrix = null) { let pattern; if (this.cachedPatterns.has(objId)) { pattern = this.cachedPatterns.get(objId); } else { pattern = (0, _pattern_helper.getShadingPattern)(this.objs.get(objId)); this.cachedPatterns.set(objId, pattern); } if (matrix) { pattern.matrix = matrix; } return pattern; } shadingFill(objId) { if (!this.contentVisible) { return; } const ctx = this.ctx; this.save(); const pattern = this._getPattern(objId); ctx.fillStyle = pattern.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.SHADING); const inv = ctx.mozCurrentTransformInverse; if (inv) { const canvas = ctx.canvas; const width = canvas.width; const height = canvas.height; const bl = _util.Util.applyTransform([0, 0], inv); const br = _util.Util.applyTransform([0, height], inv); const ul = _util.Util.applyTransform([width, 0], inv); const ur = _util.Util.applyTransform([width, height], inv); const x0 = Math.min(bl[0], br[0], ul[0], ur[0]); const y0 = Math.min(bl[1], br[1], ul[1], ur[1]); const x1 = Math.max(bl[0], br[0], ul[0], ur[0]); const y1 = Math.max(bl[1], br[1], ul[1], ur[1]); this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0); } else { this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10); } this.compose(this.current.getClippedPathBoundingBox()); this.restore(); } beginInlineImage() { (0, _util.unreachable)(\"Should not call beginInlineImage\"); } beginImageData() { (0, _util.unreachable)(\"Should not call beginImageData\"); } paintFormXObjectBegin(matrix, bbox) { if (!this.contentVisible) { return; } this.save(); this.baseTransformStack.push(this.baseTransform); if (Array.isArray(matrix) && matrix.length === 6) { this.transform.apply(this, matrix); } this.baseTransform = this.ctx.mozCurrentTransform; if (bbox) { const width = bbox[2] - bbox[0]; const height = bbox[3] - bbox[1]; this.ctx.rect(bbox[0], bbox[1], width, height); this.current.updateRectMinMax(this.ctx.mozCurrentTransform, bbox); this.clip(); this.endPath(); } } paintFormXObjectEnd() { if (!this.contentVisible) { return; } this.restore(); this.baseTransform = this.baseTransformStack.pop(); } beginGroup(group) { if (!this.contentVisible) { return; } this.save(); if (this.inSMaskMode) { this.endSMaskMode(); this.current.activeSMask = null; } const currentCtx = this.ctx; if (!group.isolated) { (0, _util.info)(\"TODO: Support non-isolated groups.\"); } if (group.knockout) { (0, _util.warn)(\"Knockout groups not supported.\"); } const currentTransform = currentCtx.mozCurrentTransform; if (group.matrix) { currentCtx.transform.apply(currentCtx, group.matrix); } if (!group.bbox) { throw new Error(\"Bounding box is required.\"); } let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform); const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height]; bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0]; const offsetX = Math.floor(bounds[0]); const offsetY = Math.floor(bounds[1]); let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1); let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1); let scaleX = 1, scaleY = 1; if (drawnWidth > MAX_GROUP_SIZE) { scaleX = drawnWidth / MAX_GROUP_SIZE; drawnWidth = MAX_GROUP_SIZE; } if (drawnHeight > MAX_GROUP_SIZE) { scaleY = drawnHeight / MAX_GROUP_SIZE; drawnHeight = MAX_GROUP_SIZE; } this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]); let cacheId = \"groupAt\" + this.groupLevel; if (group.smask) { cacheId += \"_smask_\" + this.smaskCounter++ % 2; } const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true); const groupCtx = scratchCanvas.context; groupCtx.scale(1 / scaleX, 1 / scaleY); groupCtx.translate(-offsetX, -offsetY); groupCtx.transform.apply(groupCtx, currentTransform); if (group.smask) { this.smaskStack.push({ canvas: scratchCanvas.canvas, context: groupCtx, offsetX, offsetY, scaleX, scaleY, subtype: group.smask.subtype, backdrop: group.smask.backdrop, transferMap: group.smask.transferMap || null, startTransformInverse: null }); } else { currentCtx.setTransform(1, 0, 0, 1, 0, 0); currentCtx.translate(offsetX, offsetY); currentCtx.scale(scaleX, scaleY); currentCtx.save(); } copyCtxState(currentCtx, groupCtx); this.ctx = groupCtx; this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]); this.groupStack.push(currentCtx); this.groupLevel++; } endGroup(group) { if (!this.contentVisible) { return; } this.groupLevel--; const groupCtx = this.ctx; const ctx = this.groupStack.pop(); this.ctx = ctx; this.ctx.imageSmoothingEnabled = false; if (group.smask) { this.tempSMask = this.smaskStack.pop(); this.restore(); } else { this.ctx.restore(); const currentMtx = this.ctx.mozCurrentTransform; this.restore(); this.ctx.save(); this.ctx.setTransform.apply(this.ctx, currentMtx); const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx); this.ctx.drawImage(groupCtx.canvas, 0, 0); this.ctx.restore(); this.compose(dirtyBox); } } beginAnnotations() { this.save(); if (this.baseTransform) { this.ctx.setTransform.apply(this.ctx, this.baseTransform); } } endAnnotations() { this.restore(); } beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) { this.save(); if (Array.isArray(rect) && rect.length === 4) { const width = rect[2] - rect[0]; const height = rect[3] - rect[1]; if (hasOwnCanvas && this.annotationCanvasMap) { transform = transform.slice(); transform[4] -= rect[0]; transform[5] -= rect[1]; rect = rect.slice(); rect[0] = rect[1] = 0; rect[2] = width; rect[3] = height; const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(this.ctx.mozCurrentTransform); const { viewportScale } = this; const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale); const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale); this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight); const { canvas, context } = this.annotationCanvas; const viewportScaleFactorStr = `var(--zoom-factor) * ${_display_utils.PixelsPerInch.PDF_TO_CSS_UNITS}`; canvas.style.width = `calc(${width}px * ${viewportScaleFactorStr})`; canvas.style.height = `calc(${height}px * ${viewportScaleFactorStr})`; this.annotationCanvasMap.set(id, canvas); this.annotationCanvas.savedCtx = this.ctx; this.ctx = context; this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY); addContextCurrentTransform(this.ctx); resetCtxToDefault(this.ctx); } else { resetCtxToDefault(this.ctx); this.ctx.rect(rect[0], rect[1], width, height); this.ctx.clip(); this.endPath(); } } this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height); this.transform.apply(this, transform); this.transform.apply(this, matrix); } endAnnotation() { if (this.annotationCanvas) { this.ctx = this.annotationCanvas.savedCtx; delete this.annotationCanvas.savedCtx; delete this.annotationCanvas; } this.restore(); } paintImageMaskXObject(img) { if (!this.contentVisible) { return; } const count = img.count; img = this.getObject(img.data, img); img.count = count; const ctx = this.ctx; const width = img.width, height = img.height; const glyph = this.processingType3; if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) { if (width coords[p2 + 1]) { tmp = p1; p1 = p2; p2 = tmp; tmp = c1; c1 = c2; c2 = tmp; } const x1 = (coords[p1] + context.offsetX) * context.scaleX; const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY; const x2 = (coords[p2] + context.offsetX) * context.scaleX; const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY; const x3 = (coords[p3] + context.offsetX) * context.scaleX; const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY; if (y1 >= y3) { return; } const c1r = colors[c1], c1g = colors[c1 + 1], c1b = colors[c1 + 2]; const c2r = colors[c2], c2g = colors[c2 + 1], c2b = colors[c2 + 2]; const c3r = colors[c3], c3g = colors[c3 + 1], c3b = colors[c3 + 2]; const minY = Math.round(y1), maxY = Math.round(y3); let xa, car, cag, cab; let xb, cbr, cbg, cbb; for (let y = minY; y { this._onReceiveData({ chunk }); }); this._pdfDataRangeTransport.addProgressiveDoneListener(() => { this._onProgressiveDone(); }); this._pdfDataRangeTransport.transportReady(); } _onReceiveData(args) { const buffer = new Uint8Array(args.chunk).buffer; if (args.begin === undefined) { if (this._fullRequestReader) { this._fullRequestReader._enqueue(buffer); } else { this._queuedChunks.push(buffer); } } else { const found = this._rangeReaders.some(function (rangeReader) { if (rangeReader._begin !== args.begin) { return false; } rangeReader._enqueue(buffer); return true; }); (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"); } } get _progressiveDataLength() { return this._fullRequestReader?._loaded ?? 0; } _onProgress(evt) { if (evt.total === undefined) { const firstReader = this._rangeReaders[0]; if (firstReader?.onProgress) { firstReader.onProgress({ loaded: evt.loaded }); } } else { const fullReader = this._fullRequestReader; if (fullReader?.onProgress) { fullReader.onProgress({ loaded: evt.loaded, total: evt.total }); } } } _onProgressiveDone() { if (this._fullRequestReader) { this._fullRequestReader.progressiveDone(); } this._progressiveDone = true; } _removeRangeReader(reader) { const i = this._rangeReaders.indexOf(reader); if (i >= 0) { this._rangeReaders.splice(i, 1); } } getFullReader() { (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\"); const queuedChunks = this._queuedChunks; this._queuedChunks = null; return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename); } getRangeReader(begin, end) { if (end 0) { const requestCapability = this._requests.shift(); requestCapability.resolve({ value: chunk, done: false }); } else { this._queuedChunks.push(chunk); } this._loaded += chunk.byteLength; } get headersReady() { return this._headersReady; } get filename() { return this._filename; } get isRangeSupported() { return this._stream._isRangeSupported; } get isStreamingSupported() { return this._stream._isStreamingSupported; } get contentLength() { return this._stream._contentLength; } async read() { if (this._queuedChunks.length > 0) { const chunk = this._queuedChunks.shift(); return { value: chunk, done: false }; } if (this._done) { return { value: undefined, done: true }; } const requestCapability = (0, _util.createPromiseCapability)(); this._requests.push(requestCapability); return requestCapability.promise; } cancel(reason) { this._done = true; for (const requestCapability of this._requests) { requestCapability.resolve({ value: undefined, done: true }); } this._requests.length = 0; } progressiveDone() { if (this._done) { return; } this._done = true; } } class PDFDataTransportStreamRangeReader { constructor(stream, begin, end) { this._stream = stream; this._begin = begin; this._end = end; this._queuedChunk = null; this._requests = []; this._done = false; this.onProgress = null; } _enqueue(chunk) { if (this._done) { return; } if (this._requests.length === 0) { this._queuedChunk = chunk; } else { const requestsCapability = this._requests.shift(); requestsCapability.resolve({ value: chunk, done: false }); for (const requestCapability of this._requests) { requestCapability.resolve({ value: undefined, done: true }); } this._requests.length = 0; } this._done = true; this._stream._removeRangeReader(this); } get isStreamingSupported() { return false; } async read() { if (this._queuedChunk) { const chunk = this._queuedChunk; this._queuedChunk = null; return { value: chunk, done: false }; } if (this._done) { return { value: undefined, done: true }; } const requestCapability = (0, _util.createPromiseCapability)(); this._requests.push(requestCapability); return requestCapability.promise; } cancel(reason) { this._done = true; for (const requestCapability of this._requests) { requestCapability.resolve({ value: undefined, done: true }); } this._requests.length = 0; this._stream._removeRangeReader(this); } } /***/ }), /* 18 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.XfaText = void 0; class XfaText { static textContent(xfa) { const items = []; const output = { items, styles: Object.create(null) }; function walk(node) { if (!node) { return; } let str = null; const name = node.name; if (name === \"#text\") { str = node.value; } else if (!XfaText.shouldBuildText(name)) { return; } else if (node?.attributes?.textContent) { str = node.attributes.textContent; } else if (node.value) { str = node.value; } if (str !== null) { items.push({ str }); } if (!node.children) { return; } for (const child of node.children) { walk(child); } } walk(xfa); return output; } static shouldBuildText(name) { return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\"); } } exports.XfaText = XfaText; /***/ }), /* 19 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.AnnotationLayer = void 0; var _util = __w_pdfjs_require__(1); var _display_utils = __w_pdfjs_require__(5); var _annotation_storage = __w_pdfjs_require__(9); var _scripting_utils = __w_pdfjs_require__(20); var _xfa_layer = __w_pdfjs_require__(21); const DEFAULT_TAB_INDEX = 1000; const GetElementsByNameSet = new WeakSet(); function getRectDims(rect) { return { width: rect[2] - rect[0], height: rect[3] - rect[1] }; } class AnnotationElementFactory { static create(parameters) { const subtype = parameters.data.annotationType; switch (subtype) { case _util.AnnotationType.LINK: return new LinkAnnotationElement(parameters); case _util.AnnotationType.TEXT: return new TextAnnotationElement(parameters); case _util.AnnotationType.WIDGET: const fieldType = parameters.data.fieldType; switch (fieldType) { case \"Tx\": return new TextWidgetAnnotationElement(parameters); case \"Btn\": if (parameters.data.radioButton) { return new RadioButtonWidgetAnnotationElement(parameters); } else if (parameters.data.checkBox) { return new CheckboxWidgetAnnotationElement(parameters); } return new PushButtonWidgetAnnotationElement(parameters); case \"Ch\": return new ChoiceWidgetAnnotationElement(parameters); } return new WidgetAnnotationElement(parameters); case _util.AnnotationType.POPUP: return new PopupAnnotationElement(parameters); case _util.AnnotationType.FREETEXT: return new FreeTextAnnotationElement(parameters); case _util.AnnotationType.LINE: return new LineAnnotationElement(parameters); case _util.AnnotationType.SQUARE: return new SquareAnnotationElement(parameters); case _util.AnnotationType.CIRCLE: return new CircleAnnotationElement(parameters); case _util.AnnotationType.POLYLINE: return new PolylineAnnotationElement(parameters); case _util.AnnotationType.CARET: return new CaretAnnotationElement(parameters); case _util.AnnotationType.INK: return new InkAnnotationElement(parameters); case _util.AnnotationType.POLYGON: return new PolygonAnnotationElement(parameters); case _util.AnnotationType.HIGHLIGHT: return new HighlightAnnotationElement(parameters); case _util.AnnotationType.UNDERLINE: return new UnderlineAnnotationElement(parameters); case _util.AnnotationType.SQUIGGLY: return new SquigglyAnnotationElement(parameters); case _util.AnnotationType.STRIKEOUT: return new StrikeOutAnnotationElement(parameters); case _util.AnnotationType.STAMP: return new StampAnnotationElement(parameters); case _util.AnnotationType.FILEATTACHMENT: return new FileAttachmentAnnotationElement(parameters); default: return new AnnotationElement(parameters); } } } class AnnotationElement { constructor(parameters, { isRenderable = false, ignoreBorder = false, createQuadrilaterals = false } = {}) { this.isRenderable = isRenderable; this.data = parameters.data; this.layer = parameters.layer; this.page = parameters.page; this.viewport = parameters.viewport; this.linkService = parameters.linkService; this.downloadManager = parameters.downloadManager; this.imageResourcesPath = parameters.imageResourcesPath; this.renderForms = parameters.renderForms; this.svgFactory = parameters.svgFactory; this.annotationStorage = parameters.annotationStorage; this.enableScripting = parameters.enableScripting; this.hasJSActions = parameters.hasJSActions; this._fieldObjects = parameters.fieldObjects; this._mouseState = parameters.mouseState; if (isRenderable) { this.container = this._createContainer(ignoreBorder); } if (createQuadrilaterals) { this.quadrilaterals = this._createQuadrilaterals(ignoreBorder); } } _createContainer(ignoreBorder = false) { const data = this.data, page = this.page, viewport = this.viewport; const container = document.createElement(\"section\"); let { width, height } = getRectDims(data.rect); container.setAttribute(\"data-annotation-id\", data.id); const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]); if (data.hasOwnCanvas) { const transform = viewport.transform.slice(); const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(transform); width = Math.ceil(width * scaleX); height = Math.ceil(height * scaleY); rect[0] *= scaleX; rect[1] *= scaleY; for (let i = 0; i < 4; i++) { transform[i] = Math.sign(transform[i]); } container.style.transform = `matrix(${transform.join(\",\")})`; } else { container.style.transform = `matrix(${viewport.transform.join(\",\")})`; } container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`; if (!ignoreBorder && data.borderStyle.width > 0) { container.style.borderWidth = `${data.borderStyle.width}px`; if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) { width -= 2 * data.borderStyle.width; height -= 2 * data.borderStyle.width; } const horizontalRadius = data.borderStyle.horizontalCornerRadius; const verticalRadius = data.borderStyle.verticalCornerRadius; if (horizontalRadius > 0 || verticalRadius > 0) { const radius = `${horizontalRadius}px / ${verticalRadius}px`; container.style.borderRadius = radius; } switch (data.borderStyle.style) { case _util.AnnotationBorderStyleType.SOLID: container.style.borderStyle = \"solid\"; break; case _util.AnnotationBorderStyleType.DASHED: container.style.borderStyle = \"dashed\"; break; case _util.AnnotationBorderStyleType.BEVELED: (0, _util.warn)(\"Unimplemented border style: beveled\"); break; case _util.AnnotationBorderStyleType.INSET: (0, _util.warn)(\"Unimplemented border style: inset\"); break; case _util.AnnotationBorderStyleType.UNDERLINE: container.style.borderBottomStyle = \"solid\"; break; default: break; } const borderColor = data.borderColor || data.color || null; if (borderColor) { container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0); } else { container.style.borderWidth = 0; } } container.style.left = `${rect[0]}px`; container.style.top = `${rect[1]}px`; if (data.hasOwnCanvas) { container.style.width = container.style.height = \"auto\"; } else { container.style.width = `${width}px`; container.style.height = `${height}px`; } return container; } _createQuadrilaterals(ignoreBorder = false) { if (!this.data.quadPoints) { return null; } const quadrilaterals = []; const savedRect = this.data.rect; for (const quadPoint of this.data.quadPoints) { this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y]; quadrilaterals.push(this._createContainer(ignoreBorder)); } this.data.rect = savedRect; return quadrilaterals; } _createPopup(trigger, data) { let container = this.container; if (this.quadrilaterals) { trigger = trigger || this.quadrilaterals; container = this.quadrilaterals[0]; } if (!trigger) { trigger = document.createElement(\"div\"); trigger.style.height = container.style.height; trigger.style.width = container.style.width; container.appendChild(trigger); } const popupElement = new PopupElement({ container, trigger, color: data.color, titleObj: data.titleObj, modificationDate: data.modificationDate, contentsObj: data.contentsObj, richText: data.richText, hideWrapper: true }); const popup = popupElement.render(); popup.style.left = container.style.width; container.appendChild(popup); } _renderQuadrilaterals(className) { for (const quadrilateral of this.quadrilaterals) { quadrilateral.className = className; } return this.quadrilaterals; } render() { (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\"); } _getElementsByName(name, skipId = null) { const fields = []; if (this._fieldObjects) { const fieldObj = this._fieldObjects[name]; if (fieldObj) { for (const { page, id, exportValues } of fieldObj) { if (page === -1) { continue; } if (id === skipId) { continue; } const exportValue = typeof exportValues === \"string\" ? exportValues : null; const domElement = document.getElementById(id); if (domElement && !GetElementsByNameSet.has(domElement)) { (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`); continue; } fields.push({ id, exportValue, domElement }); } } return fields; } for (const domElement of document.getElementsByName(name)) { const { id, exportValue } = domElement; if (id === skipId) { continue; } if (!GetElementsByNameSet.has(domElement)) { continue; } fields.push({ id, exportValue, domElement }); } return fields; } static get platform() { const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\"; return (0, _util.shadow)(this, \"platform\", { isWin: platform.includes(\"Win\"), isMac: platform.includes(\"Mac\") }); } } class LinkAnnotationElement extends AnnotationElement { constructor(parameters, options = null) { const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.resetForm || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"])); super(parameters, { isRenderable, ignoreBorder: !!options?.ignoreBorder, createQuadrilaterals: true }); } render() { const { data, linkService } = this; const link = document.createElement(\"a\"); if (data.url) { linkService.addLinkAttributes(link, data.url, data.newWindow); } else if (data.action) { this._bindNamedAction(link, data.action); } else if (data.dest) { this._bindLink(link, data.dest); } else { let hasClickAction = false; if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) { hasClickAction = true; this._bindJSAction(link, data); } if (data.resetForm) { this._bindResetFormAction(link, data.resetForm); } else if (!hasClickAction) { this._bindLink(link, \"\"); } } if (this.quadrilaterals) { return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => { const linkElement = index === 0 ? link : link.cloneNode(); quadrilateral.appendChild(linkElement); return quadrilateral; }); } this.container.className = \"linkAnnotation\"; this.container.appendChild(link); return this.container; } _bindLink(link, destination) { link.href = this.linkService.getDestinationHash(destination); link.onclick = () => { if (destination) { this.linkService.goToDestination(destination); } return false; }; if (destination || destination === \"\") { link.className = \"internalLink\"; } } _bindNamedAction(link, action) { link.href = this.linkService.getAnchorUrl(\"\"); link.onclick = () => { this.linkService.executeNamedAction(action); return false; }; link.className = \"internalLink\"; } _bindJSAction(link, data) { link.href = this.linkService.getAnchorUrl(\"\"); const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]); for (const name of Object.keys(data.actions)) { const jsName = map.get(name); if (!jsName) { continue; } link[jsName] = () => { this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id: data.id, name } }); return false; }; } if (!link.onclick) { link.onclick = () => false; } link.className = \"internalLink\"; } _bindResetFormAction(link, resetForm) { const otherClickAction = link.onclick; if (!otherClickAction) { link.href = this.linkService.getAnchorUrl(\"\"); } link.className = \"internalLink\"; if (!this._fieldObjects) { (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\"); if (!otherClickAction) { link.onclick = () => false; } return; } link.onclick = () => { if (otherClickAction) { otherClickAction(); } const { fields: resetFormFields, refs: resetFormRefs, include } = resetForm; const allFields = []; if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) { const fieldIds = new Set(resetFormRefs); for (const fieldName of resetFormFields) { const fields = this._fieldObjects[fieldName] || []; for (const { id } of fields) { fieldIds.add(id); } } for (const fields of Object.values(this._fieldObjects)) { for (const field of fields) { if (fieldIds.has(field.id) === include) { allFields.push(field); } } } } else { for (const fields of Object.values(this._fieldObjects)) { allFields.push(...fields); } } const storage = this.annotationStorage; const allIds = []; for (const field of allFields) { const { id } = field; allIds.push(id); switch (field.type) { case \"text\": { const value = field.defaultValue || \"\"; storage.setValue(id, { value, valueAsString: value }); break; } case \"checkbox\": case \"radiobutton\": { const value = field.defaultValue === field.exportValues; storage.setValue(id, { value }); break; } case \"combobox\": case \"listbox\": { const value = field.defaultValue || \"\"; storage.setValue(id, { value }); break; } default: continue; } const domElement = document.getElementById(id); if (!domElement || !GetElementsByNameSet.has(domElement)) { continue; } domElement.dispatchEvent(new Event(\"resetform\")); } if (this.enableScripting) { this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id: \"app\", ids: allIds, name: \"ResetForm\" } }); } return false; }; } } class TextAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable }); } render() { this.container.className = \"textAnnotation\"; const image = document.createElement(\"img\"); image.style.height = this.container.style.height; image.style.width = this.container.style.width; image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\"; image.alt = \"[{{type}} Annotation]\"; image.dataset.l10nId = \"text_annotation_type\"; image.dataset.l10nArgs = JSON.stringify({ type: this.data.name }); if (!this.data.hasPopup) { this._createPopup(image, this.data); } this.container.appendChild(image); return this.container; } } class WidgetAnnotationElement extends AnnotationElement { render() { if (this.data.alternativeText) { this.container.title = this.data.alternativeText; } return this.container; } _getKeyModifier(event) { const { isWin, isMac } = AnnotationElement.platform; return isWin && event.ctrlKey || isMac && event.metaKey; } _setEventListener(element, baseName, eventName, valueGetter) { if (baseName.includes(\"mouse\")) { element.addEventListener(baseName, event => { this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id: this.data.id, name: eventName, value: valueGetter(event), shift: event.shiftKey, modifier: this._getKeyModifier(event) } }); }); } else { element.addEventListener(baseName, event => { this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id: this.data.id, name: eventName, value: valueGetter(event) } }); }); } } _setEventListeners(element, names, getter) { for (const [baseName, eventName] of names) { if (eventName === \"Action\" || this.data.actions?.[eventName]) { this._setEventListener(element, baseName, eventName, getter); } } } _setBackgroundColor(element) { const color = this.data.backgroundColor || null; element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]); } _dispatchEventFromSandbox(actions, jsEvent) { const setColor = (jsName, styleName, event) => { const color = event.detail[jsName]; event.target.style[styleName] = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1)); }; const commonActions = { display: event => { const hidden = event.detail.display % 2 === 1; event.target.style.visibility = hidden ? \"hidden\" : \"visible\"; this.annotationStorage.setValue(this.data.id, { hidden, print: event.detail.display === 0 || event.detail.display === 3 }); }, print: event => { this.annotationStorage.setValue(this.data.id, { print: event.detail.print }); }, hidden: event => { event.target.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\"; this.annotationStorage.setValue(this.data.id, { hidden: event.detail.hidden }); }, focus: event => { setTimeout(() => event.target.focus({ preventScroll: false }), 0); }, userName: event => { event.target.title = event.detail.userName; }, readonly: event => { if (event.detail.readonly) { event.target.setAttribute(\"readonly\", \"\"); } else { event.target.removeAttribute(\"readonly\"); } }, required: event => { if (event.detail.required) { event.target.setAttribute(\"required\", \"\"); } else { event.target.removeAttribute(\"required\"); } }, bgColor: event => { setColor(\"bgColor\", \"backgroundColor\", event); }, fillColor: event => { setColor(\"fillColor\", \"backgroundColor\", event); }, fgColor: event => { setColor(\"fgColor\", \"color\", event); }, textColor: event => { setColor(\"textColor\", \"color\", event); }, borderColor: event => { setColor(\"borderColor\", \"borderColor\", event); }, strokeColor: event => { setColor(\"strokeColor\", \"borderColor\", event); } }; for (const name of Object.keys(jsEvent.detail)) { const action = actions[name] || commonActions[name]; if (action) { action(jsEvent); } } } } class TextWidgetAnnotationElement extends WidgetAnnotationElement { constructor(parameters) { const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue; super(parameters, { isRenderable }); } setPropertyOnSiblings(base, key, value, keyInStorage) { const storage = this.annotationStorage; for (const element of this._getElementsByName(base.name, base.id)) { if (element.domElement) { element.domElement[key] = value; } storage.setValue(element.id, { [keyInStorage]: value }); } } render() { const storage = this.annotationStorage; const id = this.data.id; this.container.className = \"textWidgetAnnotation\"; let element = null; if (this.renderForms) { const storedData = storage.getValue(id, { value: this.data.fieldValue, valueAsString: this.data.fieldValue }); const textContent = storedData.valueAsString || storedData.value || \"\"; const elementData = { userValue: null, formattedValue: null }; if (this.data.multiLine) { element = document.createElement(\"textarea\"); element.textContent = textContent; } else { element = document.createElement(\"input\"); element.type = \"text\"; element.setAttribute(\"value\", textContent); } GetElementsByNameSet.add(element); element.disabled = this.data.readOnly; element.name = this.data.fieldName; element.tabIndex = DEFAULT_TAB_INDEX; elementData.userValue = textContent; element.setAttribute(\"id\", id); element.addEventListener(\"input\", event => { storage.setValue(id, { value: event.target.value }); this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\"); }); element.addEventListener(\"resetform\", event => { const defaultValue = this.data.defaultFieldValue || \"\"; element.value = elementData.userValue = defaultValue; delete elementData.formattedValue; }); let blurListener = event => { if (elementData.formattedValue) { event.target.value = elementData.formattedValue; } event.target.scrollLeft = 0; }; if (this.enableScripting && this.hasJSActions) { element.addEventListener(\"focus\", event => { if (elementData.userValue) { event.target.value = elementData.userValue; } }); element.addEventListener(\"updatefromsandbox\", jsEvent => { const actions = { value(event) { elementData.userValue = event.detail.value || \"\"; storage.setValue(id, { value: elementData.userValue.toString() }); if (!elementData.formattedValue) { event.target.value = elementData.userValue; } }, valueAsString(event) { elementData.formattedValue = event.detail.valueAsString || \"\"; if (event.target !== document.activeElement) { event.target.value = elementData.formattedValue; } storage.setValue(id, { formattedValue: elementData.formattedValue }); }, selRange(event) { const [selStart, selEnd] = event.detail.selRange; if (selStart >= 0 && selEnd < event.target.value.length) { event.target.setSelectionRange(selStart, selEnd); } } }; this._dispatchEventFromSandbox(actions, jsEvent); }); element.addEventListener(\"keydown\", event => { let commitKey = -1; if (event.key === \"Escape\") { commitKey = 0; } else if (event.key === \"Enter\") { commitKey = 2; } else if (event.key === \"Tab\") { commitKey = 3; } if (commitKey === -1) { return; } elementData.userValue = event.target.value; this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id, name: \"Keystroke\", value: event.target.value, willCommit: true, commitKey, selStart: event.target.selectionStart, selEnd: event.target.selectionEnd } }); }); const _blurListener = blurListener; blurListener = null; element.addEventListener(\"blur\", event => { elementData.userValue = event.target.value; if (this._mouseState.isDown) { this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id, name: \"Keystroke\", value: event.target.value, willCommit: true, commitKey: 1, selStart: event.target.selectionStart, selEnd: event.target.selectionEnd } }); } _blurListener(event); }); if (this.data.actions?.Keystroke) { element.addEventListener(\"beforeinput\", event => { elementData.formattedValue = \"\"; const { data, target } = event; const { value, selectionStart, selectionEnd } = target; this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id, name: \"Keystroke\", value, change: data, willCommit: false, selStart: selectionStart, selEnd: selectionEnd } }); }); } this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value); } if (blurListener) { element.addEventListener(\"blur\", blurListener); } if (this.data.maxLen !== null) { element.maxLength = this.data.maxLen; } if (this.data.comb) { const fieldWidth = this.data.rect[2] - this.data.rect[0]; const combWidth = fieldWidth / this.data.maxLen; element.classList.add(\"comb\"); element.style.letterSpacing = `calc(${combWidth}px - 1ch)`; } } else { element = document.createElement(\"div\"); element.textContent = this.data.fieldValue; element.style.verticalAlign = \"middle\"; element.style.display = \"table-cell\"; } this._setTextStyle(element); this._setBackgroundColor(element); this.container.appendChild(element); return this.container; } _setTextStyle(element) { const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"]; const { fontSize, fontColor } = this.data.defaultAppearanceData; const style = element.style; if (fontSize) { style.fontSize = `${fontSize}px`; } style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]); if (this.data.textAlignment !== null) { style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment]; } } } class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement { constructor(parameters) { super(parameters, { isRenderable: parameters.renderForms }); } render() { const storage = this.annotationStorage; const data = this.data; const id = data.id; let value = storage.getValue(id, { value: data.exportValue === data.fieldValue }).value; if (typeof value === \"string\") { value = value !== \"Off\"; storage.setValue(id, { value }); } this.container.className = \"buttonWidgetAnnotation checkBox\"; const element = document.createElement(\"input\"); GetElementsByNameSet.add(element); element.disabled = data.readOnly; element.type = \"checkbox\"; element.name = data.fieldName; if (value) { element.setAttribute(\"checked\", true); } element.setAttribute(\"id\", id); element.setAttribute(\"exportValue\", data.exportValue); element.tabIndex = DEFAULT_TAB_INDEX; element.addEventListener(\"change\", event => { const { name, checked } = event.target; for (const checkbox of this._getElementsByName(name, id)) { const curChecked = checked && checkbox.exportValue === data.exportValue; if (checkbox.domElement) { checkbox.domElement.checked = curChecked; } storage.setValue(checkbox.id, { value: curChecked }); } storage.setValue(id, { value: checked }); }); element.addEventListener(\"resetform\", event => { const defaultValue = data.defaultFieldValue || \"Off\"; event.target.checked = defaultValue === data.exportValue; }); if (this.enableScripting && this.hasJSActions) { element.addEventListener(\"updatefromsandbox\", jsEvent => { const actions = { value(event) { event.target.checked = event.detail.value !== \"Off\"; storage.setValue(id, { value: event.target.checked }); } }; this._dispatchEventFromSandbox(actions, jsEvent); }); this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked); } this._setBackgroundColor(element); this.container.appendChild(element); return this.container; } } class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement { constructor(parameters) { super(parameters, { isRenderable: parameters.renderForms }); } render() { this.container.className = \"buttonWidgetAnnotation radioButton\"; const storage = this.annotationStorage; const data = this.data; const id = data.id; let value = storage.getValue(id, { value: data.fieldValue === data.buttonValue }).value; if (typeof value === \"string\") { value = value !== data.buttonValue; storage.setValue(id, { value }); } const element = document.createElement(\"input\"); GetElementsByNameSet.add(element); element.disabled = data.readOnly; element.type = \"radio\"; element.name = data.fieldName; if (value) { element.setAttribute(\"checked\", true); } element.setAttribute(\"id\", id); element.tabIndex = DEFAULT_TAB_INDEX; element.addEventListener(\"change\", event => { const { name, checked } = event.target; for (const radio of this._getElementsByName(name, id)) { storage.setValue(radio.id, { value: false }); } storage.setValue(id, { value: checked }); }); element.addEventListener(\"resetform\", event => { const defaultValue = data.defaultFieldValue; event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue; }); if (this.enableScripting && this.hasJSActions) { const pdfButtonValue = data.buttonValue; element.addEventListener(\"updatefromsandbox\", jsEvent => { const actions = { value: event => { const checked = pdfButtonValue === event.detail.value; for (const radio of this._getElementsByName(event.target.name)) { const curChecked = checked && radio.id === id; if (radio.domElement) { radio.domElement.checked = curChecked; } storage.setValue(radio.id, { value: curChecked }); } } }; this._dispatchEventFromSandbox(actions, jsEvent); }); this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked); } this._setBackgroundColor(element); this.container.appendChild(element); return this.container; } } class PushButtonWidgetAnnotationElement extends LinkAnnotationElement { constructor(parameters) { super(parameters, { ignoreBorder: parameters.data.hasAppearance }); } render() { const container = super.render(); container.className = \"buttonWidgetAnnotation pushButton\"; if (this.data.alternativeText) { container.title = this.data.alternativeText; } return container; } } class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement { constructor(parameters) { super(parameters, { isRenderable: parameters.renderForms }); } render() { this.container.className = \"choiceWidgetAnnotation\"; const storage = this.annotationStorage; const id = this.data.id; const storedData = storage.getValue(id, { value: this.data.fieldValue }); let { fontSize } = this.data.defaultAppearanceData; if (!fontSize) { fontSize = 9; } const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`; const selectElement = document.createElement(\"select\"); GetElementsByNameSet.add(selectElement); selectElement.disabled = this.data.readOnly; selectElement.name = this.data.fieldName; selectElement.setAttribute(\"id\", id); selectElement.tabIndex = DEFAULT_TAB_INDEX; selectElement.style.fontSize = `${fontSize}px`; if (!this.data.combo) { selectElement.size = this.data.options.length; if (this.data.multiSelect) { selectElement.multiple = true; } } selectElement.addEventListener(\"resetform\", event => { const defaultValue = this.data.defaultFieldValue; for (const option of selectElement.options) { option.selected = option.value === defaultValue; } }); for (const option of this.data.options) { const optionElement = document.createElement(\"option\"); optionElement.textContent = option.displayValue; optionElement.value = option.exportValue; if (this.data.combo) { optionElement.style.fontSize = fontSizeStyle; } if (storedData.value.includes(option.exportValue)) { optionElement.setAttribute(\"selected\", true); } selectElement.appendChild(optionElement); } const getValue = (event, isExport) => { const name = isExport ? \"value\" : \"textContent\"; const options = event.target.options; if (!event.target.multiple) { return options.selectedIndex === -1 ? null : options[options.selectedIndex][name]; } return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]); }; const getItems = event => { const options = event.target.options; return Array.prototype.map.call(options, option => { return { displayValue: option.textContent, exportValue: option.value }; }); }; if (this.enableScripting && this.hasJSActions) { selectElement.addEventListener(\"updatefromsandbox\", jsEvent => { const actions = { value(event) { const value = event.detail.value; const values = new Set(Array.isArray(value) ? value : [value]); for (const option of selectElement.options) { option.selected = values.has(option.value); } storage.setValue(id, { value: getValue(event, true) }); }, multipleSelection(event) { selectElement.multiple = true; }, remove(event) { const options = selectElement.options; const index = event.detail.remove; options[index].selected = false; selectElement.remove(index); if (options.length > 0) { const i = Array.prototype.findIndex.call(options, option => option.selected); if (i === -1) { options[0].selected = true; } } storage.setValue(id, { value: getValue(event, true), items: getItems(event) }); }, clear(event) { while (selectElement.length !== 0) { selectElement.remove(0); } storage.setValue(id, { value: null, items: [] }); }, insert(event) { const { index, displayValue, exportValue } = event.detail.insert; const optionElement = document.createElement(\"option\"); optionElement.textContent = displayValue; optionElement.value = exportValue; selectElement.insertBefore(optionElement, selectElement.children[index]); storage.setValue(id, { value: getValue(event, true), items: getItems(event) }); }, items(event) { const { items } = event.detail; while (selectElement.length !== 0) { selectElement.remove(0); } for (const item of items) { const { displayValue, exportValue } = item; const optionElement = document.createElement(\"option\"); optionElement.textContent = displayValue; optionElement.value = exportValue; selectElement.appendChild(optionElement); } if (selectElement.options.length > 0) { selectElement.options[0].selected = true; } storage.setValue(id, { value: getValue(event, true), items: getItems(event) }); }, indices(event) { const indices = new Set(event.detail.indices); for (const option of event.target.options) { option.selected = indices.has(option.index); } storage.setValue(id, { value: getValue(event, true) }); }, editable(event) { event.target.disabled = !event.detail.editable; } }; this._dispatchEventFromSandbox(actions, jsEvent); }); selectElement.addEventListener(\"input\", event => { const exportValue = getValue(event, true); const value = getValue(event, false); storage.setValue(id, { value: exportValue }); this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", { source: this, detail: { id, name: \"Keystroke\", value, changeEx: exportValue, willCommit: true, commitKey: 1, keyDown: false } }); }); this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], event => event.target.checked); } else { selectElement.addEventListener(\"input\", function (event) { storage.setValue(id, { value: getValue(event, true) }); }); } this._setBackgroundColor(selectElement); this.container.appendChild(selectElement); return this.container; } } class PopupAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable }); } render() { const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"]; this.container.className = \"popupAnnotation\"; if (IGNORE_TYPES.includes(this.data.parentType)) { return this.container; } const selector = `[data-annotation-id=\"${this.data.parentId}\"]`; const parentElements = this.layer.querySelectorAll(selector); if (parentElements.length === 0) { return this.container; } const popup = new PopupElement({ container: this.container, trigger: Array.from(parentElements), color: this.data.color, titleObj: this.data.titleObj, modificationDate: this.data.modificationDate, contentsObj: this.data.contentsObj, richText: this.data.richText }); const page = this.page; const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]); const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0]; const popupTop = rect[1]; this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`; this.container.style.left = `${popupLeft}px`; this.container.style.top = `${popupTop}px`; this.container.appendChild(popup.render()); return this.container; } } class PopupElement { constructor(parameters) { this.container = parameters.container; this.trigger = parameters.trigger; this.color = parameters.color; this.titleObj = parameters.titleObj; this.modificationDate = parameters.modificationDate; this.contentsObj = parameters.contentsObj; this.richText = parameters.richText; this.hideWrapper = parameters.hideWrapper || false; this.pinned = false; } render() { const BACKGROUND_ENLIGHT = 0.7; const wrapper = document.createElement(\"div\"); wrapper.className = \"popupWrapper\"; this.hideElement = this.hideWrapper ? wrapper : this.container; this.hideElement.hidden = true; const popup = document.createElement(\"div\"); popup.className = \"popup\"; const color = this.color; if (color) { const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0]; const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1]; const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2]; popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0); } const title = document.createElement(\"h1\"); title.dir = this.titleObj.dir; title.textContent = this.titleObj.str; popup.appendChild(title); const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate); if (dateObject) { const modificationDate = document.createElement(\"span\"); modificationDate.className = \"popupDate\"; modificationDate.textContent = \"{{date}}, {{time}}\"; modificationDate.dataset.l10nId = \"annotation_date_string\"; modificationDate.dataset.l10nArgs = JSON.stringify({ date: dateObject.toLocaleDateString(), time: dateObject.toLocaleTimeString() }); popup.appendChild(modificationDate); } if (this.richText?.str && (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)) { _xfa_layer.XfaLayer.render({ xfaHtml: this.richText.html, intent: \"richText\", div: popup }); popup.lastChild.className = \"richText popupContent\"; } else { const contents = this._formatContents(this.contentsObj); popup.appendChild(contents); } if (!Array.isArray(this.trigger)) { this.trigger = [this.trigger]; } for (const element of this.trigger) { element.addEventListener(\"click\", this._toggle.bind(this)); element.addEventListener(\"mouseover\", this._show.bind(this, false)); element.addEventListener(\"mouseout\", this._hide.bind(this, false)); } popup.addEventListener(\"click\", this._hide.bind(this, true)); wrapper.appendChild(popup); return wrapper; } _formatContents({ str, dir }) { const p = document.createElement(\"p\"); p.className = \"popupContent\"; p.dir = dir; const lines = str.split(/(?:\\r ?| )/); for (let i = 0, ii = lines.length; i < ii; ++i) { const line = lines[i]; p.appendChild(document.createTextNode(line)); if (i < ii - 1) { p.appendChild(document.createElement(\"br\")); } } return p; } _toggle() { if (this.pinned) { this._hide(true); } else { this._show(true); } } _show(pin = false) { if (pin) { this.pinned = true; } if (this.hideElement.hidden) { this.hideElement.hidden = false; this.container.style.zIndex += 1; } } _hide(unpin = true) { if (unpin) { this.pinned = false; } if (!this.hideElement.hidden && !this.pinned) { this.hideElement.hidden = true; this.container.style.zIndex -= 1; } } } class FreeTextAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); } render() { this.container.className = \"freeTextAnnotation\"; if (!this.data.hasPopup) { this._createPopup(null, this.data); } return this.container; } } class LineAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); } render() { this.container.className = \"lineAnnotation\"; const data = this.data; const { width, height } = getRectDims(data.rect); const svg = this.svgFactory.create(width, height); const line = this.svgFactory.createElement(\"svg:line\"); line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]); line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]); line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]); line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]); line.setAttribute(\"stroke-width\", data.borderStyle.width || 1); line.setAttribute(\"stroke\", \"transparent\"); line.setAttribute(\"fill\", \"transparent\"); svg.appendChild(line); this.container.append(svg); this._createPopup(line, data); return this.container; } } class SquareAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); } render() { this.container.className = \"squareAnnotation\"; const data = this.data; const { width, height } = getRectDims(data.rect); const svg = this.svgFactory.create(width, height); const borderWidth = data.borderStyle.width; const square = this.svgFactory.createElement(\"svg:rect\"); square.setAttribute(\"x\", borderWidth / 2); square.setAttribute(\"y\", borderWidth / 2); square.setAttribute(\"width\", width - borderWidth); square.setAttribute(\"height\", height - borderWidth); square.setAttribute(\"stroke-width\", borderWidth || 1); square.setAttribute(\"stroke\", \"transparent\"); square.setAttribute(\"fill\", \"transparent\"); svg.appendChild(square); this.container.append(svg); this._createPopup(square, data); return this.container; } } class CircleAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); } render() { this.container.className = \"circleAnnotation\"; const data = this.data; const { width, height } = getRectDims(data.rect); const svg = this.svgFactory.create(width, height); const borderWidth = data.borderStyle.width; const circle = this.svgFactory.createElement(\"svg:ellipse\"); circle.setAttribute(\"cx\", width / 2); circle.setAttribute(\"cy\", height / 2); circle.setAttribute(\"rx\", width / 2 - borderWidth / 2); circle.setAttribute(\"ry\", height / 2 - borderWidth / 2); circle.setAttribute(\"stroke-width\", borderWidth || 1); circle.setAttribute(\"stroke\", \"transparent\"); circle.setAttribute(\"fill\", \"transparent\"); svg.appendChild(circle); this.container.append(svg); this._createPopup(circle, data); return this.container; } } class PolylineAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); this.containerClassName = \"polylineAnnotation\"; this.svgElementName = \"svg:polyline\"; } render() { this.container.className = this.containerClassName; const data = this.data; const { width, height } = getRectDims(data.rect); const svg = this.svgFactory.create(width, height); let points = []; for (const coordinate of data.vertices) { const x = coordinate.x - data.rect[0]; const y = data.rect[3] - coordinate.y; points.push(x + \",\" + y); } points = points.join(\" \"); const polyline = this.svgFactory.createElement(this.svgElementName); polyline.setAttribute(\"points\", points); polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1); polyline.setAttribute(\"stroke\", \"transparent\"); polyline.setAttribute(\"fill\", \"transparent\"); svg.appendChild(polyline); this.container.append(svg); this._createPopup(polyline, data); return this.container; } } class PolygonAnnotationElement extends PolylineAnnotationElement { constructor(parameters) { super(parameters); this.containerClassName = \"polygonAnnotation\"; this.svgElementName = \"svg:polygon\"; } } class CaretAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); } render() { this.container.className = \"caretAnnotation\"; if (!this.data.hasPopup) { this._createPopup(null, this.data); } return this.container; } } class InkAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); this.containerClassName = \"inkAnnotation\"; this.svgElementName = \"svg:polyline\"; } render() { this.container.className = this.containerClassName; const data = this.data; const { width, height } = getRectDims(data.rect); const svg = this.svgFactory.create(width, height); for (const inkList of data.inkLists) { let points = []; for (const coordinate of inkList) { const x = coordinate.x - data.rect[0]; const y = data.rect[3] - coordinate.y; points.push(`${x},${y}`); } points = points.join(\" \"); const polyline = this.svgFactory.createElement(this.svgElementName); polyline.setAttribute(\"points\", points); polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1); polyline.setAttribute(\"stroke\", \"transparent\"); polyline.setAttribute(\"fill\", \"transparent\"); this._createPopup(polyline, data); svg.appendChild(polyline); } this.container.append(svg); return this.container; } } class HighlightAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true, createQuadrilaterals: true }); } render() { if (!this.data.hasPopup) { this._createPopup(null, this.data); } if (this.quadrilaterals) { return this._renderQuadrilaterals(\"highlightAnnotation\"); } this.container.className = \"highlightAnnotation\"; return this.container; } } class UnderlineAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true, createQuadrilaterals: true }); } render() { if (!this.data.hasPopup) { this._createPopup(null, this.data); } if (this.quadrilaterals) { return this._renderQuadrilaterals(\"underlineAnnotation\"); } this.container.className = \"underlineAnnotation\"; return this.container; } } class SquigglyAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true, createQuadrilaterals: true }); } render() { if (!this.data.hasPopup) { this._createPopup(null, this.data); } if (this.quadrilaterals) { return this._renderQuadrilaterals(\"squigglyAnnotation\"); } this.container.className = \"squigglyAnnotation\"; return this.container; } } class StrikeOutAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true, createQuadrilaterals: true }); } render() { if (!this.data.hasPopup) { this._createPopup(null, this.data); } if (this.quadrilaterals) { return this._renderQuadrilaterals(\"strikeoutAnnotation\"); } this.container.className = \"strikeoutAnnotation\"; return this.container; } } class StampAnnotationElement extends AnnotationElement { constructor(parameters) { const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str); super(parameters, { isRenderable, ignoreBorder: true }); } render() { this.container.className = \"stampAnnotation\"; if (!this.data.hasPopup) { this._createPopup(null, this.data); } return this.container; } } class FileAttachmentAnnotationElement extends AnnotationElement { constructor(parameters) { super(parameters, { isRenderable: true }); const { filename, content } = this.data.file; this.filename = (0, _display_utils.getFilenameFromUrl)(filename); this.content = content; this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", { source: this, id: (0, _util.stringToPDFString)(filename), filename, content }); } render() { this.container.className = \"fileAttachmentAnnotation\"; const trigger = document.createElement(\"div\"); trigger.style.height = this.container.style.height; trigger.style.width = this.container.style.width; trigger.addEventListener(\"dblclick\", this._download.bind(this)); if (!this.data.hasPopup && (this.data.titleObj?.str || this.data.contentsObj?.str || this.data.richText)) { this._createPopup(trigger, this.data); } this.container.appendChild(trigger); return this.container; } _download() { this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename); } } class AnnotationLayer { static render(parameters) { const sortedAnnotations = [], popupAnnotations = []; for (const data of parameters.annotations) { if (!data) { continue; } const { width, height } = getRectDims(data.rect); if (width { storage.setValue(id, { value: event.target.value }); }); break; case \"input\": if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") { if (storedData.value === element.attributes.xfaOn) { html.setAttribute(\"checked\", true); } else if (storedData.value === element.attributes.xfaOff) { html.removeAttribute(\"checked\"); } if (intent === \"print\") { break; } html.addEventListener(\"change\", event => { storage.setValue(id, { value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\") }); }); } else { if (storedData.value !== null) { html.setAttribute(\"value\", storedData.value); } if (intent === \"print\") { break; } html.addEventListener(\"input\", event => { storage.setValue(id, { value: event.target.value }); }); } break; case \"select\": if (storedData.value !== null) { for (const option of element.children) { if (option.attributes.value === storedData.value) { option.attributes.selected = true; } } } html.addEventListener(\"input\", event => { const options = event.target.options; const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value; storage.setValue(id, { value }); }); break; } } static setAttributes({ html, element, storage = null, intent, linkService }) { const { attributes } = element; const isHTMLAnchorElement = html instanceof HTMLAnchorElement; if (attributes.type === \"radio\") { attributes.name = `${attributes.name}-${intent}`; } for (const [key, value] of Object.entries(attributes)) { if (value === null || value === undefined || key === \"dataId\") { continue; } if (key !== \"style\") { if (key === \"textContent\") { html.textContent = value; } else if (key === \"class\") { if (value.length) { html.setAttribute(key, value.join(\" \")); } } else { if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) { continue; } html.setAttribute(key, value); } } else { Object.assign(html.style, value); } } if (isHTMLAnchorElement) { linkService.addLinkAttributes(html, attributes.href, attributes.newWindow); } if (storage && attributes.dataId) { this.setupStorage(html, attributes.dataId, element, storage); } } static render(parameters) { const storage = parameters.annotationStorage; const linkService = parameters.linkService; const root = parameters.xfaHtml; const intent = parameters.intent || \"display\"; const rootHtml = document.createElement(root.name); if (root.attributes) { this.setAttributes({ html: rootHtml, element: root, intent, linkService }); } const stack = [[root, -1, rootHtml]]; const rootDiv = parameters.div; rootDiv.appendChild(rootHtml); if (parameters.viewport) { const transform = `matrix(${parameters.viewport.transform.join(\",\")})`; rootDiv.style.transform = transform; } if (intent !== \"richText\") { rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\"); } const textDivs = []; while (stack.length > 0) { const [parent, i, html] = stack[stack.length - 1]; if (i + 1 === parent.children.length) { stack.pop(); continue; } const child = parent.children[++stack[stack.length - 1][1]]; if (child === null) { continue; } const { name } = child; if (name === \"#text\") { const node = document.createTextNode(child.value); textDivs.push(node); html.appendChild(node); continue; } let childHtml; if (child?.attributes?.xmlns) { childHtml = document.createElementNS(child.attributes.xmlns, name); } else { childHtml = document.createElement(name); } html.appendChild(childHtml); if (child.attributes) { this.setAttributes({ html: childHtml, element: child, storage, intent, linkService }); } if (child.children && child.children.length > 0) { stack.push([child, -1, childHtml]); } else if (child.value) { const node = document.createTextNode(child.value); if (_xfa_text.XfaText.shouldBuildText(name)) { textDivs.push(node); } childHtml.appendChild(node); } } for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) { el.setAttribute(\"readOnly\", true); } return { textDivs }; } static update(parameters) { const transform = `matrix(${parameters.viewport.transform.join(\",\")})`; parameters.div.style.transform = transform; parameters.div.hidden = false; } } exports.XfaLayer = XfaLayer; /***/ }), /* 22 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.renderTextLayer = renderTextLayer; var _util = __w_pdfjs_require__(1); const MAX_TEXT_DIVS_TO_RENDER = 100000; const DEFAULT_FONT_SIZE = 30; const DEFAULT_FONT_ASCENT = 0.8; const ascentCache = new Map(); const AllWhitespaceRegexp = /^\\s+$/g; function getAscent(fontFamily, ctx) { const cachedAscent = ascentCache.get(fontFamily); if (cachedAscent) { return cachedAscent; } ctx.save(); ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`; const metrics = ctx.measureText(\"\"); let ascent = metrics.fontBoundingBoxAscent; let descent = Math.abs(metrics.fontBoundingBoxDescent); if (ascent) { ctx.restore(); const ratio = ascent / (ascent + descent); ascentCache.set(fontFamily, ratio); return ratio; } ctx.strokeStyle = \"red\"; ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE); ctx.strokeText(\"g\", 0, 0); let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data; descent = 0; for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) { if (pixels[i] > 0) { descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE); break; } } ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE); ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE); pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data; ascent = 0; for (let i = 0, ii = pixels.length; i < ii; i += 4) { if (pixels[i] > 0) { ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE); break; } } ctx.restore(); if (ascent) { const ratio = ascent / (ascent + descent); ascentCache.set(fontFamily, ratio); return ratio; } ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT); return DEFAULT_FONT_ASCENT; } function appendText(task, geom, styles, ctx) { const textDiv = document.createElement(\"span\"); const textDivProperties = task._enhanceTextSelection ? { angle: 0, canvasWidth: 0, hasText: geom.str !== \"\", hasEOL: geom.hasEOL, originalTransform: null, paddingBottom: 0, paddingLeft: 0, paddingRight: 0, paddingTop: 0, scale: 1 } : { angle: 0, canvasWidth: 0, hasText: geom.str !== \"\", hasEOL: geom.hasEOL }; task._textDivs.push(textDiv); const tx = _util.Util.transform(task._viewport.transform, geom.transform); let angle = Math.atan2(tx[1], tx[0]); const style = styles[geom.fontName]; if (style.vertical) { angle += Math.PI / 2; } const fontHeight = Math.hypot(tx[2], tx[3]); const fontAscent = fontHeight * getAscent(style.fontFamily, ctx); let left, top; if (angle === 0) { left = tx[4]; top = tx[5] - fontAscent; } else { left = tx[4] + fontAscent * Math.sin(angle); top = tx[5] - fontAscent * Math.cos(angle); } textDiv.style.left = `${left}px`; textDiv.style.top = `${top}px`; textDiv.style.fontSize = `${fontHeight}px`; textDiv.style.fontFamily = style.fontFamily; textDiv.setAttribute(\"role\", \"presentation\"); textDiv.textContent = geom.str; textDiv.dir = geom.dir; if (task._fontInspectorEnabled) { textDiv.dataset.fontName = geom.fontName; } if (angle !== 0) { textDivProperties.angle = angle * (180 / Math.PI); } let shouldScaleText = false; if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) { shouldScaleText = true; } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) { const absScaleX = Math.abs(geom.transform[0]), absScaleY = Math.abs(geom.transform[3]); if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) { shouldScaleText = true; } } if (shouldScaleText) { if (style.vertical) { textDivProperties.canvasWidth = geom.height * task._viewport.scale; } else { textDivProperties.canvasWidth = geom.width * task._viewport.scale; } } task._textDivProperties.set(textDiv, textDivProperties); if (task._textContentStream) { task._layoutText(textDiv); } if (task._enhanceTextSelection && textDivProperties.hasText) { let angleCos = 1, angleSin = 0; if (angle !== 0) { angleCos = Math.cos(angle); angleSin = Math.sin(angle); } const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale; const divHeight = fontHeight; let m, b; if (angle !== 0) { m = [angleCos, angleSin, -angleSin, angleCos, left, top]; b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m); } else { b = [left, top, left + divWidth, top + divHeight]; } task._bounds.push({ left: b[0], top: b[1], right: b[2], bottom: b[3], div: textDiv, size: [divWidth, divHeight], m }); } } function render(task) { if (task._canceled) { return; } const textDivs = task._textDivs; const capability = task._capability; const textDivsLength = textDivs.length; if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) { task._renderingDone = true; capability.resolve(); return; } if (!task._textContentStream) { for (let i = 0; i < textDivsLength; i++) { task._layoutText(textDivs[i]); } } task._renderingDone = true; capability.resolve(); } function findPositiveMin(ts, offset, count) { let result = 0; for (let i = 0; i < count; i++) { const t = ts[offset++]; if (t > 0) { result = result ? Math.min(t, result) : t; } } return result; } function expand(task) { const bounds = task._bounds; const viewport = task._viewport; const expanded = expandBounds(viewport.width, viewport.height, bounds); for (let i = 0; i < expanded.length; i++) { const div = bounds[i].div; const divProperties = task._textDivProperties.get(div); if (divProperties.angle === 0) { divProperties.paddingLeft = bounds[i].left - expanded[i].left; divProperties.paddingTop = bounds[i].top - expanded[i].top; divProperties.paddingRight = expanded[i].right - bounds[i].right; divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom; task._textDivProperties.set(div, divProperties); continue; } const e = expanded[i], b = bounds[i]; const m = b.m, c = m[0], s = m[1]; const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size]; const ts = new Float64Array(64); for (let j = 0, jj = points.length; j < jj; j++) { const t = _util.Util.applyTransform(points[j], m); ts[j + 0] = c && (e.left - t[0]) / c; ts[j + 4] = s && (e.top - t[1]) / s; ts[j + 8] = c && (e.right - t[0]) / c; ts[j + 12] = s && (e.bottom - t[1]) / s; ts[j + 16] = s && (e.left - t[0]) / -s; ts[j + 20] = c && (e.top - t[1]) / c; ts[j + 24] = s && (e.right - t[0]) / -s; ts[j + 28] = c && (e.bottom - t[1]) / c; ts[j + 32] = c && (e.left - t[0]) / -c; ts[j + 36] = s && (e.top - t[1]) / -s; ts[j + 40] = c && (e.right - t[0]) / -c; ts[j + 44] = s && (e.bottom - t[1]) / -s; ts[j + 48] = s && (e.left - t[0]) / s; ts[j + 52] = c && (e.top - t[1]) / -c; ts[j + 56] = s && (e.right - t[0]) / s; ts[j + 60] = c && (e.bottom - t[1]) / -c; } const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s)); divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale; divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale; divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale; divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale; task._textDivProperties.set(div, divProperties); } } function expandBounds(width, height, boxes) { const bounds = boxes.map(function (box, i) { return { x1: box.left, y1: box.top, x2: box.right, y2: box.bottom, index: i, x1New: undefined, x2New: undefined }; }); expandBoundsLTR(width, bounds); const expanded = new Array(boxes.length); for (const b of bounds) { const i = b.index; expanded[i] = { left: b.x1New, top: 0, right: b.x2New, bottom: 0 }; } boxes.map(function (box, i) { const e = expanded[i], b = bounds[i]; b.x1 = box.top; b.y1 = width - e.right; b.x2 = box.bottom; b.y2 = width - e.left; b.index = i; b.x1New = undefined; b.x2New = undefined; }); expandBoundsLTR(height, bounds); for (const b of bounds) { const i = b.index; expanded[i].top = b.x1New; expanded[i].bottom = b.x2New; } return expanded; } function expandBoundsLTR(width, bounds) { bounds.sort(function (a, b) { return a.x1 - b.x1 || a.index - b.index; }); const fakeBoundary = { x1: -Infinity, y1: -Infinity, x2: 0, y2: Infinity, index: -1, x1New: 0, x2New: 0 }; const horizon = [{ start: -Infinity, end: Infinity, boundary: fakeBoundary }]; for (const boundary of bounds) { let i = 0; while (i < horizon.length && horizon[i].end = 0 && horizon[j].start >= boundary.y2) { j--; } let horizonPart, affectedBoundary; let q, k, maxXNew = -Infinity; for (q = i; q boundary.x1) { xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1; } else if (affectedBoundary.x2New === undefined) { xNew = (affectedBoundary.x2 + boundary.x1) / 2; } else { xNew = affectedBoundary.x2New; } if (xNew > maxXNew) { maxXNew = xNew; } } boundary.x1New = maxXNew; for (q = i; q boundary.x1) { if (affectedBoundary.index > boundary.index) { affectedBoundary.x2New = affectedBoundary.x2; } } else { affectedBoundary.x2New = maxXNew; } } else if (affectedBoundary.x2New > maxXNew) { affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2); } } const changedHorizon = []; let lastBoundary = null; for (q = i; q boundary.x2 ? affectedBoundary : boundary; if (lastBoundary === useBoundary) { changedHorizon[changedHorizon.length - 1].end = horizonPart.end; } else { changedHorizon.push({ start: horizonPart.start, end: horizonPart.end, boundary: useBoundary }); lastBoundary = useBoundary; } } if (horizon[i].start < boundary.y1) { changedHorizon[0].start = boundary.y1; changedHorizon.unshift({ start: horizon[i].start, end: boundary.y1, boundary: horizon[i].boundary }); } if (boundary.y2 < horizon[j].end) { changedHorizon[changedHorizon.length - 1].end = boundary.y2; changedHorizon.push({ start: boundary.y2, end: horizon[j].end, boundary: horizon[j].boundary }); } for (q = i; q = 0 && horizon[k].start >= affectedBoundary.y1; k--) { used = horizon[k].boundary === affectedBoundary; } for (k = j + 1; !used && k < horizon.length && horizon[k].end {}); } get promise() { return this._capability.promise; } cancel() { this._canceled = true; if (this._reader) { this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {}); this._reader = null; } if (this._renderTimer !== null) { clearTimeout(this._renderTimer); this._renderTimer = null; } this._capability.reject(new Error(\"TextLayer task cancelled.\")); } _processItems(items, styleCache) { for (let i = 0, len = items.length; i < len; i++) { if (items[i].str === undefined) { if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") { const parent = this._container; this._container = document.createElement(\"span\"); this._container.classList.add(\"markedContent\"); if (items[i].id !== null) { this._container.setAttribute(\"id\", `${items[i].id}`); } parent.appendChild(this._container); } else if (items[i].type === \"endMarkedContent\") { this._container = this._container.parentNode; } continue; } this._textContentItemsStr.push(items[i].str); appendText(this, items[i], styleCache, this._layoutTextCtx); } } _layoutText(textDiv) { const textDivProperties = this._textDivProperties.get(textDiv); let transform = \"\"; if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) { const { fontSize, fontFamily } = textDiv.style; if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) { this._layoutTextCtx.font = `${fontSize} ${fontFamily}`; this._layoutTextLastFontSize = fontSize; this._layoutTextLastFontFamily = fontFamily; } const { width } = this._layoutTextCtx.measureText(textDiv.textContent); if (width > 0) { const scale = textDivProperties.canvasWidth / width; if (this._enhanceTextSelection) { textDivProperties.scale = scale; } transform = `scaleX(${scale})`; } } if (textDivProperties.angle !== 0) { transform = `rotate(${textDivProperties.angle}deg) ${transform}`; } if (transform.length > 0) { if (this._enhanceTextSelection) { textDivProperties.originalTransform = transform; } textDiv.style.transform = transform; } if (textDivProperties.hasText) { this._container.appendChild(textDiv); } if (textDivProperties.hasEOL) { const br = document.createElement(\"br\"); br.setAttribute(\"role\", \"presentation\"); this._container.appendChild(br); } } _render(timeout = 0) { const capability = (0, _util.createPromiseCapability)(); let styleCache = Object.create(null); const canvas = this._document.createElement(\"canvas\"); canvas.height = canvas.width = DEFAULT_FONT_SIZE; canvas.mozOpaque = true; this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false }); if (this._textContent) { const textItems = this._textContent.items; const textStyles = this._textContent.styles; this._processItems(textItems, textStyles); capability.resolve(); } else if (this._textContentStream) { const pump = () => { this._reader.read().then(({ value, done }) => { if (done) { capability.resolve(); return; } Object.assign(styleCache, value.styles); this._processItems(value.items, styleCache); pump(); }, capability.reject); }; this._reader = this._textContentStream.getReader(); pump(); } else { throw new Error('Neither \"textContent\" nor \"textContentStream\" parameters specified.'); } capability.promise.then(() => { styleCache = null; if (!timeout) { render(this); } else { this._renderTimer = setTimeout(() => { render(this); this._renderTimer = null; }, timeout); } }, this._capability.reject); } expandTextDivs(expandDivs = false) { if (!this._enhanceTextSelection || !this._renderingDone) { return; } if (this._bounds !== null) { expand(this); this._bounds = null; } const transformBuf = [], paddingBuf = []; for (let i = 0, ii = this._textDivs.length; i < ii; i++) { const div = this._textDivs[i]; const divProps = this._textDivProperties.get(div); if (!divProps.hasText) { continue; } if (expandDivs) { transformBuf.length = 0; paddingBuf.length = 0; if (divProps.originalTransform) { transformBuf.push(divProps.originalTransform); } if (divProps.paddingTop > 0) { paddingBuf.push(`${divProps.paddingTop}px`); transformBuf.push(`translateY(${-divProps.paddingTop}px)`); } else { paddingBuf.push(0); } if (divProps.paddingRight > 0) { paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`); } else { paddingBuf.push(0); } if (divProps.paddingBottom > 0) { paddingBuf.push(`${divProps.paddingBottom}px`); } else { paddingBuf.push(0); } if (divProps.paddingLeft > 0) { paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`); transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`); } else { paddingBuf.push(0); } div.style.padding = paddingBuf.join(\" \"); if (transformBuf.length) { div.style.transform = transformBuf.join(\" \"); } } else { div.style.padding = null; div.style.transform = divProps.originalTransform; } } } } function renderTextLayer(renderParameters) { const task = new TextLayerRenderTask({ textContent: renderParameters.textContent, textContentStream: renderParameters.textContentStream, container: renderParameters.container, viewport: renderParameters.viewport, textDivs: renderParameters.textDivs, textContentItemsStr: renderParameters.textContentItemsStr, enhanceTextSelection: renderParameters.enhanceTextSelection }); task._render(renderParameters.timeout); return task; } /***/ }), /* 23 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.SVGGraphics = void 0; var _util = __w_pdfjs_require__(1); var _display_utils = __w_pdfjs_require__(5); var _is_node = __w_pdfjs_require__(3); let SVGGraphics = class { constructor() { (0, _util.unreachable)(\"Not implemented: SVGGraphics\"); } }; exports.SVGGraphics = SVGGraphics; { const SVG_DEFAULTS = { fontStyle: \"normal\", fontWeight: \"normal\", fillColor: \"#000000\" }; const XML_NS = \"http://www.w3.org/XML/1998/namespace\"; const XLINK_NS = \"http://www.w3.org/1999/xlink\"; const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"]; const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"]; const createObjectURL = function (data, contentType = \"\", forceDataSchema = false) { if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) { return URL.createObjectURL(new Blob([data], { type: contentType })); } const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"; let buffer = `data:${contentType};base64,`; for (let i = 0, ii = data.length; i < ii; i += 3) { const b1 = data[i] & 0xff; const b2 = data[i + 1] & 0xff; const b3 = data[i + 2] & 0xff; const d1 = b1 >> 2, d2 = (b1 & 3) < 4 | b2 >> 4; const d3 = i + 1 < ii ? (b2 & 0xf) < 2 | b3 >> 6 : 64; const d4 = i + 2 < ii ? b3 & 0x3f : 64; buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4]; } return buffer; }; const convertImgDataToPng = function () { const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]); const CHUNK_WRAPPER_SIZE = 12; const crcTable = new Int32Array(256); for (let i = 0; i < 256; i++) { let c = i; for (let h = 0; h < 8; h++) { if (c & 1) { c = 0xedb88320 ^ c >> 1 & 0x7fffffff; } else { c = c >> 1 & 0x7fffffff; } } crcTable[i] = c; } function crc32(data, start, end) { let crc = -1; for (let i = start; i < end; i++) { const a = (crc ^ data[i]) & 0xff; const b = crcTable[a]; crc = crc >>> 8 ^ b; } return crc ^ -1; } function writePngChunk(type, body, data, offset) { let p = offset; const len = body.length; data[p] = len >> 24 & 0xff; data[p + 1] = len >> 16 & 0xff; data[p + 2] = len >> 8 & 0xff; data[p + 3] = len & 0xff; p += 4; data[p] = type.charCodeAt(0) & 0xff; data[p + 1] = type.charCodeAt(1) & 0xff; data[p + 2] = type.charCodeAt(2) & 0xff; data[p + 3] = type.charCodeAt(3) & 0xff; p += 4; data.set(body, p); p += body.length; const crc = crc32(data, offset + 4, p); data[p] = crc >> 24 & 0xff; data[p + 1] = crc >> 16 & 0xff; data[p + 2] = crc >> 8 & 0xff; data[p + 3] = crc & 0xff; } function adler32(data, start, end) { let a = 1; let b = 0; for (let i = start; i < end; ++i) { a = (a + (data[i] & 0xff)) % 65521; b = (b + a) % 65521; } return b < 16 | a; } function deflateSync(literals) { if (!_is_node.isNodeJS) { return deflateSyncUncompressed(literals); } try { let input; if (parseInt(process.versions.node) >= 8) { input = literals; } else { input = Buffer.from(literals); } const output = require(\"zlib\").deflateSync(input, { level: 9 }); return output instanceof Uint8Array ? output : new Uint8Array(output); } catch (e) { (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e); } return deflateSyncUncompressed(literals); } function deflateSyncUncompressed(literals) { let len = literals.length; const maxBlockLength = 0xffff; const deflateBlocks = Math.ceil(len / maxBlockLength); const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4); let pi = 0; idat[pi++] = 0x78; idat[pi++] = 0x9c; let pos = 0; while (len > maxBlockLength) { idat[pi++] = 0x00; idat[pi++] = 0xff; idat[pi++] = 0xff; idat[pi++] = 0x00; idat[pi++] = 0x00; idat.set(literals.subarray(pos, pos + maxBlockLength), pi); pi += maxBlockLength; pos += maxBlockLength; len -= maxBlockLength; } idat[pi++] = 0x01; idat[pi++] = len & 0xff; idat[pi++] = len >> 8 & 0xff; idat[pi++] = ~len & 0xffff & 0xff; idat[pi++] = (~len & 0xffff) >> 8 & 0xff; idat.set(literals.subarray(pos), pi); pi += literals.length - pos; const adler = adler32(literals, 0, literals.length); idat[pi++] = adler >> 24 & 0xff; idat[pi++] = adler >> 16 & 0xff; idat[pi++] = adler >> 8 & 0xff; idat[pi++] = adler & 0xff; return idat; } function encode(imgData, kind, forceDataSchema, isMask) { const width = imgData.width; const height = imgData.height; let bitDepth, colorType, lineSize; const bytes = imgData.data; switch (kind) { case _util.ImageKind.GRAYSCALE_1BPP: colorType = 0; bitDepth = 1; lineSize = width + 7 >> 3; break; case _util.ImageKind.RGB_24BPP: colorType = 2; bitDepth = 8; lineSize = width * 3; break; case _util.ImageKind.RGBA_32BPP: colorType = 6; bitDepth = 8; lineSize = width * 4; break; default: throw new Error(\"invalid format\"); } const literals = new Uint8Array((1 + lineSize) * height); let offsetLiterals = 0, offsetBytes = 0; for (let y = 0; y < height; ++y) { literals[offsetLiterals++] = 0; literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals); offsetBytes += lineSize; offsetLiterals += lineSize; } if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) { offsetLiterals = 0; for (let y = 0; y < height; y++) { offsetLiterals++; for (let i = 0; i < lineSize; i++) { literals[offsetLiterals++] ^= 0xff; } } } const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]); const idat = deflateSync(literals); const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length; const data = new Uint8Array(pngLength); let offset = 0; data.set(PNG_HEADER, offset); offset += PNG_HEADER.length; writePngChunk(\"IHDR\", ihdr, data, offset); offset += CHUNK_WRAPPER_SIZE + ihdr.length; writePngChunk(\"IDATA\", idat, data, offset); offset += CHUNK_WRAPPER_SIZE + idat.length; writePngChunk(\"IEND\", new Uint8Array(0), data, offset); return createObjectURL(data, \"image/png\", forceDataSchema); } return function convertImgDataToPng(imgData, forceDataSchema, isMask) { const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind; return encode(imgData, kind, forceDataSchema, isMask); }; }(); class SVGExtraState { constructor() { this.fontSizeScale = 1; this.fontWeight = SVG_DEFAULTS.fontWeight; this.fontSize = 0; this.textMatrix = _util.IDENTITY_MATRIX; this.fontMatrix = _util.FONT_IDENTITY_MATRIX; this.leading = 0; this.textRenderingMode = _util.TextRenderingMode.FILL; this.textMatrixScale = 1; this.x = 0; this.y = 0; this.lineX = 0; this.lineY = 0; this.charSpacing = 0; this.wordSpacing = 0; this.textHScale = 1; this.textRise = 0; this.fillColor = SVG_DEFAULTS.fillColor; this.strokeColor = \"#000000\"; this.fillAlpha = 1; this.strokeAlpha = 1; this.lineWidth = 1; this.lineJoin = \"\"; this.lineCap = \"\"; this.miterLimit = 0; this.dashArray = []; this.dashPhase = 0; this.dependencies = []; this.activeClipUrl = null; this.clipGroup = null; this.maskId = \"\"; } clone() { return Object.create(this); } setCurrentPoint(x, y) { this.x = x; this.y = y; } } function opListToTree(opList) { let opTree = []; const tmp = []; for (const opListElement of opList) { if (opListElement.fn === \"save\") { opTree.push({ fnId: 92, fn: \"group\", items: [] }); tmp.push(opTree); opTree = opTree[opTree.length - 1].items; continue; } if (opListElement.fn === \"restore\") { opTree = tmp.pop(); } else { opTree.push(opListElement); } } return opTree; } function pf(value) { if (Number.isInteger(value)) { return value.toString(); } const s = value.toFixed(10); let i = s.length - 1; if (s[i] !== \"0\") { return s; } do { i--; } while (s[i] === \"0\"); return s.substring(0, s[i] === \".\" ? i : i + 1); } function pm(m) { if (m[4] === 0 && m[5] === 0) { if (m[1] === 0 && m[2] === 0) { if (m[0] === 1 && m[3] === 1) { return \"\"; } return `scale(${pf(m[0])} ${pf(m[3])})`; } if (m[0] === m[3] && m[1] === -m[2]) { const a = Math.acos(m[0]) * 180 / Math.PI; return `rotate(${pf(a)})`; } } else { if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) { return `translate(${pf(m[4])} ${pf(m[5])})`; } } return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`; } let clipCount = 0; let maskCount = 0; let shadingCount = 0; exports.SVGGraphics = SVGGraphics = class { constructor(commonObjs, objs, forceDataSchema = false) { this.svgFactory = new _display_utils.DOMSVGFactory(); this.current = new SVGExtraState(); this.transformMatrix = _util.IDENTITY_MATRIX; this.transformStack = []; this.extraStack = []; this.commonObjs = commonObjs; this.objs = objs; this.pendingClip = null; this.pendingEOFill = false; this.embedFonts = false; this.embeddedFonts = Object.create(null); this.cssStyle = null; this.forceDataSchema = !!forceDataSchema; this._operatorIdMapping = []; for (const op in _util.OPS) { this._operatorIdMapping[_util.OPS[op]] = op; } } save() { this.transformStack.push(this.transformMatrix); const old = this.current; this.extraStack.push(old); this.current = old.clone(); } restore() { this.transformMatrix = this.transformStack.pop(); this.current = this.extraStack.pop(); this.pendingClip = null; this.tgrp = null; } group(items) { this.save(); this.executeOpTree(items); this.restore(); } loadDependencies(operatorList) { const fnArray = operatorList.fnArray; const argsArray = operatorList.argsArray; for (let i = 0, ii = fnArray.length; i < ii; i++) { if (fnArray[i] !== _util.OPS.dependency) { continue; } for (const obj of argsArray[i]) { const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs; const promise = new Promise(resolve => { objsPool.get(obj, resolve); }); this.current.dependencies.push(promise); } } return Promise.all(this.current.dependencies); } transform(a, b, c, d, e, f) { const transformMatrix = [a, b, c, d, e, f]; this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix); this.tgrp = null; } getSVG(operatorList, viewport) { this.viewport = viewport; const svgElement = this._initialize(viewport); return this.loadDependencies(operatorList).then(() => { this.transformMatrix = _util.IDENTITY_MATRIX; this.executeOpTree(this.convertOpList(operatorList)); return svgElement; }); } convertOpList(operatorList) { const operatorIdMapping = this._operatorIdMapping; const argsArray = operatorList.argsArray; const fnArray = operatorList.fnArray; const opList = []; for (let i = 0, ii = fnArray.length; i < ii; i++) { const fnId = fnArray[i]; opList.push({ fnId, fn: operatorIdMapping[fnId], args: argsArray[i] }); } return opListToTree(opList); } executeOpTree(opTree) { for (const opTreeElement of opTree) { const fn = opTreeElement.fn; const fnId = opTreeElement.fnId; const args = opTreeElement.args; switch (fnId | 0) { case _util.OPS.beginText: this.beginText(); break; case _util.OPS.dependency: break; case _util.OPS.setLeading: this.setLeading(args); break; case _util.OPS.setLeadingMoveText: this.setLeadingMoveText(args[0], args[1]); break; case _util.OPS.setFont: this.setFont(args); break; case _util.OPS.showText: this.showText(args[0]); break; case _util.OPS.showSpacedText: this.showText(args[0]); break; case _util.OPS.endText: this.endText(); break; case _util.OPS.moveText: this.moveText(args[0], args[1]); break; case _util.OPS.setCharSpacing: this.setCharSpacing(args[0]); break; case _util.OPS.setWordSpacing: this.setWordSpacing(args[0]); break; case _util.OPS.setHScale: this.setHScale(args[0]); break; case _util.OPS.setTextMatrix: this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]); break; case _util.OPS.setTextRise: this.setTextRise(args[0]); break; case _util.OPS.setTextRenderingMode: this.setTextRenderingMode(args[0]); break; case _util.OPS.setLineWidth: this.setLineWidth(args[0]); break; case _util.OPS.setLineJoin: this.setLineJoin(args[0]); break; case _util.OPS.setLineCap: this.setLineCap(args[0]); break; case _util.OPS.setMiterLimit: this.setMiterLimit(args[0]); break; case _util.OPS.setFillRGBColor: this.setFillRGBColor(args[0], args[1], args[2]); break; case _util.OPS.setStrokeRGBColor: this.setStrokeRGBColor(args[0], args[1], args[2]); break; case _util.OPS.setStrokeColorN: this.setStrokeColorN(args); break; case _util.OPS.setFillColorN: this.setFillColorN(args); break; case _util.OPS.shadingFill: this.shadingFill(args[0]); break; case _util.OPS.setDash: this.setDash(args[0], args[1]); break; case _util.OPS.setRenderingIntent: this.setRenderingIntent(args[0]); break; case _util.OPS.setFlatness: this.setFlatness(args[0]); break; case _util.OPS.setGState: this.setGState(args[0]); break; case _util.OPS.fill: this.fill(); break; case _util.OPS.eoFill: this.eoFill(); break; case _util.OPS.stroke: this.stroke(); break; case _util.OPS.fillStroke: this.fillStroke(); break; case _util.OPS.eoFillStroke: this.eoFillStroke(); break; case _util.OPS.clip: this.clip(\"nonzero\"); break; case _util.OPS.eoClip: this.clip(\"evenodd\"); break; case _util.OPS.paintSolidColorImageMask: this.paintSolidColorImageMask(); break; case _util.OPS.paintImageXObject: this.paintImageXObject(args[0]); break; case _util.OPS.paintInlineImageXObject: this.paintInlineImageXObject(args[0]); break; case _util.OPS.paintImageMaskXObject: this.paintImageMaskXObject(args[0]); break; case _util.OPS.paintFormXObjectBegin: this.paintFormXObjectBegin(args[0], args[1]); break; case _util.OPS.paintFormXObjectEnd: this.paintFormXObjectEnd(); break; case _util.OPS.closePath: this.closePath(); break; case _util.OPS.closeStroke: this.closeStroke(); break; case _util.OPS.closeFillStroke: this.closeFillStroke(); break; case _util.OPS.closeEOFillStroke: this.closeEOFillStroke(); break; case _util.OPS.nextLine: this.nextLine(); break; case _util.OPS.transform: this.transform(args[0], args[1], args[2], args[3], args[4], args[5]); break; case _util.OPS.constructPath: this.constructPath(args[0], args[1]); break; case _util.OPS.endPath: this.endPath(); break; case 92: this.group(opTreeElement.items); break; default: (0, _util.warn)(`Unimplemented operator ${fn}`); break; } } } setWordSpacing(wordSpacing) { this.current.wordSpacing = wordSpacing; } setCharSpacing(charSpacing) { this.current.charSpacing = charSpacing; } nextLine() { this.moveText(0, this.current.leading); } setTextMatrix(a, b, c, d, e, f) { const current = this.current; current.textMatrix = current.lineMatrix = [a, b, c, d, e, f]; current.textMatrixScale = Math.hypot(a, b); current.x = current.lineX = 0; current.y = current.lineY = 0; current.xcoords = []; current.ycoords = []; current.tspan = this.svgFactory.createElement(\"svg:tspan\"); current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily); current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`); current.tspan.setAttributeNS(null, \"y\", pf(-current.y)); current.txtElement = this.svgFactory.createElement(\"svg:text\"); current.txtElement.appendChild(current.tspan); } beginText() { const current = this.current; current.x = current.lineX = 0; current.y = current.lineY = 0; current.textMatrix = _util.IDENTITY_MATRIX; current.lineMatrix = _util.IDENTITY_MATRIX; current.textMatrixScale = 1; current.tspan = this.svgFactory.createElement(\"svg:tspan\"); current.txtElement = this.svgFactory.createElement(\"svg:text\"); current.txtgrp = this.svgFactory.createElement(\"svg:g\"); current.xcoords = []; current.ycoords = []; } moveText(x, y) { const current = this.current; current.x = current.lineX += x; current.y = current.lineY += y; current.xcoords = []; current.ycoords = []; current.tspan = this.svgFactory.createElement(\"svg:tspan\"); current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily); current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`); current.tspan.setAttributeNS(null, \"y\", pf(-current.y)); } showText(glyphs) { const current = this.current; const font = current.font; const fontSize = current.fontSize; if (fontSize === 0) { return; } const fontSizeScale = current.fontSizeScale; const charSpacing = current.charSpacing; const wordSpacing = current.wordSpacing; const fontDirection = current.fontDirection; const textHScale = current.textHScale * fontDirection; const vertical = font.vertical; const spacingDir = vertical ? 1 : -1; const defaultVMetrics = font.defaultVMetrics; const widthAdvanceScale = fontSize * current.fontMatrix[0]; let x = 0; for (const glyph of glyphs) { if (glyph === null) { x += fontDirection * wordSpacing; continue; } else if (typeof glyph === \"number\") { x += spacingDir * glyph * fontSize / 1000; continue; } const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing; const character = glyph.fontChar; let scaledX, scaledY; let width = glyph.width; if (vertical) { let vx; const vmetric = glyph.vmetric || defaultVMetrics; vx = glyph.vmetric ? vmetric[1] : width * 0.5; vx = -vx * widthAdvanceScale; const vy = vmetric[2] * widthAdvanceScale; width = vmetric ? -vmetric[0] : width; scaledX = vx / fontSizeScale; scaledY = (x + vy) / fontSizeScale; } else { scaledX = x / fontSizeScale; scaledY = 0; } if (glyph.isInFont || font.missingFile) { current.xcoords.push(current.x + scaledX); if (vertical) { current.ycoords.push(-current.y + scaledY); } current.tspan.textContent += character; } else {} let charWidth; if (vertical) { charWidth = width * widthAdvanceScale - spacing * fontDirection; } else { charWidth = width * widthAdvanceScale + spacing * fontDirection; } x += charWidth; } current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \")); if (vertical) { current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \")); } else { current.tspan.setAttributeNS(null, \"y\", pf(-current.y)); } if (vertical) { current.y -= x; } else { current.x += x * textHScale; } current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily); current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`); if (current.fontStyle !== SVG_DEFAULTS.fontStyle) { current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle); } if (current.fontWeight !== SVG_DEFAULTS.fontWeight) { current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight); } const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK; if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) { if (current.fillColor !== SVG_DEFAULTS.fillColor) { current.tspan.setAttributeNS(null, \"fill\", current.fillColor); } if (current.fillAlpha < 1) { current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha); } } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) { current.tspan.setAttributeNS(null, \"fill\", \"transparent\"); } else { current.tspan.setAttributeNS(null, \"fill\", \"none\"); } if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) { const lineWidthScale = 1 / (current.textMatrixScale || 1); this._setStrokeAttributes(current.tspan, lineWidthScale); } let textMatrix = current.textMatrix; if (current.textRise !== 0) { textMatrix = textMatrix.slice(); textMatrix[5] += current.textRise; } current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`); current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\"); current.txtElement.appendChild(current.tspan); current.txtgrp.appendChild(current.txtElement); this._ensureTransformGroup().appendChild(current.txtElement); } setLeadingMoveText(x, y) { this.setLeading(-y); this.moveText(x, y); } addFontStyle(fontObj) { if (!fontObj.data) { throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.'); } if (!this.cssStyle) { this.cssStyle = this.svgFactory.createElement(\"svg:style\"); this.cssStyle.setAttributeNS(null, \"type\", \"text/css\"); this.defs.appendChild(this.cssStyle); } const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema); this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); } `; } setFont(details) { const current = this.current; const fontObj = this.commonObjs.get(details[0]); let size = details[1]; current.font = fontObj; if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) { this.addFontStyle(fontObj); this.embeddedFonts[fontObj.loadedName] = fontObj; } current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX; let bold = \"normal\"; if (fontObj.black) { bold = \"900\"; } else if (fontObj.bold) { bold = \"bold\"; } const italic = fontObj.italic ? \"italic\" : \"normal\"; if (size < 0) { size = -size; current.fontDirection = -1; } else { current.fontDirection = 1; } current.fontSize = size; current.fontFamily = fontObj.loadedName; current.fontWeight = bold; current.fontStyle = italic; current.tspan = this.svgFactory.createElement(\"svg:tspan\"); current.tspan.setAttributeNS(null, \"y\", pf(-current.y)); current.xcoords = []; current.ycoords = []; } endText() { const current = this.current; if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) { current.element = current.txtElement; this.clip(\"nonzero\"); this.endPath(); } } setLineWidth(width) { if (width > 0) { this.current.lineWidth = width; } } setLineCap(style) { this.current.lineCap = LINE_CAP_STYLES[style]; } setLineJoin(style) { this.current.lineJoin = LINE_JOIN_STYLES[style]; } setMiterLimit(limit) { this.current.miterLimit = limit; } setStrokeAlpha(strokeAlpha) { this.current.strokeAlpha = strokeAlpha; } setStrokeRGBColor(r, g, b) { this.current.strokeColor = _util.Util.makeHexColor(r, g, b); } setFillAlpha(fillAlpha) { this.current.fillAlpha = fillAlpha; } setFillRGBColor(r, g, b) { this.current.fillColor = _util.Util.makeHexColor(r, g, b); this.current.tspan = this.svgFactory.createElement(\"svg:tspan\"); this.current.xcoords = []; this.current.ycoords = []; } setStrokeColorN(args) { this.current.strokeColor = this._makeColorN_Pattern(args); } setFillColorN(args) { this.current.fillColor = this._makeColorN_Pattern(args); } shadingFill(args) { const width = this.viewport.width; const height = this.viewport.height; const inv = _util.Util.inverseTransform(this.transformMatrix); const bl = _util.Util.applyTransform([0, 0], inv); const br = _util.Util.applyTransform([0, height], inv); const ul = _util.Util.applyTransform([width, 0], inv); const ur = _util.Util.applyTransform([width, height], inv); const x0 = Math.min(bl[0], br[0], ul[0], ur[0]); const y0 = Math.min(bl[1], br[1], ul[1], ur[1]); const x1 = Math.max(bl[0], br[0], ul[0], ur[0]); const y1 = Math.max(bl[1], br[1], ul[1], ur[1]); const rect = this.svgFactory.createElement(\"svg:rect\"); rect.setAttributeNS(null, \"x\", x0); rect.setAttributeNS(null, \"y\", y0); rect.setAttributeNS(null, \"width\", x1 - x0); rect.setAttributeNS(null, \"height\", y1 - y0); rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args)); if (this.current.fillAlpha < 1) { rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha); } this._ensureTransformGroup().appendChild(rect); } _makeColorN_Pattern(args) { if (args[0] === \"TilingPattern\") { return this._makeTilingPattern(args); } return this._makeShadingPattern(args); } _makeTilingPattern(args) { const color = args[1]; const operatorList = args[2]; const matrix = args[3] || _util.IDENTITY_MATRIX; const [x0, y0, x1, y1] = args[4]; const xstep = args[5]; const ystep = args[6]; const paintType = args[7]; const tilingId = `shading${shadingCount++}`; const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]); const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix); const txstep = xstep * xscale; const tystep = ystep * yscale; const tiling = this.svgFactory.createElement(\"svg:pattern\"); tiling.setAttributeNS(null, \"id\", tilingId); tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\"); tiling.setAttributeNS(null, \"width\", txstep); tiling.setAttributeNS(null, \"height\", tystep); tiling.setAttributeNS(null, \"x\", `${tx0}`); tiling.setAttributeNS(null, \"y\", `${ty0}`); const svg = this.svg; const transformMatrix = this.transformMatrix; const fillColor = this.current.fillColor; const strokeColor = this.current.strokeColor; const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0); this.svg = bbox; this.transformMatrix = matrix; if (paintType === 2) { const cssColor = _util.Util.makeHexColor(...color); this.current.fillColor = cssColor; this.current.strokeColor = cssColor; } this.executeOpTree(this.convertOpList(operatorList)); this.svg = svg; this.transformMatrix = transformMatrix; this.current.fillColor = fillColor; this.current.strokeColor = strokeColor; tiling.appendChild(bbox.childNodes[0]); this.defs.appendChild(tiling); return `url(#${tilingId})`; } _makeShadingPattern(args) { if (typeof args === \"string\") { args = this.objs.get(args); } switch (args[0]) { case \"RadialAxial\": const shadingId = `shading${shadingCount++}`; const colorStops = args[3]; let gradient; switch (args[1]) { case \"axial\": const point0 = args[4]; const point1 = args[5]; gradient = this.svgFactory.createElement(\"svg:linearGradient\"); gradient.setAttributeNS(null, \"id\", shadingId); gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\"); gradient.setAttributeNS(null, \"x1\", point0[0]); gradient.setAttributeNS(null, \"y1\", point0[1]); gradient.setAttributeNS(null, \"x2\", point1[0]); gradient.setAttributeNS(null, \"y2\", point1[1]); break; case \"radial\": const focalPoint = args[4]; const circlePoint = args[5]; const focalRadius = args[6]; const circleRadius = args[7]; gradient = this.svgFactory.createElement(\"svg:radialGradient\"); gradient.setAttributeNS(null, \"id\", shadingId); gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\"); gradient.setAttributeNS(null, \"cx\", circlePoint[0]); gradient.setAttributeNS(null, \"cy\", circlePoint[1]); gradient.setAttributeNS(null, \"r\", circleRadius); gradient.setAttributeNS(null, \"fx\", focalPoint[0]); gradient.setAttributeNS(null, \"fy\", focalPoint[1]); gradient.setAttributeNS(null, \"fr\", focalRadius); break; default: throw new Error(`Unknown RadialAxial type: ${args[1]}`); } for (const colorStop of colorStops) { const stop = this.svgFactory.createElement(\"svg:stop\"); stop.setAttributeNS(null, \"offset\", colorStop[0]); stop.setAttributeNS(null, \"stop-color\", colorStop[1]); gradient.appendChild(stop); } this.defs.appendChild(gradient); return `url(#${shadingId})`; case \"Mesh\": (0, _util.warn)(\"Unimplemented pattern Mesh\"); return null; case \"Dummy\": return \"hotpink\"; default: throw new Error(`Unknown IR type: ${args[0]}`); } } setDash(dashArray, dashPhase) { this.current.dashArray = dashArray; this.current.dashPhase = dashPhase; } constructPath(ops, args) { const current = this.current; let x = current.x, y = current.y; let d = []; let j = 0; for (const op of ops) { switch (op | 0) { case _util.OPS.rectangle: x = args[j++]; y = args[j++]; const width = args[j++]; const height = args[j++]; const xw = x + width; const yh = y + height; d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\"); break; case _util.OPS.moveTo: x = args[j++]; y = args[j++]; d.push(\"M\", pf(x), pf(y)); break; case _util.OPS.lineTo: x = args[j++]; y = args[j++]; d.push(\"L\", pf(x), pf(y)); break; case _util.OPS.curveTo: x = args[j + 4]; y = args[j + 5]; d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y)); j += 6; break; case _util.OPS.curveTo2: d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3])); x = args[j + 2]; y = args[j + 3]; j += 4; break; case _util.OPS.curveTo3: x = args[j + 2]; y = args[j + 3]; d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y)); j += 4; break; case _util.OPS.closePath: d.push(\"Z\"); break; } } d = d.join(\" \"); if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) { d = current.path.getAttributeNS(null, \"d\") + d; } else { current.path = this.svgFactory.createElement(\"svg:path\"); this._ensureTransformGroup().appendChild(current.path); } current.path.setAttributeNS(null, \"d\", d); current.path.setAttributeNS(null, \"fill\", \"none\"); current.element = current.path; current.setCurrentPoint(x, y); } endPath() { const current = this.current; current.path = null; if (!this.pendingClip) { return; } if (!current.element) { this.pendingClip = null; return; } const clipId = `clippath${clipCount++}`; const clipPath = this.svgFactory.createElement(\"svg:clipPath\"); clipPath.setAttributeNS(null, \"id\", clipId); clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix)); const clipElement = current.element.cloneNode(true); if (this.pendingClip === \"evenodd\") { clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\"); } else { clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\"); } this.pendingClip = null; clipPath.appendChild(clipElement); this.defs.appendChild(clipPath); if (current.activeClipUrl) { current.clipGroup = null; for (const prev of this.extraStack) { prev.clipGroup = null; } clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl); } current.activeClipUrl = `url(#${clipId})`; this.tgrp = null; } clip(type) { this.pendingClip = type; } closePath() { const current = this.current; if (current.path) { const d = `${current.path.getAttributeNS(null, \"d\")}Z`; current.path.setAttributeNS(null, \"d\", d); } } setLeading(leading) { this.current.leading = -leading; } setTextRise(textRise) { this.current.textRise = textRise; } setTextRenderingMode(textRenderingMode) { this.current.textRenderingMode = textRenderingMode; } setHScale(scale) { this.current.textHScale = scale / 100; } setRenderingIntent(intent) {} setFlatness(flatness) {} setGState(states) { for (const [key, value] of states) { switch (key) { case \"LW\": this.setLineWidth(value); break; case \"LC\": this.setLineCap(value); break; case \"LJ\": this.setLineJoin(value); break; case \"ML\": this.setMiterLimit(value); break; case \"D\": this.setDash(value[0], value[1]); break; case \"RI\": this.setRenderingIntent(value); break; case \"FL\": this.setFlatness(value); break; case \"Font\": this.setFont(value); break; case \"CA\": this.setStrokeAlpha(value); break; case \"ca\": this.setFillAlpha(value); break; default: (0, _util.warn)(`Unimplemented graphic state operator ${key}`); break; } } } fill() { const current = this.current; if (current.element) { current.element.setAttributeNS(null, \"fill\", current.fillColor); current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha); this.endPath(); } } stroke() { const current = this.current; if (current.element) { this._setStrokeAttributes(current.element); current.element.setAttributeNS(null, \"fill\", \"none\"); this.endPath(); } } _setStrokeAttributes(element, lineWidthScale = 1) { const current = this.current; let dashArray = current.dashArray; if (lineWidthScale !== 1 && dashArray.length > 0) { dashArray = dashArray.map(function (value) { return lineWidthScale * value; }); } element.setAttributeNS(null, \"stroke\", current.strokeColor); element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha); element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit)); element.setAttributeNS(null, \"stroke-linecap\", current.lineCap); element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin); element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\"); element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \")); element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\"); } eoFill() { if (this.current.element) { this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\"); } this.fill(); } fillStroke() { this.stroke(); this.fill(); } eoFillStroke() { if (this.current.element) { this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\"); } this.fillStroke(); } closeStroke() { this.closePath(); this.stroke(); } closeFillStroke() { this.closePath(); this.fillStroke(); } closeEOFillStroke() { this.closePath(); this.eoFillStroke(); } paintSolidColorImageMask() { const rect = this.svgFactory.createElement(\"svg:rect\"); rect.setAttributeNS(null, \"x\", \"0\"); rect.setAttributeNS(null, \"y\", \"0\"); rect.setAttributeNS(null, \"width\", \"1px\"); rect.setAttributeNS(null, \"height\", \"1px\"); rect.setAttributeNS(null, \"fill\", this.current.fillColor); this._ensureTransformGroup().appendChild(rect); } paintImageXObject(objId) { const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId); if (!imgData) { (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`); return; } this.paintInlineImageXObject(imgData); } paintInlineImageXObject(imgData, mask) { const width = imgData.width; const height = imgData.height; const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask); const cliprect = this.svgFactory.createElement(\"svg:rect\"); cliprect.setAttributeNS(null, \"x\", \"0\"); cliprect.setAttributeNS(null, \"y\", \"0\"); cliprect.setAttributeNS(null, \"width\", pf(width)); cliprect.setAttributeNS(null, \"height\", pf(height)); this.current.element = cliprect; this.clip(\"nonzero\"); const imgEl = this.svgFactory.createElement(\"svg:image\"); imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc); imgEl.setAttributeNS(null, \"x\", \"0\"); imgEl.setAttributeNS(null, \"y\", pf(-height)); imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\"); imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\"); imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`); if (mask) { mask.appendChild(imgEl); } else { this._ensureTransformGroup().appendChild(imgEl); } } paintImageMaskXObject(imgData) { const current = this.current; const width = imgData.width; const height = imgData.height; const fillColor = current.fillColor; current.maskId = `mask${maskCount++}`; const mask = this.svgFactory.createElement(\"svg:mask\"); mask.setAttributeNS(null, \"id\", current.maskId); const rect = this.svgFactory.createElement(\"svg:rect\"); rect.setAttributeNS(null, \"x\", \"0\"); rect.setAttributeNS(null, \"y\", \"0\"); rect.setAttributeNS(null, \"width\", pf(width)); rect.setAttributeNS(null, \"height\", pf(height)); rect.setAttributeNS(null, \"fill\", fillColor); rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`); this.defs.appendChild(mask); this._ensureTransformGroup().appendChild(rect); this.paintInlineImageXObject(imgData, mask); } paintFormXObjectBegin(matrix, bbox) { if (Array.isArray(matrix) && matrix.length === 6) { this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]); } if (bbox) { const width = bbox[2] - bbox[0]; const height = bbox[3] - bbox[1]; const cliprect = this.svgFactory.createElement(\"svg:rect\"); cliprect.setAttributeNS(null, \"x\", bbox[0]); cliprect.setAttributeNS(null, \"y\", bbox[1]); cliprect.setAttributeNS(null, \"width\", pf(width)); cliprect.setAttributeNS(null, \"height\", pf(height)); this.current.element = cliprect; this.clip(\"nonzero\"); this.endPath(); } } paintFormXObjectEnd() {} _initialize(viewport) { const svg = this.svgFactory.create(viewport.width, viewport.height); const definitions = this.svgFactory.createElement(\"svg:defs\"); svg.appendChild(definitions); this.defs = definitions; const rootGroup = this.svgFactory.createElement(\"svg:g\"); rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform)); svg.appendChild(rootGroup); this.svg = rootGroup; return svg; } _ensureClipGroup() { if (!this.current.clipGroup) { const clipGroup = this.svgFactory.createElement(\"svg:g\"); clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl); this.svg.appendChild(clipGroup); this.current.clipGroup = clipGroup; } return this.current.clipGroup; } _ensureTransformGroup() { if (!this.tgrp) { this.tgrp = this.svgFactory.createElement(\"svg:g\"); this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix)); if (this.current.activeClipUrl) { this._ensureClipGroup().appendChild(this.tgrp); } else { this.svg.appendChild(this.tgrp); } } return this.tgrp; } }; } /***/ }), /* 24 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFNodeStream = void 0; var _util = __w_pdfjs_require__(1); var _network_utils = __w_pdfjs_require__(25); ; const fs = require(\"fs\"); const http = require(\"http\"); const https = require(\"https\"); const url = require(\"url\"); const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//; function parseUrl(sourceUrl) { const parsedUrl = url.parse(sourceUrl); if (parsedUrl.protocol === \"file:\" || parsedUrl.host) { return parsedUrl; } if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) { return url.parse(`file:///${sourceUrl}`); } if (!parsedUrl.host) { parsedUrl.protocol = \"file:\"; } return parsedUrl; } class PDFNodeStream { constructor(source) { this.source = source; this.url = parseUrl(source.url); this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\"; this.isFsUrl = this.url.protocol === \"file:\"; this.httpHeaders = this.isHttp && source.httpHeaders || {}; this._fullRequestReader = null; this._rangeRequestReaders = []; } get _progressiveDataLength() { return this._fullRequestReader?._loaded ?? 0; } getFullReader() { (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\"); this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this); return this._fullRequestReader; } getRangeReader(start, end) { if (end { this._readCapability.resolve(); }); readableStream.on(\"end\", () => { readableStream.destroy(); this._done = true; this._readCapability.resolve(); }); readableStream.on(\"error\", reason => { this._error(reason); }); if (this._storedError) { this._readableStream.destroy(this._storedError); } } } function createRequestOptions(parsedUrl, headers) { return { protocol: parsedUrl.protocol, auth: parsedUrl.auth, host: parsedUrl.hostname, port: parsedUrl.port, path: parsedUrl.path, method: \"GET\", headers }; } class PDFNodeStreamFullReader extends BaseFullReader { constructor(stream) { super(stream); const handleResponse = response => { if (response.statusCode === 404) { const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`); this._storedError = error; this._headersCapability.reject(error); return; } this._headersCapability.resolve(); this._setReadableStream(response); const getResponseHeader = name => { return this._readableStream.headers[name.toLowerCase()]; }; const { allowRangeRequests, suggestedLength } = (0, _network_utils.validateRangeRequestCapabilities)({ getResponseHeader, isHttp: stream.isHttp, rangeChunkSize: this._rangeChunkSize, disableRange: this._disableRange }); this._isRangeSupported = allowRangeRequests; this._contentLength = suggestedLength || this._contentLength; this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader); }; this._request = null; if (this._url.protocol === \"http:\") { this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse); } else { this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse); } this._request.on(\"error\", reason => { this._storedError = reason; this._headersCapability.reject(reason); }); this._request.end(); } } class PDFNodeStreamRangeReader extends BaseRangeReader { constructor(stream, start, end) { super(stream); this._httpHeaders = {}; for (const property in stream.httpHeaders) { const value = stream.httpHeaders[property]; if (typeof value === \"undefined\") { continue; } this._httpHeaders[property] = value; } this._httpHeaders.Range = `bytes=${start}-${end - 1}`; const handleResponse = response => { if (response.statusCode === 404) { const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`); this._storedError = error; return; } this._setReadableStream(response); }; this._request = null; if (this._url.protocol === \"http:\") { this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse); } else { this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse); } this._request.on(\"error\", reason => { this._storedError = reason; }); this._request.end(); } } class PDFNodeStreamFsFullReader extends BaseFullReader { constructor(stream) { super(stream); let path = decodeURIComponent(this._url.path); if (fileUriRegex.test(this._url.href)) { path = path.replace(/^\\//, \"\"); } fs.lstat(path, (error, stat) => { if (error) { if (error.code === \"ENOENT\") { error = new _util.MissingPDFException(`Missing PDF \"${path}\".`); } this._storedError = error; this._headersCapability.reject(error); return; } this._contentLength = stat.size; this._setReadableStream(fs.createReadStream(path)); this._headersCapability.resolve(); }); } } class PDFNodeStreamFsRangeReader extends BaseRangeReader { constructor(stream, start, end) { super(stream); let path = decodeURIComponent(this._url.path); if (fileUriRegex.test(this._url.href)) { path = path.replace(/^\\//, \"\"); } this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 })); } } /***/ }), /* 25 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.createResponseStatusError = createResponseStatusError; exports.extractFilenameFromHeader = extractFilenameFromHeader; exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities; exports.validateResponseStatus = validateResponseStatus; var _util = __w_pdfjs_require__(1); var _content_disposition = __w_pdfjs_require__(26); var _display_utils = __w_pdfjs_require__(5); function validateRangeRequestCapabilities({ getResponseHeader, isHttp, rangeChunkSize, disableRange }) { const returnValues = { allowRangeRequests: false, suggestedLength: undefined }; const length = parseInt(getResponseHeader(\"Content-Length\"), 10); if (!Number.isInteger(length)) { return returnValues; } returnValues.suggestedLength = length; if (length { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader; var _util = __w_pdfjs_require__(1); function getFilenameFromContentDispositionHeader(contentDisposition) { let needsEncodingFixup = true; let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition); if (tmp) { tmp = tmp[1]; let filename = rfc2616unquote(tmp); filename = unescape(filename); filename = rfc5987decode(filename); filename = rfc2047decode(filename); return fixupEncoding(filename); } tmp = rfc2231getparam(contentDisposition); if (tmp) { const filename = rfc2047decode(tmp); return fixupEncoding(filename); } tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition); if (tmp) { tmp = tmp[1]; let filename = rfc2616unquote(tmp); filename = rfc2047decode(filename); return fixupEncoding(filename); } function toParamRegExp(attributePattern, flags) { return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags); } function textdecode(encoding, value) { if (encoding) { if (!/^[\\x00-\\xFF]+$/.test(value)) { return value; } try { const decoder = new TextDecoder(encoding, { fatal: true }); const buffer = (0, _util.stringToBytes)(value); value = decoder.decode(buffer); needsEncodingFixup = false; } catch (e) {} } return value; } function fixupEncoding(value) { if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) { value = textdecode(\"utf-8\", value); if (needsEncodingFixup) { value = textdecode(\"iso-8859-1\", value); } } return value; } function rfc2231getparam(contentDispositionStr) { const matches = []; let match; const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\"); while ((match = iter.exec(contentDispositionStr)) !== null) { let [, n, quot, part] = match; n = parseInt(n, 10); if (n in matches) { if (n === 0) { break; } continue; } matches[n] = [quot, part]; } const parts = []; for (let n = 0; n < matches.length; ++n) { if (!(n in matches)) { break; } let [quot, part] = matches[n]; part = rfc2616unquote(part); if (quot) { part = unescape(part); if (n === 0) { part = rfc5987decode(part); } } parts.push(part); } return parts.join(\"\"); } function rfc2616unquote(value) { if (value.startsWith('\"')) { const parts = value.slice(1).split('\\\\\"'); for (let i = 0; i < parts.length; ++i) { const quotindex = parts[i].indexOf('\"'); if (quotindex !== -1) { parts[i] = parts[i].slice(0, quotindex); parts.length = i + 1; } parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\"); } value = parts.join('\"'); } return value; } function rfc5987decode(extvalue) { const encodingend = extvalue.indexOf(\"'\"); if (encodingend === -1) { return extvalue; } const encoding = extvalue.slice(0, encodingend); const langvalue = extvalue.slice(encodingend + 1); const value = langvalue.replace(/^[^']*'/, \"\"); return textdecode(encoding, value); } function rfc2047decode(value) { if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) { return value; } return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) { if (encoding === \"q\" || encoding === \"Q\") { text = text.replace(/_/g, \" \"); text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) { return String.fromCharCode(parseInt(hex, 16)); }); return textdecode(charset, text); } try { text = atob(text); } catch (e) {} return textdecode(charset, text); }); } return \"\"; } /***/ }), /* 27 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFNetworkStream = void 0; var _util = __w_pdfjs_require__(1); var _network_utils = __w_pdfjs_require__(25); ; const OK_RESPONSE = 200; const PARTIAL_CONTENT_RESPONSE = 206; function getArrayBuffer(xhr) { const data = xhr.response; if (typeof data !== \"string\") { return data; } const array = (0, _util.stringToBytes)(data); return array.buffer; } class NetworkManager { constructor(url, args = {}) { this.url = url; this.isHttp = /^https?:/i.test(url); this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null); this.withCredentials = args.withCredentials || false; this.getXhr = args.getXhr || function NetworkManager_getXhr() { return new XMLHttpRequest(); }; this.currXhrId = 0; this.pendingRequests = Object.create(null); } requestRange(begin, end, listeners) { const args = { begin, end }; for (const prop in listeners) { args[prop] = listeners[prop]; } return this.request(args); } requestFull(listeners) { return this.request(listeners); } request(args) { const xhr = this.getXhr(); const xhrId = this.currXhrId++; const pendingRequest = this.pendingRequests[xhrId] = { xhr }; xhr.open(\"GET\", this.url); xhr.withCredentials = this.withCredentials; for (const property in this.httpHeaders) { const value = this.httpHeaders[property]; if (typeof value === \"undefined\") { continue; } xhr.setRequestHeader(property, value); } if (this.isHttp && \"begin\" in args && \"end\" in args) { xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`); pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE; } else { pendingRequest.expectedStatus = OK_RESPONSE; } xhr.responseType = \"arraybuffer\"; if (args.onError) { xhr.onerror = function (evt) { args.onError(xhr.status); }; } xhr.onreadystatechange = this.onStateChange.bind(this, xhrId); xhr.onprogress = this.onProgress.bind(this, xhrId); pendingRequest.onHeadersReceived = args.onHeadersReceived; pendingRequest.onDone = args.onDone; pendingRequest.onError = args.onError; pendingRequest.onProgress = args.onProgress; xhr.send(null); return xhrId; } onProgress(xhrId, evt) { const pendingRequest = this.pendingRequests[xhrId]; if (!pendingRequest) { return; } pendingRequest.onProgress?.(evt); } onStateChange(xhrId, evt) { const pendingRequest = this.pendingRequests[xhrId]; if (!pendingRequest) { return; } const xhr = pendingRequest.xhr; if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) { pendingRequest.onHeadersReceived(); delete pendingRequest.onHeadersReceived; } if (xhr.readyState !== 4) { return; } if (!(xhrId in this.pendingRequests)) { return; } delete this.pendingRequests[xhrId]; if (xhr.status === 0 && this.isHttp) { pendingRequest.onError?.(xhr.status); return; } const xhrStatus = xhr.status || OK_RESPONSE; const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE; if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) { pendingRequest.onError?.(xhr.status); return; } const chunk = getArrayBuffer(xhr); if (xhrStatus === PARTIAL_CONTENT_RESPONSE) { const rangeHeader = xhr.getResponseHeader(\"Content-Range\"); const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader); pendingRequest.onDone({ begin: parseInt(matches[1], 10), chunk }); } else if (chunk) { pendingRequest.onDone({ begin: 0, chunk }); } else { pendingRequest.onError?.(xhr.status); } } getRequestXhr(xhrId) { return this.pendingRequests[xhrId].xhr; } isPendingRequest(xhrId) { return xhrId in this.pendingRequests; } abortRequest(xhrId) { const xhr = this.pendingRequests[xhrId].xhr; delete this.pendingRequests[xhrId]; xhr.abort(); } } class PDFNetworkStream { constructor(source) { this._source = source; this._manager = new NetworkManager(source.url, { httpHeaders: source.httpHeaders, withCredentials: source.withCredentials }); this._rangeChunkSize = source.rangeChunkSize; this._fullRequestReader = null; this._rangeRequestReaders = []; } _onRangeRequestReaderClosed(reader) { const i = this._rangeRequestReaders.indexOf(reader); if (i >= 0) { this._rangeRequestReaders.splice(i, 1); } } getFullReader() { (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\"); this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source); return this._fullRequestReader; } getRangeReader(begin, end) { const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end); reader.onClosed = this._onRangeRequestReaderClosed.bind(this); this._rangeRequestReaders.push(reader); return reader; } cancelAllRequests(reason) { this._fullRequestReader?.cancel(reason); for (const reader of this._rangeRequestReaders.slice(0)) { reader.cancel(reason); } } } exports.PDFNetworkStream = PDFNetworkStream; class PDFNetworkStreamFullRequestReader { constructor(manager, source) { this._manager = manager; const args = { onHeadersReceived: this._onHeadersReceived.bind(this), onDone: this._onDone.bind(this), onError: this._onError.bind(this), onProgress: this._onProgress.bind(this) }; this._url = source.url; this._fullRequestId = manager.requestFull(args); this._headersReceivedCapability = (0, _util.createPromiseCapability)(); this._disableRange = source.disableRange || false; this._contentLength = source.length; this._rangeChunkSize = source.rangeChunkSize; if (!this._rangeChunkSize && !this._disableRange) { this._disableRange = true; } this._isStreamingSupported = false; this._isRangeSupported = false; this._cachedChunks = []; this._requests = []; this._done = false; this._storedError = undefined; this._filename = null; this.onProgress = null; } _onHeadersReceived() { const fullRequestXhrId = this._fullRequestId; const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId); const getResponseHeader = name => { return fullRequestXhr.getResponseHeader(name); }; const { allowRangeRequests, suggestedLength } = (0, _network_utils.validateRangeRequestCapabilities)({ getResponseHeader, isHttp: this._manager.isHttp, rangeChunkSize: this._rangeChunkSize, disableRange: this._disableRange }); if (allowRangeRequests) { this._isRangeSupported = true; } this._contentLength = suggestedLength || this._contentLength; this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader); if (this._isRangeSupported) { this._manager.abortRequest(fullRequestXhrId); } this._headersReceivedCapability.resolve(); } _onDone(data) { if (data) { if (this._requests.length > 0) { const requestCapability = this._requests.shift(); requestCapability.resolve({ value: data.chunk, done: false }); } else { this._cachedChunks.push(data.chunk); } } this._done = true; if (this._cachedChunks.length > 0) { return; } for (const requestCapability of this._requests) { requestCapability.resolve({ value: undefined, done: true }); } this._requests.length = 0; } _onError(status) { this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url); this._headersReceivedCapability.reject(this._storedError); for (const requestCapability of this._requests) { requestCapability.reject(this._storedError); } this._requests.length = 0; this._cachedChunks.length = 0; } _onProgress(evt) { this.onProgress?.({ loaded: evt.loaded, total: evt.lengthComputable ? evt.total : this._contentLength }); } get filename() { return this._filename; } get isRangeSupported() { return this._isRangeSupported; } get isStreamingSupported() { return this._isStreamingSupported; } get contentLength() { return this._contentLength; } get headersReady() { return this._headersReceivedCapability.promise; } async read() { if (this._storedError) { throw this._storedError; } if (this._cachedChunks.length > 0) { const chunk = this._cachedChunks.shift(); return { value: chunk, done: false }; } if (this._done) { return { value: undefined, done: true }; } const requestCapability = (0, _util.createPromiseCapability)(); this._requests.push(requestCapability); return requestCapability.promise; } cancel(reason) { this._done = true; this._headersReceivedCapability.reject(reason); for (const requestCapability of this._requests) { requestCapability.resolve({ value: undefined, done: true }); } this._requests.length = 0; if (this._manager.isPendingRequest(this._fullRequestId)) { this._manager.abortRequest(this._fullRequestId); } this._fullRequestReader = null; } } class PDFNetworkStreamRangeRequestReader { constructor(manager, begin, end) { this._manager = manager; const args = { onDone: this._onDone.bind(this), onError: this._onError.bind(this), onProgress: this._onProgress.bind(this) }; this._url = manager.url; this._requestId = manager.requestRange(begin, end, args); this._requests = []; this._queuedChunk = null; this._done = false; this._storedError = undefined; this.onProgress = null; this.onClosed = null; } _close() { this.onClosed?.(this); } _onDone(data) { const chunk = data.chunk; if (this._requests.length > 0) { const requestCapability = this._requests.shift(); requestCapability.resolve({ value: chunk, done: false }); } else { this._queuedChunk = chunk; } this._done = true; for (const requestCapability of this._requests) { requestCapability.resolve({ value: undefined, done: true }); } this._requests.length = 0; this._close(); } _onError(status) { this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url); for (const requestCapability of this._requests) { requestCapability.reject(this._storedError); } this._requests.length = 0; this._queuedChunk = null; } _onProgress(evt) { if (!this.isStreamingSupported) { this.onProgress?.({ loaded: evt.loaded }); } } get isStreamingSupported() { return false; } async read() { if (this._storedError) { throw this._storedError; } if (this._queuedChunk !== null) { const chunk = this._queuedChunk; this._queuedChunk = null; return { value: chunk, done: false }; } if (this._done) { return { value: undefined, done: true }; } const requestCapability = (0, _util.createPromiseCapability)(); this._requests.push(requestCapability); return requestCapability.promise; } cancel(reason) { this._done = true; for (const requestCapability of this._requests) { requestCapability.resolve({ value: undefined, done: true }); } this._requests.length = 0; if (this._manager.isPendingRequest(this._requestId)) { this._manager.abortRequest(this._requestId); } this._close(); } } /***/ }), /* 28 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFFetchStream = void 0; var _util = __w_pdfjs_require__(1); var _network_utils = __w_pdfjs_require__(25); ; function createFetchOptions(headers, withCredentials, abortController) { return { method: \"GET\", headers, signal: abortController?.signal, mode: \"cors\", credentials: withCredentials ? \"include\" : \"same-origin\", redirect: \"follow\" }; } function createHeaders(httpHeaders) { const headers = new Headers(); for (const property in httpHeaders) { const value = httpHeaders[property]; if (typeof value === \"undefined\") { continue; } headers.append(property, value); } return headers; } class PDFFetchStream { constructor(source) { this.source = source; this.isHttp = /^https?:/i.test(source.url); this.httpHeaders = this.isHttp && source.httpHeaders || {}; this._fullRequestReader = null; this._rangeRequestReaders = []; } get _progressiveDataLength() { return this._fullRequestReader?._loaded ?? 0; } getFullReader() { (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\"); this._fullRequestReader = new PDFFetchStreamReader(this); return this._fullRequestReader; } getRangeReader(begin, end) { if (end { if (!(0, _network_utils.validateResponseStatus)(response.status)) { throw (0, _network_utils.createResponseStatusError)(response.status, url); } this._reader = response.body.getReader(); this._headersCapability.resolve(); const getResponseHeader = name => { return response.headers.get(name); }; const { allowRangeRequests, suggestedLength } = (0, _network_utils.validateRangeRequestCapabilities)({ getResponseHeader, isHttp: this._stream.isHttp, rangeChunkSize: this._rangeChunkSize, disableRange: this._disableRange }); this._isRangeSupported = allowRangeRequests; this._contentLength = suggestedLength || this._contentLength; this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader); if (!this._isStreamingSupported && this._isRangeSupported) { this.cancel(new _util.AbortException(\"Streaming is disabled.\")); } }).catch(this._headersCapability.reject); this.onProgress = null; } get headersReady() { return this._headersCapability.promise; } get filename() { return this._filename; } get contentLength() { return this._contentLength; } get isRangeSupported() { return this._isRangeSupported; } get isStreamingSupported() { return this._isStreamingSupported; } async read() { await this._headersCapability.promise; const { value, done } = await this._reader.read(); if (done) { return { value, done }; } this._loaded += value.byteLength; if (this.onProgress) { this.onProgress({ loaded: this._loaded, total: this._contentLength }); } const buffer = new Uint8Array(value).buffer; return { value: buffer, done: false }; } cancel(reason) { if (this._reader) { this._reader.cancel(reason); } if (this._abortController) { this._abortController.abort(); } } } class PDFFetchStreamRangeReader { constructor(stream, begin, end) { this._stream = stream; this._reader = null; this._loaded = 0; const source = stream.source; this._withCredentials = source.withCredentials || false; this._readCapability = (0, _util.createPromiseCapability)(); this._isStreamingSupported = !source.disableStream; if (typeof AbortController !== \"undefined\") { this._abortController = new AbortController(); } this._headers = createHeaders(this._stream.httpHeaders); this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`); const url = source.url; fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => { if (!(0, _network_utils.validateResponseStatus)(response.status)) { throw (0, _network_utils.createResponseStatusError)(response.status, url); } this._readCapability.resolve(); this._reader = response.body.getReader(); }).catch(this._readCapability.reject); this.onProgress = null; } get isStreamingSupported() { return this._isStreamingSupported; } async read() { await this._readCapability.promise; const { value, done } = await this._reader.read(); if (done) { return { value, done }; } this._loaded += value.byteLength; if (this.onProgress) { this.onProgress({ loaded: this._loaded }); } const buffer = new Uint8Array(value).buffer; return { value: buffer, done: false }; } cancel(reason) { if (this._reader) { this._reader.cancel(reason); } if (this._abortController) { this._abortController.abort(); } } } /***/ }) /******/ ]); /************************************************************************/ /******/ // The module cache /******/ var __webpack_module_cache__ = {}; /******/ /******/ // The require function /******/ function __w_pdfjs_require__(moduleId) { /******/ // Check if module is in cache /******/ var cachedModule = __webpack_module_cache__[moduleId]; /******/ if (cachedModule !== undefined) { /******/ return cachedModule.exports; /******/ } /******/ // Create a new module (and put it into the cache) /******/ var module = __webpack_module_cache__[moduleId] = { /******/ // no module.id needed /******/ // no module.loaded needed /******/ exports: {} /******/ }; /******/ /******/ // Execute the module function /******/ __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__); /******/ /******/ // Return the exports of the module /******/ return module.exports; /******/ } /******/ /************************************************************************/ var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk. (() => { var exports = __webpack_exports__; Object.defineProperty(exports, \"__esModule\", ({ value: true })); Object.defineProperty(exports, \"AnnotationLayer\", ({ enumerable: true, get: function () { return _annotation_layer.AnnotationLayer; } })); Object.defineProperty(exports, \"AnnotationMode\", ({ enumerable: true, get: function () { return _util.AnnotationMode; } })); Object.defineProperty(exports, \"CMapCompressionType\", ({ enumerable: true, get: function () { return _util.CMapCompressionType; } })); Object.defineProperty(exports, \"GlobalWorkerOptions\", ({ enumerable: true, get: function () { return _worker_options.GlobalWorkerOptions; } })); Object.defineProperty(exports, \"InvalidPDFException\", ({ enumerable: true, get: function () { return _util.InvalidPDFException; } })); Object.defineProperty(exports, \"LoopbackPort\", ({ enumerable: true, get: function () { return _api.LoopbackPort; } })); Object.defineProperty(exports, \"MissingPDFException\", ({ enumerable: true, get: function () { return _util.MissingPDFException; } })); Object.defineProperty(exports, \"OPS\", ({ enumerable: true, get: function () { return _util.OPS; } })); Object.defineProperty(exports, \"PDFDataRangeTransport\", ({ enumerable: true, get: function () { return _api.PDFDataRangeTransport; } })); Object.defineProperty(exports, \"PDFDateString\", ({ enumerable: true, get: function () { return _display_utils.PDFDateString; } })); Object.defineProperty(exports, \"PDFWorker\", ({ enumerable: true, get: function () { return _api.PDFWorker; } })); Object.defineProperty(exports, \"PasswordResponses\", ({ enumerable: true, get: function () { return _util.PasswordResponses; } })); Object.defineProperty(exports, \"PermissionFlag\", ({ enumerable: true, get: function () { return _util.PermissionFlag; } })); Object.defineProperty(exports, \"PixelsPerInch\", ({ enumerable: true, get: function () { return _display_utils.PixelsPerInch; } })); Object.defineProperty(exports, \"RenderingCancelledException\", ({ enumerable: true, get: function () { return _display_utils.RenderingCancelledException; } })); Object.defineProperty(exports, \"SVGGraphics\", ({ enumerable: true, get: function () { return _svg.SVGGraphics; } })); Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", ({ enumerable: true, get: function () { return _util.UNSUPPORTED_FEATURES; } })); Object.defineProperty(exports, \"UnexpectedResponseException\", ({ enumerable: true, get: function () { return _util.UnexpectedResponseException; } })); Object.defineProperty(exports, \"Util\", ({ enumerable: true, get: function () { return _util.Util; } })); Object.defineProperty(exports, \"VerbosityLevel\", ({ enumerable: true, get: function () { return _util.VerbosityLevel; } })); Object.defineProperty(exports, \"XfaLayer\", ({ enumerable: true, get: function () { return _xfa_layer.XfaLayer; } })); Object.defineProperty(exports, \"build\", ({ enumerable: true, get: function () { return _api.build; } })); Object.defineProperty(exports, \"createPromiseCapability\", ({ enumerable: true, get: function () { return _util.createPromiseCapability; } })); Object.defineProperty(exports, \"createValidAbsoluteUrl\", ({ enumerable: true, get: function () { return _util.createValidAbsoluteUrl; } })); Object.defineProperty(exports, \"getDocument\", ({ enumerable: true, get: function () { return _api.getDocument; } })); Object.defineProperty(exports, \"getFilenameFromUrl\", ({ enumerable: true, get: function () { return _display_utils.getFilenameFromUrl; } })); Object.defineProperty(exports, \"getPdfFilenameFromUrl\", ({ enumerable: true, get: function () { return _display_utils.getPdfFilenameFromUrl; } })); Object.defineProperty(exports, \"getXfaPageViewport\", ({ enumerable: true, get: function () { return _display_utils.getXfaPageViewport; } })); Object.defineProperty(exports, \"isPdfFile\", ({ enumerable: true, get: function () { return _display_utils.isPdfFile; } })); Object.defineProperty(exports, \"loadScript\", ({ enumerable: true, get: function () { return _display_utils.loadScript; } })); Object.defineProperty(exports, \"renderTextLayer\", ({ enumerable: true, get: function () { return _text_layer.renderTextLayer; } })); Object.defineProperty(exports, \"shadow\", ({ enumerable: true, get: function () { return _util.shadow; } })); Object.defineProperty(exports, \"version\", ({ enumerable: true, get: function () { return _api.version; } })); var _util = __w_pdfjs_require__(1); var _api = __w_pdfjs_require__(4); var _display_utils = __w_pdfjs_require__(5); var _annotation_layer = __w_pdfjs_require__(19); var _worker_options = __w_pdfjs_require__(13); var _is_node = __w_pdfjs_require__(3); var _text_layer = __w_pdfjs_require__(22); var _svg = __w_pdfjs_require__(23); var _xfa_layer = __w_pdfjs_require__(21); const pdfjsVersion = '2.14.0'; const pdfjsBuild = '75ac897'; { if (_is_node.isNodeJS) { const { PDFNodeStream } = __w_pdfjs_require__(24); (0, _api.setPDFNetworkStreamFactory)(params => { return new PDFNodeStream(params); }); } else { const { PDFNetworkStream } = __w_pdfjs_require__(27); const { PDFFetchStream } = __w_pdfjs_require__(28); (0, _api.setPDFNetworkStreamFactory)(params => { if ((0, _display_utils.isValidFetchUrl)(params.url)) { return new PDFFetchStream(params); } return new PDFNetworkStream(params); }); } } })(); /******/ return __webpack_exports__; /******/ })() ; }); //# sourceMappingURL=pdf.js.map"},{"path":"/lib/pdf/web/debugger.css","content":"/* Copyright 2014 Mozilla Foundation * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ #PDFBug { background-color: rgba(255, 255, 255, 1); border: 1px solid rgba(102, 102, 102, 1); position: fixed; top: 32px; right: 0; bottom: 0; font-size: 10px; padding: 0; width: 300px; } #PDFBug .controls { background: rgba(238, 238, 238, 1); border-bottom: 1px solid rgba(102, 102, 102, 1); padding: 3px; } #PDFBug .panels { bottom: 0; left: 0; overflow: auto; position: absolute; right: 0; top: 27px; } #PDFBug .panels > div { padding: 5px; } #PDFBug button.active { font-weight: bold; } .debuggerShowText, .debuggerHideText:hover { background-color: rgba(255, 255, 0, 1); } #PDFBug .stats { font-family: courier; font-size: 10px; white-space: pre; } #PDFBug .stats .title { font-weight: bold; } #PDFBug table { font-size: 10px; white-space: pre; } #PDFBug table.showText { border-collapse: collapse; text-align: center; } #PDFBug table.showText, #PDFBug table.showText tr, #PDFBug table.showText td { border: 1px solid black; padding: 1px; } #PDFBug table.showText td.advance { color: grey; } #viewer.textLayer-visible .textLayer { opacity: 1; } #viewer.textLayer-visible .canvasWrapper { background-color: rgba(128, 255, 128, 1); } #viewer.textLayer-visible .canvasWrapper canvas { mix-blend-mode: screen; } #viewer.textLayer-visible .textLayer span { background-color: rgba(255, 255, 0, 0.1); color: rgba(0, 0, 0, 1); border: solid 1px rgba(255, 0, 0, 0.5); box-sizing: border-box; } #viewer.textLayer-hover .textLayer span:hover { background-color: rgba(255, 255, 255, 1); color: rgba(0, 0, 0, 1); } #viewer.textLayer-shadow .textLayer span { background-color: rgba(255, 255, 255, 0.6); color: rgba(0, 0, 0, 1); }"},{"path":"/lib/pdf/web/debugger.js","content":"/* Copyright 2012 Mozilla Foundation * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ let opMap; const FontInspector = (function FontInspectorClosure() { let fonts; let active = false; const fontAttribute = \"data-font-name\"; function removeSelection() { const divs = document.querySelectorAll(`span[${fontAttribute}]`); for (const div of divs) { div.className = \"\"; } } function resetSelection() { const divs = document.querySelectorAll(`span[${fontAttribute}]`); for (const div of divs) { div.className = \"debuggerHideText\"; } } function selectFont(fontName, show) { const divs = document.querySelectorAll( `span[${fontAttribute}=${fontName}]` ); for (const div of divs) { div.className = show ? \"debuggerShowText\" : \"debuggerHideText\"; } } function textLayerClick(e) { if ( !e.target.dataset.fontName || e.target.tagName.toUpperCase() !== \"SPAN\" ) { return; } const fontName = e.target.dataset.fontName; const selects = document.getElementsByTagName(\"input\"); for (const select of selects) { if (select.dataset.fontName !== fontName) { continue; } select.checked = !select.checked; selectFont(fontName, select.checked); select.scrollIntoView(); } } return { // Properties/functions needed by PDFBug. id: \"FontInspector\", name: \"Font Inspector\", panel: null, manager: null, init(pdfjsLib) { const panel = this.panel; const tmp = document.createElement(\"button\"); tmp.addEventListener(\"click\", resetSelection); tmp.textContent = \"Refresh\"; panel.appendChild(tmp); fonts = document.createElement(\"div\"); panel.appendChild(fonts); }, cleanup() { fonts.textContent = \"\"; }, enabled: false, get active() { return active; }, set active(value) { active = value; if (active) { document.body.addEventListener(\"click\", textLayerClick, true); resetSelection(); } else { document.body.removeEventListener(\"click\", textLayerClick, true); removeSelection(); } }, // FontInspector specific functions. fontAdded(fontObj, url) { function properties(obj, list) { const moreInfo = document.createElement(\"table\"); for (const entry of list) { const tr = document.createElement(\"tr\"); const td1 = document.createElement(\"td\"); td1.textContent = entry; tr.appendChild(td1); const td2 = document.createElement(\"td\"); td2.textContent = obj[entry].toString(); tr.appendChild(td2); moreInfo.appendChild(tr); } return moreInfo; } const moreInfo = properties(fontObj, [\"name\", \"type\"]); const fontName = fontObj.loadedName; const font = document.createElement(\"div\"); const name = document.createElement(\"span\"); name.textContent = fontName; const download = document.createElement(\"a\"); if (url) { url = /url\\(['\"]?([^)\"']+)/.exec(url); download.href = url[1]; } else if (fontObj.data) { download.href = URL.createObjectURL( new Blob([fontObj.data], { type: fontObj.mimeType }) ); } download.textContent = \"Download\"; const logIt = document.createElement(\"a\"); logIt.href = \"\"; logIt.textContent = \"Log\"; logIt.addEventListener(\"click\", function (event) { event.preventDefault(); console.log(fontObj); }); const select = document.createElement(\"input\"); select.setAttribute(\"type\", \"checkbox\"); select.dataset.fontName = fontName; select.addEventListener(\"click\", function () { selectFont(fontName, select.checked); }); font.appendChild(select); font.appendChild(name); font.appendChild(document.createTextNode(\" \")); font.appendChild(download); font.appendChild(document.createTextNode(\" \")); font.appendChild(logIt); font.appendChild(moreInfo); fonts.appendChild(font); // Somewhat of a hack, should probably add a hook for when the text layer // is done rendering. setTimeout(() => { if (this.active) { resetSelection(); } }, 2000); }, }; })(); // Manages all the page steppers. const StepperManager = (function StepperManagerClosure() { let steppers = []; let stepperDiv = null; let stepperControls = null; let stepperChooser = null; let breakPoints = Object.create(null); return { // Properties/functions needed by PDFBug. id: \"Stepper\", name: \"Stepper\", panel: null, manager: null, init(pdfjsLib) { const self = this; stepperControls = document.createElement(\"div\"); stepperChooser = document.createElement(\"select\"); stepperChooser.addEventListener(\"change\", function (event) { self.selectStepper(this.value); }); stepperControls.appendChild(stepperChooser); stepperDiv = document.createElement(\"div\"); this.panel.appendChild(stepperControls); this.panel.appendChild(stepperDiv); if (sessionStorage.getItem(\"pdfjsBreakPoints\")) { breakPoints = JSON.parse(sessionStorage.getItem(\"pdfjsBreakPoints\")); } opMap = Object.create(null); for (const key in pdfjsLib.OPS) { opMap[pdfjsLib.OPS[key]] = key; } }, cleanup() { stepperChooser.textContent = \"\"; stepperDiv.textContent = \"\"; steppers = []; }, enabled: false, active: false, // Stepper specific functions. create(pageIndex) { const debug = document.createElement(\"div\"); debug.id = \"stepper\" + pageIndex; debug.hidden = true; debug.className = \"stepper\"; stepperDiv.appendChild(debug); const b = document.createElement(\"option\"); b.textContent = \"Page \" + (pageIndex + 1); b.value = pageIndex; stepperChooser.appendChild(b); const initBreakPoints = breakPoints[pageIndex] || []; const stepper = new Stepper(debug, pageIndex, initBreakPoints); steppers.push(stepper); if (steppers.length === 1) { this.selectStepper(pageIndex, false); } return stepper; }, selectStepper(pageIndex, selectPanel) { pageIndex |= 0; if (selectPanel) { this.manager.selectPanel(this); } for (const stepper of steppers) { stepper.panel.hidden = stepper.pageIndex !== pageIndex; } for (const option of stepperChooser.options) { option.selected = (option.value | 0) === pageIndex; } }, saveBreakPoints(pageIndex, bps) { breakPoints[pageIndex] = bps; sessionStorage.setItem(\"pdfjsBreakPoints\", JSON.stringify(breakPoints)); }, }; })(); // The stepper for each page's operatorList. const Stepper = (function StepperClosure() { // Shorter way to create element and optionally set textContent. function c(tag, textContent) { const d = document.createElement(tag); if (textContent) { d.textContent = textContent; } return d; } function simplifyArgs(args) { if (typeof args === \"string\") { const MAX_STRING_LENGTH = 75; return args.length"},{"path":"/lib/pdf/web/viewer.css","content":"/* Copyright 2014 Mozilla Foundation * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ .textLayer { position: absolute; text-align: initial; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; opacity: 0.2; line-height: 1; -webkit-text-size-adjust: none; -moz-text-size-adjust: none; text-size-adjust: none; forced-color-adjust: none; } .textLayer span, .textLayer br { color: transparent; position: absolute; white-space: pre; cursor: text; transform-origin: 0% 0%; } /* Only necessary in Google Chrome, see issue 14205, and most unfortunately * the problem doesn't show up in \"text\" reference tests. */ .textLayer span.markedContent { top: 0; height: 0; } .textLayer .highlight { margin: -1px; padding: 1px; background-color: rgba(180, 0, 170, 1); border-radius: 4px; } .textLayer .highlight.appended { position: initial; } .textLayer .highlight.begin { border-radius: 4px 0 0 4px; } .textLayer .highlight.end { border-radius: 0 4px 4px 0; } .textLayer .highlight.middle { border-radius: 0; } .textLayer .highlight.selected { background-color: rgba(0, 100, 0, 1); } .textLayer ::-moz-selection { background: rgba(0, 0, 255, 1); } .textLayer ::selection { background: rgba(0, 0, 255, 1); } /* Avoids https://github.com/mozilla/pdf.js/issues/13840 in Chrome */ .textLayer br::-moz-selection { background: transparent; } .textLayer br::selection { background: transparent; } .textLayer .endOfContent { display: block; position: absolute; left: 0; top: 100%; right: 0; bottom: 0; z-index: -1; cursor: default; -webkit-user-select: none; -moz-user-select: none; user-select: none; } .textLayer .endOfContent.active { top: 0; } :root { --annotation-unfocused-field-background: url(\"data:image/svg+xml;charset=UTF-8,\"); } .annotationLayer section { position: absolute; text-align: initial; } .annotationLayer .linkAnnotation > a, .annotationLayer .buttonWidgetAnnotation.pushButton > a { position: absolute; font-size: 1em; top: 0; left: 0; width: 100%; height: 100%; } .annotationLayer .buttonWidgetAnnotation.pushButton > canvas { position: relative; top: 0; left: 0; z-index: -1; } .annotationLayer .linkAnnotation > a:hover, .annotationLayer .buttonWidgetAnnotation.pushButton > a:hover { opacity: 0.2; background: rgba(255, 255, 0, 1); box-shadow: 0 2px 10px rgba(255, 255, 0, 1); } .annotationLayer .textAnnotation img { position: absolute; cursor: pointer; } .annotationLayer .textWidgetAnnotation input, .annotationLayer .textWidgetAnnotation textarea, .annotationLayer .choiceWidgetAnnotation select, .annotationLayer .buttonWidgetAnnotation.checkBox input, .annotationLayer .buttonWidgetAnnotation.radioButton input { background-image: var(--annotation-unfocused-field-background); border: 1px solid transparent; box-sizing: border-box; font-size: 9px; height: 100%; margin: 0; padding: 0 3px; vertical-align: top; width: 100%; } .annotationLayer .choiceWidgetAnnotation select option { padding: 0; } .annotationLayer .buttonWidgetAnnotation.radioButton input { border-radius: 50%; } .annotationLayer .textWidgetAnnotation textarea { font: message-box; font-size: 9px; resize: none; } .annotationLayer .textWidgetAnnotation input[disabled], .annotationLayer .textWidgetAnnotation textarea[disabled], .annotationLayer .choiceWidgetAnnotation select[disabled], .annotationLayer .buttonWidgetAnnotation.checkBox input[disabled], .annotationLayer .buttonWidgetAnnotation.radioButton input[disabled] { background: none; border: 1px solid transparent; cursor: not-allowed; } .annotationLayer .textWidgetAnnotation input:hover, .annotationLayer .textWidgetAnnotation textarea:hover, .annotationLayer .choiceWidgetAnnotation select:hover, .annotationLayer .buttonWidgetAnnotation.checkBox input:hover, .annotationLayer .buttonWidgetAnnotation.radioButton input:hover { border: 1px solid rgba(0, 0, 0, 1); } .annotationLayer .textWidgetAnnotation input:focus, .annotationLayer .textWidgetAnnotation textarea:focus, .annotationLayer .choiceWidgetAnnotation select:focus { background: none; border: 1px solid transparent; } .annotationLayer .textWidgetAnnotation input :focus, .annotationLayer .textWidgetAnnotation textarea :focus, .annotationLayer .choiceWidgetAnnotation select :focus, .annotationLayer .buttonWidgetAnnotation.checkBox :focus, .annotationLayer .buttonWidgetAnnotation.radioButton :focus { background-image: none; background-color: transparent; outline: auto; } .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before, .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after, .annotationLayer .buttonWidgetAnnotation.radioButton input:checked:before { background-color: rgba(0, 0, 0, 1); content: \"\"; display: block; position: absolute; } .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before, .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after { height: 80%; left: 45%; width: 1px; } .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before { transform: rotate(45deg); } .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after { transform: rotate(-45deg); } .annotationLayer .buttonWidgetAnnotation.radioButton input:checked:before { border-radius: 50%; height: 50%; left: 30%; top: 20%; width: 50%; } .annotationLayer .textWidgetAnnotation input.comb { font-family: monospace; padding-left: 2px; padding-right: 0; } .annotationLayer .textWidgetAnnotation input.comb:focus { /* * Letter spacing is placed on the right side of each character. Hence, the * letter spacing of the last character may be placed outside the visible * area, causing horizontal scrolling. We avoid this by extending the width * when the element has focus and revert this when it loses focus. */ width: 103%; } .annotationLayer .buttonWidgetAnnotation.checkBox input, .annotationLayer .buttonWidgetAnnotation.radioButton input { -webkit-appearance: none; -moz-appearance: none; appearance: none; padding: 0; } .annotationLayer .popupWrapper { position: absolute; width: 20em; } .annotationLayer .popup { position: absolute; z-index: 200; max-width: 20em; background-color: rgba(255, 255, 153, 1); box-shadow: 0 2px 5px rgba(136, 136, 136, 1); border-radius: 2px; padding: 6px; margin-left: 5px; cursor: pointer; font: message-box; font-size: 9px; white-space: normal; word-wrap: break-word; } .annotationLayer .popup > * { font-size: 9px; } .annotationLayer .popup h1 { display: inline-block; } .annotationLayer .popupDate { display: inline-block; margin-left: 5px; } .annotationLayer .popupContent { border-top: 1px solid rgba(51, 51, 51, 1); margin-top: 2px; padding-top: 2px; } .annotationLayer .richText > * { white-space: pre-wrap; } .annotationLayer .highlightAnnotation, .annotationLayer .underlineAnnotation, .annotationLayer .squigglyAnnotation, .annotationLayer .strikeoutAnnotation, .annotationLayer .freeTextAnnotation, .annotationLayer .lineAnnotation svg line, .annotationLayer .squareAnnotation svg rect, .annotationLayer .circleAnnotation svg ellipse, .annotationLayer .polylineAnnotation svg polyline, .annotationLayer .polygonAnnotation svg polygon, .annotationLayer .caretAnnotation, .annotationLayer .inkAnnotation svg polyline, .annotationLayer .stampAnnotation, .annotationLayer .fileAttachmentAnnotation { cursor: pointer; } :root { --xfa-unfocused-field-background: url(\"data:image/svg+xml;charset=UTF-8,\"); } .xfaLayer .highlight { margin: -1px; padding: 1px; background-color: rgba(239, 203, 237, 1); border-radius: 4px; } .xfaLayer .highlight.appended { position: initial; } .xfaLayer .highlight.begin { border-radius: 4px 0 0 4px; } .xfaLayer .highlight.end { border-radius: 0 4px 4px 0; } .xfaLayer .highlight.middle { border-radius: 0; } .xfaLayer .highlight.selected { background-color: rgba(203, 223, 203, 1); } .xfaLayer ::-moz-selection { background: rgba(0, 0, 255, 1); } .xfaLayer ::selection { background: rgba(0, 0, 255, 1); } .xfaPage { overflow: hidden; position: relative; } .xfaContentarea { position: absolute; } .xfaPrintOnly { display: none; } .xfaLayer { position: absolute; text-align: initial; top: 0; left: 0; transform-origin: 0 0; line-height: 1.2; } .xfaLayer * { color: inherit; font: inherit; font-style: inherit; font-weight: inherit; font-kerning: inherit; letter-spacing: -0.01px; text-align: inherit; text-decoration: inherit; box-sizing: border-box; background-color: transparent; padding: 0; margin: 0; pointer-events: auto; line-height: inherit; } .xfaLayer div { pointer-events: none; } .xfaLayer svg { pointer-events: none; } .xfaLayer svg * { pointer-events: none; } .xfaLayer a { color: blue; } .xfaRich li { margin-left: 3em; } .xfaFont { color: black; font-weight: normal; font-kerning: none; font-size: 10px; font-style: normal; letter-spacing: 0; text-decoration: none; vertical-align: 0; } .xfaCaption { overflow: hidden; flex: 0 0 auto; } .xfaCaptionForCheckButton { overflow: hidden; flex: 1 1 auto; } .xfaLabel { height: 100%; width: 100%; } .xfaLeft { display: flex; flex-direction: row; align-items: center; } .xfaRight { display: flex; flex-direction: row-reverse; align-items: center; } .xfaLeft > .xfaCaption, .xfaLeft > .xfaCaptionForCheckButton, .xfaRight > .xfaCaption, .xfaRight > .xfaCaptionForCheckButton { max-height: 100%; } .xfaTop { display: flex; flex-direction: column; align-items: flex-start; } .xfaBottom { display: flex; flex-direction: column-reverse; align-items: flex-start; } .xfaTop > .xfaCaption, .xfaTop > .xfaCaptionForCheckButton, .xfaBottom > .xfaCaption, .xfaBottom > .xfaCaptionForCheckButton { width: 100%; } .xfaBorder { background-color: transparent; position: absolute; pointer-events: none; } .xfaWrapped { width: 100%; height: 100%; } .xfaTextfield:focus, .xfaSelect:focus { background-image: none; background-color: transparent; outline: auto; outline-offset: -1px; } .xfaCheckbox:focus, .xfaRadio:focus { outline: auto; } .xfaTextfield, .xfaSelect { height: 100%; width: 100%; flex: 1 1 auto; border: none; resize: none; background-image: var(--xfa-unfocused-field-background); } .xfaTop > .xfaTextfield, .xfaTop > .xfaSelect, .xfaBottom > .xfaTextfield, .xfaBottom > .xfaSelect { flex: 0 1 auto; } .xfaButton { cursor: pointer; width: 100%; height: 100%; border: none; text-align: center; } .xfaLink { width: 100%; height: 100%; position: absolute; top: 0; left: 0; } .xfaCheckbox, .xfaRadio { width: 100%; height: 100%; flex: 0 0 auto; border: none; } .xfaRich { white-space: pre-wrap; width: 100%; height: 100%; } .xfaImage { -o-object-position: left top; object-position: left top; -o-object-fit: contain; object-fit: contain; width: 100%; height: 100%; } .xfaLrTb, .xfaRlTb, .xfaTb { display: flex; flex-direction: column; align-items: stretch; } .xfaLr { display: flex; flex-direction: row; align-items: stretch; } .xfaRl { display: flex; flex-direction: row-reverse; align-items: stretch; } .xfaTb > div { justify-content: left; } .xfaPosition { position: relative; } .xfaArea { position: relative; } .xfaValignMiddle { display: flex; align-items: center; } .xfaTable { display: flex; flex-direction: column; align-items: stretch; } .xfaTable .xfaRow { display: flex; flex-direction: row; align-items: stretch; } .xfaTable .xfaRlRow { display: flex; flex-direction: row-reverse; align-items: stretch; flex: 1; } .xfaTable .xfaRlRow > div { flex: 1; } .xfaNonInteractive input, .xfaNonInteractive textarea, .xfaDisabled input, .xfaDisabled textarea, .xfaReadOnly input, .xfaReadOnly textarea { background: initial; } @media print { .xfaTextfield, .xfaSelect { background: transparent; } .xfaSelect { -webkit-appearance: none; -moz-appearance: none; appearance: none; text-indent: 1px; text-overflow: \"\"; } } :root { --pdfViewer-padding-bottom: 0; --page-margin: 1px auto -8px; --page-border: 9px solid transparent; --spreadHorizontalWrapped-margin-LR: -3.5px; --zoom-factor: 1; } @media screen and (forced-colors: active) { :root { --pdfViewer-padding-bottom: 9px; --page-margin: 9px auto 0; --page-border: none; --spreadHorizontalWrapped-margin-LR: 4.5px; } } .pdfViewer { padding-bottom: var(--pdfViewer-padding-bottom); } .pdfViewer .canvasWrapper { overflow: hidden; } .pdfViewer .page { direction: ltr; width: 816px; height: 1056px; margin: var(--page-margin); position: relative; overflow: visible; border: var(--page-border); background-clip: content-box; -o-border-image: url(images/shadow.png) 9 9 repeat; border-image: url(images/shadow.png) 9 9 repeat; background-color: rgba(255, 255, 255, 1); } .pdfViewer .dummyPage { position: relative; width: 0; /* The height is set via JS, see `BaseViewer.#ensurePageViewVisible`. */ } .pdfViewer.removePageBorders .page { margin: 0 auto 10px; border: none; } .pdfViewer.singlePageView { display: inline-block; } .pdfViewer.singlePageView .page { margin: 0; border: none; } .pdfViewer.scrollHorizontal, .pdfViewer.scrollWrapped, .spread { margin-left: 3.5px; margin-right: 3.5px; text-align: center; } .pdfViewer.scrollHorizontal, .spread { white-space: nowrap; } .pdfViewer.removePageBorders, .pdfViewer.scrollHorizontal .spread, .pdfViewer.scrollWrapped .spread { margin-left: 0; margin-right: 0; } .spread .page, .spread .dummyPage, .pdfViewer.scrollHorizontal .page, .pdfViewer.scrollWrapped .page, .pdfViewer.scrollHorizontal .spread, .pdfViewer.scrollWrapped .spread { display: inline-block; vertical-align: middle; } .spread .page, .pdfViewer.scrollHorizontal .page, .pdfViewer.scrollWrapped .page { margin-left: var(--spreadHorizontalWrapped-margin-LR); margin-right: var(--spreadHorizontalWrapped-margin-LR); } .pdfViewer.removePageBorders .spread .page, .pdfViewer.removePageBorders.scrollHorizontal .page, .pdfViewer.removePageBorders.scrollWrapped .page { margin-left: 5px; margin-right: 5px; } .pdfViewer .page canvas { margin: 0; display: block; } .pdfViewer .page canvas[hidden] { display: none; } .pdfViewer .page .loadingIcon { position: absolute; display: block; left: 0; top: 0; right: 0; bottom: 0; background: url(\"images/loading-icon.gif\") center no-repeat; } .pdfViewer .page .loadingIcon.notVisible { background: none; } .pdfViewer.enablePermissions .textLayer span { -webkit-user-select: none !important; -moz-user-select: none !important; user-select: none !important; cursor: not-allowed; } .pdfPresentationMode .pdfViewer { padding-bottom: 0; } .pdfPresentationMode .spread { margin: 0; } .pdfPresentationMode .pdfViewer .page { margin: 0 auto; border: 2px solid transparent; } :root { --dir-factor: 1; --sidebar-width: 200px; --sidebar-transition-duration: 200ms; --sidebar-transition-timing-function: ease; --scale-select-container-width: 140px; --scale-select-overflow: 22px; --loadingBar-end-offset: 0; --toolbar-icon-opacity: 0.7; --doorhanger-icon-opacity: 0.9; --main-color: rgba(12, 12, 13, 1); --body-bg-color: rgba(237, 237, 240, 1); --errorWrapper-bg-color: rgba(255, 110, 110, 1); /* -webkit-non-mozcentral */ --progressBar-color: rgba(10, 132, 255, 1); --progressBar-indeterminate-bg-color: rgba(221, 221, 222, 1); --progressBar-indeterminate-blend-color: rgba(116, 177, 239, 1); --scrollbar-color: auto; --scrollbar-bg-color: auto; --toolbar-icon-bg-color: rgba(0, 0, 0, 1); --toolbar-icon-hover-bg-color: rgba(0, 0, 0, 1); --sidebar-narrow-bg-color: rgba(237, 237, 240, 0.9); --sidebar-toolbar-bg-color: rgba(245, 246, 247, 1); --toolbar-bg-color: rgba(249, 249, 250, 1); --toolbar-border-color: rgba(204, 204, 204, 1); --button-hover-color: rgba(221, 222, 223, 1); --toggled-btn-color: rgba(0, 0, 0, 1); --toggled-btn-bg-color: rgba(0, 0, 0, 0.3); --toggled-hover-active-btn-color: rgba(0, 0, 0, 0.4); --dropdown-btn-bg-color: rgba(215, 215, 219, 1); --separator-color: rgba(0, 0, 0, 0.3); --field-color: rgba(6, 6, 6, 1); --field-bg-color: rgba(255, 255, 255, 1); --field-border-color: rgba(187, 187, 188, 1); --treeitem-color: rgba(0, 0, 0, 0.8); --treeitem-hover-color: rgba(0, 0, 0, 0.9); --treeitem-selected-color: rgba(0, 0, 0, 0.9); --treeitem-selected-bg-color: rgba(0, 0, 0, 0.25); --sidebaritem-bg-color: rgba(0, 0, 0, 0.15); --doorhanger-bg-color: rgba(255, 255, 255, 1); --doorhanger-border-color: rgba(12, 12, 13, 0.2); --doorhanger-hover-color: rgba(12, 12, 13, 1); --doorhanger-hover-bg-color: rgba(237, 237, 237, 1); --doorhanger-separator-color: rgba(222, 222, 222, 1); --dialog-button-border: 0 none; --dialog-button-bg-color: rgba(12, 12, 13, 0.1); --dialog-button-hover-bg-color: rgba(12, 12, 13, 0.3); --loading-icon: url(images/loading.svg); --treeitem-expanded-icon: url(images/treeitem-expanded.svg); --treeitem-collapsed-icon: url(images/treeitem-collapsed.svg); --toolbarButton-menuArrow-icon: url(images/toolbarButton-menuArrow.svg); --toolbarButton-sidebarToggle-icon: url(images/toolbarButton-sidebarToggle.svg); --toolbarButton-secondaryToolbarToggle-icon: url(images/toolbarButton-secondaryToolbarToggle.svg); --toolbarButton-pageUp-icon: url(images/toolbarButton-pageUp.svg); --toolbarButton-pageDown-icon: url(images/toolbarButton-pageDown.svg); --toolbarButton-zoomOut-icon: url(images/toolbarButton-zoomOut.svg); --toolbarButton-zoomIn-icon: url(images/toolbarButton-zoomIn.svg); --toolbarButton-presentationMode-icon: url(images/toolbarButton-presentationMode.svg); --toolbarButton-print-icon: url(images/toolbarButton-print.svg); --toolbarButton-openFile-icon: url(images/toolbarButton-openFile.svg); /* -webkit-non-mozcentral */ --toolbarButton-download-icon: url(images/toolbarButton-download.svg); --toolbarButton-bookmark-icon: url(images/toolbarButton-bookmark.svg); --toolbarButton-viewThumbnail-icon: url(images/toolbarButton-viewThumbnail.svg); --toolbarButton-viewOutline-icon: url(images/toolbarButton-viewOutline.svg); --toolbarButton-viewAttachments-icon: url(images/toolbarButton-viewAttachments.svg); --toolbarButton-viewLayers-icon: url(images/toolbarButton-viewLayers.svg); --toolbarButton-currentOutlineItem-icon: url(images/toolbarButton-currentOutlineItem.svg); --toolbarButton-search-icon: url(images/toolbarButton-search.svg); --findbarButton-previous-icon: url(images/findbarButton-previous.svg); --findbarButton-next-icon: url(images/findbarButton-next.svg); --secondaryToolbarButton-firstPage-icon: url(images/secondaryToolbarButton-firstPage.svg); --secondaryToolbarButton-lastPage-icon: url(images/secondaryToolbarButton-lastPage.svg); --secondaryToolbarButton-rotateCcw-icon: url(images/secondaryToolbarButton-rotateCcw.svg); --secondaryToolbarButton-rotateCw-icon: url(images/secondaryToolbarButton-rotateCw.svg); --secondaryToolbarButton-selectTool-icon: url(images/secondaryToolbarButton-selectTool.svg); --secondaryToolbarButton-handTool-icon: url(images/secondaryToolbarButton-handTool.svg); --secondaryToolbarButton-scrollPage-icon: url(images/secondaryToolbarButton-scrollPage.svg); --secondaryToolbarButton-scrollVertical-icon: url(images/secondaryToolbarButton-scrollVertical.svg); --secondaryToolbarButton-scrollHorizontal-icon: url(images/secondaryToolbarButton-scrollHorizontal.svg); --secondaryToolbarButton-scrollWrapped-icon: url(images/secondaryToolbarButton-scrollWrapped.svg); --secondaryToolbarButton-spreadNone-icon: url(images/secondaryToolbarButton-spreadNone.svg); --secondaryToolbarButton-spreadOdd-icon: url(images/secondaryToolbarButton-spreadOdd.svg); --secondaryToolbarButton-spreadEven-icon: url(images/secondaryToolbarButton-spreadEven.svg); --secondaryToolbarButton-documentProperties-icon: url(images/secondaryToolbarButton-documentProperties.svg); } [dir=\"rtl\"]:root { --dir-factor: -1; } @media (prefers-color-scheme: dark) { :root { --main-color: rgba(249, 249, 250, 1); --body-bg-color: rgba(42, 42, 46, 1); --errorWrapper-bg-color: rgba(169, 14, 14, 1); /* -webkit-non-mozcentral */ --progressBar-color: rgba(0, 96, 223, 1); --progressBar-indeterminate-bg-color: rgba(40, 40, 43, 1); --progressBar-indeterminate-blend-color: rgba(20, 68, 133, 1); --scrollbar-color: rgba(121, 121, 123, 1); --scrollbar-bg-color: rgba(35, 35, 39, 1); --toolbar-icon-bg-color: rgba(255, 255, 255, 1); --toolbar-icon-hover-bg-color: rgba(255, 255, 255, 1); --sidebar-narrow-bg-color: rgba(42, 42, 46, 0.9); --sidebar-toolbar-bg-color: rgba(50, 50, 52, 1); --toolbar-bg-color: rgba(56, 56, 61, 1); --toolbar-border-color: rgba(12, 12, 13, 1); --button-hover-color: rgba(102, 102, 103, 1); --toggled-btn-color: rgba(255, 255, 255, 1); --toggled-btn-bg-color: rgba(0, 0, 0, 0.3); --toggled-hover-active-btn-color: rgba(0, 0, 0, 0.4); --dropdown-btn-bg-color: rgba(74, 74, 79, 1); --separator-color: rgba(0, 0, 0, 0.3); --field-color: rgba(250, 250, 250, 1); --field-bg-color: rgba(64, 64, 68, 1); --field-border-color: rgba(115, 115, 115, 1); --treeitem-color: rgba(255, 255, 255, 0.8); --treeitem-hover-color: rgba(255, 255, 255, 0.9); --treeitem-selected-color: rgba(255, 255, 255, 0.9); --treeitem-selected-bg-color: rgba(255, 255, 255, 0.25); --sidebaritem-bg-color: rgba(255, 255, 255, 0.15); --doorhanger-bg-color: rgba(74, 74, 79, 1); --doorhanger-border-color: rgba(39, 39, 43, 1); --doorhanger-hover-color: rgba(249, 249, 250, 1); --doorhanger-hover-bg-color: rgba(93, 94, 98, 1); --doorhanger-separator-color: rgba(92, 92, 97, 1); --dialog-button-bg-color: rgba(92, 92, 97, 1); --dialog-button-hover-bg-color: rgba(115, 115, 115, 1); /* This image is used in elements, which unfortunately means that * the `mask-image` approach used with all of the other images doesn't work * here; hence why we still have two versions of this particular image. */ --loading-icon: url(images/loading-dark.svg); } } @media screen and (forced-colors: active) { :root { --button-hover-color: Highlight; --doorhanger-hover-bg-color: Highlight; --toolbar-icon-opacity: 1; --toolbar-icon-bg-color: ButtonText; --toolbar-icon-hover-bg-color: ButtonFace; --toggled-btn-color: HighlightText; --toggled-btn-bg-color: LinkText; --doorhanger-hover-color: ButtonFace; --doorhanger-border-color-whcm: 1px solid ButtonText; --doorhanger-triangle-opacity-whcm: 0; --dialog-button-border: 1px solid Highlight; --dialog-button-hover-bg-color: Highlight; --dialog-button-hover-color: ButtonFace; --field-border-color: ButtonText; } } * { padding: 0; margin: 0; } html, body { height: 100%; width: 100%; } body { background-color: var(--body-bg-color); } body, input, button, select { font: message-box; outline: none; scrollbar-color: var(--scrollbar-color) var(--scrollbar-bg-color); } .hidden, [hidden] { display: none !important; } #viewerContainer.pdfPresentationMode:-webkit-full-screen { top: 0; background-color: rgba(0, 0, 0, 1); width: 100%; height: 100%; overflow: hidden; cursor: none; -webkit-user-select: none; user-select: none; } #viewerContainer.pdfPresentationMode:fullscreen { top: 0; background-color: rgba(0, 0, 0, 1); width: 100%; height: 100%; overflow: hidden; cursor: none; -webkit-user-select: none; -moz-user-select: none; user-select: none; } .pdfPresentationMode:-webkit-full-screen a:not(.internalLink) { display: none; } .pdfPresentationMode:fullscreen a:not(.internalLink) { display: none; } .pdfPresentationMode:-webkit-full-screen .textLayer span { cursor: none; } .pdfPresentationMode:fullscreen .textLayer span { cursor: none; } .pdfPresentationMode.pdfPresentationModeControls > *, .pdfPresentationMode.pdfPresentationModeControls .textLayer span { cursor: default; } #outerContainer { width: 100%; height: 100%; position: relative; } [dir=\"ltr\"] #sidebarContainer { left: calc(-1 * var(--sidebar-width)); } [dir=\"rtl\"] #sidebarContainer { right: calc(-1 * var(--sidebar-width)); } [dir=\"ltr\"] #sidebarContainer { border-right: var(--doorhanger-border-color-whcm); } [dir=\"rtl\"] #sidebarContainer { border-left: var(--doorhanger-border-color-whcm); } [dir=\"ltr\"] #sidebarContainer { transition-property: left; } [dir=\"rtl\"] #sidebarContainer { transition-property: right; } #sidebarContainer { position: absolute; top: 32px; bottom: 0; inset-inline-start: calc(-1 * var(--sidebar-width)); width: var(--sidebar-width); visibility: hidden; z-index: 100; border-top: 1px solid rgba(51, 51, 51, 1); -webkit-border-end: var(--doorhanger-border-color-whcm); border-inline-end: var(--doorhanger-border-color-whcm); transition-property: inset-inline-start; transition-duration: var(--sidebar-transition-duration); transition-timing-function: var(--sidebar-transition-timing-function); } #outerContainer.sidebarMoving #sidebarContainer, #outerContainer.sidebarOpen #sidebarContainer { visibility: visible; } [dir=\"ltr\"] #outerContainer.sidebarOpen #sidebarContainer { left: 0; } [dir=\"rtl\"] #outerContainer.sidebarOpen #sidebarContainer { right: 0; } #outerContainer.sidebarOpen #sidebarContainer { inset-inline-start: 0; } #mainContainer { position: absolute; top: 0; right: 0; bottom: 0; left: 0; min-width: 320px; } [dir=\"ltr\"] #sidebarContent { left: 0; } [dir=\"rtl\"] #sidebarContent { right: 0; } #sidebarContent { top: 32px; bottom: 0; inset-inline-start: 0; overflow: auto; position: absolute; width: 100%; background-color: rgba(0, 0, 0, 0.1); box-shadow: inset calc(-1px * var(--dir-factor)) 0 0 rgba(0, 0, 0, 0.25); } #viewerContainer { overflow: auto; position: absolute; top: 32px; right: 0; bottom: 0; left: 0; outline: none; } #viewerContainer:not(.pdfPresentationMode) { transition-duration: var(--sidebar-transition-duration); transition-timing-function: var(--sidebar-transition-timing-function); } [dir=\"ltr\"] #outerContainer.sidebarOpen #viewerContainer:not(.pdfPresentationMode) { left: var(--sidebar-width); } [dir=\"rtl\"] #outerContainer.sidebarOpen #viewerContainer:not(.pdfPresentationMode) { right: var(--sidebar-width); } [dir=\"ltr\"] #outerContainer.sidebarOpen #viewerContainer:not(.pdfPresentationMode) { transition-property: left; } [dir=\"rtl\"] #outerContainer.sidebarOpen #viewerContainer:not(.pdfPresentationMode) { transition-property: right; } #outerContainer.sidebarOpen #viewerContainer:not(.pdfPresentationMode) { inset-inline-start: var(--sidebar-width); transition-property: inset-inline-start; } .toolbar { position: relative; left: 0; right: 0; z-index: 9999; cursor: default; } #toolbarContainer { width: 100%; } #toolbarSidebar { width: 100%; height: 32px; background-color: var(--sidebar-toolbar-bg-color); box-shadow: inset calc(-1px * var(--dir-factor)) 0 0 rgba(0, 0, 0, 0.25), 0 1px 0 rgba(0, 0, 0, 0.15), 0 0 1px rgba(0, 0, 0, 0.1); } [dir=\"ltr\"] #sidebarResizer { right: -6px; } [dir=\"rtl\"] #sidebarResizer { left: -6px; } #sidebarResizer { position: absolute; top: 0; bottom: 0; inset-inline-end: -6px; width: 6px; z-index: 200; cursor: ew-resize; } #toolbarContainer, .findbar, .secondaryToolbar { position: relative; height: 32px; background-color: var(--toolbar-bg-color); box-shadow: 0 1px 0 var(--toolbar-border-color); } #toolbarViewer { height: 32px; } [dir=\"ltr\"] #loadingBar { left: 0; right: var(--loadingBar-end-offset); } [dir=\"rtl\"] #loadingBar { right: 0; left: var(--loadingBar-end-offset); } [dir=\"ltr\"] #loadingBar { transition-property: left; } [dir=\"rtl\"] #loadingBar { transition-property: right; } #loadingBar { position: absolute; inset-inline: 0 var(--loadingBar-end-offset); height: 4px; background-color: var(--body-bg-color); border-bottom: 1px solid var(--toolbar-border-color); transition-property: inset-inline-start; transition-duration: var(--sidebar-transition-duration); transition-timing-function: var(--sidebar-transition-timing-function); } [dir=\"ltr\"] #outerContainer.sidebarOpen #loadingBar { left: var(--sidebar-width); } [dir=\"rtl\"] #outerContainer.sidebarOpen #loadingBar { right: var(--sidebar-width); } #outerContainer.sidebarOpen #loadingBar { inset-inline-start: var(--sidebar-width); } #loadingBar .progress { position: absolute; top: 0; left: 0; width: 0%; height: 100%; background-color: var(--progressBar-color); overflow: hidden; transition: width 200ms; } @-webkit-keyframes progressIndeterminate { 0% { left: -142px; } 100% { left: 0; } } @keyframes progressIndeterminate { 0% { left: -142px; } 100% { left: 0; } } #loadingBar .progress.indeterminate { background-color: var(--progressBar-indeterminate-bg-color); transition: none; } #loadingBar .progress.indeterminate .glimmer { position: absolute; top: 0; left: 0; height: 100%; width: calc(100% + 150px); background: repeating-linear-gradient( 135deg, var(--progressBar-indeterminate-blend-color) 0, var(--progressBar-indeterminate-bg-color) 5px, var(--progressBar-indeterminate-bg-color) 45px, var(--progressBar-color) 55px, var(--progressBar-color) 95px, var(--progressBar-indeterminate-blend-color) 100px ); -webkit-animation: progressIndeterminate 1s linear infinite; animation: progressIndeterminate 1s linear infinite; } #outerContainer.sidebarResizing #sidebarContainer, #outerContainer.sidebarResizing #viewerContainer, #outerContainer.sidebarResizing #loadingBar { /* Improve responsiveness and avoid visual glitches when the sidebar is resized. */ transition-duration: 0s; } .findbar, .secondaryToolbar { top: 32px; position: absolute; z-index: 10000; height: auto; padding: 0 4px; margin: 4px 2px; color: rgba(217, 217, 217, 1); font-size: 12px; line-height: 14px; text-align: left; cursor: default; } [dir=\"ltr\"] .findbar { left: 64px; } [dir=\"rtl\"] .findbar { right: 64px; } .findbar { inset-inline-start: 64px; min-width: 300px; background-color: var(--toolbar-bg-color); } .findbar > div { height: 32px; } [dir=\"ltr\"] .findbar > div#findbarInputContainer { margin-right: 4px; } [dir=\"rtl\"] .findbar > div#findbarInputContainer { margin-left: 4px; } .findbar > div#findbarInputContainer { -webkit-margin-end: 4px; margin-inline-end: 4px; } .findbar.wrapContainers > div, .findbar.wrapContainers > div#findbarMessageContainer > * { clear: both; } .findbar.wrapContainers > div#findbarMessageContainer { height: auto; } .findbar input[type=\"checkbox\"] { pointer-events: none; } .findbar label { -webkit-user-select: none; -moz-user-select: none; user-select: none; } .findbar label:hover, .findbar input:focus-visible + label { color: var(--toggled-btn-color); background-color: var(--button-hover-color); } .findbar .toolbarField[type=\"checkbox\"]:checked + .toolbarLabel { background-color: var(--toggled-btn-bg-color) !important; color: var(--toggled-btn-color); } #findInput { width: 200px; } #findInput::-moz-placeholder { font-style: normal; } #findInput::placeholder { font-style: normal; } #findInput[data-status=\"pending\"] { background-image: var(--loading-icon); background-repeat: no-repeat; background-position: calc(50% + 48% * var(--dir-factor)); } #findInput[data-status=\"notFound\"] { background-color: rgba(255, 102, 102, 1); } [dir=\"ltr\"] .secondaryToolbar { right: 4px; } [dir=\"rtl\"] .secondaryToolbar { left: 4px; } .secondaryToolbar { padding: 6px 0 10px; inset-inline-end: 4px; height: auto; z-index: 30000; background-color: var(--doorhanger-bg-color); } #secondaryToolbarButtonContainer { max-width: 220px; max-height: 400px; overflow-y: auto; margin-bottom: -4px; } .doorHanger, .doorHangerRight { border-radius: 2px; box-shadow: 0 1px 5px var(--doorhanger-border-color), 0 0 0 1px var(--doorhanger-border-color); border: var(--doorhanger-border-color-whcm); } .doorHanger:after, .doorHanger:before, .doorHangerRight:after, .doorHangerRight:before { bottom: 100%; border: 8px solid rgba(0, 0, 0, 0); content: \" \"; height: 0; width: 0; position: absolute; pointer-events: none; opacity: var(--doorhanger-triangle-opacity-whcm); } [dir=\"ltr\"] .doorHanger:after { left: 10px; } [dir=\"rtl\"] .doorHanger:after { right: 10px; } [dir=\"ltr\"] .doorHanger:after { margin-left: -8px; } [dir=\"rtl\"] .doorHanger:after { margin-right: -8px; } .doorHanger:after { inset-inline-start: 10px; -webkit-margin-start: -8px; margin-inline-start: -8px; border-bottom-color: var(--toolbar-bg-color); } [dir=\"ltr\"] .doorHangerRight:after { right: 10px; } [dir=\"rtl\"] .doorHangerRight:after { left: 10px; } [dir=\"ltr\"] .doorHangerRight:after { margin-right: -8px; } [dir=\"rtl\"] .doorHangerRight:after { margin-left: -8px; } .doorHangerRight:after { inset-inline-end: 10px; -webkit-margin-end: -8px; margin-inline-end: -8px; border-bottom-color: var(--doorhanger-bg-color); } .doorHanger:before, .doorHangerRight:before { border-bottom-color: var(--doorhanger-border-color); border-width: 9px; } [dir=\"ltr\"] .doorHanger:before { left: 10px; } [dir=\"rtl\"] .doorHanger:before { right: 10px; } [dir=\"ltr\"] .doorHanger:before { margin-left: -9px; } [dir=\"rtl\"] .doorHanger:before { margin-right: -9px; } .doorHanger:before { inset-inline-start: 10px; -webkit-margin-start: -9px; margin-inline-start: -9px; } [dir=\"ltr\"] .doorHangerRight:before { right: 10px; } [dir=\"rtl\"] .doorHangerRight:before { left: 10px; } [dir=\"ltr\"] .doorHangerRight:before { margin-right: -9px; } [dir=\"rtl\"] .doorHangerRight:before { margin-left: -9px; } .doorHangerRight:before { inset-inline-end: 10px; -webkit-margin-end: -9px; margin-inline-end: -9px; } #findResultsCount { background-color: rgba(217, 217, 217, 1); color: rgba(82, 82, 82, 1); text-align: center; padding: 4px 5px; margin: 5px; } #findMsg { color: rgba(251, 0, 0, 1); } #findResultsCount:empty, #findMsg:empty { display: none; } #toolbarViewerMiddle { position: absolute; left: 50%; transform: translateX(-50%); } [dir=\"ltr\"] #toolbarViewerLeft,[dir=\"ltr\"] #toolbarSidebarLeft { float: left; } [dir=\"rtl\"] #toolbarViewerLeft,[dir=\"rtl\"] #toolbarSidebarLeft { float: right; } #toolbarViewerLeft, #toolbarSidebarLeft { float: inline-start; } [dir=\"ltr\"] #toolbarViewerRight,[dir=\"ltr\"] #toolbarSidebarRight { float: right; } [dir=\"rtl\"] #toolbarViewerRight,[dir=\"rtl\"] #toolbarSidebarRight { float: left; } #toolbarViewerRight, #toolbarSidebarRight { float: inline-end; } [dir=\"ltr\"] #toolbarViewerLeft > *,[dir=\"ltr\"] #toolbarViewerMiddle > *,[dir=\"ltr\"] #toolbarViewerRight > *,[dir=\"ltr\"] #toolbarSidebarLeft *,[dir=\"ltr\"] #toolbarSidebarRight *,[dir=\"ltr\"] .findbar * { float: left; } [dir=\"rtl\"] #toolbarViewerLeft > *,[dir=\"rtl\"] #toolbarViewerMiddle > *,[dir=\"rtl\"] #toolbarViewerRight > *,[dir=\"rtl\"] #toolbarSidebarLeft *,[dir=\"rtl\"] #toolbarSidebarRight *,[dir=\"rtl\"] .findbar * { float: right; } #toolbarViewerLeft > *, #toolbarViewerMiddle > *, #toolbarViewerRight > *, #toolbarSidebarLeft *, #toolbarSidebarRight *, .findbar * { position: relative; float: inline-start; } [dir=\"ltr\"] #toolbarViewerLeft { padding-left: 1px; } [dir=\"rtl\"] #toolbarViewerLeft { padding-right: 1px; } #toolbarViewerLeft { -webkit-padding-start: 1px; padding-inline-start: 1px; } [dir=\"ltr\"] #toolbarViewerRight { padding-right: 1px; } [dir=\"rtl\"] #toolbarViewerRight { padding-left: 1px; } #toolbarViewerRight { -webkit-padding-end: 1px; padding-inline-end: 1px; } [dir=\"ltr\"] #toolbarSidebarRight { padding-right: 2px; } [dir=\"rtl\"] #toolbarSidebarRight { padding-left: 2px; } #toolbarSidebarRight { -webkit-padding-end: 2px; padding-inline-end: 2px; } .splitToolbarButton { margin: 2px; display: inline-block; } [dir=\"ltr\"] .splitToolbarButton > .toolbarButton { float: left; } [dir=\"rtl\"] .splitToolbarButton > .toolbarButton { float: right; } .splitToolbarButton > .toolbarButton { float: inline-start; } .toolbarButton, .secondaryToolbarButton, .dialogButton { border: 0 none; background: none; width: 28px; height: 28px; } .dialogButton:hover, .dialogButton:focus-visible { background-color: var(--dialog-button-hover-bg-color); } .dialogButton:hover > span, .dialogButton:focus-visible > span { color: var(--dialog-button-hover-color); } .toolbarButton > span { display: inline-block; width: 0; height: 0; overflow: hidden; } .toolbarButton[disabled], .secondaryToolbarButton[disabled], .dialogButton[disabled] { opacity: 0.5; } .splitToolbarButton > .toolbarButton:hover, .splitToolbarButton > .toolbarButton:focus-visible, .dropdownToolbarButton:hover { background-color: var(--button-hover-color); } .splitToolbarButton > .toolbarButton { position: relative; margin: 0; } [dir=\"ltr\"] #toolbarSidebar .splitToolbarButton > .toolbarButton { margin-right: 2px; } [dir=\"rtl\"] #toolbarSidebar .splitToolbarButton > .toolbarButton { margin-left: 2px; } #toolbarSidebar .splitToolbarButton > .toolbarButton { -webkit-margin-end: 2px; margin-inline-end: 2px; } [dir=\"ltr\"] .splitToolbarButtonSeparator { float: left; } [dir=\"rtl\"] .splitToolbarButtonSeparator { float: right; } .splitToolbarButtonSeparator { float: inline-start; margin: 4px 0; width: 1px; height: 20px; background-color: var(--separator-color); } .toolbarButton, .dropdownToolbarButton, .secondaryToolbarButton, .dialogButton { min-width: 16px; margin: 2px 1px; padding: 2px 6px 0; border: none; border-radius: 2px; color: var(--main-color); font-size: 12px; line-height: 14px; -webkit-user-select: none; -moz-user-select: none; user-select: none; cursor: default; box-sizing: border-box; } .toolbarButton:hover, .toolbarButton:focus-visible { background-color: var(--button-hover-color); } .secondaryToolbarButton:hover, .secondaryToolbarButton:focus-visible { background-color: var(--doorhanger-hover-bg-color); color: var(--doorhanger-hover-color); } .toolbarButton.toggled, .splitToolbarButton.toggled > .toolbarButton.toggled, .secondaryToolbarButton.toggled { background-color: var(--toggled-btn-bg-color); color: var(--toggled-btn-color); } .toolbarButton.toggled::before, .secondaryToolbarButton.toggled::before { background-color: var(--toggled-btn-color); } .toolbarButton.toggled:hover:active, .splitToolbarButton.toggled > .toolbarButton.toggled:hover:active, .secondaryToolbarButton.toggled:hover:active { background-color: var(--toggled-hover-active-btn-color); } .dropdownToolbarButton { width: var(--scale-select-container-width); padding: 0; overflow: hidden; background-color: var(--dropdown-btn-bg-color); } [dir=\"ltr\"] .dropdownToolbarButton::after { right: 7px; } [dir=\"rtl\"] .dropdownToolbarButton::after { left: 7px; } .dropdownToolbarButton::after { top: 6px; inset-inline-end: 7px; pointer-events: none; -webkit-mask-image: var(--toolbarButton-menuArrow-icon); mask-image: var(--toolbarButton-menuArrow-icon); } [dir=\"ltr\"] .dropdownToolbarButton > select { padding-left: 4px; } [dir=\"rtl\"] .dropdownToolbarButton > select { padding-right: 4px; } .dropdownToolbarButton > select { width: calc( var(--scale-select-container-width) + var(--scale-select-overflow) ); height: 28px; font-size: 12px; color: var(--main-color); margin: 0; padding: 1px 0 2px; -webkit-padding-start: 4px; padding-inline-start: 4px; border: none; background-color: var(--dropdown-btn-bg-color); } .dropdownToolbarButton > select:hover, .dropdownToolbarButton > select:focus-visible { background-color: var(--button-hover-color); color: var(--toggled-btn-color); } .dropdownToolbarButton > select > option { background: var(--doorhanger-bg-color); color: var(--main-color); } .toolbarButtonSpacer { width: 30px; display: inline-block; height: 1px; } .toolbarButton::before, .secondaryToolbarButton::before, .dropdownToolbarButton::after, .treeItemToggler::before { /* All matching images have a size of 16x16 * All relevant containers have a size of 28x28 */ position: absolute; display: inline-block; width: 16px; height: 16px; content: \"\"; background-color: var(--toolbar-icon-bg-color); -webkit-mask-size: cover; mask-size: cover; } .dropdownToolbarButton:hover::after, .dropdownToolbarButton:focus-visible::after, .dropdownToolbarButton:active::after { background-color: var(--toolbar-icon-hover-bg-color); } .toolbarButton::before { opacity: var(--toolbar-icon-opacity); top: 6px; left: 6px; } .toolbarButton:hover::before, .toolbarButton:focus-visible::before, .secondaryToolbarButton:hover::before, .secondaryToolbarButton:focus-visible::before { background-color: var(--toolbar-icon-hover-bg-color); } [dir=\"ltr\"] .secondaryToolbarButton::before { left: 12px; } [dir=\"rtl\"] .secondaryToolbarButton::before { right: 12px; } .secondaryToolbarButton::before { opacity: var(--doorhanger-icon-opacity); top: 5px; inset-inline-start: 12px; } #sidebarToggle::before { -webkit-mask-image: var(--toolbarButton-sidebarToggle-icon); mask-image: var(--toolbarButton-sidebarToggle-icon); transform: scaleX(var(--dir-factor)); } #secondaryToolbarToggle::before { -webkit-mask-image: var(--toolbarButton-secondaryToolbarToggle-icon); mask-image: var(--toolbarButton-secondaryToolbarToggle-icon); transform: scaleX(var(--dir-factor)); } #findPrevious::before { -webkit-mask-image: var(--findbarButton-previous-icon); mask-image: var(--findbarButton-previous-icon); } #findNext::before { -webkit-mask-image: var(--findbarButton-next-icon); mask-image: var(--findbarButton-next-icon); } #previous::before { -webkit-mask-image: var(--toolbarButton-pageUp-icon); mask-image: var(--toolbarButton-pageUp-icon); } #next::before { -webkit-mask-image: var(--toolbarButton-pageDown-icon); mask-image: var(--toolbarButton-pageDown-icon); } #zoomOut::before { -webkit-mask-image: var(--toolbarButton-zoomOut-icon); mask-image: var(--toolbarButton-zoomOut-icon); } #zoomIn::before { -webkit-mask-image: var(--toolbarButton-zoomIn-icon); mask-image: var(--toolbarButton-zoomIn-icon); } #presentationMode::before, #secondaryPresentationMode::before { -webkit-mask-image: var(--toolbarButton-presentationMode-icon); mask-image: var(--toolbarButton-presentationMode-icon); } #print::before, #secondaryPrint::before { -webkit-mask-image: var(--toolbarButton-print-icon); mask-image: var(--toolbarButton-print-icon); } #openFile::before, /* -webkit-non-mozcentral */ #secondaryOpenFile::before /* -webkit-non-mozcentral */ { -webkit-mask-image: var(--toolbarButton-openFile-icon); mask-image: var(--toolbarButton-openFile-icon); } #download::before, #secondaryDownload::before { -webkit-mask-image: var(--toolbarButton-download-icon); mask-image: var(--toolbarButton-download-icon); } a.secondaryToolbarButton { padding-top: 6px; text-decoration: none; } a.toolbarButton[href=\"#\"], a.secondaryToolbarButton[href=\"#\"] { opacity: 0.5; pointer-events: none; } #viewBookmark::before, #secondaryViewBookmark::before { -webkit-mask-image: var(--toolbarButton-bookmark-icon); mask-image: var(--toolbarButton-bookmark-icon); } #viewThumbnail::before { -webkit-mask-image: var(--toolbarButton-viewThumbnail-icon); mask-image: var(--toolbarButton-viewThumbnail-icon); } #viewOutline::before { -webkit-mask-image: var(--toolbarButton-viewOutline-icon); mask-image: var(--toolbarButton-viewOutline-icon); transform: scaleX(var(--dir-factor)); } #viewAttachments::before { -webkit-mask-image: var(--toolbarButton-viewAttachments-icon); mask-image: var(--toolbarButton-viewAttachments-icon); } #viewLayers::before { -webkit-mask-image: var(--toolbarButton-viewLayers-icon); mask-image: var(--toolbarButton-viewLayers-icon); } #currentOutlineItem::before { -webkit-mask-image: var(--toolbarButton-currentOutlineItem-icon); mask-image: var(--toolbarButton-currentOutlineItem-icon); transform: scaleX(var(--dir-factor)); } #viewFind::before { -webkit-mask-image: var(--toolbarButton-search-icon); mask-image: var(--toolbarButton-search-icon); } [dir=\"ltr\"] .pdfSidebarNotification::after { left: 17px; } [dir=\"rtl\"] .pdfSidebarNotification::after { right: 17px; } .pdfSidebarNotification::after { position: absolute; display: inline-block; top: 1px; inset-inline-start: 17px; /* Create a filled circle, with a diameter of 9 pixels, using only CSS: */ content: \"\"; background-color: rgba(112, 219, 85, 1); height: 9px; width: 9px; border-radius: 50%; } [dir=\"ltr\"] .secondaryToolbarButton { padding-left: 36px; } [dir=\"rtl\"] .secondaryToolbarButton { padding-right: 36px; } [dir=\"ltr\"] .secondaryToolbarButton { text-align: left; } [dir=\"rtl\"] .secondaryToolbarButton { text-align: right; } .secondaryToolbarButton { position: relative; margin: 0; padding: 0 0 1px; -webkit-padding-start: 36px; padding-inline-start: 36px; height: auto; min-height: 26px; width: auto; min-width: 100%; text-align: start; white-space: normal; border-radius: 0; box-sizing: border-box; } [dir=\"ltr\"] .secondaryToolbarButton > span { padding-right: 4px; } [dir=\"rtl\"] .secondaryToolbarButton > span { padding-left: 4px; } .secondaryToolbarButton > span { -webkit-padding-end: 4px; padding-inline-end: 4px; } #firstPage::before { -webkit-mask-image: var(--secondaryToolbarButton-firstPage-icon); mask-image: var(--secondaryToolbarButton-firstPage-icon); } #lastPage::before { -webkit-mask-image: var(--secondaryToolbarButton-lastPage-icon); mask-image: var(--secondaryToolbarButton-lastPage-icon); } #pageRotateCcw::before { -webkit-mask-image: var(--secondaryToolbarButton-rotateCcw-icon); mask-image: var(--secondaryToolbarButton-rotateCcw-icon); } #pageRotateCw::before { -webkit-mask-image: var(--secondaryToolbarButton-rotateCw-icon); mask-image: var(--secondaryToolbarButton-rotateCw-icon); } #cursorSelectTool::before { -webkit-mask-image: var(--secondaryToolbarButton-selectTool-icon); mask-image: var(--secondaryToolbarButton-selectTool-icon); } #cursorHandTool::before { -webkit-mask-image: var(--secondaryToolbarButton-handTool-icon); mask-image: var(--secondaryToolbarButton-handTool-icon); } #scrollPage::before { -webkit-mask-image: var(--secondaryToolbarButton-scrollPage-icon); mask-image: var(--secondaryToolbarButton-scrollPage-icon); } #scrollVertical::before { -webkit-mask-image: var(--secondaryToolbarButton-scrollVertical-icon); mask-image: var(--secondaryToolbarButton-scrollVertical-icon); } #scrollHorizontal::before { -webkit-mask-image: var(--secondaryToolbarButton-scrollHorizontal-icon); mask-image: var(--secondaryToolbarButton-scrollHorizontal-icon); } #scrollWrapped::before { -webkit-mask-image: var(--secondaryToolbarButton-scrollWrapped-icon); mask-image: var(--secondaryToolbarButton-scrollWrapped-icon); } #spreadNone::before { -webkit-mask-image: var(--secondaryToolbarButton-spreadNone-icon); mask-image: var(--secondaryToolbarButton-spreadNone-icon); } #spreadOdd::before { -webkit-mask-image: var(--secondaryToolbarButton-spreadOdd-icon); mask-image: var(--secondaryToolbarButton-spreadOdd-icon); } #spreadEven::before { -webkit-mask-image: var(--secondaryToolbarButton-spreadEven-icon); mask-image: var(--secondaryToolbarButton-spreadEven-icon); } #documentProperties::before { -webkit-mask-image: var(--secondaryToolbarButton-documentProperties-icon); mask-image: var(--secondaryToolbarButton-documentProperties-icon); } .verticalToolbarSeparator { display: block; margin: 5px 2px; width: 1px; height: 22px; background-color: var(--separator-color); } .horizontalToolbarSeparator { display: block; margin: 6px 0; height: 1px; width: 100%; background-color: var(--doorhanger-separator-color); } .toolbarField { padding: 4px 7px; margin: 3px 0; border-radius: 2px; background-color: var(--field-bg-color); background-clip: padding-box; border: 1px solid var(--field-border-color); box-shadow: none; color: var(--field-color); font-size: 12px; line-height: 16px; outline-style: none; } [dir=\"ltr\"] .toolbarField[type=\"checkbox\"] { margin-left: 7px; } [dir=\"rtl\"] .toolbarField[type=\"checkbox\"] { margin-right: 7px; } .toolbarField[type=\"checkbox\"] { opacity: 0; position: absolute !important; left: 0; margin: 10px 0 3px; -webkit-margin-start: 7px; margin-inline-start: 7px; } #pageNumber { -moz-appearance: textfield; /* hides the spinner in moz */ text-align: right; width: 40px; } #pageNumber.visiblePageIsLoading { background-image: var(--loading-icon); background-repeat: no-repeat; background-position: 3px; } #pageNumber::-webkit-inner-spin-button { -webkit-appearance: none; } .toolbarField:focus { border-color: #0a84ff; } .toolbarLabel { min-width: 16px; padding: 7px; margin: 2px; border-radius: 2px; color: var(--main-color); font-size: 12px; line-height: 14px; text-align: left; -webkit-user-select: none; -moz-user-select: none; user-select: none; cursor: default; } [dir=\"ltr\"] #numPages.toolbarLabel { padding-left: 3px; } [dir=\"rtl\"] #numPages.toolbarLabel { padding-right: 3px; } #numPages.toolbarLabel { -webkit-padding-start: 3px; padding-inline-start: 3px; } #thumbnailView, #outlineView, #attachmentsView, #layersView { position: absolute; width: calc(100% - 8px); top: 0; bottom: 0; padding: 4px 4px 0; overflow: auto; -webkit-user-select: none; -moz-user-select: none; user-select: none; } #thumbnailView { width: calc(100% - 60px); padding: 10px 30px 0; } #thumbnailView > a:active, #thumbnailView > a:focus { outline: 0; } [dir=\"ltr\"] .thumbnail { float: left; } [dir=\"rtl\"] .thumbnail { float: right; } .thumbnail { float: inline-start; margin: 0 10px 5px; } #thumbnailView > a:last-of-type > .thumbnail { margin-bottom: 10px; } #thumbnailView > a:last-of-type > .thumbnail:not([data-loaded]) { margin-bottom: 9px; } .thumbnail:not([data-loaded]) { border: 1px dashed rgba(132, 132, 132, 1); margin: -1px 9px 4px; } .thumbnailImage { border: 1px solid rgba(0, 0, 0, 0); box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.5), 0 2px 8px rgba(0, 0, 0, 0.3); opacity: 0.8; z-index: 99; background-color: rgba(255, 255, 255, 1); background-clip: content-box; } .thumbnailSelectionRing { border-radius: 2px; padding: 7px; } a:focus > .thumbnail > .thumbnailSelectionRing > .thumbnailImage, .thumbnail:hover > .thumbnailSelectionRing > .thumbnailImage { opacity: 0.9; } a:focus > .thumbnail > .thumbnailSelectionRing, .thumbnail:hover > .thumbnailSelectionRing { background-color: var(--sidebaritem-bg-color); background-clip: padding-box; color: rgba(255, 255, 255, 0.9); } .thumbnail.selected > .thumbnailSelectionRing > .thumbnailImage { opacity: 1; } .thumbnail.selected > .thumbnailSelectionRing { background-color: var(--sidebaritem-bg-color); background-clip: padding-box; color: rgba(255, 255, 255, 1); } [dir=\"ltr\"] .treeWithDeepNesting > .treeItem,[dir=\"ltr\"] .treeItem > .treeItems { margin-left: 20px; } [dir=\"rtl\"] .treeWithDeepNesting > .treeItem,[dir=\"rtl\"] .treeItem > .treeItems { margin-right: 20px; } .treeWithDeepNesting > .treeItem, .treeItem > .treeItems { -webkit-margin-start: 20px; margin-inline-start: 20px; } [dir=\"ltr\"] .treeItem > a { padding-left: 4px; } [dir=\"rtl\"] .treeItem > a { padding-right: 4px; } .treeItem > a { text-decoration: none; display: inline-block; /* Subtract the right padding (left, in RTL mode) of the container: */ min-width: calc(100% - 4px); height: auto; margin-bottom: 1px; padding: 2px 0 5px; -webkit-padding-start: 4px; padding-inline-start: 4px; border-radius: 2px; color: var(--treeitem-color); font-size: 13px; line-height: 15px; -webkit-user-select: none; -moz-user-select: none; user-select: none; white-space: normal; cursor: pointer; } #layersView .treeItem > a > * { cursor: pointer; } [dir=\"ltr\"] #layersView .treeItem > a > label { padding-left: 4px; } [dir=\"rtl\"] #layersView .treeItem > a > label { padding-right: 4px; } #layersView .treeItem > a > label { -webkit-padding-start: 4px; padding-inline-start: 4px; } [dir=\"ltr\"] .treeItemToggler { float: left; } [dir=\"rtl\"] .treeItemToggler { float: right; } .treeItemToggler { position: relative; float: inline-start; height: 0; width: 0; color: rgba(255, 255, 255, 0.5); } [dir=\"ltr\"] .treeItemToggler::before { right: 4px; } [dir=\"rtl\"] .treeItemToggler::before { left: 4px; } .treeItemToggler::before { inset-inline-end: 4px; -webkit-mask-image: var(--treeitem-expanded-icon); mask-image: var(--treeitem-expanded-icon); } .treeItemToggler.treeItemsHidden::before { -webkit-mask-image: var(--treeitem-collapsed-icon); mask-image: var(--treeitem-collapsed-icon); transform: scaleX(var(--dir-factor)); } .treeItemToggler.treeItemsHidden ~ .treeItems { display: none; } .treeItem.selected > a { background-color: var(--treeitem-selected-bg-color); color: var(--treeitem-selected-color); } .treeItemToggler:hover, .treeItemToggler:hover + a, .treeItemToggler:hover ~ .treeItems, .treeItem > a:hover { background-color: var(--sidebaritem-bg-color); background-clip: padding-box; border-radius: 2px; color: var(--treeitem-hover-color); } /* TODO: file FF bug to support ::-moz-selection:window-inactive so we can override the opaque grey background when the window is inactive; see https://bugzilla.mozilla.org/show_bug.cgi?id=706209 */ ::-moz-selection { background: rgba(0, 0, 255, 0.3); } ::selection { background: rgba(0, 0, 255, 0.3); } #errorWrapper /* -webkit-non-mozcentral */ { background-color: var(--errorWrapper-bg-color); color: var(--main-color); left: 0; position: absolute; right: 0; z-index: 1000; padding: 3px 6px; } #errorMessageLeft /* -webkit-non-mozcentral */ { float: left; } #errorMessageRight /* -webkit-non-mozcentral */ { float: right; } #errorSpacer /* -webkit-non-mozcentral */ { clear: both; } #errorMoreInfo /* -webkit-non-mozcentral */ { background-color: var(--field-bg-color); color: var(--field-color); border: 1px solid var(--field-border-color); padding: 3px; margin: 3px; width: 98%; } .dialogButton { width: auto; margin: 3px 4px 2px !important; padding: 2px 11px; color: var(--main-color); background-color: var(--dialog-button-bg-color); border: var(--dialog-button-border) !important; } dialog { margin: auto; padding: 15px; border-spacing: 4px; color: var(--main-color); font-size: 12px; line-height: 14px; background-color: var(--doorhanger-bg-color); border: 1px solid rgba(0, 0, 0, 0.5); border-radius: 4px; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3); } dialog::-webkit-backdrop { background-color: rgba(0, 0, 0, 0.2); } dialog::backdrop { background-color: rgba(0, 0, 0, 0.2); } dialog > .row { display: table-row; } dialog > .row > * { display: table-cell; } dialog .toolbarField { margin: 5px 0; } dialog .separator { display: block; margin: 4px 0; height: 1px; width: 100%; background-color: var(--separator-color); } dialog .buttonRow { text-align: center; vertical-align: middle; } dialog :link { color: rgba(255, 255, 255, 1); } #passwordDialog { text-align: center; } #passwordDialog .toolbarField { width: 200px; } #documentPropertiesDialog { text-align: left; } [dir=\"ltr\"] #documentPropertiesDialog .row > * { text-align: left; } [dir=\"rtl\"] #documentPropertiesDialog .row > * { text-align: right; } #documentPropertiesDialog .row > * { min-width: 100px; text-align: start; } #documentPropertiesDialog .row > span { width: 125px; word-wrap: break-word; } #documentPropertiesDialog .row > p { max-width: 225px; word-wrap: break-word; } #documentPropertiesDialog .buttonRow { margin-top: 10px; } .grab-to-pan-grab { cursor: -webkit-grab !important; cursor: grab !important; } .grab-to-pan-grab *:not(input):not(textarea):not(button):not(select):not(:link) { cursor: inherit !important; } .grab-to-pan-grab:active, .grab-to-pan-grabbing { cursor: -webkit-grabbing !important; cursor: grabbing !important; position: fixed; background: rgba(0, 0, 0, 0); display: block; top: 0; left: 0; right: 0; bottom: 0; overflow: hidden; z-index: 50000; /* should be higher than anything else in PDF.js! */ } @page { margin: 0; } #printContainer { display: none; } @media print { body { background: rgba(0, 0, 0, 0) none; } body[data-pdfjsprinting] #outerContainer { display: none; } body[data-pdfjsprinting] #printContainer { display: block; } #printContainer { height: 100%; } /* wrapper around (scaled) print canvas elements */ #printContainer > .printedPage { page-break-after: always; page-break-inside: avoid; /* The wrapper always cover the whole page. */ height: 100%; width: 100%; display: flex; flex-direction: column; justify-content: center; align-items: center; } #printContainer > .xfaPrintedPage .xfaPage { position: absolute; } #printContainer > .xfaPrintedPage { page-break-after: always; page-break-inside: avoid; width: 100%; height: 100%; position: relative; } #printContainer > .printedPage canvas, #printContainer > .printedPage img { /* The intrinsic canvas / image size will make sure that we fit the page. */ max-width: 100%; max-height: 100%; direction: ltr; display: block; } } .visibleLargeView, .visibleMediumView, .visibleSmallView { display: none; } @media all and (max-width: 900px) { #toolbarViewerMiddle { display: table; margin: auto; left: auto; position: inherit; transform: none; } } @media all and (max-width: 840px) { #sidebarContainer { background-color: var(--sidebar-narrow-bg-color); } [dir=\"ltr\"] #outerContainer.sidebarOpen #viewerContainer { left: 0 !important; } [dir=\"rtl\"] #outerContainer.sidebarOpen #viewerContainer { right: 0 !important; } #outerContainer.sidebarOpen #viewerContainer { inset-inline-start: 0 !important; } } @media all and (max-width: 770px) { #outerContainer .hiddenLargeView { display: none; } #outerContainer .visibleLargeView { display: inherit; } } @media all and (max-width: 700px) { #outerContainer .hiddenMediumView { display: none; } #outerContainer .visibleMediumView { display: inherit; } } @media all and (max-width: 640px) { .hiddenSmallView, .hiddenSmallView * { display: none; } .visibleSmallView { display: inherit; } .toolbarButtonSpacer { width: 0; } [dir=\"ltr\"] .findbar { left: 34px; } [dir=\"rtl\"] .findbar { right: 34px; } .findbar { inset-inline-start: 34px; } } @media all and (max-width: 535px) { #scaleSelectContainer { display: none; } }"},{"path":"/lib/pdf/web/viewer.html","content":"PDF.js viewer Thumbnails Document Outline Attachments Layers Current Outline Item Previous Next Highlight All Match Case Match Diacritics Whole Words Presentation Mode Open Print Download Current View Go to First Page Go to Last Page Rotate Clockwise Rotate Counterclockwise Text Selection Tool Hand Tool Page Scrolling Vertical Scrolling Horizontal Scrolling Wrapped Scrolling No Spreads Odd Spreads Even Spreads Document Properties… Toggle Sidebar Find Previous Next Presentation Mode Open Print Download Current View Tools Zoom Out Zoom In Automatic Zoom Actual Size Page Fit Page Width 50% 75% 100% 125% 150% 200% 300% 400% More Information Less Information Close Enter the password to open this PDF file: Cancel OK File name: - File size: - Title: - Author: - Subject: - Keywords: - Creation Date: - Modification Date: - Creator: - PDF Producer: - PDF Version: - Page Count: - Page Size: - Fast Web View: - Close Preparing document for printing… 0% Cancel"},{"path":"/lib/pdf/web/viewer.js","content":"/** * @licstart The following is the entire license notice for the * JavaScript code in this page * * Copyright 2022 Mozilla Foundation * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * @licend The above is the entire license notice for the * JavaScript code in this page */ /******/ (() => { // webpackBootstrap /******/ \"use strict\"; /******/ var __webpack_modules__ = ([ /* 0 */, /* 1 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.compatibilityParams = exports.OptionKind = exports.AppOptions = void 0; const compatibilityParams = Object.create(null); exports.compatibilityParams = compatibilityParams; { const userAgent = navigator.userAgent || \"\"; const platform = navigator.platform || \"\"; const maxTouchPoints = navigator.maxTouchPoints || 1; const isAndroid = /Android/.test(userAgent); const isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) || platform === \"MacIntel\" && maxTouchPoints > 1; (function checkCanvasSizeLimitation() { if (isIOS || isAndroid) { compatibilityParams.maxCanvasPixels = 5242880; } })(); } const OptionKind = { VIEWER: 0x02, API: 0x04, WORKER: 0x08, PREFERENCE: 0x80 }; exports.OptionKind = OptionKind; const defaultOptions = { annotationMode: { value: 2, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, cursorToolOnLoad: { value: 0, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, defaultUrl: { value: \"compressed.tracemonkey-pldi-09.pdf\", kind: OptionKind.VIEWER }, defaultZoomValue: { value: \"\", kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, disableHistory: { value: false, kind: OptionKind.VIEWER }, disablePageLabels: { value: false, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, enablePermissions: { value: false, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, enablePrintAutoRotate: { value: true, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, enableScripting: { value: true, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, externalLinkRel: { value: \"noopener noreferrer nofollow\", kind: OptionKind.VIEWER }, externalLinkTarget: { value: 0, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, historyUpdateUrl: { value: false, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, ignoreDestinationZoom: { value: false, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, imageResourcesPath: { value: \"./images/\", kind: OptionKind.VIEWER }, maxCanvasPixels: { value: 16777216, compatibility: compatibilityParams.maxCanvasPixels, kind: OptionKind.VIEWER }, pdfBugEnabled: { value: false, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, printResolution: { value: 150, kind: OptionKind.VIEWER }, renderer: { value: \"canvas\", kind: OptionKind.VIEWER }, sidebarViewOnLoad: { value: -1, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, scrollModeOnLoad: { value: -1, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, spreadModeOnLoad: { value: -1, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, textLayerMode: { value: 1, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, useOnlyCssZoom: { value: false, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, viewerCssTheme: { value: 0, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, viewOnLoad: { value: 0, kind: OptionKind.VIEWER + OptionKind.PREFERENCE }, cMapPacked: { value: true, kind: OptionKind.API }, cMapUrl: { value: \"../web/cmaps/\", kind: OptionKind.API }, disableAutoFetch: { value: false, kind: OptionKind.API + OptionKind.PREFERENCE }, disableFontFace: { value: false, kind: OptionKind.API + OptionKind.PREFERENCE }, disableRange: { value: false, kind: OptionKind.API + OptionKind.PREFERENCE }, disableStream: { value: false, kind: OptionKind.API + OptionKind.PREFERENCE }, docBaseUrl: { value: \"\", kind: OptionKind.API }, enableXfa: { value: true, kind: OptionKind.API + OptionKind.PREFERENCE }, fontExtraProperties: { value: false, kind: OptionKind.API }, isEvalSupported: { value: true, kind: OptionKind.API }, maxImageSize: { value: -1, kind: OptionKind.API }, pdfBug: { value: false, kind: OptionKind.API }, standardFontDataUrl: { value: \"../web/standard_fonts/\", kind: OptionKind.API }, verbosity: { value: 1, kind: OptionKind.API }, workerPort: { value: null, kind: OptionKind.WORKER }, workerSrc: { value: \"../build/pdf.worker.js\", kind: OptionKind.WORKER } }; { defaultOptions.disablePreferences = { value: false, kind: OptionKind.VIEWER }; defaultOptions.locale = { value: navigator.language || \"en-US\", kind: OptionKind.VIEWER }; defaultOptions.sandboxBundleSrc = { value: \"../build/pdf.sandbox.js\", kind: OptionKind.VIEWER }; defaultOptions.renderer.kind += OptionKind.PREFERENCE; } const userOptions = Object.create(null); class AppOptions { constructor() { throw new Error(\"Cannot initialize AppOptions.\"); } static get(name) { const userOption = userOptions[name]; if (userOption !== undefined) { return userOption; } const defaultOption = defaultOptions[name]; if (defaultOption !== undefined) { return defaultOption.compatibility ?? defaultOption.value; } return undefined; } static getAll(kind = null) { const options = Object.create(null); for (const name in defaultOptions) { const defaultOption = defaultOptions[name]; if (kind) { if ((kind & defaultOption.kind) === 0) { continue; } if (kind === OptionKind.PREFERENCE) { const value = defaultOption.value, valueType = typeof value; if (valueType === \"boolean\" || valueType === \"string\" || valueType === \"number\" && Number.isInteger(value)) { options[name] = value; continue; } throw new Error(`Invalid type for preference: ${name}`); } } const userOption = userOptions[name]; options[name] = userOption !== undefined ? userOption : defaultOption.compatibility ?? defaultOption.value; } return options; } static set(name, value) { userOptions[name] = value; } static setAll(options) { for (const name in options) { userOptions[name] = options[name]; } } static remove(name) { delete userOptions[name]; } static _hasUserOptions() { return Object.keys(userOptions).length > 0; } } exports.AppOptions = AppOptions; /***/ }), /* 2 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFViewerApplication = exports.PDFPrintServiceFactory = exports.DefaultExternalServices = void 0; var _ui_utils = __webpack_require__(3); var _app_options = __webpack_require__(1); var _event_utils = __webpack_require__(4); var _pdfjsLib = __webpack_require__(5); var _pdf_cursor_tools = __webpack_require__(6); var _pdf_link_service = __webpack_require__(8); var _overlay_manager = __webpack_require__(9); var _password_prompt = __webpack_require__(10); var _pdf_attachment_viewer = __webpack_require__(11); var _pdf_document_properties = __webpack_require__(13); var _pdf_find_bar = __webpack_require__(14); var _pdf_find_controller = __webpack_require__(15); var _pdf_history = __webpack_require__(17); var _pdf_layer_viewer = __webpack_require__(18); var _pdf_outline_viewer = __webpack_require__(19); var _pdf_presentation_mode = __webpack_require__(20); var _pdf_rendering_queue = __webpack_require__(21); var _pdf_scripting_manager = __webpack_require__(22); var _pdf_sidebar = __webpack_require__(23); var _pdf_sidebar_resizer = __webpack_require__(24); var _pdf_thumbnail_viewer = __webpack_require__(25); var _pdf_viewer = __webpack_require__(27); var _secondary_toolbar = __webpack_require__(36); var _toolbar = __webpack_require__(37); var _view_history = __webpack_require__(38); const DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000; const FORCE_PAGES_LOADED_TIMEOUT = 10000; const WHEEL_ZOOM_DISABLED_TIMEOUT = 1000; const ViewOnLoad = { UNKNOWN: -1, PREVIOUS: 0, INITIAL: 1 }; const ViewerCssTheme = { AUTOMATIC: 0, LIGHT: 1, DARK: 2 }; const KNOWN_VERSIONS = [\"1.0\", \"1.1\", \"1.2\", \"1.3\", \"1.4\", \"1.5\", \"1.6\", \"1.7\", \"1.8\", \"1.9\", \"2.0\", \"2.1\", \"2.2\", \"2.3\"]; const KNOWN_GENERATORS = [\"acrobat distiller\", \"acrobat pdfwriter\", \"adobe livecycle\", \"adobe pdf library\", \"adobe photoshop\", \"ghostscript\", \"tcpdf\", \"cairo\", \"dvipdfm\", \"dvips\", \"pdftex\", \"pdfkit\", \"itext\", \"prince\", \"quarkxpress\", \"mac os x\", \"microsoft\", \"openoffice\", \"oracle\", \"luradocument\", \"pdf-xchange\", \"antenna house\", \"aspose.cells\", \"fpdf\"]; class DefaultExternalServices { constructor() { throw new Error(\"Cannot initialize DefaultExternalServices.\"); } static updateFindControlState(data) {} static updateFindMatchesCount(data) {} static initPassiveLoading(callbacks) {} static reportTelemetry(data) {} static createDownloadManager(options) { throw new Error(\"Not implemented: createDownloadManager\"); } static createPreferences() { throw new Error(\"Not implemented: createPreferences\"); } static createL10n(options) { throw new Error(\"Not implemented: createL10n\"); } static createScripting(options) { throw new Error(\"Not implemented: createScripting\"); } static get supportsIntegratedFind() { return (0, _pdfjsLib.shadow)(this, \"supportsIntegratedFind\", false); } static get supportsDocumentFonts() { return (0, _pdfjsLib.shadow)(this, \"supportsDocumentFonts\", true); } static get supportedMouseWheelZoomModifierKeys() { return (0, _pdfjsLib.shadow)(this, \"supportedMouseWheelZoomModifierKeys\", { ctrlKey: true, metaKey: true }); } static get isInAutomation() { return (0, _pdfjsLib.shadow)(this, \"isInAutomation\", false); } } exports.DefaultExternalServices = DefaultExternalServices; const PDFViewerApplication = { initialBookmark: document.location.hash.substring(1), _initializedCapability: (0, _pdfjsLib.createPromiseCapability)(), appConfig: null, pdfDocument: null, pdfLoadingTask: null, printService: null, pdfViewer: null, pdfThumbnailViewer: null, pdfRenderingQueue: null, pdfPresentationMode: null, pdfDocumentProperties: null, pdfLinkService: null, pdfHistory: null, pdfSidebar: null, pdfSidebarResizer: null, pdfOutlineViewer: null, pdfAttachmentViewer: null, pdfLayerViewer: null, pdfCursorTools: null, pdfScriptingManager: null, store: null, downloadManager: null, overlayManager: null, preferences: null, toolbar: null, secondaryToolbar: null, eventBus: null, l10n: null, isInitialViewSet: false, downloadComplete: false, isViewerEmbedded: window.parent !== window, url: \"\", baseUrl: \"\", _downloadUrl: \"\", externalServices: DefaultExternalServices, _boundEvents: Object.create(null), documentInfo: null, metadata: null, _contentDispositionFilename: null, _contentLength: null, _saveInProgress: false, _docStats: null, _wheelUnusedTicks: 0, _idleCallbacks: new Set(), _PDFBug: null, async initialize(appConfig) { this.preferences = this.externalServices.createPreferences(); this.appConfig = appConfig; await this._readPreferences(); await this._parseHashParameters(); this._forceCssTheme(); await this._initializeL10n(); if (this.isViewerEmbedded && _app_options.AppOptions.get(\"externalLinkTarget\") === _pdf_link_service.LinkTarget.NONE) { _app_options.AppOptions.set(\"externalLinkTarget\", _pdf_link_service.LinkTarget.TOP); } await this._initializeViewerComponents(); this.bindEvents(); this.bindWindowEvents(); const appContainer = appConfig.appContainer || document.documentElement; this.l10n.translate(appContainer).then(() => { this.eventBus.dispatch(\"localized\", { source: this }); }); this._initializedCapability.resolve(); }, async _readPreferences() { if (_app_options.AppOptions.get(\"disablePreferences\")) { return; } if (_app_options.AppOptions._hasUserOptions()) { console.warn(\"_readPreferences: The Preferences may override manually set AppOptions; \" + 'please use the \"disablePreferences\"-option in order to prevent that.'); } try { _app_options.AppOptions.setAll(await this.preferences.getAll()); } catch (reason) { console.error(`_readPreferences: \"${reason?.message}\".`); } }, async _parseHashParameters() { if (!_app_options.AppOptions.get(\"pdfBugEnabled\")) { return; } const hash = document.location.hash.substring(1); if (!hash) { return; } const { mainContainer, viewerContainer } = this.appConfig, params = (0, _ui_utils.parseQueryString)(hash); if (params.get(\"disableworker\") === \"true\") { try { await loadFakeWorker(); } catch (ex) { console.error(`_parseHashParameters: \"${ex.message}\".`); } } if (params.has(\"disablerange\")) { _app_options.AppOptions.set(\"disableRange\", params.get(\"disablerange\") === \"true\"); } if (params.has(\"disablestream\")) { _app_options.AppOptions.set(\"disableStream\", params.get(\"disablestream\") === \"true\"); } if (params.has(\"disableautofetch\")) { _app_options.AppOptions.set(\"disableAutoFetch\", params.get(\"disableautofetch\") === \"true\"); } if (params.has(\"disablefontface\")) { _app_options.AppOptions.set(\"disableFontFace\", params.get(\"disablefontface\") === \"true\"); } if (params.has(\"disablehistory\")) { _app_options.AppOptions.set(\"disableHistory\", params.get(\"disablehistory\") === \"true\"); } if (params.has(\"verbosity\")) { _app_options.AppOptions.set(\"verbosity\", params.get(\"verbosity\") | 0); } if (params.has(\"textlayer\")) { switch (params.get(\"textlayer\")) { case \"off\": _app_options.AppOptions.set(\"textLayerMode\", _ui_utils.TextLayerMode.DISABLE); break; case \"visible\": case \"shadow\": case \"hover\": viewerContainer.classList.add(`textLayer-${params.get(\"textlayer\")}`); try { await loadPDFBug(this); this._PDFBug.loadCSS(); } catch (ex) { console.error(`_parseHashParameters: \"${ex.message}\".`); } break; } } if (params.has(\"pdfbug\")) { _app_options.AppOptions.set(\"pdfBug\", true); _app_options.AppOptions.set(\"fontExtraProperties\", true); const enabled = params.get(\"pdfbug\").split(\",\"); try { await loadPDFBug(this); this._PDFBug.init({ OPS: _pdfjsLib.OPS }, mainContainer, enabled); } catch (ex) { console.error(`_parseHashParameters: \"${ex.message}\".`); } } if (params.has(\"locale\")) { _app_options.AppOptions.set(\"locale\", params.get(\"locale\")); } }, async _initializeL10n() { this.l10n = this.externalServices.createL10n({ locale: _app_options.AppOptions.get(\"locale\") }); const dir = await this.l10n.getDirection(); document.getElementsByTagName(\"html\")[0].dir = dir; }, _forceCssTheme() { const cssTheme = _app_options.AppOptions.get(\"viewerCssTheme\"); if (cssTheme === ViewerCssTheme.AUTOMATIC || !Object.values(ViewerCssTheme).includes(cssTheme)) { return; } try { const styleSheet = document.styleSheets[0]; const cssRules = styleSheet?.cssRules || []; for (let i = 0, ii = cssRules.length; i < ii; i++) { const rule = cssRules[i]; if (rule instanceof CSSMediaRule && rule.media?.[0] === \"(prefers-color-scheme: dark)\") { if (cssTheme === ViewerCssTheme.LIGHT) { styleSheet.deleteRule(i); return; } const darkRules = /^@media \\(prefers-color-scheme: dark\\) { \\s*([\\w\\s-.,:;/\\\\{}()]+) }$/.exec(rule.cssText); if (darkRules?.[1]) { styleSheet.deleteRule(i); styleSheet.insertRule(darkRules[1], i); } return; } } } catch (reason) { console.error(`_forceCssTheme: \"${reason?.message}\".`); } }, async _initializeViewerComponents() { const { appConfig, externalServices } = this; const eventBus = externalServices.isInAutomation ? new _event_utils.AutomationEventBus() : new _event_utils.EventBus(); this.eventBus = eventBus; this.overlayManager = new _overlay_manager.OverlayManager(); const pdfRenderingQueue = new _pdf_rendering_queue.PDFRenderingQueue(); pdfRenderingQueue.onIdle = this._cleanup.bind(this); this.pdfRenderingQueue = pdfRenderingQueue; const pdfLinkService = new _pdf_link_service.PDFLinkService({ eventBus, externalLinkTarget: _app_options.AppOptions.get(\"externalLinkTarget\"), externalLinkRel: _app_options.AppOptions.get(\"externalLinkRel\"), ignoreDestinationZoom: _app_options.AppOptions.get(\"ignoreDestinationZoom\") }); this.pdfLinkService = pdfLinkService; const downloadManager = externalServices.createDownloadManager(); this.downloadManager = downloadManager; const findController = new _pdf_find_controller.PDFFindController({ linkService: pdfLinkService, eventBus }); this.findController = findController; const pdfScriptingManager = new _pdf_scripting_manager.PDFScriptingManager({ eventBus, sandboxBundleSrc: _app_options.AppOptions.get(\"sandboxBundleSrc\"), scriptingFactory: externalServices, docPropertiesLookup: this._scriptingDocProperties.bind(this) }); this.pdfScriptingManager = pdfScriptingManager; const container = appConfig.mainContainer; const viewer = appConfig.viewerContainer; this.pdfViewer = new _pdf_viewer.PDFViewer({ container, viewer, eventBus, renderingQueue: pdfRenderingQueue, linkService: pdfLinkService, downloadManager, findController, scriptingManager: _app_options.AppOptions.get(\"enableScripting\") && pdfScriptingManager, renderer: _app_options.AppOptions.get(\"renderer\"), l10n: this.l10n, textLayerMode: _app_options.AppOptions.get(\"textLayerMode\"), annotationMode: _app_options.AppOptions.get(\"annotationMode\"), imageResourcesPath: _app_options.AppOptions.get(\"imageResourcesPath\"), enablePrintAutoRotate: _app_options.AppOptions.get(\"enablePrintAutoRotate\"), useOnlyCssZoom: _app_options.AppOptions.get(\"useOnlyCssZoom\"), maxCanvasPixels: _app_options.AppOptions.get(\"maxCanvasPixels\"), enablePermissions: _app_options.AppOptions.get(\"enablePermissions\") }); pdfRenderingQueue.setViewer(this.pdfViewer); pdfLinkService.setViewer(this.pdfViewer); pdfScriptingManager.setViewer(this.pdfViewer); this.pdfThumbnailViewer = new _pdf_thumbnail_viewer.PDFThumbnailViewer({ container: appConfig.sidebar.thumbnailView, eventBus, renderingQueue: pdfRenderingQueue, linkService: pdfLinkService, l10n: this.l10n }); pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer); if (!this.isViewerEmbedded && !_app_options.AppOptions.get(\"disableHistory\")) { this.pdfHistory = new _pdf_history.PDFHistory({ linkService: pdfLinkService, eventBus }); pdfLinkService.setHistory(this.pdfHistory); } if (!this.supportsIntegratedFind) { this.findBar = new _pdf_find_bar.PDFFindBar(appConfig.findBar, eventBus, this.l10n); } this.pdfDocumentProperties = new _pdf_document_properties.PDFDocumentProperties(appConfig.documentProperties, this.overlayManager, eventBus, this.l10n); this.pdfCursorTools = new _pdf_cursor_tools.PDFCursorTools({ container, eventBus, cursorToolOnLoad: _app_options.AppOptions.get(\"cursorToolOnLoad\") }); this.toolbar = new _toolbar.Toolbar(appConfig.toolbar, eventBus, this.l10n); this.secondaryToolbar = new _secondary_toolbar.SecondaryToolbar(appConfig.secondaryToolbar, container, eventBus); if (this.supportsFullscreen) { this.pdfPresentationMode = new _pdf_presentation_mode.PDFPresentationMode({ container, pdfViewer: this.pdfViewer, eventBus }); } this.passwordPrompt = new _password_prompt.PasswordPrompt(appConfig.passwordOverlay, this.overlayManager, this.l10n, this.isViewerEmbedded); this.pdfOutlineViewer = new _pdf_outline_viewer.PDFOutlineViewer({ container: appConfig.sidebar.outlineView, eventBus, linkService: pdfLinkService }); this.pdfAttachmentViewer = new _pdf_attachment_viewer.PDFAttachmentViewer({ container: appConfig.sidebar.attachmentsView, eventBus, downloadManager }); this.pdfLayerViewer = new _pdf_layer_viewer.PDFLayerViewer({ container: appConfig.sidebar.layersView, eventBus, l10n: this.l10n }); this.pdfSidebar = new _pdf_sidebar.PDFSidebar({ elements: appConfig.sidebar, pdfViewer: this.pdfViewer, pdfThumbnailViewer: this.pdfThumbnailViewer, eventBus, l10n: this.l10n }); this.pdfSidebar.onToggled = this.forceRendering.bind(this); this.pdfSidebarResizer = new _pdf_sidebar_resizer.PDFSidebarResizer(appConfig.sidebarResizer, eventBus, this.l10n); }, run(config) { this.initialize(config).then(webViewerInitialized); }, get initialized() { return this._initializedCapability.settled; }, get initializedPromise() { return this._initializedCapability.promise; }, zoomIn(steps) { if (this.pdfViewer.isInPresentationMode) { return; } this.pdfViewer.increaseScale(steps); }, zoomOut(steps) { if (this.pdfViewer.isInPresentationMode) { return; } this.pdfViewer.decreaseScale(steps); }, zoomReset() { if (this.pdfViewer.isInPresentationMode) { return; } this.pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE; }, get pagesCount() { return this.pdfDocument ? this.pdfDocument.numPages : 0; }, get page() { return this.pdfViewer.currentPageNumber; }, set page(val) { this.pdfViewer.currentPageNumber = val; }, get supportsPrinting() { return PDFPrintServiceFactory.instance.supportsPrinting; }, get supportsFullscreen() { return (0, _pdfjsLib.shadow)(this, \"supportsFullscreen\", document.fullscreenEnabled); }, get supportsIntegratedFind() { return this.externalServices.supportsIntegratedFind; }, get supportsDocumentFonts() { return this.externalServices.supportsDocumentFonts; }, get loadingBar() { const bar = new _ui_utils.ProgressBar(\"#loadingBar\"); return (0, _pdfjsLib.shadow)(this, \"loadingBar\", bar); }, get supportedMouseWheelZoomModifierKeys() { return this.externalServices.supportedMouseWheelZoomModifierKeys; }, initPassiveLoading() { throw new Error(\"Not implemented: initPassiveLoading\"); }, setTitleUsingUrl(url = \"\", downloadUrl = null) { this.url = url; this.baseUrl = url.split(\"#\")[0]; if (downloadUrl) { this._downloadUrl = downloadUrl === url ? this.baseUrl : downloadUrl.split(\"#\")[0]; } let title = (0, _pdfjsLib.getPdfFilenameFromUrl)(url, \"\"); if (!title) { try { title = decodeURIComponent((0, _pdfjsLib.getFilenameFromUrl)(url)) || url; } catch (ex) { title = url; } } this.setTitle(title); }, setTitle(title) { if (this.isViewerEmbedded) { return; } document.title = title; }, get _docFilename() { return this._contentDispositionFilename || (0, _pdfjsLib.getPdfFilenameFromUrl)(this.url); }, _hideViewBookmark() { const { toolbar, secondaryToolbar } = this.appConfig; toolbar.viewBookmark.hidden = true; secondaryToolbar.viewBookmarkButton.hidden = true; }, _cancelIdleCallbacks() { if (!this._idleCallbacks.size) { return; } for (const callback of this._idleCallbacks) { window.cancelIdleCallback(callback); } this._idleCallbacks.clear(); }, async close() { this._unblockDocumentLoadEvent(); this._hideViewBookmark(); const { container } = this.appConfig.errorWrapper; container.hidden = true; if (!this.pdfLoadingTask) { return; } if (this.pdfDocument?.annotationStorage.size > 0 && this._annotationStorageModified) { try { await this.save({ sourceEventType: \"save\" }); } catch (reason) {} } const promises = []; promises.push(this.pdfLoadingTask.destroy()); this.pdfLoadingTask = null; if (this.pdfDocument) { this.pdfDocument = null; this.pdfThumbnailViewer.setDocument(null); this.pdfViewer.setDocument(null); this.pdfLinkService.setDocument(null); this.pdfDocumentProperties.setDocument(null); } this.pdfLinkService.externalLinkEnabled = true; this.store = null; this.isInitialViewSet = false; this.downloadComplete = false; this.url = \"\"; this.baseUrl = \"\"; this._downloadUrl = \"\"; this.documentInfo = null; this.metadata = null; this._contentDispositionFilename = null; this._contentLength = null; this._saveInProgress = false; this._docStats = null; this._cancelIdleCallbacks(); promises.push(this.pdfScriptingManager.destroyPromise); this.pdfSidebar.reset(); this.pdfOutlineViewer.reset(); this.pdfAttachmentViewer.reset(); this.pdfLayerViewer.reset(); this.pdfHistory?.reset(); this.findBar?.reset(); this.toolbar.reset(); this.secondaryToolbar.reset(); this._PDFBug?.cleanup(); await Promise.all(promises); }, async open(file, args) { if (this.pdfLoadingTask) { await this.close(); } const workerParameters = _app_options.AppOptions.getAll(_app_options.OptionKind.WORKER); for (const key in workerParameters) { _pdfjsLib.GlobalWorkerOptions[key] = workerParameters[key]; } const parameters = Object.create(null); if (typeof file === \"string\") { this.setTitleUsingUrl(file, file); parameters.url = file; } else if (file && \"byteLength\" in file) { parameters.data = file; } else if (file.url && file.originalUrl) { this.setTitleUsingUrl(file.originalUrl, file.url); parameters.url = file.url; } const apiParameters = _app_options.AppOptions.getAll(_app_options.OptionKind.API); for (const key in apiParameters) { let value = apiParameters[key]; if (key === \"docBaseUrl\" && !value) {} parameters[key] = value; } if (args) { for (const key in args) { parameters[key] = args[key]; } } const loadingTask = (0, _pdfjsLib.getDocument)(parameters); this.pdfLoadingTask = loadingTask; loadingTask.onPassword = (updateCallback, reason) => { this.pdfLinkService.externalLinkEnabled = false; this.passwordPrompt.setUpdateCallback(updateCallback, reason); this.passwordPrompt.open(); }; loadingTask.onProgress = ({ loaded, total }) => { this.progress(loaded / total); }; loadingTask.onUnsupportedFeature = this.fallback.bind(this); return loadingTask.promise.then(pdfDocument => { this.load(pdfDocument); }, reason => { if (loadingTask !== this.pdfLoadingTask) { return undefined; } let key = \"loading_error\"; if (reason instanceof _pdfjsLib.InvalidPDFException) { key = \"invalid_file_error\"; } else if (reason instanceof _pdfjsLib.MissingPDFException) { key = \"missing_file_error\"; } else if (reason instanceof _pdfjsLib.UnexpectedResponseException) { key = \"unexpected_response_error\"; } return this.l10n.get(key).then(msg => { this._documentError(msg, { message: reason?.message }); throw reason; }); }); }, _ensureDownloadComplete() { if (this.pdfDocument && this.downloadComplete) { return; } throw new Error(\"PDF document not downloaded.\"); }, async download({ sourceEventType = \"download\" } = {}) { const url = this._downloadUrl, filename = this._docFilename; try { this._ensureDownloadComplete(); const data = await this.pdfDocument.getData(); const blob = new Blob([data], { type: \"application/pdf\" }); await this.downloadManager.download(blob, url, filename, sourceEventType); } catch (reason) { await this.downloadManager.downloadUrl(url, filename); } }, async save({ sourceEventType = \"download\" } = {}) { if (this._saveInProgress) { return; } this._saveInProgress = true; await this.pdfScriptingManager.dispatchWillSave(); const url = this._downloadUrl, filename = this._docFilename; try { this._ensureDownloadComplete(); const data = await this.pdfDocument.saveDocument(); const blob = new Blob([data], { type: \"application/pdf\" }); await this.downloadManager.download(blob, url, filename, sourceEventType); } catch (reason) { console.error(`Error when saving the document: ${reason.message}`); await this.download({ sourceEventType }); } finally { await this.pdfScriptingManager.dispatchDidSave(); this._saveInProgress = false; } }, downloadOrSave(options) { if (this.pdfDocument?.annotationStorage.size > 0) { this.save(options); } else { this.download(options); } }, fallback(featureId) { this.externalServices.reportTelemetry({ type: \"unsupportedFeature\", featureId }); }, _documentError(message, moreInfo = null) { this._unblockDocumentLoadEvent(); this._otherError(message, moreInfo); this.eventBus.dispatch(\"documenterror\", { source: this, message, reason: moreInfo?.message ?? null }); }, _otherError(message, moreInfo = null) { const moreInfoText = [this.l10n.get(\"error_version_info\", { version: _pdfjsLib.version || \"?\", build: _pdfjsLib.build || \"?\" })]; if (moreInfo) { moreInfoText.push(this.l10n.get(\"error_message\", { message: moreInfo.message })); if (moreInfo.stack) { moreInfoText.push(this.l10n.get(\"error_stack\", { stack: moreInfo.stack })); } else { if (moreInfo.filename) { moreInfoText.push(this.l10n.get(\"error_file\", { file: moreInfo.filename })); } if (moreInfo.lineNumber) { moreInfoText.push(this.l10n.get(\"error_line\", { line: moreInfo.lineNumber })); } } } const errorWrapperConfig = this.appConfig.errorWrapper; const errorWrapper = errorWrapperConfig.container; errorWrapper.hidden = false; const errorMessage = errorWrapperConfig.errorMessage; errorMessage.textContent = message; const closeButton = errorWrapperConfig.closeButton; closeButton.onclick = function () { errorWrapper.hidden = true; }; const errorMoreInfo = errorWrapperConfig.errorMoreInfo; const moreInfoButton = errorWrapperConfig.moreInfoButton; const lessInfoButton = errorWrapperConfig.lessInfoButton; moreInfoButton.onclick = function () { errorMoreInfo.hidden = false; moreInfoButton.hidden = true; lessInfoButton.hidden = false; errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\"; }; lessInfoButton.onclick = function () { errorMoreInfo.hidden = true; moreInfoButton.hidden = false; lessInfoButton.hidden = true; }; moreInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler; lessInfoButton.oncontextmenu = _ui_utils.noContextMenuHandler; closeButton.oncontextmenu = _ui_utils.noContextMenuHandler; moreInfoButton.hidden = false; lessInfoButton.hidden = true; Promise.all(moreInfoText).then(parts => { errorMoreInfo.value = parts.join(\" \"); }); }, progress(level) { if (this.downloadComplete) { return; } const percent = Math.round(level * 100); if (percent > this.loadingBar.percent || isNaN(percent)) { this.loadingBar.percent = percent; const disableAutoFetch = this.pdfDocument ? this.pdfDocument.loadingParams.disableAutoFetch : _app_options.AppOptions.get(\"disableAutoFetch\"); if (disableAutoFetch && percent) { if (this.disableAutoFetchLoadingBarTimeout) { clearTimeout(this.disableAutoFetchLoadingBarTimeout); this.disableAutoFetchLoadingBarTimeout = null; } this.loadingBar.show(); this.disableAutoFetchLoadingBarTimeout = setTimeout(() => { this.loadingBar.hide(); this.disableAutoFetchLoadingBarTimeout = null; }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT); } } }, load(pdfDocument) { this.pdfDocument = pdfDocument; pdfDocument.getDownloadInfo().then(({ length }) => { this._contentLength = length; this.downloadComplete = true; this.loadingBar.hide(); firstPagePromise.then(() => { this.eventBus.dispatch(\"documentloaded\", { source: this }); }); }); const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {}); const pageModePromise = pdfDocument.getPageMode().catch(function () {}); const openActionPromise = pdfDocument.getOpenAction().catch(function () {}); this.toolbar.setPagesCount(pdfDocument.numPages, false); this.secondaryToolbar.setPagesCount(pdfDocument.numPages); let baseDocumentUrl; baseDocumentUrl = null; this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl); this.pdfDocumentProperties.setDocument(pdfDocument, this.url); const pdfViewer = this.pdfViewer; pdfViewer.setDocument(pdfDocument); const { firstPagePromise, onePageRendered, pagesPromise } = pdfViewer; const pdfThumbnailViewer = this.pdfThumbnailViewer; pdfThumbnailViewer.setDocument(pdfDocument); const storedPromise = (this.store = new _view_history.ViewHistory(pdfDocument.fingerprints[0])).getMultiple({ page: null, zoom: _ui_utils.DEFAULT_SCALE_VALUE, scrollLeft: \"0\", scrollTop: \"0\", rotation: null, sidebarView: _ui_utils.SidebarView.UNKNOWN, scrollMode: _ui_utils.ScrollMode.UNKNOWN, spreadMode: _ui_utils.SpreadMode.UNKNOWN }).catch(() => { return Object.create(null); }); firstPagePromise.then(pdfPage => { this.loadingBar.setWidth(this.appConfig.viewerContainer); this._initializeAnnotationStorageCallbacks(pdfDocument); Promise.all([_ui_utils.animationStarted, storedPromise, pageLayoutPromise, pageModePromise, openActionPromise]).then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => { const viewOnLoad = _app_options.AppOptions.get(\"viewOnLoad\"); this._initializePdfHistory({ fingerprint: pdfDocument.fingerprints[0], viewOnLoad, initialDest: openAction?.dest }); const initialBookmark = this.initialBookmark; const zoom = _app_options.AppOptions.get(\"defaultZoomValue\"); let hash = zoom ? `zoom=${zoom}` : null; let rotation = null; let sidebarView = _app_options.AppOptions.get(\"sidebarViewOnLoad\"); let scrollMode = _app_options.AppOptions.get(\"scrollModeOnLoad\"); let spreadMode = _app_options.AppOptions.get(\"spreadModeOnLoad\"); if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) { hash = `page=${stored.page}&zoom=${zoom || stored.zoom},` + `${stored.scrollLeft},${stored.scrollTop}`; rotation = parseInt(stored.rotation, 10); if (sidebarView === _ui_utils.SidebarView.UNKNOWN) { sidebarView = stored.sidebarView | 0; } if (scrollMode === _ui_utils.ScrollMode.UNKNOWN) { scrollMode = stored.scrollMode | 0; } if (spreadMode === _ui_utils.SpreadMode.UNKNOWN) { spreadMode = stored.spreadMode | 0; } } if (pageMode && sidebarView === _ui_utils.SidebarView.UNKNOWN) { sidebarView = (0, _ui_utils.apiPageModeToSidebarView)(pageMode); } if (pageLayout && scrollMode === _ui_utils.ScrollMode.UNKNOWN && spreadMode === _ui_utils.SpreadMode.UNKNOWN) { const modes = (0, _ui_utils.apiPageLayoutToViewerModes)(pageLayout); spreadMode = modes.spreadMode; } this.setInitialView(hash, { rotation, sidebarView, scrollMode, spreadMode }); this.eventBus.dispatch(\"documentinit\", { source: this }); if (!this.isViewerEmbedded) { pdfViewer.focus(); } await Promise.race([pagesPromise, new Promise(resolve => { setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT); })]); if (!initialBookmark && !hash) { return; } if (pdfViewer.hasEqualPageSizes) { return; } this.initialBookmark = initialBookmark; pdfViewer.currentScaleValue = pdfViewer.currentScaleValue; this.setInitialView(hash); }).catch(() => { this.setInitialView(); }).then(function () { pdfViewer.update(); }); }); pagesPromise.then(() => { this._unblockDocumentLoadEvent(); this._initializeAutoPrint(pdfDocument, openActionPromise); }, reason => { this.l10n.get(\"loading_error\").then(msg => { this._documentError(msg, { message: reason?.message }); }); }); onePageRendered.then(data => { this.externalServices.reportTelemetry({ type: \"pageInfo\", timestamp: data.timestamp }); pdfDocument.getOutline().then(outline => { if (pdfDocument !== this.pdfDocument) { return; } this.pdfOutlineViewer.render({ outline, pdfDocument }); }); pdfDocument.getAttachments().then(attachments => { if (pdfDocument !== this.pdfDocument) { return; } this.pdfAttachmentViewer.render({ attachments }); }); pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => { if (pdfDocument !== this.pdfDocument) { return; } this.pdfLayerViewer.render({ optionalContentConfig, pdfDocument }); }); if (\"requestIdleCallback\" in window) { const callback = window.requestIdleCallback(() => { this._collectTelemetry(pdfDocument); this._idleCallbacks.delete(callback); }, { timeout: 1000 }); this._idleCallbacks.add(callback); } }); this._initializePageLabels(pdfDocument); this._initializeMetadata(pdfDocument); }, async _scriptingDocProperties(pdfDocument) { if (!this.documentInfo) { await new Promise(resolve => { this.eventBus._on(\"metadataloaded\", resolve, { once: true }); }); if (pdfDocument !== this.pdfDocument) { return null; } } if (!this._contentLength) { await new Promise(resolve => { this.eventBus._on(\"documentloaded\", resolve, { once: true }); }); if (pdfDocument !== this.pdfDocument) { return null; } } return { ...this.documentInfo, baseURL: this.baseUrl, filesize: this._contentLength, filename: this._docFilename, metadata: this.metadata?.getRaw(), authors: this.metadata?.get(\"dc:creator\"), numPages: this.pagesCount, URL: this.url }; }, async _collectTelemetry(pdfDocument) { const markInfo = await this.pdfDocument.getMarkInfo(); if (pdfDocument !== this.pdfDocument) { return; } const tagged = markInfo?.Marked || false; this.externalServices.reportTelemetry({ type: \"tagged\", tagged }); }, async _initializeAutoPrint(pdfDocument, openActionPromise) { const [openAction, javaScript] = await Promise.all([openActionPromise, !this.pdfViewer.enableScripting ? pdfDocument.getJavaScript() : null]); if (pdfDocument !== this.pdfDocument) { return; } let triggerAutoPrint = false; if (openAction?.action === \"Print\") { triggerAutoPrint = true; } if (javaScript) { javaScript.some(js => { if (!js) { return false; } console.warn(\"Warning: JavaScript support is not enabled\"); this.fallback(_pdfjsLib.UNSUPPORTED_FEATURES.javaScript); return true; }); if (!triggerAutoPrint) { for (const js of javaScript) { if (js && _ui_utils.AutoPrintRegExp.test(js)) { triggerAutoPrint = true; break; } } } } if (triggerAutoPrint) { this.triggerPrinting(); } }, async _initializeMetadata(pdfDocument) { const { info, metadata, contentDispositionFilename, contentLength } = await pdfDocument.getMetadata(); if (pdfDocument !== this.pdfDocument) { return; } this.documentInfo = info; this.metadata = metadata; this._contentDispositionFilename ??= contentDispositionFilename; this._contentLength ??= contentLength; console.log(`PDF ${pdfDocument.fingerprints[0]} [${info.PDFFormatVersion} ` + `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` + `(PDF.js: ${_pdfjsLib.version || \"-\"})`); let pdfTitle = info?.Title; const metadataTitle = metadata?.get(\"dc:title\"); if (metadataTitle) { if (metadataTitle !== \"Untitled\" && !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)) { pdfTitle = metadataTitle; } } if (pdfTitle) { this.setTitle(`${pdfTitle} - ${contentDispositionFilename || document.title}`); } else if (contentDispositionFilename) { this.setTitle(contentDispositionFilename); } if (info.IsXFAPresent && !info.IsAcroFormPresent && !pdfDocument.isPureXfa) { if (pdfDocument.loadingParams.enableXfa) { console.warn(\"Warning: XFA Foreground documents are not supported\"); } else { console.warn(\"Warning: XFA support is not enabled\"); } this.fallback(_pdfjsLib.UNSUPPORTED_FEATURES.forms); } else if ((info.IsAcroFormPresent || info.IsXFAPresent) && !this.pdfViewer.renderForms) { console.warn(\"Warning: Interactive form support is not enabled\"); this.fallback(_pdfjsLib.UNSUPPORTED_FEATURES.forms); } if (info.IsSignaturesPresent) { console.warn(\"Warning: Digital signatures validation is not supported\"); this.fallback(_pdfjsLib.UNSUPPORTED_FEATURES.signatures); } let versionId = \"other\"; if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) { versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`; } let generatorId = \"other\"; if (info.Producer) { const producer = info.Producer.toLowerCase(); KNOWN_GENERATORS.some(function (generator) { if (!producer.includes(generator)) { return false; } generatorId = generator.replace(/[ .-]/g, \"_\"); return true; }); } let formType = null; if (info.IsXFAPresent) { formType = \"xfa\"; } else if (info.IsAcroFormPresent) { formType = \"acroform\"; } this.externalServices.reportTelemetry({ type: \"documentInfo\", version: versionId, generator: generatorId, formType }); this.eventBus.dispatch(\"metadataloaded\", { source: this }); }, async _initializePageLabels(pdfDocument) { const labels = await pdfDocument.getPageLabels(); if (pdfDocument !== this.pdfDocument) { return; } if (!labels || _app_options.AppOptions.get(\"disablePageLabels\")) { return; } const numLabels = labels.length; let standardLabels = 0, emptyLabels = 0; for (let i = 0; i < numLabels; i++) { const label = labels[i]; if (label === (i + 1).toString()) { standardLabels++; } else if (label === \"\") { emptyLabels++; } else { break; } } if (standardLabels >= numLabels || emptyLabels >= numLabels) { return; } const { pdfViewer, pdfThumbnailViewer, toolbar } = this; pdfViewer.setPageLabels(labels); pdfThumbnailViewer.setPageLabels(labels); toolbar.setPagesCount(numLabels, true); toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel); }, _initializePdfHistory({ fingerprint, viewOnLoad, initialDest = null }) { if (!this.pdfHistory) { return; } this.pdfHistory.initialize({ fingerprint, resetHistory: viewOnLoad === ViewOnLoad.INITIAL, updateUrl: _app_options.AppOptions.get(\"historyUpdateUrl\") }); if (this.pdfHistory.initialBookmark) { this.initialBookmark = this.pdfHistory.initialBookmark; this.initialRotation = this.pdfHistory.initialRotation; } if (initialDest && !this.initialBookmark && viewOnLoad === ViewOnLoad.UNKNOWN) { this.initialBookmark = JSON.stringify(initialDest); this.pdfHistory.push({ explicitDest: initialDest, pageNumber: null }); } }, _initializeAnnotationStorageCallbacks(pdfDocument) { if (pdfDocument !== this.pdfDocument) { return; } const { annotationStorage } = pdfDocument; annotationStorage.onSetModified = () => { window.addEventListener(\"beforeunload\", beforeUnload); this._annotationStorageModified = true; }; annotationStorage.onResetModified = () => { window.removeEventListener(\"beforeunload\", beforeUnload); delete this._annotationStorageModified; }; }, setInitialView(storedHash, { rotation, sidebarView, scrollMode, spreadMode } = {}) { const setRotation = angle => { if ((0, _ui_utils.isValidRotation)(angle)) { this.pdfViewer.pagesRotation = angle; } }; const setViewerModes = (scroll, spread) => { if ((0, _ui_utils.isValidScrollMode)(scroll)) { this.pdfViewer.scrollMode = scroll; } if ((0, _ui_utils.isValidSpreadMode)(spread)) { this.pdfViewer.spreadMode = spread; } }; this.isInitialViewSet = true; this.pdfSidebar.setInitialView(sidebarView); setViewerModes(scrollMode, spreadMode); if (this.initialBookmark) { setRotation(this.initialRotation); delete this.initialRotation; this.pdfLinkService.setHash(this.initialBookmark); this.initialBookmark = null; } else if (storedHash) { setRotation(rotation); this.pdfLinkService.setHash(storedHash); } this.toolbar.setPageNumber(this.pdfViewer.currentPageNumber, this.pdfViewer.currentPageLabel); this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber); if (!this.pdfViewer.currentScaleValue) { this.pdfViewer.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE; } }, _cleanup() { if (!this.pdfDocument) { return; } this.pdfViewer.cleanup(); this.pdfThumbnailViewer.cleanup(); this.pdfDocument.cleanup(this.pdfViewer.renderer === _ui_utils.RendererType.SVG); }, forceRendering() { this.pdfRenderingQueue.printing = !!this.printService; this.pdfRenderingQueue.isThumbnailViewEnabled = this.pdfSidebar.isThumbnailViewVisible; this.pdfRenderingQueue.renderHighestPriority(); }, beforePrint() { this.pdfScriptingManager.dispatchWillPrint(); if (this.printService) { return; } if (!this.supportsPrinting) { this.l10n.get(\"printing_not_supported\").then(msg => { this._otherError(msg); }); return; } if (!this.pdfViewer.pageViewsReady) { this.l10n.get(\"printing_not_ready\").then(msg => { window.alert(msg); }); return; } const pagesOverview = this.pdfViewer.getPagesOverview(); const printContainer = this.appConfig.printContainer; const printResolution = _app_options.AppOptions.get(\"printResolution\"); const optionalContentConfigPromise = this.pdfViewer.optionalContentConfigPromise; const printService = PDFPrintServiceFactory.instance.createPrintService(this.pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, this.l10n); this.printService = printService; this.forceRendering(); printService.layout(); this.externalServices.reportTelemetry({ type: \"print\" }); }, afterPrint() { this.pdfScriptingManager.dispatchDidPrint(); if (this.printService) { this.printService.destroy(); this.printService = null; this.pdfDocument?.annotationStorage.resetModified(); } this.forceRendering(); }, rotatePages(delta) { this.pdfViewer.pagesRotation += delta; }, requestPresentationMode() { this.pdfPresentationMode?.request(); }, triggerPrinting() { if (!this.supportsPrinting) { return; } window.print(); }, bindEvents() { const { eventBus, _boundEvents } = this; _boundEvents.beforePrint = this.beforePrint.bind(this); _boundEvents.afterPrint = this.afterPrint.bind(this); eventBus._on(\"resize\", webViewerResize); eventBus._on(\"hashchange\", webViewerHashchange); eventBus._on(\"beforeprint\", _boundEvents.beforePrint); eventBus._on(\"afterprint\", _boundEvents.afterPrint); eventBus._on(\"pagerendered\", webViewerPageRendered); eventBus._on(\"updateviewarea\", webViewerUpdateViewarea); eventBus._on(\"pagechanging\", webViewerPageChanging); eventBus._on(\"scalechanging\", webViewerScaleChanging); eventBus._on(\"rotationchanging\", webViewerRotationChanging); eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged); eventBus._on(\"pagemode\", webViewerPageMode); eventBus._on(\"namedaction\", webViewerNamedAction); eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged); eventBus._on(\"presentationmode\", webViewerPresentationMode); eventBus._on(\"print\", webViewerPrint); eventBus._on(\"download\", webViewerDownload); eventBus._on(\"save\", webViewerSave); eventBus._on(\"firstpage\", webViewerFirstPage); eventBus._on(\"lastpage\", webViewerLastPage); eventBus._on(\"nextpage\", webViewerNextPage); eventBus._on(\"previouspage\", webViewerPreviousPage); eventBus._on(\"zoomin\", webViewerZoomIn); eventBus._on(\"zoomout\", webViewerZoomOut); eventBus._on(\"zoomreset\", webViewerZoomReset); eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged); eventBus._on(\"scalechanged\", webViewerScaleChanged); eventBus._on(\"rotatecw\", webViewerRotateCw); eventBus._on(\"rotateccw\", webViewerRotateCcw); eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig); eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode); eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged); eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode); eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged); eventBus._on(\"documentproperties\", webViewerDocumentProperties); eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash); eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount); eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState); if (_app_options.AppOptions.get(\"pdfBug\")) { _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug; eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug); eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug); } eventBus._on(\"fileinputchange\", webViewerFileInputChange); eventBus._on(\"openfile\", webViewerOpenFile); }, bindWindowEvents() { const { eventBus, _boundEvents } = this; _boundEvents.windowResize = () => { eventBus.dispatch(\"resize\", { source: window }); }; _boundEvents.windowHashChange = () => { eventBus.dispatch(\"hashchange\", { source: window, hash: document.location.hash.substring(1) }); }; _boundEvents.windowBeforePrint = () => { eventBus.dispatch(\"beforeprint\", { source: window }); }; _boundEvents.windowAfterPrint = () => { eventBus.dispatch(\"afterprint\", { source: window }); }; _boundEvents.windowUpdateFromSandbox = event => { eventBus.dispatch(\"updatefromsandbox\", { source: window, detail: event.detail }); }; window.addEventListener(\"visibilitychange\", webViewerVisibilityChange); window.addEventListener(\"wheel\", webViewerWheel, { passive: false }); window.addEventListener(\"touchstart\", webViewerTouchStart, { passive: false }); window.addEventListener(\"click\", webViewerClick); window.addEventListener(\"keydown\", webViewerKeyDown); window.addEventListener(\"resize\", _boundEvents.windowResize); window.addEventListener(\"hashchange\", _boundEvents.windowHashChange); window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint); window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint); window.addEventListener(\"updatefromsandbox\", _boundEvents.windowUpdateFromSandbox); }, unbindEvents() { const { eventBus, _boundEvents } = this; eventBus._off(\"resize\", webViewerResize); eventBus._off(\"hashchange\", webViewerHashchange); eventBus._off(\"beforeprint\", _boundEvents.beforePrint); eventBus._off(\"afterprint\", _boundEvents.afterPrint); eventBus._off(\"pagerendered\", webViewerPageRendered); eventBus._off(\"updateviewarea\", webViewerUpdateViewarea); eventBus._off(\"pagechanging\", webViewerPageChanging); eventBus._off(\"scalechanging\", webViewerScaleChanging); eventBus._off(\"rotationchanging\", webViewerRotationChanging); eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged); eventBus._off(\"pagemode\", webViewerPageMode); eventBus._off(\"namedaction\", webViewerNamedAction); eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged); eventBus._off(\"presentationmode\", webViewerPresentationMode); eventBus._off(\"print\", webViewerPrint); eventBus._off(\"download\", webViewerDownload); eventBus._off(\"save\", webViewerSave); eventBus._off(\"firstpage\", webViewerFirstPage); eventBus._off(\"lastpage\", webViewerLastPage); eventBus._off(\"nextpage\", webViewerNextPage); eventBus._off(\"previouspage\", webViewerPreviousPage); eventBus._off(\"zoomin\", webViewerZoomIn); eventBus._off(\"zoomout\", webViewerZoomOut); eventBus._off(\"zoomreset\", webViewerZoomReset); eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged); eventBus._off(\"scalechanged\", webViewerScaleChanged); eventBus._off(\"rotatecw\", webViewerRotateCw); eventBus._off(\"rotateccw\", webViewerRotateCcw); eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig); eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode); eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged); eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode); eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged); eventBus._off(\"documentproperties\", webViewerDocumentProperties); eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash); eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount); eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState); if (_boundEvents.reportPageStatsPDFBug) { eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug); eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug); _boundEvents.reportPageStatsPDFBug = null; } eventBus._off(\"fileinputchange\", webViewerFileInputChange); eventBus._off(\"openfile\", webViewerOpenFile); _boundEvents.beforePrint = null; _boundEvents.afterPrint = null; }, unbindWindowEvents() { const { _boundEvents } = this; window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange); window.removeEventListener(\"wheel\", webViewerWheel, { passive: false }); window.removeEventListener(\"touchstart\", webViewerTouchStart, { passive: false }); window.removeEventListener(\"click\", webViewerClick); window.removeEventListener(\"keydown\", webViewerKeyDown); window.removeEventListener(\"resize\", _boundEvents.windowResize); window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange); window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint); window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint); window.removeEventListener(\"updatefromsandbox\", _boundEvents.windowUpdateFromSandbox); _boundEvents.windowResize = null; _boundEvents.windowHashChange = null; _boundEvents.windowBeforePrint = null; _boundEvents.windowAfterPrint = null; _boundEvents.windowUpdateFromSandbox = null; }, accumulateWheelTicks(ticks) { if (this._wheelUnusedTicks > 0 && ticks < 0 || this._wheelUnusedTicks < 0 && ticks > 0) { this._wheelUnusedTicks = 0; } this._wheelUnusedTicks += ticks; const wholeTicks = Math.sign(this._wheelUnusedTicks) * Math.floor(Math.abs(this._wheelUnusedTicks)); this._wheelUnusedTicks -= wholeTicks; return wholeTicks; }, _unblockDocumentLoadEvent() { document.blockUnblockOnload?.(false); this._unblockDocumentLoadEvent = () => {}; }, _reportDocumentStatsTelemetry() { const { stats } = this.pdfDocument; if (stats !== this._docStats) { this._docStats = stats; this.externalServices.reportTelemetry({ type: \"documentStats\", stats }); } }, get scriptingReady() { return this.pdfScriptingManager.ready; } }; exports.PDFViewerApplication = PDFViewerApplication; let validateFileURL; { const HOSTED_VIEWER_ORIGINS = [\"null\", \"http://mozilla.github.io\", \"https://mozilla.github.io\"]; validateFileURL = function (file) { if (!file) { return; } try { const viewerOrigin = new URL(window.location.href).origin || \"null\"; if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) { return; } const fileOrigin = new URL(file, window.location.href).origin; if (fileOrigin !== viewerOrigin) { throw new Error(\"file origin does not match viewer's\"); } } catch (ex) { PDFViewerApplication.l10n.get(\"loading_error\").then(msg => { PDFViewerApplication._documentError(msg, { message: ex?.message }); }); throw ex; } }; } async function loadFakeWorker() { _pdfjsLib.GlobalWorkerOptions.workerSrc ||= _app_options.AppOptions.get(\"workerSrc\"); await (0, _pdfjsLib.loadScript)(_pdfjsLib.PDFWorker.workerSrc); } async function loadPDFBug(self) { const { debuggerScriptPath } = self.appConfig; const { PDFBug } = await import(debuggerScriptPath); self._PDFBug = PDFBug; } function reportPageStatsPDFBug({ pageNumber }) { if (!globalThis.Stats?.enabled) { return; } const pageView = PDFViewerApplication.pdfViewer.getPageView(pageNumber - 1); globalThis.Stats.add(pageNumber, pageView?.pdfPage?.stats); } function webViewerInitialized() { const { appConfig, eventBus } = PDFViewerApplication; let file; const queryString = document.location.search.substring(1); const params = (0, _ui_utils.parseQueryString)(queryString); file = params.get(\"file\") ?? _app_options.AppOptions.get(\"defaultUrl\"); validateFileURL(file); const fileInput = appConfig.openFileInput; fileInput.value = null; fileInput.addEventListener(\"change\", function (evt) { const { files } = evt.target; if (!files || files.length === 0) { return; } eventBus.dispatch(\"fileinputchange\", { source: this, fileInput: evt.target }); }); appConfig.mainContainer.addEventListener(\"dragover\", function (evt) { evt.preventDefault(); evt.dataTransfer.dropEffect = \"move\"; }); appConfig.mainContainer.addEventListener(\"drop\", function (evt) { evt.preventDefault(); const { files } = evt.dataTransfer; if (!files || files.length === 0) { return; } eventBus.dispatch(\"fileinputchange\", { source: this, fileInput: evt.dataTransfer }); }); if (!PDFViewerApplication.supportsDocumentFonts) { _app_options.AppOptions.set(\"disableFontFace\", true); PDFViewerApplication.l10n.get(\"web_fonts_disabled\").then(msg => { console.warn(msg); }); } if (!PDFViewerApplication.supportsPrinting) { appConfig.toolbar.print.classList.add(\"hidden\"); appConfig.secondaryToolbar.printButton.classList.add(\"hidden\"); } if (!PDFViewerApplication.supportsFullscreen) { appConfig.toolbar.presentationModeButton.classList.add(\"hidden\"); appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\"); } if (PDFViewerApplication.supportsIntegratedFind) { appConfig.toolbar.viewFind.classList.add(\"hidden\"); } appConfig.mainContainer.addEventListener(\"transitionend\", function (evt) { if (evt.target === this) { eventBus.dispatch(\"resize\", { source: this }); } }, true); try { if (file) { PDFViewerApplication.open(file); } else { PDFViewerApplication._hideViewBookmark(); } } catch (reason) { PDFViewerApplication.l10n.get(\"loading_error\").then(msg => { PDFViewerApplication._documentError(msg, reason); }); } } function webViewerPageRendered({ pageNumber, error }) { if (pageNumber === PDFViewerApplication.page) { PDFViewerApplication.toolbar.updateLoadingIndicatorState(false); } if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) { const pageView = PDFViewerApplication.pdfViewer.getPageView(pageNumber - 1); const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(pageNumber - 1); if (pageView && thumbnailView) { thumbnailView.setImage(pageView); } } if (error) { PDFViewerApplication.l10n.get(\"rendering_error\").then(msg => { PDFViewerApplication._otherError(msg, error); }); } PDFViewerApplication._reportDocumentStatsTelemetry(); } function webViewerPageMode({ mode }) { let view; switch (mode) { case \"thumbs\": view = _ui_utils.SidebarView.THUMBS; break; case \"bookmarks\": case \"outline\": view = _ui_utils.SidebarView.OUTLINE; break; case \"attachments\": view = _ui_utils.SidebarView.ATTACHMENTS; break; case \"layers\": view = _ui_utils.SidebarView.LAYERS; break; case \"none\": view = _ui_utils.SidebarView.NONE; break; default: console.error('Invalid \"pagemode\" hash parameter: ' + mode); return; } PDFViewerApplication.pdfSidebar.switchView(view, true); } function webViewerNamedAction(evt) { switch (evt.action) { case \"GoToPage\": PDFViewerApplication.appConfig.toolbar.pageNumber.select(); break; case \"Find\": if (!PDFViewerApplication.supportsIntegratedFind) { PDFViewerApplication.findBar.toggle(); } break; case \"Print\": PDFViewerApplication.triggerPrinting(); break; case \"SaveAs\": webViewerSave(); break; } } function webViewerPresentationModeChanged(evt) { PDFViewerApplication.pdfViewer.presentationModeState = evt.state; } function webViewerSidebarViewChanged(evt) { PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled = PDFViewerApplication.pdfSidebar.isThumbnailViewVisible; if (PDFViewerApplication.isInitialViewSet) { PDFViewerApplication.store?.set(\"sidebarView\", evt.view).catch(() => {}); } } function webViewerUpdateViewarea(evt) { const location = evt.location; if (PDFViewerApplication.isInitialViewSet) { PDFViewerApplication.store?.setMultiple({ page: location.pageNumber, zoom: location.scale, scrollLeft: location.left, scrollTop: location.top, rotation: location.rotation }).catch(() => {}); } const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(location.pdfOpenParams); PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href; PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href = href; const currentPage = PDFViewerApplication.pdfViewer.getPageView(PDFViewerApplication.page - 1); const loading = currentPage?.renderingState !== _ui_utils.RenderingStates.FINISHED; PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading); } function webViewerScrollModeChanged(evt) { if (PDFViewerApplication.isInitialViewSet) { PDFViewerApplication.store?.set(\"scrollMode\", evt.mode).catch(() => {}); } } function webViewerSpreadModeChanged(evt) { if (PDFViewerApplication.isInitialViewSet) { PDFViewerApplication.store?.set(\"spreadMode\", evt.mode).catch(() => {}); } } function webViewerResize() { const { pdfDocument, pdfViewer } = PDFViewerApplication; if (!pdfDocument) { return; } const currentScaleValue = pdfViewer.currentScaleValue; if (currentScaleValue === \"auto\" || currentScaleValue === \"page-fit\" || currentScaleValue === \"page-width\") { pdfViewer.currentScaleValue = currentScaleValue; } pdfViewer.update(); } function webViewerHashchange(evt) { const hash = evt.hash; if (!hash) { return; } if (!PDFViewerApplication.isInitialViewSet) { PDFViewerApplication.initialBookmark = hash; } else if (!PDFViewerApplication.pdfHistory?.popStateInProgress) { PDFViewerApplication.pdfLinkService.setHash(hash); } } { var webViewerFileInputChange = function (evt) { if (PDFViewerApplication.pdfViewer?.isInPresentationMode) { return; } const file = evt.fileInput.files[0]; let url = URL.createObjectURL(file); if (file.name) { url = { url, originalUrl: file.name }; } PDFViewerApplication.open(url); }; var webViewerOpenFile = function (evt) { const fileInput = PDFViewerApplication.appConfig.openFileInput; fileInput.click(); }; } function webViewerPresentationMode() { PDFViewerApplication.requestPresentationMode(); } function webViewerPrint() { PDFViewerApplication.triggerPrinting(); } function webViewerDownload() { PDFViewerApplication.downloadOrSave({ sourceEventType: \"download\" }); } function webViewerSave() { PDFViewerApplication.downloadOrSave({ sourceEventType: \"save\" }); } function webViewerFirstPage() { if (PDFViewerApplication.pdfDocument) { PDFViewerApplication.page = 1; } } function webViewerLastPage() { if (PDFViewerApplication.pdfDocument) { PDFViewerApplication.page = PDFViewerApplication.pagesCount; } } function webViewerNextPage() { PDFViewerApplication.pdfViewer.nextPage(); } function webViewerPreviousPage() { PDFViewerApplication.pdfViewer.previousPage(); } function webViewerZoomIn() { PDFViewerApplication.zoomIn(); } function webViewerZoomOut() { PDFViewerApplication.zoomOut(); } function webViewerZoomReset() { PDFViewerApplication.zoomReset(); } function webViewerPageNumberChanged(evt) { const pdfViewer = PDFViewerApplication.pdfViewer; if (evt.value !== \"\") { PDFViewerApplication.pdfLinkService.goToPage(evt.value); } if (evt.value !== pdfViewer.currentPageNumber.toString() && evt.value !== pdfViewer.currentPageLabel) { PDFViewerApplication.toolbar.setPageNumber(pdfViewer.currentPageNumber, pdfViewer.currentPageLabel); } } function webViewerScaleChanged(evt) { PDFViewerApplication.pdfViewer.currentScaleValue = evt.value; } function webViewerRotateCw() { PDFViewerApplication.rotatePages(90); } function webViewerRotateCcw() { PDFViewerApplication.rotatePages(-90); } function webViewerOptionalContentConfig(evt) { PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise; } function webViewerSwitchScrollMode(evt) { PDFViewerApplication.pdfViewer.scrollMode = evt.mode; } function webViewerSwitchSpreadMode(evt) { PDFViewerApplication.pdfViewer.spreadMode = evt.mode; } function webViewerDocumentProperties() { PDFViewerApplication.pdfDocumentProperties.open(); } function webViewerFindFromUrlHash(evt) { PDFViewerApplication.eventBus.dispatch(\"find\", { source: evt.source, type: \"\", query: evt.query, phraseSearch: evt.phraseSearch, caseSensitive: false, entireWord: false, highlightAll: true, findPrevious: false, matchDiacritics: true }); } function webViewerUpdateFindMatchesCount({ matchesCount }) { if (PDFViewerApplication.supportsIntegratedFind) { PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount); } else { PDFViewerApplication.findBar.updateResultsCount(matchesCount); } } function webViewerUpdateFindControlState({ state, previous, matchesCount, rawQuery }) { if (PDFViewerApplication.supportsIntegratedFind) { PDFViewerApplication.externalServices.updateFindControlState({ result: state, findPrevious: previous, matchesCount, rawQuery }); } else { PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount); } } function webViewerScaleChanging(evt) { PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale); PDFViewerApplication.pdfViewer.update(); } function webViewerRotationChanging(evt) { PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation; PDFViewerApplication.forceRendering(); PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber; } function webViewerPageChanging({ pageNumber, pageLabel }) { PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel); PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber); if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) { PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber); } } function webViewerVisibilityChange(evt) { if (document.visibilityState === \"visible\") { setZoomDisabledTimeout(); } } let zoomDisabledTimeout = null; function setZoomDisabledTimeout() { if (zoomDisabledTimeout) { clearTimeout(zoomDisabledTimeout); } zoomDisabledTimeout = setTimeout(function () { zoomDisabledTimeout = null; }, WHEEL_ZOOM_DISABLED_TIMEOUT); } function webViewerWheel(evt) { const { pdfViewer, supportedMouseWheelZoomModifierKeys } = PDFViewerApplication; if (pdfViewer.isInPresentationMode) { return; } if (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey || evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey) { evt.preventDefault(); if (zoomDisabledTimeout || document.visibilityState === \"hidden\") { return; } const deltaMode = evt.deltaMode; const delta = (0, _ui_utils.normalizeWheelEventDirection)(evt); const previousScale = pdfViewer.currentScale; let ticks = 0; if (deltaMode === WheelEvent.DOM_DELTA_LINE || deltaMode === WheelEvent.DOM_DELTA_PAGE) { if (Math.abs(delta) >= 1) { ticks = Math.sign(delta); } else { ticks = PDFViewerApplication.accumulateWheelTicks(delta); } } else { const PIXELS_PER_LINE_SCALE = 30; ticks = PDFViewerApplication.accumulateWheelTicks(delta / PIXELS_PER_LINE_SCALE); } if (ticks < 0) { PDFViewerApplication.zoomOut(-ticks); } else if (ticks > 0) { PDFViewerApplication.zoomIn(ticks); } const currentScale = pdfViewer.currentScale; if (previousScale !== currentScale) { const scaleCorrectionFactor = currentScale / previousScale - 1; const rect = pdfViewer.container.getBoundingClientRect(); const dx = evt.clientX - rect.left; const dy = evt.clientY - rect.top; pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor; pdfViewer.container.scrollTop += dy * scaleCorrectionFactor; } } else { setZoomDisabledTimeout(); } } function webViewerTouchStart(evt) { if (evt.touches.length > 1) { evt.preventDefault(); } } function webViewerClick(evt) { if (!PDFViewerApplication.secondaryToolbar.isOpen) { return; } const appConfig = PDFViewerApplication.appConfig; if (PDFViewerApplication.pdfViewer.containsElement(evt.target) || appConfig.toolbar.container.contains(evt.target) && evt.target !== appConfig.secondaryToolbar.toggleButton) { PDFViewerApplication.secondaryToolbar.close(); } } function webViewerKeyDown(evt) { if (PDFViewerApplication.overlayManager.active) { return; } const { eventBus, pdfViewer } = PDFViewerApplication; const isViewerInPresentationMode = pdfViewer.isInPresentationMode; let handled = false, ensureViewerFocused = false; const cmd = (evt.ctrlKey ? 1 : 0) | (evt.altKey ? 2 : 0) | (evt.shiftKey ? 4 : 0) | (evt.metaKey ? 8 : 0); if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) { switch (evt.keyCode) { case 70: if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) { PDFViewerApplication.findBar.open(); handled = true; } break; case 71: if (!PDFViewerApplication.supportsIntegratedFind) { const { state } = PDFViewerApplication.findController; if (state) { const eventState = Object.assign(Object.create(null), state, { source: window, type: \"again\", findPrevious: cmd === 5 || cmd === 12 }); eventBus.dispatch(\"find\", eventState); } handled = true; } break; case 61: case 107: case 187: case 171: if (!isViewerInPresentationMode) { PDFViewerApplication.zoomIn(); } handled = true; break; case 173: case 109: case 189: if (!isViewerInPresentationMode) { PDFViewerApplication.zoomOut(); } handled = true; break; case 48: case 96: if (!isViewerInPresentationMode) { setTimeout(function () { PDFViewerApplication.zoomReset(); }); handled = false; } break; case 38: if (isViewerInPresentationMode || PDFViewerApplication.page > 1) { PDFViewerApplication.page = 1; handled = true; ensureViewerFocused = true; } break; case 40: if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) { PDFViewerApplication.page = PDFViewerApplication.pagesCount; handled = true; ensureViewerFocused = true; } break; } } if (cmd === 1 || cmd === 8) { switch (evt.keyCode) { case 83: eventBus.dispatch(\"download\", { source: window }); handled = true; break; case 79: { eventBus.dispatch(\"openfile\", { source: window }); handled = true; } break; } } if (cmd === 3 || cmd === 10) { switch (evt.keyCode) { case 80: PDFViewerApplication.requestPresentationMode(); handled = true; break; case 71: PDFViewerApplication.appConfig.toolbar.pageNumber.select(); handled = true; break; } } if (handled) { if (ensureViewerFocused && !isViewerInPresentationMode) { pdfViewer.focus(); } evt.preventDefault(); return; } const curElement = (0, _ui_utils.getActiveOrFocusedElement)(); const curElementTagName = curElement?.tagName.toUpperCase(); if (curElementTagName === \"INPUT\" || curElementTagName === \"TEXTAREA\" || curElementTagName === \"SELECT\" || curElement?.isContentEditable) { if (evt.keyCode !== 27) { return; } } if (cmd === 0) { let turnPage = 0, turnOnlyIfPageFit = false; switch (evt.keyCode) { case 38: case 33: if (pdfViewer.isVerticalScrollbarEnabled) { turnOnlyIfPageFit = true; } turnPage = -1; break; case 8: if (!isViewerInPresentationMode) { turnOnlyIfPageFit = true; } turnPage = -1; break; case 37: if (pdfViewer.isHorizontalScrollbarEnabled) { turnOnlyIfPageFit = true; } case 75: case 80: turnPage = -1; break; case 27: if (PDFViewerApplication.secondaryToolbar.isOpen) { PDFViewerApplication.secondaryToolbar.close(); handled = true; } if (!PDFViewerApplication.supportsIntegratedFind && PDFViewerApplication.findBar.opened) { PDFViewerApplication.findBar.close(); handled = true; } break; case 40: case 34: if (pdfViewer.isVerticalScrollbarEnabled) { turnOnlyIfPageFit = true; } turnPage = 1; break; case 13: case 32: if (!isViewerInPresentationMode) { turnOnlyIfPageFit = true; } turnPage = 1; break; case 39: if (pdfViewer.isHorizontalScrollbarEnabled) { turnOnlyIfPageFit = true; } case 74: case 78: turnPage = 1; break; case 36: if (isViewerInPresentationMode || PDFViewerApplication.page > 1) { PDFViewerApplication.page = 1; handled = true; ensureViewerFocused = true; } break; case 35: if (isViewerInPresentationMode || PDFViewerApplication.page < PDFViewerApplication.pagesCount) { PDFViewerApplication.page = PDFViewerApplication.pagesCount; handled = true; ensureViewerFocused = true; } break; case 83: PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.SELECT); break; case 72: PDFViewerApplication.pdfCursorTools.switchTool(_pdf_cursor_tools.CursorTool.HAND); break; case 82: PDFViewerApplication.rotatePages(90); break; case 115: PDFViewerApplication.pdfSidebar.toggle(); break; } if (turnPage !== 0 && (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")) { if (turnPage > 0) { pdfViewer.nextPage(); } else { pdfViewer.previousPage(); } handled = true; } } if (cmd === 4) { switch (evt.keyCode) { case 13: case 32: if (!isViewerInPresentationMode && pdfViewer.currentScaleValue !== \"page-fit\") { break; } pdfViewer.previousPage(); handled = true; break; case 82: PDFViewerApplication.rotatePages(-90); break; } } if (!handled && !isViewerInPresentationMode) { if (evt.keyCode >= 33 && evt.keyCode { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.animationStarted = exports.VERTICAL_PADDING = exports.UNKNOWN_SCALE = exports.TextLayerMode = exports.SpreadMode = exports.SidebarView = exports.ScrollMode = exports.SCROLLBAR_PADDING = exports.RenderingStates = exports.RendererType = exports.ProgressBar = exports.PresentationModeState = exports.OutputScale = exports.MIN_SCALE = exports.MAX_SCALE = exports.MAX_AUTO_SCALE = exports.DEFAULT_SCALE_VALUE = exports.DEFAULT_SCALE_DELTA = exports.DEFAULT_SCALE = exports.AutoPrintRegExp = void 0; exports.apiPageLayoutToViewerModes = apiPageLayoutToViewerModes; exports.apiPageModeToSidebarView = apiPageModeToSidebarView; exports.approximateFraction = approximateFraction; exports.backtrackBeforeAllVisibleElements = backtrackBeforeAllVisibleElements; exports.binarySearchFirstItem = binarySearchFirstItem; exports.getActiveOrFocusedElement = getActiveOrFocusedElement; exports.getPageSizeInches = getPageSizeInches; exports.getVisibleElements = getVisibleElements; exports.isPortraitOrientation = isPortraitOrientation; exports.isValidRotation = isValidRotation; exports.isValidScrollMode = isValidScrollMode; exports.isValidSpreadMode = isValidSpreadMode; exports.noContextMenuHandler = noContextMenuHandler; exports.normalizeWheelEventDelta = normalizeWheelEventDelta; exports.normalizeWheelEventDirection = normalizeWheelEventDirection; exports.parseQueryString = parseQueryString; exports.removeNullCharacters = removeNullCharacters; exports.roundToDivide = roundToDivide; exports.scrollIntoView = scrollIntoView; exports.watchScroll = watchScroll; const DEFAULT_SCALE_VALUE = \"auto\"; exports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE; const DEFAULT_SCALE = 1.0; exports.DEFAULT_SCALE = DEFAULT_SCALE; const DEFAULT_SCALE_DELTA = 1.1; exports.DEFAULT_SCALE_DELTA = DEFAULT_SCALE_DELTA; const MIN_SCALE = 0.1; exports.MIN_SCALE = MIN_SCALE; const MAX_SCALE = 10.0; exports.MAX_SCALE = MAX_SCALE; const UNKNOWN_SCALE = 0; exports.UNKNOWN_SCALE = UNKNOWN_SCALE; const MAX_AUTO_SCALE = 1.25; exports.MAX_AUTO_SCALE = MAX_AUTO_SCALE; const SCROLLBAR_PADDING = 40; exports.SCROLLBAR_PADDING = SCROLLBAR_PADDING; const VERTICAL_PADDING = 5; exports.VERTICAL_PADDING = VERTICAL_PADDING; const LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\"; const RenderingStates = { INITIAL: 0, RUNNING: 1, PAUSED: 2, FINISHED: 3 }; exports.RenderingStates = RenderingStates; const PresentationModeState = { UNKNOWN: 0, NORMAL: 1, CHANGING: 2, FULLSCREEN: 3 }; exports.PresentationModeState = PresentationModeState; const SidebarView = { UNKNOWN: -1, NONE: 0, THUMBS: 1, OUTLINE: 2, ATTACHMENTS: 3, LAYERS: 4 }; exports.SidebarView = SidebarView; const RendererType = { CANVAS: \"canvas\", SVG: \"svg\" }; exports.RendererType = RendererType; const TextLayerMode = { DISABLE: 0, ENABLE: 1, ENABLE_ENHANCE: 2 }; exports.TextLayerMode = TextLayerMode; const ScrollMode = { UNKNOWN: -1, VERTICAL: 0, HORIZONTAL: 1, WRAPPED: 2, PAGE: 3 }; exports.ScrollMode = ScrollMode; const SpreadMode = { UNKNOWN: -1, NONE: 0, ODD: 1, EVEN: 2 }; exports.SpreadMode = SpreadMode; const AutoPrintRegExp = /\\bprint\\s*\\(/; exports.AutoPrintRegExp = AutoPrintRegExp; class OutputScale { constructor() { const pixelRatio = window.devicePixelRatio || 1; this.sx = pixelRatio; this.sy = pixelRatio; } get scaled() { return this.sx !== 1 || this.sy !== 1; } } exports.OutputScale = OutputScale; function scrollIntoView(element, spot, scrollMatches = false) { let parent = element.offsetParent; if (!parent) { console.error(\"offsetParent is not set -- cannot scroll\"); return; } let offsetY = element.offsetTop + element.clientTop; let offsetX = element.offsetLeft + element.clientLeft; while (parent.clientHeight === parent.scrollHeight && parent.clientWidth === parent.scrollWidth || scrollMatches && (parent.classList.contains(\"markedContent\") || getComputedStyle(parent).overflow === \"hidden\")) { offsetY += parent.offsetTop; offsetX += parent.offsetLeft; parent = parent.offsetParent; if (!parent) { return; } } if (spot) { if (spot.top !== undefined) { offsetY += spot.top; } if (spot.left !== undefined) { offsetX += spot.left; parent.scrollLeft = offsetX; } } parent.scrollTop = offsetY; } function watchScroll(viewAreaElement, callback) { const debounceScroll = function (evt) { if (rAF) { return; } rAF = window.requestAnimationFrame(function viewAreaElementScrolled() { rAF = null; const currentX = viewAreaElement.scrollLeft; const lastX = state.lastX; if (currentX !== lastX) { state.right = currentX > lastX; } state.lastX = currentX; const currentY = viewAreaElement.scrollTop; const lastY = state.lastY; if (currentY !== lastY) { state.down = currentY > lastY; } state.lastY = currentY; callback(state); }); }; const state = { right: true, down: true, lastX: viewAreaElement.scrollLeft, lastY: viewAreaElement.scrollTop, _eventHandler: debounceScroll }; let rAF = null; viewAreaElement.addEventListener(\"scroll\", debounceScroll, true); return state; } function parseQueryString(query) { const params = new Map(); for (const [key, value] of new URLSearchParams(query)) { params.set(key.toLowerCase(), value); } return params; } const NullCharactersRegExp = /\\x00/g; const InvisibleCharactersRegExp = /[\\x01-\\x1F]/g; function removeNullCharacters(str, replaceInvisible = false) { if (typeof str !== \"string\") { console.error(`The argument must be a string.`); return str; } if (replaceInvisible) { str = str.replace(InvisibleCharactersRegExp, \" \"); } return str.replace(NullCharactersRegExp, \"\"); } function binarySearchFirstItem(items, condition, start = 0) { let minIndex = start; let maxIndex = items.length - 1; if (maxIndex < 0 || !condition(items[maxIndex])) { return items.length; } if (condition(items[minIndex])) { return minIndex; } while (minIndex < maxIndex) { const currentIndex = minIndex + maxIndex >> 1; const currentItem = items[currentIndex]; if (condition(currentItem)) { maxIndex = currentIndex; } else { minIndex = currentIndex + 1; } } return minIndex; } function approximateFraction(x) { if (Math.floor(x) === x) { return [x, 1]; } const xinv = 1 / x; const limit = 8; if (xinv > limit) { return [1, limit]; } else if (Math.floor(xinv) === xinv) { return [1, xinv]; } const x_ = x > 1 ? xinv : x; let a = 0, b = 1, c = 1, d = 1; while (true) { const p = a + c, q = b + d; if (q > limit) { break; } if (x_ 0 && firstVisibleElementInd < numViews && !horizontal) { firstVisibleElementInd = backtrackBeforeAllVisibleElements(firstVisibleElementInd, views, top); } let lastEdge = horizontal ? right : -1; for (let i = firstVisibleElementInd; i < numViews; i++) { const view = views[i], element = view.div; const currentWidth = element.offsetLeft + element.clientLeft; const currentHeight = element.offsetTop + element.clientTop; const viewWidth = element.clientWidth, viewHeight = element.clientHeight; const viewRight = currentWidth + viewWidth; const viewBottom = currentHeight + viewHeight; if (lastEdge === -1) { if (viewBottom >= bottom) { lastEdge = viewBottom; } } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) { break; } if (viewBottom = bottom || viewRight = right) { continue; } const hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom); const hiddenWidth = Math.max(0, left - currentWidth) + Math.max(0, viewRight - right); const fractionHeight = (viewHeight - hiddenHeight) / viewHeight, fractionWidth = (viewWidth - hiddenWidth) / viewWidth; const percent = fractionHeight * fractionWidth * 100 | 0; visible.push({ id: view.id, x: currentWidth, y: currentHeight, view, percent, widthPercent: fractionWidth * 100 | 0 }); ids.add(view.id); } const first = visible[0], last = visible[visible.length - 1]; if (sortByVisibility) { visible.sort(function (a, b) { const pc = a.percent - b.percent; if (Math.abs(pc) > 0.001) { return -pc; } return a.id - b.id; }); } return { first, last, views: visible, ids }; } function noContextMenuHandler(evt) { evt.preventDefault(); } function normalizeWheelEventDirection(evt) { let delta = Math.hypot(evt.deltaX, evt.deltaY); const angle = Math.atan2(evt.deltaY, evt.deltaX); if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) { delta = -delta; } return delta; } function normalizeWheelEventDelta(evt) { let delta = normalizeWheelEventDirection(evt); const MOUSE_DOM_DELTA_PIXEL_MODE = 0; const MOUSE_DOM_DELTA_LINE_MODE = 1; const MOUSE_PIXELS_PER_LINE = 30; const MOUSE_LINES_PER_PAGE = 30; if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) { delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE; } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) { delta /= MOUSE_LINES_PER_PAGE; } return delta; } function isValidRotation(angle) { return Number.isInteger(angle) && angle % 90 === 0; } function isValidScrollMode(mode) { return Number.isInteger(mode) && Object.values(ScrollMode).includes(mode) && mode !== ScrollMode.UNKNOWN; } function isValidSpreadMode(mode) { return Number.isInteger(mode) && Object.values(SpreadMode).includes(mode) && mode !== SpreadMode.UNKNOWN; } function isPortraitOrientation(size) { return size.width 0) { const doc = document.documentElement; doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`); } } hide() { if (!this.visible) { return; } this.visible = false; this.bar.classList.add(\"hidden\"); } show() { if (this.visible) { return; } this.visible = true; this.bar.classList.remove(\"hidden\"); } } exports.ProgressBar = ProgressBar; function getActiveOrFocusedElement() { let curRoot = document; let curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\"); while (curActiveOrFocused?.shadowRoot) { curRoot = curActiveOrFocused.shadowRoot; curActiveOrFocused = curRoot.activeElement || curRoot.querySelector(\":focus\"); } return curActiveOrFocused; } function apiPageLayoutToViewerModes(layout) { let scrollMode = ScrollMode.VERTICAL, spreadMode = SpreadMode.NONE; switch (layout) { case \"SinglePage\": scrollMode = ScrollMode.PAGE; break; case \"OneColumn\": break; case \"TwoPageLeft\": scrollMode = ScrollMode.PAGE; case \"TwoColumnLeft\": spreadMode = SpreadMode.ODD; break; case \"TwoPageRight\": scrollMode = ScrollMode.PAGE; case \"TwoColumnRight\": spreadMode = SpreadMode.EVEN; break; } return { scrollMode, spreadMode }; } function apiPageModeToSidebarView(mode) { switch (mode) { case \"UseNone\": return SidebarView.NONE; case \"UseThumbs\": return SidebarView.THUMBS; case \"UseOutlines\": return SidebarView.OUTLINE; case \"UseAttachments\": return SidebarView.ATTACHMENTS; case \"UseOC\": return SidebarView.LAYERS; } return SidebarView.NONE; } /***/ }), /* 4 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.WaitOnType = exports.EventBus = exports.AutomationEventBus = void 0; exports.waitOnEventOrTimeout = waitOnEventOrTimeout; const WaitOnType = { EVENT: \"event\", TIMEOUT: \"timeout\" }; exports.WaitOnType = WaitOnType; function waitOnEventOrTimeout({ target, name, delay = 0 }) { return new Promise(function (resolve, reject) { if (typeof target !== \"object\" || !(name && typeof name === \"string\") || !(Number.isInteger(delay) && delay >= 0)) { throw new Error(\"waitOnEventOrTimeout - invalid parameters.\"); } function handler(type) { if (target instanceof EventBus) { target._off(name, eventHandler); } else { target.removeEventListener(name, eventHandler); } if (timeout) { clearTimeout(timeout); } resolve(type); } const eventHandler = handler.bind(null, WaitOnType.EVENT); if (target instanceof EventBus) { target._on(name, eventHandler); } else { target.addEventListener(name, eventHandler); } const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT); const timeout = setTimeout(timeoutHandler, delay); }); } class EventBus { constructor() { this._listeners = Object.create(null); } on(eventName, listener, options = null) { this._on(eventName, listener, { external: true, once: options?.once }); } off(eventName, listener, options = null) { this._off(eventName, listener, { external: true, once: options?.once }); } dispatch(eventName, data) { const eventListeners = this._listeners[eventName]; if (!eventListeners || eventListeners.length === 0) { return; } let externalListeners; for (const { listener, external, once } of eventListeners.slice(0)) { if (once) { this._off(eventName, listener); } if (external) { (externalListeners ||= []).push(listener); continue; } listener(data); } if (externalListeners) { for (const listener of externalListeners) { listener(data); } externalListeners = null; } } _on(eventName, listener, options = null) { const eventListeners = this._listeners[eventName] ||= []; eventListeners.push({ listener, external: options?.external === true, once: options?.once === true }); } _off(eventName, listener, options = null) { const eventListeners = this._listeners[eventName]; if (!eventListeners) { return; } for (let i = 0, ii = eventListeners.length; i < ii; i++) { if (eventListeners[i].listener === listener) { eventListeners.splice(i, 1); return; } } } } exports.EventBus = EventBus; class AutomationEventBus extends EventBus { dispatch(eventName, data) { throw new Error(\"Not implemented: AutomationEventBus.dispatch\"); } } exports.AutomationEventBus = AutomationEventBus; /***/ }), /* 5 */ /***/ ((module) => { let pdfjsLib; if (typeof window !== \"undefined\" && window[\"pdfjs-dist/build/pdf\"]) { pdfjsLib = window[\"pdfjs-dist/build/pdf\"]; } else { pdfjsLib = require(\"../build/pdf.js\"); } module.exports = pdfjsLib; /***/ }), /* 6 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFCursorTools = exports.CursorTool = void 0; var _grab_to_pan = __webpack_require__(7); var _ui_utils = __webpack_require__(3); const CursorTool = { SELECT: 0, HAND: 1, ZOOM: 2 }; exports.CursorTool = CursorTool; class PDFCursorTools { constructor({ container, eventBus, cursorToolOnLoad = CursorTool.SELECT }) { this.container = container; this.eventBus = eventBus; this.active = CursorTool.SELECT; this.activeBeforePresentationMode = null; this.handTool = new _grab_to_pan.GrabToPan({ element: this.container }); this.#addEventListeners(); Promise.resolve().then(() => { this.switchTool(cursorToolOnLoad); }); } get activeTool() { return this.active; } switchTool(tool) { if (this.activeBeforePresentationMode !== null) { return; } if (tool === this.active) { return; } const disableActiveTool = () => { switch (this.active) { case CursorTool.SELECT: break; case CursorTool.HAND: this.handTool.deactivate(); break; case CursorTool.ZOOM: } }; switch (tool) { case CursorTool.SELECT: disableActiveTool(); break; case CursorTool.HAND: disableActiveTool(); this.handTool.activate(); break; case CursorTool.ZOOM: default: console.error(`switchTool: \"${tool}\" is an unsupported value.`); return; } this.active = tool; this.#dispatchEvent(); } #dispatchEvent() { this.eventBus.dispatch(\"cursortoolchanged\", { source: this, tool: this.active }); } #addEventListeners() { this.eventBus._on(\"switchcursortool\", evt => { this.switchTool(evt.tool); }); this.eventBus._on(\"presentationmodechanged\", evt => { switch (evt.state) { case _ui_utils.PresentationModeState.FULLSCREEN: { const previouslyActive = this.active; this.switchTool(CursorTool.SELECT); this.activeBeforePresentationMode = previouslyActive; break; } case _ui_utils.PresentationModeState.NORMAL: { const previouslyActive = this.activeBeforePresentationMode; this.activeBeforePresentationMode = null; this.switchTool(previouslyActive); break; } } }); } } exports.PDFCursorTools = PDFCursorTools; /***/ }), /* 7 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.GrabToPan = void 0; const CSS_CLASS_GRAB = \"grab-to-pan-grab\"; class GrabToPan { constructor(options) { this.element = options.element; this.document = options.element.ownerDocument; if (typeof options.ignoreTarget === \"function\") { this.ignoreTarget = options.ignoreTarget; } this.onActiveChanged = options.onActiveChanged; this.activate = this.activate.bind(this); this.deactivate = this.deactivate.bind(this); this.toggle = this.toggle.bind(this); this._onMouseDown = this.#onMouseDown.bind(this); this._onMouseMove = this.#onMouseMove.bind(this); this._endPan = this.#endPan.bind(this); const overlay = this.overlay = document.createElement(\"div\"); overlay.className = \"grab-to-pan-grabbing\"; } activate() { if (!this.active) { this.active = true; this.element.addEventListener(\"mousedown\", this._onMouseDown, true); this.element.classList.add(CSS_CLASS_GRAB); this.onActiveChanged?.(true); } } deactivate() { if (this.active) { this.active = false; this.element.removeEventListener(\"mousedown\", this._onMouseDown, true); this._endPan(); this.element.classList.remove(CSS_CLASS_GRAB); this.onActiveChanged?.(false); } } toggle() { if (this.active) { this.deactivate(); } else { this.activate(); } } ignoreTarget(node) { return node.matches(\"a[href], a[href] *, input, textarea, button, button *, select, option\"); } #onMouseDown(event) { if (event.button !== 0 || this.ignoreTarget(event.target)) { return; } if (event.originalTarget) { try { event.originalTarget.tagName; } catch (e) { return; } } this.scrollLeftStart = this.element.scrollLeft; this.scrollTopStart = this.element.scrollTop; this.clientXStart = event.clientX; this.clientYStart = event.clientY; this.document.addEventListener(\"mousemove\", this._onMouseMove, true); this.document.addEventListener(\"mouseup\", this._endPan, true); this.element.addEventListener(\"scroll\", this._endPan, true); event.preventDefault(); event.stopPropagation(); const focusedElement = document.activeElement; if (focusedElement && !focusedElement.contains(event.target)) { focusedElement.blur(); } } #onMouseMove(event) { this.element.removeEventListener(\"scroll\", this._endPan, true); if (!(event.buttons & 1)) { this._endPan(); return; } const xDiff = event.clientX - this.clientXStart; const yDiff = event.clientY - this.clientYStart; const scrollTop = this.scrollTopStart - yDiff; const scrollLeft = this.scrollLeftStart - xDiff; if (this.element.scrollTo) { this.element.scrollTo({ top: scrollTop, left: scrollLeft, behavior: \"instant\" }); } else { this.element.scrollTop = scrollTop; this.element.scrollLeft = scrollLeft; } if (!this.overlay.parentNode) { document.body.appendChild(this.overlay); } } #endPan() { this.element.removeEventListener(\"scroll\", this._endPan, true); this.document.removeEventListener(\"mousemove\", this._onMouseMove, true); this.document.removeEventListener(\"mouseup\", this._endPan, true); this.overlay.remove(); } } exports.GrabToPan = GrabToPan; /***/ }), /* 8 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.SimpleLinkService = exports.PDFLinkService = exports.LinkTarget = void 0; var _ui_utils = __webpack_require__(3); const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\"; const LinkTarget = { NONE: 0, SELF: 1, BLANK: 2, PARENT: 3, TOP: 4 }; exports.LinkTarget = LinkTarget; function addLinkAttributes(link, { url, target, rel, enabled = true } = {}) { if (!url || typeof url !== \"string\") { throw new Error('A valid \"url\" parameter must provided.'); } const urlNullRemoved = (0, _ui_utils.removeNullCharacters)(url); if (enabled) { link.href = link.title = urlNullRemoved; } else { link.href = \"\"; link.title = `Disabled: ${urlNullRemoved}`; link.onclick = () => { return false; }; } let targetStr = \"\"; switch (target) { case LinkTarget.NONE: break; case LinkTarget.SELF: targetStr = \"_self\"; break; case LinkTarget.BLANK: targetStr = \"_blank\"; break; case LinkTarget.PARENT: targetStr = \"_parent\"; break; case LinkTarget.TOP: targetStr = \"_top\"; break; } link.target = targetStr; link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL; } class PDFLinkService { #pagesRefCache = new Map(); constructor({ eventBus, externalLinkTarget = null, externalLinkRel = null, ignoreDestinationZoom = false } = {}) { this.eventBus = eventBus; this.externalLinkTarget = externalLinkTarget; this.externalLinkRel = externalLinkRel; this.externalLinkEnabled = true; this._ignoreDestinationZoom = ignoreDestinationZoom; this.baseUrl = null; this.pdfDocument = null; this.pdfViewer = null; this.pdfHistory = null; } setDocument(pdfDocument, baseUrl = null) { this.baseUrl = baseUrl; this.pdfDocument = pdfDocument; this.#pagesRefCache.clear(); } setViewer(pdfViewer) { this.pdfViewer = pdfViewer; } setHistory(pdfHistory) { this.pdfHistory = pdfHistory; } get pagesCount() { return this.pdfDocument ? this.pdfDocument.numPages : 0; } get page() { return this.pdfViewer.currentPageNumber; } set page(value) { this.pdfViewer.currentPageNumber = value; } get rotation() { return this.pdfViewer.pagesRotation; } set rotation(value) { this.pdfViewer.pagesRotation = value; } #goToDestinationHelper(rawDest, namedDest = null, explicitDest) { const destRef = explicitDest[0]; let pageNumber; if (typeof destRef === \"object\" && destRef !== null) { pageNumber = this._cachedPageNumber(destRef); if (!pageNumber) { this.pdfDocument.getPageIndex(destRef).then(pageIndex => { this.cachePageRef(pageIndex + 1, destRef); this.#goToDestinationHelper(rawDest, namedDest, explicitDest); }).catch(() => { console.error(`PDFLinkService.#goToDestinationHelper: \"${destRef}\" is not ` + `a valid page reference, for dest=\"${rawDest}\".`); }); return; } } else if (Number.isInteger(destRef)) { pageNumber = destRef + 1; } else { console.error(`PDFLinkService.#goToDestinationHelper: \"${destRef}\" is not ` + `a valid destination reference, for dest=\"${rawDest}\".`); return; } if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) { console.error(`PDFLinkService.#goToDestinationHelper: \"${pageNumber}\" is not ` + `a valid page number, for dest=\"${rawDest}\".`); return; } if (this.pdfHistory) { this.pdfHistory.pushCurrentPosition(); this.pdfHistory.push({ namedDest, explicitDest, pageNumber }); } this.pdfViewer.scrollPageIntoView({ pageNumber, destArray: explicitDest, ignoreDestinationZoom: this._ignoreDestinationZoom }); } async goToDestination(dest) { if (!this.pdfDocument) { return; } let namedDest, explicitDest; if (typeof dest === \"string\") { namedDest = dest; explicitDest = await this.pdfDocument.getDestination(dest); } else { namedDest = null; explicitDest = await dest; } if (!Array.isArray(explicitDest)) { console.error(`PDFLinkService.goToDestination: \"${explicitDest}\" is not ` + `a valid destination array, for dest=\"${dest}\".`); return; } this.#goToDestinationHelper(dest, namedDest, explicitDest); } goToPage(val) { if (!this.pdfDocument) { return; } const pageNumber = typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val) || val | 0; if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber 0) { return this.getAnchorUrl(\"#\" + escape(dest)); } } else if (Array.isArray(dest)) { const str = JSON.stringify(dest); if (str.length > 0) { return this.getAnchorUrl(\"#\" + escape(str)); } } return this.getAnchorUrl(\"\"); } getAnchorUrl(anchor) { return (this.baseUrl || \"\") + anchor; } setHash(hash) { if (!this.pdfDocument) { return; } let pageNumber, dest; if (hash.includes(\"=\")) { const params = (0, _ui_utils.parseQueryString)(hash); if (params.has(\"search\")) { this.eventBus.dispatch(\"findfromurlhash\", { source: this, query: params.get(\"search\").replace(/\"/g, \"\"), phraseSearch: params.get(\"phrase\") === \"true\" }); } if (params.has(\"page\")) { pageNumber = params.get(\"page\") | 0 || 1; } if (params.has(\"zoom\")) { const zoomArgs = params.get(\"zoom\").split(\",\"); const zoomArg = zoomArgs[0]; const zoomArgNumber = parseFloat(zoomArg); if (!zoomArg.includes(\"Fit\")) { dest = [null, { name: \"XYZ\" }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg]; } else { if (zoomArg === \"Fit\" || zoomArg === \"FitB\") { dest = [null, { name: zoomArg }]; } else if (zoomArg === \"FitH\" || zoomArg === \"FitBH\" || zoomArg === \"FitV\" || zoomArg === \"FitBV\") { dest = [null, { name: zoomArg }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null]; } else if (zoomArg === \"FitR\") { if (zoomArgs.length !== 5) { console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".'); } else { dest = [null, { name: zoomArg }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0]; } } else { console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not a valid zoom value.`); } } } if (dest) { this.pdfViewer.scrollPageIntoView({ pageNumber: pageNumber || this.page, destArray: dest, allowNegativeOffset: true }); } else if (pageNumber) { this.page = pageNumber; } if (params.has(\"pagemode\")) { this.eventBus.dispatch(\"pagemode\", { source: this, mode: params.get(\"pagemode\") }); } if (params.has(\"nameddest\")) { this.goToDestination(params.get(\"nameddest\")); } } else { dest = unescape(hash); try { dest = JSON.parse(dest); if (!Array.isArray(dest)) { dest = dest.toString(); } } catch (ex) {} if (typeof dest === \"string\" || PDFLinkService.#isValidExplicitDestination(dest)) { this.goToDestination(dest); return; } console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not a valid destination.`); } } executeNamedAction(action) { switch (action) { case \"GoBack\": this.pdfHistory?.back(); break; case \"GoForward\": this.pdfHistory?.forward(); break; case \"NextPage\": this.pdfViewer.nextPage(); break; case \"PrevPage\": this.pdfViewer.previousPage(); break; case \"LastPage\": this.page = this.pagesCount; break; case \"FirstPage\": this.page = 1; break; default: break; } this.eventBus.dispatch(\"namedaction\", { source: this, action }); } cachePageRef(pageNum, pageRef) { if (!pageRef) { return; } const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`; this.#pagesRefCache.set(refStr, pageNum); } _cachedPageNumber(pageRef) { if (!pageRef) { return null; } const refStr = pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`; return this.#pagesRefCache.get(refStr) || null; } isPageVisible(pageNumber) { return this.pdfViewer.isPageVisible(pageNumber); } isPageCached(pageNumber) { return this.pdfViewer.isPageCached(pageNumber); } static #isValidExplicitDestination(dest) { if (!Array.isArray(dest)) { return false; } const destLength = dest.length; if (destLength < 2) { return false; } const page = dest[0]; if (!(typeof page === \"object\" && Number.isInteger(page.num) && Number.isInteger(page.gen)) && !(Number.isInteger(page) && page >= 0)) { return false; } const zoom = dest[1]; if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) { return false; } let allowNull = true; switch (zoom.name) { case \"XYZ\": if (destLength !== 5) { return false; } break; case \"Fit\": case \"FitB\": return destLength === 2; case \"FitH\": case \"FitBH\": case \"FitV\": case \"FitBV\": if (destLength !== 3) { return false; } break; case \"FitR\": if (destLength !== 6) { return false; } allowNull = false; break; default: return false; } for (let i = 2; i < destLength; i++) { const param = dest[i]; if (!(typeof param === \"number\" || allowNull && param === null)) { return false; } } return true; } } exports.PDFLinkService = PDFLinkService; class SimpleLinkService { constructor() { this.externalLinkEnabled = true; } get pagesCount() { return 0; } get page() { return 0; } set page(value) {} get rotation() { return 0; } set rotation(value) {} async goToDestination(dest) {} goToPage(val) {} addLinkAttributes(link, url, newWindow = false) { addLinkAttributes(link, { url, enabled: this.externalLinkEnabled }); } getDestinationHash(dest) { return \"#\"; } getAnchorUrl(hash) { return \"#\"; } setHash(hash) {} executeNamedAction(action) {} cachePageRef(pageNum, pageRef) {} isPageVisible(pageNumber) { return true; } isPageCached(pageNumber) { return true; } } exports.SimpleLinkService = SimpleLinkService; /***/ }), /* 9 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.OverlayManager = void 0; class OverlayManager { #overlays = new WeakMap(); #active = null; get active() { return this.#active; } async register(dialog, canForceClose = false) { if (typeof dialog !== \"object\") { throw new Error(\"Not enough parameters.\"); } else if (this.#overlays.has(dialog)) { throw new Error(\"The overlay is already registered.\"); } this.#overlays.set(dialog, { canForceClose }); dialog.addEventListener(\"cancel\", evt => { this.#active = null; }); } async unregister(dialog) { if (!this.#overlays.has(dialog)) { throw new Error(\"The overlay does not exist.\"); } else if (this.#active === dialog) { throw new Error(\"The overlay cannot be removed while it is active.\"); } this.#overlays.delete(dialog); } async open(dialog) { if (!this.#overlays.has(dialog)) { throw new Error(\"The overlay does not exist.\"); } else if (this.#active) { if (this.#active === dialog) { throw new Error(\"The overlay is already active.\"); } else if (this.#overlays.get(dialog).canForceClose) { await this.close(); } else { throw new Error(\"Another overlay is currently active.\"); } } this.#active = dialog; dialog.showModal(); } async close(dialog = this.#active) { if (!this.#overlays.has(dialog)) { throw new Error(\"The overlay does not exist.\"); } else if (!this.#active) { throw new Error(\"The overlay is currently not active.\"); } else if (this.#active !== dialog) { throw new Error(\"Another overlay is currently active.\"); } dialog.close(); this.#active = null; } } exports.OverlayManager = OverlayManager; /***/ }), /* 10 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PasswordPrompt = void 0; var _pdfjsLib = __webpack_require__(5); class PasswordPrompt { #updateCallback = null; #reason = null; constructor(options, overlayManager, l10n, isViewerEmbedded = false) { this.dialog = options.dialog; this.label = options.label; this.input = options.input; this.submitButton = options.submitButton; this.cancelButton = options.cancelButton; this.overlayManager = overlayManager; this.l10n = l10n; this._isViewerEmbedded = isViewerEmbedded; this.submitButton.addEventListener(\"click\", this.#verify.bind(this)); this.cancelButton.addEventListener(\"click\", this.#cancel.bind(this)); this.input.addEventListener(\"keydown\", e => { if (e.keyCode === 13) { this.#verify(); } }); this.overlayManager.register(this.dialog, true); this.dialog.addEventListener(\"close\", this.#cancel.bind(this)); } async open() { await this.overlayManager.open(this.dialog); const passwordIncorrect = this.#reason === _pdfjsLib.PasswordResponses.INCORRECT_PASSWORD; if (!this._isViewerEmbedded || passwordIncorrect) { this.input.focus(); } this.label.textContent = await this.l10n.get(`password_${passwordIncorrect ? \"invalid\" : \"label\"}`); } async close() { if (this.overlayManager.active === this.dialog) { this.overlayManager.close(this.dialog); } } #verify() { const password = this.input.value; if (password?.length > 0) { this.#invokeCallback(password); } } #cancel() { this.#invokeCallback(new Error(\"PasswordPrompt cancelled.\")); } #invokeCallback(password) { if (!this.#updateCallback) { return; } this.close(); this.input.value = \"\"; this.#updateCallback(password); this.#updateCallback = null; } setUpdateCallback(updateCallback, reason) { this.#updateCallback = updateCallback; this.#reason = reason; } } exports.PasswordPrompt = PasswordPrompt; /***/ }), /* 11 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFAttachmentViewer = void 0; var _pdfjsLib = __webpack_require__(5); var _base_tree_viewer = __webpack_require__(12); class PDFAttachmentViewer extends _base_tree_viewer.BaseTreeViewer { constructor(options) { super(options); this.downloadManager = options.downloadManager; this.eventBus._on(\"fileattachmentannotation\", this._appendAttachment.bind(this)); } reset(keepRenderedCapability = false) { super.reset(); this._attachments = null; if (!keepRenderedCapability) { this._renderedCapability = (0, _pdfjsLib.createPromiseCapability)(); } if (this._pendingDispatchEvent) { clearTimeout(this._pendingDispatchEvent); } this._pendingDispatchEvent = null; } _dispatchEvent(attachmentsCount) { this._renderedCapability.resolve(); if (this._pendingDispatchEvent) { clearTimeout(this._pendingDispatchEvent); this._pendingDispatchEvent = null; } if (attachmentsCount === 0) { this._pendingDispatchEvent = setTimeout(() => { this.eventBus.dispatch(\"attachmentsloaded\", { source: this, attachmentsCount: 0 }); this._pendingDispatchEvent = null; }); return; } this.eventBus.dispatch(\"attachmentsloaded\", { source: this, attachmentsCount }); } _bindLink(element, { content, filename }) { element.onclick = () => { this.downloadManager.openOrDownloadData(element, content, filename); return false; }; } render({ attachments, keepRenderedCapability = false }) { if (this._attachments) { this.reset(keepRenderedCapability); } this._attachments = attachments || null; if (!attachments) { this._dispatchEvent(0); return; } const names = Object.keys(attachments).sort(function (a, b) { return a.toLowerCase().localeCompare(b.toLowerCase()); }); const fragment = document.createDocumentFragment(); let attachmentsCount = 0; for (const name of names) { const item = attachments[name]; const content = item.content, filename = (0, _pdfjsLib.getFilenameFromUrl)(item.filename); const div = document.createElement(\"div\"); div.className = \"treeItem\"; const element = document.createElement(\"a\"); this._bindLink(element, { content, filename }); element.textContent = this._normalizeTextContent(filename); div.appendChild(element); fragment.appendChild(div); attachmentsCount++; } this._finishRendering(fragment, attachmentsCount); } _appendAttachment({ id, filename, content }) { const renderedPromise = this._renderedCapability.promise; renderedPromise.then(() => { if (renderedPromise !== this._renderedCapability.promise) { return; } let attachments = this._attachments; if (!attachments) { attachments = Object.create(null); } else { for (const name in attachments) { if (id === name) { return; } } } attachments[id] = { filename, content }; this.render({ attachments, keepRenderedCapability: true }); }); } } exports.PDFAttachmentViewer = PDFAttachmentViewer; /***/ }), /* 12 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.BaseTreeViewer = void 0; var _ui_utils = __webpack_require__(3); const TREEITEM_OFFSET_TOP = -100; const TREEITEM_SELECTED_CLASS = \"selected\"; class BaseTreeViewer { constructor(options) { if (this.constructor === BaseTreeViewer) { throw new Error(\"Cannot initialize BaseTreeViewer.\"); } this.container = options.container; this.eventBus = options.eventBus; this.reset(); } reset() { this._pdfDocument = null; this._lastToggleIsShow = true; this._currentTreeItem = null; this.container.textContent = \"\"; this.container.classList.remove(\"treeWithDeepNesting\"); } _dispatchEvent(count) { throw new Error(\"Not implemented: _dispatchEvent\"); } _bindLink(element, params) { throw new Error(\"Not implemented: _bindLink\"); } _normalizeTextContent(str) { return (0, _ui_utils.removeNullCharacters)(str, true) || \"\\u2013\"; } _addToggleButton(div, hidden = false) { const toggler = document.createElement(\"div\"); toggler.className = \"treeItemToggler\"; if (hidden) { toggler.classList.add(\"treeItemsHidden\"); } toggler.onclick = evt => { evt.stopPropagation(); toggler.classList.toggle(\"treeItemsHidden\"); if (evt.shiftKey) { const shouldShowAll = !toggler.classList.contains(\"treeItemsHidden\"); this._toggleTreeItem(div, shouldShowAll); } }; div.insertBefore(toggler, div.firstChild); } _toggleTreeItem(root, show = false) { this._lastToggleIsShow = show; for (const toggler of root.querySelectorAll(\".treeItemToggler\")) { toggler.classList.toggle(\"treeItemsHidden\", !show); } } _toggleAllTreeItems() { this._toggleTreeItem(this.container, !this._lastToggleIsShow); } _finishRendering(fragment, count, hasAnyNesting = false) { if (hasAnyNesting) { this.container.classList.add(\"treeWithDeepNesting\"); this._lastToggleIsShow = !fragment.querySelector(\".treeItemsHidden\"); } this.container.appendChild(fragment); this._dispatchEvent(count); } render(params) { throw new Error(\"Not implemented: render\"); } _updateCurrentTreeItem(treeItem = null) { if (this._currentTreeItem) { this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS); this._currentTreeItem = null; } if (treeItem) { treeItem.classList.add(TREEITEM_SELECTED_CLASS); this._currentTreeItem = treeItem; } } _scrollToCurrentTreeItem(treeItem) { if (!treeItem) { return; } let currentNode = treeItem.parentNode; while (currentNode && currentNode !== this.container) { if (currentNode.classList.contains(\"treeItem\")) { const toggler = currentNode.firstElementChild; toggler?.classList.remove(\"treeItemsHidden\"); } currentNode = currentNode.parentNode; } this._updateCurrentTreeItem(treeItem); this.container.scrollTo(treeItem.offsetLeft, treeItem.offsetTop + TREEITEM_OFFSET_TOP); } } exports.BaseTreeViewer = BaseTreeViewer; /***/ }), /* 13 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFDocumentProperties = void 0; var _pdfjsLib = __webpack_require__(5); var _ui_utils = __webpack_require__(3); const DEFAULT_FIELD_CONTENT = \"-\"; const NON_METRIC_LOCALES = [\"en-us\", \"en-lr\", \"my\"]; const US_PAGE_NAMES = { \"8.5x11\": \"Letter\", \"8.5x14\": \"Legal\" }; const METRIC_PAGE_NAMES = { \"297x420\": \"A3\", \"210x297\": \"A4\" }; function getPageName(size, isPortrait, pageNames) { const width = isPortrait ? size.width : size.height; const height = isPortrait ? size.height : size.width; return pageNames[`${width}x${height}`]; } class PDFDocumentProperties { #fieldData = null; constructor({ dialog, fields, closeButton }, overlayManager, eventBus, l10n) { this.dialog = dialog; this.fields = fields; this.overlayManager = overlayManager; this.l10n = l10n; this.#reset(); closeButton.addEventListener(\"click\", this.close.bind(this)); this.overlayManager.register(this.dialog); eventBus._on(\"pagechanging\", evt => { this._currentPageNumber = evt.pageNumber; }); eventBus._on(\"rotationchanging\", evt => { this._pagesRotation = evt.pagesRotation; }); this._isNonMetricLocale = true; l10n.getLanguage().then(locale => { this._isNonMetricLocale = NON_METRIC_LOCALES.includes(locale); }); } async open() { await Promise.all([this.overlayManager.open(this.dialog), this._dataAvailableCapability.promise]); const currentPageNumber = this._currentPageNumber; const pagesRotation = this._pagesRotation; if (this.#fieldData && currentPageNumber === this.#fieldData._currentPageNumber && pagesRotation === this.#fieldData._pagesRotation) { this.#updateUI(); return; } const { info, contentDispositionFilename, contentLength } = await this.pdfDocument.getMetadata(); const [fileName, fileSize, creationDate, modificationDate, pageSize, isLinearized] = await Promise.all([contentDispositionFilename || (0, _pdfjsLib.getPdfFilenameFromUrl)(this.url), this.#parseFileSize(contentLength), this.#parseDate(info.CreationDate), this.#parseDate(info.ModDate), this.pdfDocument.getPage(currentPageNumber).then(pdfPage => { return this.#parsePageSize((0, _ui_utils.getPageSizeInches)(pdfPage), pagesRotation); }), this.#parseLinearization(info.IsLinearized)]); this.#fieldData = Object.freeze({ fileName, fileSize, title: info.Title, author: info.Author, subject: info.Subject, keywords: info.Keywords, creationDate, modificationDate, creator: info.Creator, producer: info.Producer, version: info.PDFFormatVersion, pageCount: this.pdfDocument.numPages, pageSize, linearized: isLinearized, _currentPageNumber: currentPageNumber, _pagesRotation: pagesRotation }); this.#updateUI(); const { length } = await this.pdfDocument.getDownloadInfo(); if (contentLength === length) { return; } const data = Object.assign(Object.create(null), this.#fieldData); data.fileSize = await this.#parseFileSize(length); this.#fieldData = Object.freeze(data); this.#updateUI(); } async close() { this.overlayManager.close(this.dialog); } setDocument(pdfDocument, url = null) { if (this.pdfDocument) { this.#reset(); this.#updateUI(true); } if (!pdfDocument) { return; } this.pdfDocument = pdfDocument; this.url = url; this._dataAvailableCapability.resolve(); } #reset() { this.pdfDocument = null; this.url = null; this.#fieldData = null; this._dataAvailableCapability = (0, _pdfjsLib.createPromiseCapability)(); this._currentPageNumber = 1; this._pagesRotation = 0; } #updateUI(reset = false) { if (reset || !this.#fieldData) { for (const id in this.fields) { this.fields[id].textContent = DEFAULT_FIELD_CONTENT; } return; } if (this.overlayManager.active !== this.dialog) { return; } for (const id in this.fields) { const content = this.#fieldData[id]; this.fields[id].textContent = content || content === 0 ? content : DEFAULT_FIELD_CONTENT; } } async #parseFileSize(fileSize = 0) { const kb = fileSize / 1024, mb = kb / 1024; if (!kb) { return undefined; } return this.l10n.get(`document_properties_${mb >= 1 ? \"mb\" : \"kb\"}`, { size_mb: mb >= 1 && (+mb.toPrecision(3)).toLocaleString(), size_kb: mb < 1 && (+kb.toPrecision(3)).toLocaleString(), size_b: fileSize.toLocaleString() }); } async #parsePageSize(pageSizeInches, pagesRotation) { if (!pageSizeInches) { return undefined; } if (pagesRotation % 180 !== 0) { pageSizeInches = { width: pageSizeInches.height, height: pageSizeInches.width }; } const isPortrait = (0, _ui_utils.isPortraitOrientation)(pageSizeInches); let sizeInches = { width: Math.round(pageSizeInches.width * 100) / 100, height: Math.round(pageSizeInches.height * 100) / 100 }; let sizeMillimeters = { width: Math.round(pageSizeInches.width * 25.4 * 10) / 10, height: Math.round(pageSizeInches.height * 25.4 * 10) / 10 }; let rawName = getPageName(sizeInches, isPortrait, US_PAGE_NAMES) || getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES); if (!rawName && !(Number.isInteger(sizeMillimeters.width) && Number.isInteger(sizeMillimeters.height))) { const exactMillimeters = { width: pageSizeInches.width * 25.4, height: pageSizeInches.height * 25.4 }; const intMillimeters = { width: Math.round(sizeMillimeters.width), height: Math.round(sizeMillimeters.height) }; if (Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 && Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1) { rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES); if (rawName) { sizeInches = { width: Math.round(intMillimeters.width / 25.4 * 100) / 100, height: Math.round(intMillimeters.height / 25.4 * 100) / 100 }; sizeMillimeters = intMillimeters; } } } const [{ width, height }, unit, name, orientation] = await Promise.all([this._isNonMetricLocale ? sizeInches : sizeMillimeters, this.l10n.get(`document_properties_page_size_unit_${this._isNonMetricLocale ? \"inches\" : \"millimeters\"}`), rawName && this.l10n.get(`document_properties_page_size_name_${rawName.toLowerCase()}`), this.l10n.get(`document_properties_page_size_orientation_${isPortrait ? \"portrait\" : \"landscape\"}`)]); return this.l10n.get(`document_properties_page_size_dimension_${name ? \"name_\" : \"\"}string`, { width: width.toLocaleString(), height: height.toLocaleString(), unit, name, orientation }); } async #parseDate(inputDate) { const dateObject = _pdfjsLib.PDFDateString.toDateObject(inputDate); if (!dateObject) { return undefined; } return this.l10n.get(\"document_properties_date_string\", { date: dateObject.toLocaleDateString(), time: dateObject.toLocaleTimeString() }); } #parseLinearization(isLinearized) { return this.l10n.get(`document_properties_linearized_${isLinearized ? \"yes\" : \"no\"}`); } } exports.PDFDocumentProperties = PDFDocumentProperties; /***/ }), /* 14 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFFindBar = void 0; var _pdf_find_controller = __webpack_require__(15); const MATCHES_COUNT_LIMIT = 1000; class PDFFindBar { constructor(options, eventBus, l10n) { this.opened = false; this.bar = options.bar; this.toggleButton = options.toggleButton; this.findField = options.findField; this.highlightAll = options.highlightAllCheckbox; this.caseSensitive = options.caseSensitiveCheckbox; this.matchDiacritics = options.matchDiacriticsCheckbox; this.entireWord = options.entireWordCheckbox; this.findMsg = options.findMsg; this.findResultsCount = options.findResultsCount; this.findPreviousButton = options.findPreviousButton; this.findNextButton = options.findNextButton; this.eventBus = eventBus; this.l10n = l10n; this.toggleButton.addEventListener(\"click\", () => { this.toggle(); }); this.findField.addEventListener(\"input\", () => { this.dispatchEvent(\"\"); }); this.bar.addEventListener(\"keydown\", e => { switch (e.keyCode) { case 13: if (e.target === this.findField) { this.dispatchEvent(\"again\", e.shiftKey); } break; case 27: this.close(); break; } }); this.findPreviousButton.addEventListener(\"click\", () => { this.dispatchEvent(\"again\", true); }); this.findNextButton.addEventListener(\"click\", () => { this.dispatchEvent(\"again\", false); }); this.highlightAll.addEventListener(\"click\", () => { this.dispatchEvent(\"highlightallchange\"); }); this.caseSensitive.addEventListener(\"click\", () => { this.dispatchEvent(\"casesensitivitychange\"); }); this.entireWord.addEventListener(\"click\", () => { this.dispatchEvent(\"entirewordchange\"); }); this.matchDiacritics.addEventListener(\"click\", () => { this.dispatchEvent(\"diacriticmatchingchange\"); }); this.eventBus._on(\"resize\", this.#adjustWidth.bind(this)); } reset() { this.updateUIState(); } dispatchEvent(type, findPrev = false) { this.eventBus.dispatch(\"find\", { source: this, type, query: this.findField.value, phraseSearch: true, caseSensitive: this.caseSensitive.checked, entireWord: this.entireWord.checked, highlightAll: this.highlightAll.checked, findPrevious: findPrev, matchDiacritics: this.matchDiacritics.checked }); } updateUIState(state, previous, matchesCount) { let findMsg = Promise.resolve(\"\"); let status = \"\"; switch (state) { case _pdf_find_controller.FindState.FOUND: break; case _pdf_find_controller.FindState.PENDING: status = \"pending\"; break; case _pdf_find_controller.FindState.NOT_FOUND: findMsg = this.l10n.get(\"find_not_found\"); status = \"notFound\"; break; case _pdf_find_controller.FindState.WRAPPED: findMsg = this.l10n.get(`find_reached_${previous ? \"top\" : \"bottom\"}`); break; } this.findField.setAttribute(\"data-status\", status); this.findField.setAttribute(\"aria-invalid\", state === _pdf_find_controller.FindState.NOT_FOUND); findMsg.then(msg => { this.findMsg.textContent = msg; this.#adjustWidth(); }); this.updateResultsCount(matchesCount); } updateResultsCount({ current = 0, total = 0 } = {}) { const limit = MATCHES_COUNT_LIMIT; let matchCountMsg = Promise.resolve(\"\"); if (total > 0) { if (total > limit) { let key = \"find_match_count_limit\"; matchCountMsg = this.l10n.get(key, { limit }); } else { let key = \"find_match_count\"; matchCountMsg = this.l10n.get(key, { current, total }); } } matchCountMsg.then(msg => { this.findResultsCount.textContent = msg; this.#adjustWidth(); }); } open() { if (!this.opened) { this.opened = true; this.toggleButton.classList.add(\"toggled\"); this.toggleButton.setAttribute(\"aria-expanded\", \"true\"); this.bar.classList.remove(\"hidden\"); } this.findField.select(); this.findField.focus(); this.#adjustWidth(); } close() { if (!this.opened) { return; } this.opened = false; this.toggleButton.classList.remove(\"toggled\"); this.toggleButton.setAttribute(\"aria-expanded\", \"false\"); this.bar.classList.add(\"hidden\"); this.eventBus.dispatch(\"findbarclose\", { source: this }); } toggle() { if (this.opened) { this.close(); } else { this.open(); } } #adjustWidth() { if (!this.opened) { return; } this.bar.classList.remove(\"wrapContainers\"); const findbarHeight = this.bar.clientHeight; const inputContainerHeight = this.bar.firstElementChild.clientHeight; if (findbarHeight > inputContainerHeight) { this.bar.classList.add(\"wrapContainers\"); } } } exports.PDFFindBar = PDFFindBar; /***/ }), /* 15 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFFindController = exports.FindState = void 0; var _ui_utils = __webpack_require__(3); var _pdfjsLib = __webpack_require__(5); var _pdf_find_utils = __webpack_require__(16); const FindState = { FOUND: 0, NOT_FOUND: 1, WRAPPED: 2, PENDING: 3 }; exports.FindState = FindState; const FIND_TIMEOUT = 250; const MATCH_SCROLL_OFFSET_TOP = -50; const MATCH_SCROLL_OFFSET_LEFT = -400; const CHARACTERS_TO_NORMALIZE = { \"\\u2010\": \"-\", \"\\u2018\": \"'\", \"\\u2019\": \"'\", \"\\u201A\": \"'\", \"\\u201B\": \"'\", \"\\u201C\": '\"', \"\\u201D\": '\"', \"\\u201E\": '\"', \"\\u201F\": '\"', \"\\u00BC\": \"1/4\", \"\\u00BD\": \"1/2\", \"\\u00BE\": \"3/4\" }; const DIACRITICS_EXCEPTION = new Set([0x3099, 0x309a, 0x094d, 0x09cd, 0x0a4d, 0x0acd, 0x0b4d, 0x0bcd, 0x0c4d, 0x0ccd, 0x0d3b, 0x0d3c, 0x0d4d, 0x0dca, 0x0e3a, 0x0eba, 0x0f84, 0x1039, 0x103a, 0x1714, 0x1734, 0x17d2, 0x1a60, 0x1b44, 0x1baa, 0x1bab, 0x1bf2, 0x1bf3, 0x2d7f, 0xa806, 0xa82c, 0xa8c4, 0xa953, 0xa9c0, 0xaaf6, 0xabed, 0x0c56, 0x0f71, 0x0f72, 0x0f7a, 0x0f7b, 0x0f7c, 0x0f7d, 0x0f80, 0x0f74]); const DIACRITICS_EXCEPTION_STR = [...DIACRITICS_EXCEPTION.values()].map(x => String.fromCharCode(x)).join(\"\"); const DIACRITICS_REG_EXP = /\\p{M}+/gu; const SPECIAL_CHARS_REG_EXP = /([.*+?^${}()|[\\]\\\\])|(\\p{P})|(\\s+)|(\\p{M})|(\\p{L})/gu; const NOT_DIACRITIC_FROM_END_REG_EXP = /([^\\p{M}])\\p{M}*$/u; const NOT_DIACRITIC_FROM_START_REG_EXP = /^\\p{M}*([^\\p{M}])/u; let normalizationRegex = null; function normalize(text) { if (!normalizationRegex) { const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\"); normalizationRegex = new RegExp(`([${replace}])|(\\\\p{M}+(?:-\\ )?)|(\\\\S-\\ )|(\\ )`, \"gum\"); } const rawDiacriticsPositions = []; let m; while ((m = DIACRITICS_REG_EXP.exec(text)) !== null) { rawDiacriticsPositions.push([m[0].length, m.index]); } let normalized = text.normalize(\"NFD\"); const positions = [[0, 0]]; let k = 0; let shift = 0; let shiftOrigin = 0; let eol = 0; let hasDiacritics = false; normalized = normalized.replace(normalizationRegex, (match, p1, p2, p3, p4, i) => { i -= shiftOrigin; if (p1) { const replacement = CHARACTERS_TO_NORMALIZE[match]; const jj = replacement.length; for (let j = 1; j < jj; j++) { positions.push([i - shift + j, shift - j]); } shift -= jj - 1; return replacement; } if (p2) { const hasTrailingDashEOL = p2.endsWith(\" \"); const len = hasTrailingDashEOL ? p2.length - 2 : p2.length; hasDiacritics = true; let jj = len; if (i + eol === rawDiacriticsPositions[k]?.[1]) { jj -= rawDiacriticsPositions[k][0]; ++k; } for (let j = 1; j < jj + 1; j++) { positions.push([i - 1 - shift + j, shift - j]); } shift -= jj; shiftOrigin += jj; if (hasTrailingDashEOL) { i += len - 1; positions.push([i - shift + 1, 1 + shift]); shift += 1; shiftOrigin += 1; eol += 1; return p2.slice(0, len); } return p2; } if (p3) { positions.push([i - shift + 1, 1 + shift]); shift += 1; shiftOrigin += 1; eol += 1; return p3.charAt(0); } positions.push([i - shift + 1, shift - 1]); shift -= 1; shiftOrigin += 1; eol += 1; return \" \"; }); positions.push([normalized.length, shift]); return [normalized, positions, hasDiacritics]; } function getOriginalIndex(diffs, pos, len) { if (!diffs) { return [pos, len]; } const start = pos; const end = pos + len; let i = (0, _ui_utils.binarySearchFirstItem)(diffs, x => x[0] >= start); if (diffs[i][0] > start) { --i; } let j = (0, _ui_utils.binarySearchFirstItem)(diffs, x => x[0] >= end, i); if (diffs[j][0] > end) { --j; } return [start + diffs[i][1], len + diffs[j][1] - diffs[i][1]]; } class PDFFindController { constructor({ linkService, eventBus }) { this._linkService = linkService; this._eventBus = eventBus; this.#reset(); eventBus._on(\"find\", this.#onFind.bind(this)); eventBus._on(\"findbarclose\", this.#onFindBarClose.bind(this)); } get highlightMatches() { return this._highlightMatches; } get pageMatches() { return this._pageMatches; } get pageMatchesLength() { return this._pageMatchesLength; } get selected() { return this._selected; } get state() { return this._state; } setDocument(pdfDocument) { if (this._pdfDocument) { this.#reset(); } if (!pdfDocument) { return; } this._pdfDocument = pdfDocument; this._firstPageCapability.resolve(); } #onFind(state) { if (!state) { return; } const pdfDocument = this._pdfDocument; const { type } = state; if (this._state === null || this.#shouldDirtyMatch(state)) { this._dirtyMatch = true; } this._state = state; if (type !== \"highlightallchange\") { this.#updateUIState(FindState.PENDING); } this._firstPageCapability.promise.then(() => { if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) { return; } this.#extractText(); const findbarClosed = !this._highlightMatches; const pendingTimeout = !!this._findTimeout; if (this._findTimeout) { clearTimeout(this._findTimeout); this._findTimeout = null; } if (!type) { this._findTimeout = setTimeout(() => { this.#nextMatch(); this._findTimeout = null; }, FIND_TIMEOUT); } else if (this._dirtyMatch) { this.#nextMatch(); } else if (type === \"again\") { this.#nextMatch(); if (findbarClosed && this._state.highlightAll) { this.#updateAllPages(); } } else if (type === \"highlightallchange\") { if (pendingTimeout) { this.#nextMatch(); } else { this._highlightMatches = true; } this.#updateAllPages(); } else { this.#nextMatch(); } }); } scrollMatchIntoView({ element = null, selectedLeft = 0, pageIndex = -1, matchIndex = -1 }) { if (!this._scrollMatches || !element) { return; } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) { return; } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) { return; } this._scrollMatches = false; const spot = { top: MATCH_SCROLL_OFFSET_TOP, left: selectedLeft + MATCH_SCROLL_OFFSET_LEFT }; (0, _ui_utils.scrollIntoView)(element, spot, true); } #reset() { this._highlightMatches = false; this._scrollMatches = false; this._pdfDocument = null; this._pageMatches = []; this._pageMatchesLength = []; this._state = null; this._selected = { pageIdx: -1, matchIdx: -1 }; this._offset = { pageIdx: null, matchIdx: null, wrapped: false }; this._extractTextPromises = []; this._pageContents = []; this._pageDiffs = []; this._hasDiacritics = []; this._matchesCountTotal = 0; this._pagesToSearch = null; this._pendingFindMatches = new Set(); this._resumePageIdx = null; this._dirtyMatch = false; clearTimeout(this._findTimeout); this._findTimeout = null; this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)(); } get #query() { if (this._state.query !== this._rawQuery) { this._rawQuery = this._state.query; [this._normalizedQuery] = normalize(this._state.query); } return this._normalizedQuery; } #shouldDirtyMatch(state) { if (state.query !== this._state.query) { return true; } switch (state.type) { case \"again\": const pageNumber = this._selected.pageIdx + 1; const linkService = this._linkService; if (pageNumber >= 1 && pageNumber { if (p1) { return `[ ]*\\\\${p1}[ ]*`; } if (p2) { return `[ ]*${p2}[ ]*`; } if (p3) { return \"[ ]+\"; } if (matchDiacritics) { return p4 || p5; } if (p4) { return DIACRITICS_EXCEPTION.has(p4.charCodeAt(0)) ? p4 : \"\"; } if (hasDiacritics) { isUnicode = true; return `${p5}\\\\p{M}*`; } return p5; }); const trailingSpaces = \"[ ]*\"; if (query.endsWith(trailingSpaces)) { query = query.slice(0, query.length - trailingSpaces.length); } if (matchDiacritics) { if (hasDiacritics) { isUnicode = true; query = `${query}(?=[${DIACRITICS_EXCEPTION_STR}]|[^\\\\p{M}]|$)`; } } return [isUnicode, query]; } #calculateMatch(pageIndex) { let query = this.#query; if (query.length === 0) { return; } const { caseSensitive, entireWord, phraseSearch } = this._state; const pageContent = this._pageContents[pageIndex]; const hasDiacritics = this._hasDiacritics[pageIndex]; let isUnicode = false; if (phraseSearch) { [isUnicode, query] = this.#convertToRegExpString(query, hasDiacritics); } else { const match = query.match(/\\S+/g); if (match) { query = match.sort().reverse().map(q => { const [isUnicodePart, queryPart] = this.#convertToRegExpString(q, hasDiacritics); isUnicode ||= isUnicodePart; return `(${queryPart})`; }).join(\"|\"); } } const flags = `g${isUnicode ? \"u\" : \"\"}${caseSensitive ? \"\" : \"i\"}`; query = new RegExp(query, flags); this.#calculateRegExpMatch(query, entireWord, pageIndex, pageContent); if (this._state.highlightAll) { this.#updatePage(pageIndex); } if (this._resumePageIdx === pageIndex) { this._resumePageIdx = null; this.#nextPageMatch(); } const pageMatchesCount = this._pageMatches[pageIndex].length; if (pageMatchesCount > 0) { this._matchesCountTotal += pageMatchesCount; this.#updateUIResultsCount(); } } #extractText() { if (this._extractTextPromises.length > 0) { return; } let promise = Promise.resolve(); for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) { const extractTextCapability = (0, _pdfjsLib.createPromiseCapability)(); this._extractTextPromises[i] = extractTextCapability.promise; promise = promise.then(() => { return this._pdfDocument.getPage(i + 1).then(pdfPage => { return pdfPage.getTextContent(); }).then(textContent => { const strBuf = []; for (const textItem of textContent.items) { strBuf.push(textItem.str); if (textItem.hasEOL) { strBuf.push(\" \"); } } [this._pageContents[i], this._pageDiffs[i], this._hasDiacritics[i]] = normalize(strBuf.join(\"\")); extractTextCapability.resolve(); }, reason => { console.error(`Unable to get text content for page ${i + 1}`, reason); this._pageContents[i] = \"\"; this._pageDiffs[i] = null; this._hasDiacritics[i] = false; extractTextCapability.resolve(); }); }); } } #updatePage(index) { if (this._scrollMatches && this._selected.pageIdx === index) { this._linkService.page = index + 1; } this._eventBus.dispatch(\"updatetextlayermatches\", { source: this, pageIndex: index }); } #updateAllPages() { this._eventBus.dispatch(\"updatetextlayermatches\", { source: this, pageIndex: -1 }); } #nextMatch() { const previous = this._state.findPrevious; const currentPageIndex = this._linkService.page - 1; const numPages = this._linkService.pagesCount; this._highlightMatches = true; if (this._dirtyMatch) { this._dirtyMatch = false; this._selected.pageIdx = this._selected.matchIdx = -1; this._offset.pageIdx = currentPageIndex; this._offset.matchIdx = null; this._offset.wrapped = false; this._resumePageIdx = null; this._pageMatches.length = 0; this._pageMatchesLength.length = 0; this._matchesCountTotal = 0; this.#updateAllPages(); for (let i = 0; i < numPages; i++) { if (this._pendingFindMatches.has(i)) { continue; } this._pendingFindMatches.add(i); this._extractTextPromises[i].then(() => { this._pendingFindMatches.delete(i); this.#calculateMatch(i); }); } } if (this.#query === \"\") { this.#updateUIState(FindState.FOUND); return; } if (this._resumePageIdx) { return; } const offset = this._offset; this._pagesToSearch = numPages; if (offset.matchIdx !== null) { const numPageMatches = this._pageMatches[offset.pageIdx].length; if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) { offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1; this.#updateMatch(true); return; } this.#advanceOffsetPage(previous); } this.#nextPageMatch(); } #matchesReady(matches) { const offset = this._offset; const numMatches = matches.length; const previous = this._state.findPrevious; if (numMatches) { offset.matchIdx = previous ? numMatches - 1 : 0; this.#updateMatch(true); return true; } this.#advanceOffsetPage(previous); if (offset.wrapped) { offset.matchIdx = null; if (this._pagesToSearch < 0) { this.#updateMatch(false); return true; } } return false; } #nextPageMatch() { if (this._resumePageIdx !== null) { console.error(\"There can only be one pending page.\"); } let matches = null; do { const pageIdx = this._offset.pageIdx; matches = this._pageMatches[pageIdx]; if (!matches) { this._resumePageIdx = pageIdx; break; } } while (!this.#matchesReady(matches)); } #advanceOffsetPage(previous) { const offset = this._offset; const numPages = this._linkService.pagesCount; offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1; offset.matchIdx = null; this._pagesToSearch--; if (offset.pageIdx >= numPages || offset.pageIdx < 0) { offset.pageIdx = previous ? numPages - 1 : 0; offset.wrapped = true; } } #updateMatch(found = false) { let state = FindState.NOT_FOUND; const wrapped = this._offset.wrapped; this._offset.wrapped = false; if (found) { const previousPage = this._selected.pageIdx; this._selected.pageIdx = this._offset.pageIdx; this._selected.matchIdx = this._offset.matchIdx; state = wrapped ? FindState.WRAPPED : FindState.FOUND; if (previousPage !== -1 && previousPage !== this._selected.pageIdx) { this.#updatePage(previousPage); } } this.#updateUIState(state, this._state.findPrevious); if (this._selected.pageIdx !== -1) { this._scrollMatches = true; this.#updatePage(this._selected.pageIdx); } } #onFindBarClose(evt) { const pdfDocument = this._pdfDocument; this._firstPageCapability.promise.then(() => { if (!this._pdfDocument || pdfDocument && this._pdfDocument !== pdfDocument) { return; } if (this._findTimeout) { clearTimeout(this._findTimeout); this._findTimeout = null; } if (this._resumePageIdx) { this._resumePageIdx = null; this._dirtyMatch = true; } this.#updateUIState(FindState.FOUND); this._highlightMatches = false; this.#updateAllPages(); }); } #requestMatchesCount() { const { pageIdx, matchIdx } = this._selected; let current = 0, total = this._matchesCountTotal; if (matchIdx !== -1) { for (let i = 0; i < pageIdx; i++) { current += this._pageMatches[i]?.length || 0; } current += matchIdx + 1; } if (current < 1 || current > total) { current = total = 0; } return { current, total }; } #updateUIResultsCount() { this._eventBus.dispatch(\"updatefindmatchescount\", { source: this, matchesCount: this.#requestMatchesCount() }); } #updateUIState(state, previous = false) { this._eventBus.dispatch(\"updatefindcontrolstate\", { source: this, state, previous, matchesCount: this.#requestMatchesCount(), rawQuery: this._state?.query ?? null }); } } exports.PDFFindController = PDFFindController; /***/ }), /* 16 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.CharacterType = void 0; exports.getCharacterType = getCharacterType; const CharacterType = { SPACE: 0, ALPHA_LETTER: 1, PUNCT: 2, HAN_LETTER: 3, KATAKANA_LETTER: 4, HIRAGANA_LETTER: 5, HALFWIDTH_KATAKANA_LETTER: 6, THAI_LETTER: 7 }; exports.CharacterType = CharacterType; function isAlphabeticalScript(charCode) { return charCode < 0x2e80; } function isAscii(charCode) { return (charCode & 0xff80) === 0; } function isAsciiAlpha(charCode) { return charCode >= 0x61 && charCode = 0x41 && charCode = 0x30 && charCode = 0x3400 && charCode = 0xf900 && charCode = 0x30a0 && charCode = 0x3040 && charCode = 0xff60 && charCode { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFHistory = void 0; exports.isDestArraysEqual = isDestArraysEqual; exports.isDestHashesEqual = isDestHashesEqual; var _ui_utils = __webpack_require__(3); var _event_utils = __webpack_require__(4); const HASH_CHANGE_TIMEOUT = 1000; const POSITION_UPDATED_THRESHOLD = 50; const UPDATE_VIEWAREA_TIMEOUT = 1000; function getCurrentHash() { return document.location.hash; } class PDFHistory { constructor({ linkService, eventBus }) { this.linkService = linkService; this.eventBus = eventBus; this._initialized = false; this._fingerprint = \"\"; this.reset(); this._boundEvents = null; this.eventBus._on(\"pagesinit\", () => { this._isPagesLoaded = false; this.eventBus._on(\"pagesloaded\", evt => { this._isPagesLoaded = !!evt.pagesCount; }, { once: true }); }); } initialize({ fingerprint, resetHistory = false, updateUrl = false }) { if (!fingerprint || typeof fingerprint !== \"string\") { console.error('PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'); return; } if (this._initialized) { this.reset(); } const reInitialized = this._fingerprint !== \"\" && this._fingerprint !== fingerprint; this._fingerprint = fingerprint; this._updateUrl = updateUrl === true; this._initialized = true; this._bindEvents(); const state = window.history.state; this._popStateInProgress = false; this._blockHashChange = 0; this._currentHash = getCurrentHash(); this._numPositionUpdates = 0; this._uid = this._maxUid = 0; this._destination = null; this._position = null; if (!this._isValidState(state, true) || resetHistory) { const { hash, page, rotation } = this._parseCurrentHash(true); if (!hash || reInitialized || resetHistory) { this._pushOrReplaceState(null, true); return; } this._pushOrReplaceState({ hash, page, rotation }, true); return; } const destination = state.destination; this._updateInternalState(destination, state.uid, true); if (destination.rotation !== undefined) { this._initialRotation = destination.rotation; } if (destination.dest) { this._initialBookmark = JSON.stringify(destination.dest); this._destination.page = null; } else if (destination.hash) { this._initialBookmark = destination.hash; } else if (destination.page) { this._initialBookmark = `page=${destination.page}`; } } reset() { if (this._initialized) { this._pageHide(); this._initialized = false; this._unbindEvents(); } if (this._updateViewareaTimeout) { clearTimeout(this._updateViewareaTimeout); this._updateViewareaTimeout = null; } this._initialBookmark = null; this._initialRotation = null; } push({ namedDest = null, explicitDest, pageNumber }) { if (!this._initialized) { return; } if (namedDest && typeof namedDest !== \"string\") { console.error(\"PDFHistory.push: \" + `\"${namedDest}\" is not a valid namedDest parameter.`); return; } else if (!Array.isArray(explicitDest)) { console.error(\"PDFHistory.push: \" + `\"${explicitDest}\" is not a valid explicitDest parameter.`); return; } else if (!this._isValidPage(pageNumber)) { if (pageNumber !== null || this._destination) { console.error(\"PDFHistory.push: \" + `\"${pageNumber}\" is not a valid pageNumber parameter.`); return; } } const hash = namedDest || JSON.stringify(explicitDest); if (!hash) { return; } let forceReplace = false; if (this._destination && (isDestHashesEqual(this._destination.hash, hash) || isDestArraysEqual(this._destination.dest, explicitDest))) { if (this._destination.page) { return; } forceReplace = true; } if (this._popStateInProgress && !forceReplace) { return; } this._pushOrReplaceState({ dest: explicitDest, hash, page: pageNumber, rotation: this.linkService.rotation }, forceReplace); if (!this._popStateInProgress) { this._popStateInProgress = true; Promise.resolve().then(() => { this._popStateInProgress = false; }); } } pushPage(pageNumber) { if (!this._initialized) { return; } if (!this._isValidPage(pageNumber)) { console.error(`PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`); return; } if (this._destination?.page === pageNumber) { return; } if (this._popStateInProgress) { return; } this._pushOrReplaceState({ dest: null, hash: `page=${pageNumber}`, page: pageNumber, rotation: this.linkService.rotation }); if (!this._popStateInProgress) { this._popStateInProgress = true; Promise.resolve().then(() => { this._popStateInProgress = false; }); } } pushCurrentPosition() { if (!this._initialized || this._popStateInProgress) { return; } this._tryPushCurrentPosition(); } back() { if (!this._initialized || this._popStateInProgress) { return; } const state = window.history.state; if (this._isValidState(state) && state.uid > 0) { window.history.back(); } } forward() { if (!this._initialized || this._popStateInProgress) { return; } const state = window.history.state; if (this._isValidState(state) && state.uid < this._maxUid) { window.history.forward(); } } get popStateInProgress() { return this._initialized && (this._popStateInProgress || this._blockHashChange > 0); } get initialBookmark() { return this._initialized ? this._initialBookmark : null; } get initialRotation() { return this._initialized ? this._initialRotation : null; } _pushOrReplaceState(destination, forceReplace = false) { const shouldReplace = forceReplace || !this._destination; const newState = { fingerprint: this._fingerprint, uid: shouldReplace ? this._uid : this._uid + 1, destination }; this._updateInternalState(destination, newState.uid); let newUrl; if (this._updateUrl && destination?.hash) { const baseUrl = document.location.href.split(\"#\")[0]; if (!baseUrl.startsWith(\"file://\")) { newUrl = `${baseUrl}#${destination.hash}`; } } if (shouldReplace) { window.history.replaceState(newState, \"\", newUrl); } else { window.history.pushState(newState, \"\", newUrl); } } _tryPushCurrentPosition(temporary = false) { if (!this._position) { return; } let position = this._position; if (temporary) { position = Object.assign(Object.create(null), this._position); position.temporary = true; } if (!this._destination) { this._pushOrReplaceState(position); return; } if (this._destination.temporary) { this._pushOrReplaceState(position, true); return; } if (this._destination.hash === position.hash) { return; } if (!this._destination.page && (POSITION_UPDATED_THRESHOLD 0) { this._updateViewareaTimeout = setTimeout(() => { if (!this._popStateInProgress) { this._tryPushCurrentPosition(true); } this._updateViewareaTimeout = null; }, UPDATE_VIEWAREA_TIMEOUT); } } _popState({ state }) { const newHash = getCurrentHash(), hashChanged = this._currentHash !== newHash; this._currentHash = newHash; if (!state) { this._uid++; const { hash, page, rotation } = this._parseCurrentHash(); this._pushOrReplaceState({ hash, page, rotation }, true); return; } if (!this._isValidState(state)) { return; } this._popStateInProgress = true; if (hashChanged) { this._blockHashChange++; (0, _event_utils.waitOnEventOrTimeout)({ target: window, name: \"hashchange\", delay: HASH_CHANGE_TIMEOUT }).then(() => { this._blockHashChange--; }); } const destination = state.destination; this._updateInternalState(destination, state.uid, true); if ((0, _ui_utils.isValidRotation)(destination.rotation)) { this.linkService.rotation = destination.rotation; } if (destination.dest) { this.linkService.goToDestination(destination.dest); } else if (destination.hash) { this.linkService.setHash(destination.hash); } else if (destination.page) { this.linkService.page = destination.page; } Promise.resolve().then(() => { this._popStateInProgress = false; }); } _pageHide() { if (!this._destination || this._destination.temporary) { this._tryPushCurrentPosition(); } } _bindEvents() { if (this._boundEvents) { return; } this._boundEvents = { updateViewarea: this._updateViewarea.bind(this), popState: this._popState.bind(this), pageHide: this._pageHide.bind(this) }; this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea); window.addEventListener(\"popstate\", this._boundEvents.popState); window.addEventListener(\"pagehide\", this._boundEvents.pageHide); } _unbindEvents() { if (!this._boundEvents) { return; } this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea); window.removeEventListener(\"popstate\", this._boundEvents.popState); window.removeEventListener(\"pagehide\", this._boundEvents.pageHide); this._boundEvents = null; } } exports.PDFHistory = PDFHistory; function isDestHashesEqual(destHash, pushHash) { if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") { return false; } if (destHash === pushHash) { return true; } const nameddest = (0, _ui_utils.parseQueryString)(destHash).get(\"nameddest\"); if (nameddest === pushHash) { return true; } return false; } function isDestArraysEqual(firstDest, secondDest) { function isEntryEqual(first, second) { if (typeof first !== typeof second) { return false; } if (Array.isArray(first) || Array.isArray(second)) { return false; } if (first !== null && typeof first === \"object\" && second !== null) { if (Object.keys(first).length !== Object.keys(second).length) { return false; } for (const key in first) { if (!isEntryEqual(first[key], second[key])) { return false; } } return true; } return first === second || Number.isNaN(first) && Number.isNaN(second); } if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) { return false; } if (firstDest.length !== secondDest.length) { return false; } for (let i = 0, ii = firstDest.length; i < ii; i++) { if (!isEntryEqual(firstDest[i], secondDest[i])) { return false; } } return true; } /***/ }), /* 18 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFLayerViewer = void 0; var _base_tree_viewer = __webpack_require__(12); class PDFLayerViewer extends _base_tree_viewer.BaseTreeViewer { constructor(options) { super(options); this.l10n = options.l10n; this.eventBus._on(\"resetlayers\", this._resetLayers.bind(this)); this.eventBus._on(\"togglelayerstree\", this._toggleAllTreeItems.bind(this)); } reset() { super.reset(); this._optionalContentConfig = null; } _dispatchEvent(layersCount) { this.eventBus.dispatch(\"layersloaded\", { source: this, layersCount }); } _bindLink(element, { groupId, input }) { const setVisibility = () => { this._optionalContentConfig.setVisibility(groupId, input.checked); this.eventBus.dispatch(\"optionalcontentconfig\", { source: this, promise: Promise.resolve(this._optionalContentConfig) }); }; element.onclick = evt => { if (evt.target === input) { setVisibility(); return true; } else if (evt.target !== element) { return true; } input.checked = !input.checked; setVisibility(); return false; }; } async _setNestedName(element, { name = null }) { if (typeof name === \"string\") { element.textContent = this._normalizeTextContent(name); return; } element.textContent = await this.l10n.get(\"additional_layers\"); element.style.fontStyle = \"italic\"; } _addToggleButton(div, { name = null }) { super._addToggleButton(div, name === null); } _toggleAllTreeItems() { if (!this._optionalContentConfig) { return; } super._toggleAllTreeItems(); } render({ optionalContentConfig, pdfDocument }) { if (this._optionalContentConfig) { this.reset(); } this._optionalContentConfig = optionalContentConfig || null; this._pdfDocument = pdfDocument || null; const groups = optionalContentConfig?.getOrder(); if (!groups) { this._dispatchEvent(0); return; } const fragment = document.createDocumentFragment(), queue = [{ parent: fragment, groups }]; let layersCount = 0, hasAnyNesting = false; while (queue.length > 0) { const levelData = queue.shift(); for (const groupId of levelData.groups) { const div = document.createElement(\"div\"); div.className = \"treeItem\"; const element = document.createElement(\"a\"); div.appendChild(element); if (typeof groupId === \"object\") { hasAnyNesting = true; this._addToggleButton(div, groupId); this._setNestedName(element, groupId); const itemsDiv = document.createElement(\"div\"); itemsDiv.className = \"treeItems\"; div.appendChild(itemsDiv); queue.push({ parent: itemsDiv, groups: groupId.order }); } else { const group = optionalContentConfig.getGroup(groupId); const input = document.createElement(\"input\"); this._bindLink(element, { groupId, input }); input.type = \"checkbox\"; input.id = groupId; input.checked = group.visible; const label = document.createElement(\"label\"); label.setAttribute(\"for\", groupId); label.textContent = this._normalizeTextContent(group.name); element.appendChild(input); element.appendChild(label); layersCount++; } levelData.parent.appendChild(div); } } this._finishRendering(fragment, layersCount, hasAnyNesting); } async _resetLayers() { if (!this._optionalContentConfig) { return; } const optionalContentConfig = await this._pdfDocument.getOptionalContentConfig(); this.eventBus.dispatch(\"optionalcontentconfig\", { source: this, promise: Promise.resolve(optionalContentConfig) }); this.render({ optionalContentConfig, pdfDocument: this._pdfDocument }); } } exports.PDFLayerViewer = PDFLayerViewer; /***/ }), /* 19 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFOutlineViewer = void 0; var _base_tree_viewer = __webpack_require__(12); var _pdfjsLib = __webpack_require__(5); var _ui_utils = __webpack_require__(3); class PDFOutlineViewer extends _base_tree_viewer.BaseTreeViewer { constructor(options) { super(options); this.linkService = options.linkService; this.eventBus._on(\"toggleoutlinetree\", this._toggleAllTreeItems.bind(this)); this.eventBus._on(\"currentoutlineitem\", this._currentOutlineItem.bind(this)); this.eventBus._on(\"pagechanging\", evt => { this._currentPageNumber = evt.pageNumber; }); this.eventBus._on(\"pagesloaded\", evt => { this._isPagesLoaded = !!evt.pagesCount; if (this._currentOutlineItemCapability && !this._currentOutlineItemCapability.settled) { this._currentOutlineItemCapability.resolve(this._isPagesLoaded); } }); this.eventBus._on(\"sidebarviewchanged\", evt => { this._sidebarView = evt.view; }); } reset() { super.reset(); this._outline = null; this._pageNumberToDestHashCapability = null; this._currentPageNumber = 1; this._isPagesLoaded = null; if (this._currentOutlineItemCapability && !this._currentOutlineItemCapability.settled) { this._currentOutlineItemCapability.resolve(false); } this._currentOutlineItemCapability = null; } _dispatchEvent(outlineCount) { this._currentOutlineItemCapability = (0, _pdfjsLib.createPromiseCapability)(); if (outlineCount === 0 || this._pdfDocument?.loadingParams.disableAutoFetch) { this._currentOutlineItemCapability.resolve(false); } else if (this._isPagesLoaded !== null) { this._currentOutlineItemCapability.resolve(this._isPagesLoaded); } this.eventBus.dispatch(\"outlineloaded\", { source: this, outlineCount, currentOutlineItemPromise: this._currentOutlineItemCapability.promise }); } _bindLink(element, { url, newWindow, dest }) { const { linkService } = this; if (url) { linkService.addLinkAttributes(element, url, newWindow); return; } element.href = linkService.getDestinationHash(dest); element.onclick = evt => { this._updateCurrentTreeItem(evt.target.parentNode); if (dest) { linkService.goToDestination(dest); } return false; }; } _setStyles(element, { bold, italic }) { if (bold) { element.style.fontWeight = \"bold\"; } if (italic) { element.style.fontStyle = \"italic\"; } } _addToggleButton(div, { count, items }) { let hidden = false; if (count < 0) { let totalCount = items.length; if (totalCount > 0) { const queue = [...items]; while (queue.length > 0) { const { count: nestedCount, items: nestedItems } = queue.shift(); if (nestedCount > 0 && nestedItems.length > 0) { totalCount += nestedItems.length; queue.push(...nestedItems); } } } if (Math.abs(count) === totalCount) { hidden = true; } } super._addToggleButton(div, hidden); } _toggleAllTreeItems() { if (!this._outline) { return; } super._toggleAllTreeItems(); } render({ outline, pdfDocument }) { if (this._outline) { this.reset(); } this._outline = outline || null; this._pdfDocument = pdfDocument || null; if (!outline) { this._dispatchEvent(0); return; } const fragment = document.createDocumentFragment(); const queue = [{ parent: fragment, items: outline }]; let outlineCount = 0, hasAnyNesting = false; while (queue.length > 0) { const levelData = queue.shift(); for (const item of levelData.items) { const div = document.createElement(\"div\"); div.className = \"treeItem\"; const element = document.createElement(\"a\"); this._bindLink(element, item); this._setStyles(element, item); element.textContent = this._normalizeTextContent(item.title); div.appendChild(element); if (item.items.length > 0) { hasAnyNesting = true; this._addToggleButton(div, item); const itemsDiv = document.createElement(\"div\"); itemsDiv.className = \"treeItems\"; div.appendChild(itemsDiv); queue.push({ parent: itemsDiv, items: item.items }); } levelData.parent.appendChild(div); outlineCount++; } } this._finishRendering(fragment, outlineCount, hasAnyNesting); } async _currentOutlineItem() { if (!this._isPagesLoaded) { throw new Error(\"_currentOutlineItem: All pages have not been loaded.\"); } if (!this._outline || !this._pdfDocument) { return; } const pageNumberToDestHash = await this._getPageNumberToDestHash(this._pdfDocument); if (!pageNumberToDestHash) { return; } this._updateCurrentTreeItem(null); if (this._sidebarView !== _ui_utils.SidebarView.OUTLINE) { return; } for (let i = this._currentPageNumber; i > 0; i--) { const destHash = pageNumberToDestHash.get(i); if (!destHash) { continue; } const linkElement = this.container.querySelector(`a[href=\"${destHash}\"]`); if (!linkElement) { continue; } this._scrollToCurrentTreeItem(linkElement.parentNode); break; } } async _getPageNumberToDestHash(pdfDocument) { if (this._pageNumberToDestHashCapability) { return this._pageNumberToDestHashCapability.promise; } this._pageNumberToDestHashCapability = (0, _pdfjsLib.createPromiseCapability)(); const pageNumberToDestHash = new Map(), pageNumberNesting = new Map(); const queue = [{ nesting: 0, items: this._outline }]; while (queue.length > 0) { const levelData = queue.shift(), currentNesting = levelData.nesting; for (const { dest, items } of levelData.items) { let explicitDest, pageNumber; if (typeof dest === \"string\") { explicitDest = await pdfDocument.getDestination(dest); if (pdfDocument !== this._pdfDocument) { return null; } } else { explicitDest = dest; } if (Array.isArray(explicitDest)) { const [destRef] = explicitDest; if (typeof destRef === \"object\" && destRef !== null) { pageNumber = this.linkService._cachedPageNumber(destRef); if (!pageNumber) { try { pageNumber = (await pdfDocument.getPageIndex(destRef)) + 1; if (pdfDocument !== this._pdfDocument) { return null; } this.linkService.cachePageRef(pageNumber, destRef); } catch (ex) {} } } else if (Number.isInteger(destRef)) { pageNumber = destRef + 1; } if (Number.isInteger(pageNumber) && (!pageNumberToDestHash.has(pageNumber) || currentNesting > pageNumberNesting.get(pageNumber))) { const destHash = this.linkService.getDestinationHash(dest); pageNumberToDestHash.set(pageNumber, destHash); pageNumberNesting.set(pageNumber, currentNesting); } } if (items.length > 0) { queue.push({ nesting: currentNesting + 1, items }); } } } this._pageNumberToDestHashCapability.resolve(pageNumberToDestHash.size > 0 ? pageNumberToDestHash : null); return this._pageNumberToDestHashCapability.promise; } } exports.PDFOutlineViewer = PDFOutlineViewer; /***/ }), /* 20 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFPresentationMode = void 0; var _ui_utils = __webpack_require__(3); const DELAY_BEFORE_HIDING_CONTROLS = 3000; const ACTIVE_SELECTOR = \"pdfPresentationMode\"; const CONTROLS_SELECTOR = \"pdfPresentationModeControls\"; const MOUSE_SCROLL_COOLDOWN_TIME = 50; const PAGE_SWITCH_THRESHOLD = 0.1; const SWIPE_MIN_DISTANCE_THRESHOLD = 50; const SWIPE_ANGLE_THRESHOLD = Math.PI / 6; class PDFPresentationMode { #state = _ui_utils.PresentationModeState.UNKNOWN; #args = null; constructor({ container, pdfViewer, eventBus }) { this.container = container; this.pdfViewer = pdfViewer; this.eventBus = eventBus; this.contextMenuOpen = false; this.mouseScrollTimeStamp = 0; this.mouseScrollDelta = 0; this.touchSwipeState = null; } async request() { const { container, pdfViewer } = this; if (this.active || !pdfViewer.pagesCount || !container.requestFullscreen) { return false; } this.#addFullscreenChangeListeners(); this.#notifyStateChange(_ui_utils.PresentationModeState.CHANGING); const promise = container.requestFullscreen(); this.#args = { pageNumber: pdfViewer.currentPageNumber, scaleValue: pdfViewer.currentScaleValue, scrollMode: pdfViewer.scrollMode, spreadMode: pdfViewer.spreadMode }; try { await promise; return true; } catch (reason) { this.#removeFullscreenChangeListeners(); this.#notifyStateChange(_ui_utils.PresentationModeState.NORMAL); } return false; } get active() { return this.#state === _ui_utils.PresentationModeState.CHANGING || this.#state === _ui_utils.PresentationModeState.FULLSCREEN; } #mouseWheel(evt) { if (!this.active) { return; } evt.preventDefault(); const delta = (0, _ui_utils.normalizeWheelEventDelta)(evt); const currentTime = Date.now(); const storedTime = this.mouseScrollTimeStamp; if (currentTime > storedTime && currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME) { return; } if (this.mouseScrollDelta > 0 && delta < 0 || this.mouseScrollDelta < 0 && delta > 0) { this.#resetMouseScrollState(); } this.mouseScrollDelta += delta; if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) { const totalDelta = this.mouseScrollDelta; this.#resetMouseScrollState(); const success = totalDelta > 0 ? this.pdfViewer.previousPage() : this.pdfViewer.nextPage(); if (success) { this.mouseScrollTimeStamp = currentTime; } } } #notifyStateChange(state) { this.#state = state; this.eventBus.dispatch(\"presentationmodechanged\", { source: this, state }); } #enter() { this.#notifyStateChange(_ui_utils.PresentationModeState.FULLSCREEN); this.container.classList.add(ACTIVE_SELECTOR); setTimeout(() => { this.pdfViewer.scrollMode = _ui_utils.ScrollMode.PAGE; this.pdfViewer.spreadMode = _ui_utils.SpreadMode.NONE; this.pdfViewer.currentPageNumber = this.#args.pageNumber; this.pdfViewer.currentScaleValue = \"page-fit\"; }, 0); this.#addWindowListeners(); this.#showControls(); this.contextMenuOpen = false; window.getSelection().removeAllRanges(); } #exit() { const pageNumber = this.pdfViewer.currentPageNumber; this.container.classList.remove(ACTIVE_SELECTOR); setTimeout(() => { this.#removeFullscreenChangeListeners(); this.#notifyStateChange(_ui_utils.PresentationModeState.NORMAL); this.pdfViewer.scrollMode = this.#args.scrollMode; this.pdfViewer.spreadMode = this.#args.spreadMode; this.pdfViewer.currentScaleValue = this.#args.scaleValue; this.pdfViewer.currentPageNumber = pageNumber; this.#args = null; }, 0); this.#removeWindowListeners(); this.#hideControls(); this.#resetMouseScrollState(); this.contextMenuOpen = false; } #mouseDown(evt) { if (this.contextMenuOpen) { this.contextMenuOpen = false; evt.preventDefault(); return; } if (evt.button === 0) { const isInternalLink = evt.target.href && evt.target.classList.contains(\"internalLink\"); if (!isInternalLink) { evt.preventDefault(); if (evt.shiftKey) { this.pdfViewer.previousPage(); } else { this.pdfViewer.nextPage(); } } } } #contextMenu() { this.contextMenuOpen = true; } #showControls() { if (this.controlsTimeout) { clearTimeout(this.controlsTimeout); } else { this.container.classList.add(CONTROLS_SELECTOR); } this.controlsTimeout = setTimeout(() => { this.container.classList.remove(CONTROLS_SELECTOR); delete this.controlsTimeout; }, DELAY_BEFORE_HIDING_CONTROLS); } #hideControls() { if (!this.controlsTimeout) { return; } clearTimeout(this.controlsTimeout); this.container.classList.remove(CONTROLS_SELECTOR); delete this.controlsTimeout; } #resetMouseScrollState() { this.mouseScrollTimeStamp = 0; this.mouseScrollDelta = 0; } #touchSwipe(evt) { if (!this.active) { return; } if (evt.touches.length > 1) { this.touchSwipeState = null; return; } switch (evt.type) { case \"touchstart\": this.touchSwipeState = { startX: evt.touches[0].pageX, startY: evt.touches[0].pageY, endX: evt.touches[0].pageX, endY: evt.touches[0].pageY }; break; case \"touchmove\": if (this.touchSwipeState === null) { return; } this.touchSwipeState.endX = evt.touches[0].pageX; this.touchSwipeState.endY = evt.touches[0].pageY; evt.preventDefault(); break; case \"touchend\": if (this.touchSwipeState === null) { return; } let delta = 0; const dx = this.touchSwipeState.endX - this.touchSwipeState.startX; const dy = this.touchSwipeState.endY - this.touchSwipeState.startY; const absAngle = Math.abs(Math.atan2(dy, dx)); if (Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD && (absAngle = Math.PI - SWIPE_ANGLE_THRESHOLD)) { delta = dx; } else if (Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD && Math.abs(absAngle - Math.PI / 2) 0) { this.pdfViewer.previousPage(); } else if (delta < 0) { this.pdfViewer.nextPage(); } break; } } #addWindowListeners() { this.showControlsBind = this.#showControls.bind(this); this.mouseDownBind = this.#mouseDown.bind(this); this.mouseWheelBind = this.#mouseWheel.bind(this); this.resetMouseScrollStateBind = this.#resetMouseScrollState.bind(this); this.contextMenuBind = this.#contextMenu.bind(this); this.touchSwipeBind = this.#touchSwipe.bind(this); window.addEventListener(\"mousemove\", this.showControlsBind); window.addEventListener(\"mousedown\", this.mouseDownBind); window.addEventListener(\"wheel\", this.mouseWheelBind, { passive: false }); window.addEventListener(\"keydown\", this.resetMouseScrollStateBind); window.addEventListener(\"contextmenu\", this.contextMenuBind); window.addEventListener(\"touchstart\", this.touchSwipeBind); window.addEventListener(\"touchmove\", this.touchSwipeBind); window.addEventListener(\"touchend\", this.touchSwipeBind); } #removeWindowListeners() { window.removeEventListener(\"mousemove\", this.showControlsBind); window.removeEventListener(\"mousedown\", this.mouseDownBind); window.removeEventListener(\"wheel\", this.mouseWheelBind, { passive: false }); window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind); window.removeEventListener(\"contextmenu\", this.contextMenuBind); window.removeEventListener(\"touchstart\", this.touchSwipeBind); window.removeEventListener(\"touchmove\", this.touchSwipeBind); window.removeEventListener(\"touchend\", this.touchSwipeBind); delete this.showControlsBind; delete this.mouseDownBind; delete this.mouseWheelBind; delete this.resetMouseScrollStateBind; delete this.contextMenuBind; delete this.touchSwipeBind; } #fullscreenChange() { if (document.fullscreenElement) { this.#enter(); } else { this.#exit(); } } #addFullscreenChangeListeners() { this.fullscreenChangeBind = this.#fullscreenChange.bind(this); window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind); } #removeFullscreenChangeListeners() { window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind); delete this.fullscreenChangeBind; } } exports.PDFPresentationMode = PDFPresentationMode; /***/ }), /* 21 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFRenderingQueue = void 0; var _pdfjsLib = __webpack_require__(5); var _ui_utils = __webpack_require__(3); const CLEANUP_TIMEOUT = 30000; class PDFRenderingQueue { constructor() { this.pdfViewer = null; this.pdfThumbnailViewer = null; this.onIdle = null; this.highestPriorityPage = null; this.idleTimeout = null; this.printing = false; this.isThumbnailViewEnabled = false; } setViewer(pdfViewer) { this.pdfViewer = pdfViewer; } setThumbnailViewer(pdfThumbnailViewer) { this.pdfThumbnailViewer = pdfThumbnailViewer; } isHighestPriority(view) { return this.highestPriorityPage === view.renderingId; } hasViewer() { return !!this.pdfViewer; } renderHighestPriority(currentlyVisiblePages) { if (this.idleTimeout) { clearTimeout(this.idleTimeout); this.idleTimeout = null; } if (this.pdfViewer.forceRendering(currentlyVisiblePages)) { return; } if (this.isThumbnailViewEnabled && this.pdfThumbnailViewer?.forceRendering()) { return; } if (this.printing) { return; } if (this.onIdle) { this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT); } } getHighestPriority(visible, views, scrolledDown, preRenderExtra = false) { const visibleViews = visible.views, numVisible = visibleViews.length; if (numVisible === 0) { return null; } for (let i = 0; i < numVisible; i++) { const view = visibleViews[i].view; if (!this.isViewFinished(view)) { return view; } } const firstId = visible.first.id, lastId = visible.last.id; if (lastId - firstId + 1 > numVisible) { const visibleIds = visible.ids; for (let i = 1, ii = lastId - firstId; i < ii; i++) { const holeId = scrolledDown ? firstId + i : lastId - i; if (visibleIds.has(holeId)) { continue; } const holeView = views[holeId - 1]; if (!this.isViewFinished(holeView)) { return holeView; } } } let preRenderIndex = scrolledDown ? lastId : firstId - 2; let preRenderView = views[preRenderIndex]; if (preRenderView && !this.isViewFinished(preRenderView)) { return preRenderView; } if (preRenderExtra) { preRenderIndex += scrolledDown ? 1 : -1; preRenderView = views[preRenderIndex]; if (preRenderView && !this.isViewFinished(preRenderView)) { return preRenderView; } } return null; } isViewFinished(view) { return view.renderingState === _ui_utils.RenderingStates.FINISHED; } renderView(view) { switch (view.renderingState) { case _ui_utils.RenderingStates.FINISHED: return false; case _ui_utils.RenderingStates.PAUSED: this.highestPriorityPage = view.renderingId; view.resume(); break; case _ui_utils.RenderingStates.RUNNING: this.highestPriorityPage = view.renderingId; break; case _ui_utils.RenderingStates.INITIAL: this.highestPriorityPage = view.renderingId; view.draw().finally(() => { this.renderHighestPriority(); }).catch(reason => { if (reason instanceof _pdfjsLib.RenderingCancelledException) { return; } console.error(`renderView: \"${reason}\"`); }); break; } return true; } } exports.PDFRenderingQueue = PDFRenderingQueue; /***/ }), /* 22 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFScriptingManager = void 0; var _ui_utils = __webpack_require__(3); var _pdfjsLib = __webpack_require__(5); class PDFScriptingManager { constructor({ eventBus, sandboxBundleSrc = null, scriptingFactory = null, docPropertiesLookup = null }) { this._pdfDocument = null; this._pdfViewer = null; this._closeCapability = null; this._destroyCapability = null; this._scripting = null; this._mouseState = Object.create(null); this._ready = false; this._eventBus = eventBus; this._sandboxBundleSrc = sandboxBundleSrc; this._scriptingFactory = scriptingFactory; this._docPropertiesLookup = docPropertiesLookup; } setViewer(pdfViewer) { this._pdfViewer = pdfViewer; } async setDocument(pdfDocument) { if (this._pdfDocument) { await this._destroyScripting(); } this._pdfDocument = pdfDocument; if (!pdfDocument) { return; } const [objects, calculationOrder, docActions] = await Promise.all([pdfDocument.getFieldObjects(), pdfDocument.getCalculationOrderIds(), pdfDocument.getJSActions()]); if (!objects && !docActions) { await this._destroyScripting(); return; } if (pdfDocument !== this._pdfDocument) { return; } try { this._scripting = this._createScripting(); } catch (error) { console.error(`PDFScriptingManager.setDocument: \"${error?.message}\".`); await this._destroyScripting(); return; } this._internalEvents.set(\"updatefromsandbox\", event => { if (event?.source !== window) { return; } this._updateFromSandbox(event.detail); }); this._internalEvents.set(\"dispatcheventinsandbox\", event => { this._scripting?.dispatchEventInSandbox(event.detail); }); this._internalEvents.set(\"pagechanging\", ({ pageNumber, previous }) => { if (pageNumber === previous) { return; } this._dispatchPageClose(previous); this._dispatchPageOpen(pageNumber); }); this._internalEvents.set(\"pagerendered\", ({ pageNumber }) => { if (!this._pageOpenPending.has(pageNumber)) { return; } if (pageNumber !== this._pdfViewer.currentPageNumber) { return; } this._dispatchPageOpen(pageNumber); }); this._internalEvents.set(\"pagesdestroy\", async event => { await this._dispatchPageClose(this._pdfViewer.currentPageNumber); await this._scripting?.dispatchEventInSandbox({ id: \"doc\", name: \"WillClose\" }); this._closeCapability?.resolve(); }); this._domEvents.set(\"mousedown\", event => { this._mouseState.isDown = true; }); this._domEvents.set(\"mouseup\", event => { this._mouseState.isDown = false; }); for (const [name, listener] of this._internalEvents) { this._eventBus._on(name, listener); } for (const [name, listener] of this._domEvents) { window.addEventListener(name, listener, true); } try { const docProperties = await this._getDocProperties(); if (pdfDocument !== this._pdfDocument) { return; } await this._scripting.createSandbox({ objects, calculationOrder, appInfo: { platform: navigator.platform, language: navigator.language }, docInfo: { ...docProperties, actions: docActions } }); this._eventBus.dispatch(\"sandboxcreated\", { source: this }); } catch (error) { console.error(`PDFScriptingManager.setDocument: \"${error?.message}\".`); await this._destroyScripting(); return; } await this._scripting?.dispatchEventInSandbox({ id: \"doc\", name: \"Open\" }); await this._dispatchPageOpen(this._pdfViewer.currentPageNumber, true); Promise.resolve().then(() => { if (pdfDocument === this._pdfDocument) { this._ready = true; } }); } async dispatchWillSave(detail) { return this._scripting?.dispatchEventInSandbox({ id: \"doc\", name: \"WillSave\" }); } async dispatchDidSave(detail) { return this._scripting?.dispatchEventInSandbox({ id: \"doc\", name: \"DidSave\" }); } async dispatchWillPrint(detail) { return this._scripting?.dispatchEventInSandbox({ id: \"doc\", name: \"WillPrint\" }); } async dispatchDidPrint(detail) { return this._scripting?.dispatchEventInSandbox({ id: \"doc\", name: \"DidPrint\" }); } get mouseState() { return this._mouseState; } get destroyPromise() { return this._destroyCapability?.promise || null; } get ready() { return this._ready; } get _internalEvents() { return (0, _pdfjsLib.shadow)(this, \"_internalEvents\", new Map()); } get _domEvents() { return (0, _pdfjsLib.shadow)(this, \"_domEvents\", new Map()); } get _pageOpenPending() { return (0, _pdfjsLib.shadow)(this, \"_pageOpenPending\", new Set()); } get _visitedPages() { return (0, _pdfjsLib.shadow)(this, \"_visitedPages\", new Map()); } async _updateFromSandbox(detail) { const isInPresentationMode = this._pdfViewer.isInPresentationMode || this._pdfViewer.isChangingPresentationMode; const { id, siblings, command, value } = detail; if (!id) { switch (command) { case \"clear\": console.clear(); break; case \"error\": console.error(value); break; case \"layout\": if (isInPresentationMode) { return; } const modes = (0, _ui_utils.apiPageLayoutToViewerModes)(value); this._pdfViewer.spreadMode = modes.spreadMode; break; case \"page-num\": this._pdfViewer.currentPageNumber = value + 1; break; case \"print\": await this._pdfViewer.pagesPromise; this._eventBus.dispatch(\"print\", { source: this }); break; case \"println\": console.log(value); break; case \"zoom\": if (isInPresentationMode) { return; } this._pdfViewer.currentScaleValue = value; break; case \"SaveAs\": this._eventBus.dispatch(\"save\", { source: this }); break; case \"FirstPage\": this._pdfViewer.currentPageNumber = 1; break; case \"LastPage\": this._pdfViewer.currentPageNumber = this._pdfViewer.pagesCount; break; case \"NextPage\": this._pdfViewer.nextPage(); break; case \"PrevPage\": this._pdfViewer.previousPage(); break; case \"ZoomViewIn\": if (isInPresentationMode) { return; } this._pdfViewer.increaseScale(); break; case \"ZoomViewOut\": if (isInPresentationMode) { return; } this._pdfViewer.decreaseScale(); break; } return; } if (isInPresentationMode) { if (detail.focus) { return; } } delete detail.id; delete detail.siblings; const ids = siblings ? [id, ...siblings] : [id]; for (const elementId of ids) { const element = document.getElementById(elementId); if (element) { element.dispatchEvent(new CustomEvent(\"updatefromsandbox\", { detail })); } else { this._pdfDocument?.annotationStorage.setValue(elementId, detail); } } } async _dispatchPageOpen(pageNumber, initialize = false) { const pdfDocument = this._pdfDocument, visitedPages = this._visitedPages; if (initialize) { this._closeCapability = (0, _pdfjsLib.createPromiseCapability)(); } if (!this._closeCapability) { return; } const pageView = this._pdfViewer.getPageView(pageNumber - 1); if (pageView?.renderingState !== _ui_utils.RenderingStates.FINISHED) { this._pageOpenPending.add(pageNumber); return; } this._pageOpenPending.delete(pageNumber); const actionsPromise = (async () => { const actions = await (!visitedPages.has(pageNumber) ? pageView.pdfPage?.getJSActions() : null); if (pdfDocument !== this._pdfDocument) { return; } await this._scripting?.dispatchEventInSandbox({ id: \"page\", name: \"PageOpen\", pageNumber, actions }); })(); visitedPages.set(pageNumber, actionsPromise); } async _dispatchPageClose(pageNumber) { const pdfDocument = this._pdfDocument, visitedPages = this._visitedPages; if (!this._closeCapability) { return; } if (this._pageOpenPending.has(pageNumber)) { return; } const actionsPromise = visitedPages.get(pageNumber); if (!actionsPromise) { return; } visitedPages.set(pageNumber, null); await actionsPromise; if (pdfDocument !== this._pdfDocument) { return; } await this._scripting?.dispatchEventInSandbox({ id: \"page\", name: \"PageClose\", pageNumber }); } async _getDocProperties() { if (this._docPropertiesLookup) { return this._docPropertiesLookup(this._pdfDocument); } throw new Error(\"_getDocProperties: Unable to lookup properties.\"); } _createScripting() { this._destroyCapability = (0, _pdfjsLib.createPromiseCapability)(); if (this._scripting) { throw new Error(\"_createScripting: Scripting already exists.\"); } if (this._scriptingFactory) { return this._scriptingFactory.createScripting({ sandboxBundleSrc: this._sandboxBundleSrc }); } throw new Error(\"_createScripting: Cannot create scripting.\"); } async _destroyScripting() { if (!this._scripting) { this._pdfDocument = null; this._destroyCapability?.resolve(); return; } if (this._closeCapability) { await Promise.race([this._closeCapability.promise, new Promise(resolve => { setTimeout(resolve, 1000); })]).catch(reason => {}); this._closeCapability = null; } this._pdfDocument = null; try { await this._scripting.destroySandbox(); } catch (ex) {} for (const [name, listener] of this._internalEvents) { this._eventBus._off(name, listener); } this._internalEvents.clear(); for (const [name, listener] of this._domEvents) { window.removeEventListener(name, listener, true); } this._domEvents.clear(); this._pageOpenPending.clear(); this._visitedPages.clear(); this._scripting = null; delete this._mouseState.isDown; this._ready = false; this._destroyCapability?.resolve(); } } exports.PDFScriptingManager = PDFScriptingManager; /***/ }), /* 23 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFSidebar = void 0; var _ui_utils = __webpack_require__(3); const UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\"; class PDFSidebar { constructor({ elements, pdfViewer, pdfThumbnailViewer, eventBus, l10n }) { this.isOpen = false; this.active = _ui_utils.SidebarView.THUMBS; this.isInitialViewSet = false; this.onToggled = null; this.pdfViewer = pdfViewer; this.pdfThumbnailViewer = pdfThumbnailViewer; this.outerContainer = elements.outerContainer; this.sidebarContainer = elements.sidebarContainer; this.toggleButton = elements.toggleButton; this.thumbnailButton = elements.thumbnailButton; this.outlineButton = elements.outlineButton; this.attachmentsButton = elements.attachmentsButton; this.layersButton = elements.layersButton; this.thumbnailView = elements.thumbnailView; this.outlineView = elements.outlineView; this.attachmentsView = elements.attachmentsView; this.layersView = elements.layersView; this._outlineOptionsContainer = elements.outlineOptionsContainer; this._currentOutlineItemButton = elements.currentOutlineItemButton; this.eventBus = eventBus; this.l10n = l10n; this._addEventListeners(); } reset() { this.isInitialViewSet = false; this._hideUINotification(true); this.switchView(_ui_utils.SidebarView.THUMBS); this.outlineButton.disabled = false; this.attachmentsButton.disabled = false; this.layersButton.disabled = false; this._currentOutlineItemButton.disabled = true; } get visibleView() { return this.isOpen ? this.active : _ui_utils.SidebarView.NONE; } get isThumbnailViewVisible() { return this.isOpen && this.active === _ui_utils.SidebarView.THUMBS; } get isOutlineViewVisible() { return this.isOpen && this.active === _ui_utils.SidebarView.OUTLINE; } get isAttachmentsViewVisible() { return this.isOpen && this.active === _ui_utils.SidebarView.ATTACHMENTS; } get isLayersViewVisible() { return this.isOpen && this.active === _ui_utils.SidebarView.LAYERS; } setInitialView(view = _ui_utils.SidebarView.NONE) { if (this.isInitialViewSet) { return; } this.isInitialViewSet = true; if (view === _ui_utils.SidebarView.NONE || view === _ui_utils.SidebarView.UNKNOWN) { this._dispatchEvent(); return; } if (!this._switchView(view, true)) { this._dispatchEvent(); } } switchView(view, forceOpen = false) { this._switchView(view, forceOpen); } _switchView(view, forceOpen = false) { const isViewChanged = view !== this.active; let shouldForceRendering = false; switch (view) { case _ui_utils.SidebarView.NONE: if (this.isOpen) { this.close(); return true; } return false; case _ui_utils.SidebarView.THUMBS: if (this.isOpen && isViewChanged) { shouldForceRendering = true; } break; case _ui_utils.SidebarView.OUTLINE: if (this.outlineButton.disabled) { return false; } break; case _ui_utils.SidebarView.ATTACHMENTS: if (this.attachmentsButton.disabled) { return false; } break; case _ui_utils.SidebarView.LAYERS: if (this.layersButton.disabled) { return false; } break; default: console.error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`); return false; } this.active = view; const isThumbs = view === _ui_utils.SidebarView.THUMBS, isOutline = view === _ui_utils.SidebarView.OUTLINE, isAttachments = view === _ui_utils.SidebarView.ATTACHMENTS, isLayers = view === _ui_utils.SidebarView.LAYERS; this.thumbnailButton.classList.toggle(\"toggled\", isThumbs); this.outlineButton.classList.toggle(\"toggled\", isOutline); this.attachmentsButton.classList.toggle(\"toggled\", isAttachments); this.layersButton.classList.toggle(\"toggled\", isLayers); this.thumbnailButton.setAttribute(\"aria-checked\", isThumbs); this.outlineButton.setAttribute(\"aria-checked\", isOutline); this.attachmentsButton.setAttribute(\"aria-checked\", isAttachments); this.layersButton.setAttribute(\"aria-checked\", isLayers); this.thumbnailView.classList.toggle(\"hidden\", !isThumbs); this.outlineView.classList.toggle(\"hidden\", !isOutline); this.attachmentsView.classList.toggle(\"hidden\", !isAttachments); this.layersView.classList.toggle(\"hidden\", !isLayers); this._outlineOptionsContainer.classList.toggle(\"hidden\", !isOutline); if (forceOpen && !this.isOpen) { this.open(); return true; } if (shouldForceRendering) { this._updateThumbnailViewer(); this._forceRendering(); } if (isViewChanged) { this._dispatchEvent(); } return isViewChanged; } open() { if (this.isOpen) { return; } this.isOpen = true; this.toggleButton.classList.add(\"toggled\"); this.toggleButton.setAttribute(\"aria-expanded\", \"true\"); this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\"); if (this.active === _ui_utils.SidebarView.THUMBS) { this._updateThumbnailViewer(); } this._forceRendering(); this._dispatchEvent(); this._hideUINotification(); } close() { if (!this.isOpen) { return; } this.isOpen = false; this.toggleButton.classList.remove(\"toggled\"); this.toggleButton.setAttribute(\"aria-expanded\", \"false\"); this.outerContainer.classList.add(\"sidebarMoving\"); this.outerContainer.classList.remove(\"sidebarOpen\"); this._forceRendering(); this._dispatchEvent(); } toggle() { if (this.isOpen) { this.close(); } else { this.open(); } } _dispatchEvent() { this.eventBus.dispatch(\"sidebarviewchanged\", { source: this, view: this.visibleView }); } _forceRendering() { if (this.onToggled) { this.onToggled(); } else { this.pdfViewer.forceRendering(); this.pdfThumbnailViewer.forceRendering(); } } _updateThumbnailViewer() { const { pdfViewer, pdfThumbnailViewer } = this; const pagesCount = pdfViewer.pagesCount; for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) { const pageView = pdfViewer.getPageView(pageIndex); if (pageView?.renderingState === _ui_utils.RenderingStates.FINISHED) { const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex); thumbnailView.setImage(pageView); } } pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber); } _showUINotification() { this.l10n.get(\"toggle_sidebar_notification2.title\").then(msg => { this.toggleButton.title = msg; }); if (!this.isOpen) { this.toggleButton.classList.add(UI_NOTIFICATION_CLASS); } } _hideUINotification(reset = false) { if (this.isOpen || reset) { this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS); } if (reset) { this.l10n.get(\"toggle_sidebar.title\").then(msg => { this.toggleButton.title = msg; }); } } _addEventListeners() { this.sidebarContainer.addEventListener(\"transitionend\", evt => { if (evt.target === this.sidebarContainer) { this.outerContainer.classList.remove(\"sidebarMoving\"); } }); this.toggleButton.addEventListener(\"click\", () => { this.toggle(); }); this.thumbnailButton.addEventListener(\"click\", () => { this.switchView(_ui_utils.SidebarView.THUMBS); }); this.outlineButton.addEventListener(\"click\", () => { this.switchView(_ui_utils.SidebarView.OUTLINE); }); this.outlineButton.addEventListener(\"dblclick\", () => { this.eventBus.dispatch(\"toggleoutlinetree\", { source: this }); }); this.attachmentsButton.addEventListener(\"click\", () => { this.switchView(_ui_utils.SidebarView.ATTACHMENTS); }); this.layersButton.addEventListener(\"click\", () => { this.switchView(_ui_utils.SidebarView.LAYERS); }); this.layersButton.addEventListener(\"dblclick\", () => { this.eventBus.dispatch(\"resetlayers\", { source: this }); }); this._currentOutlineItemButton.addEventListener(\"click\", () => { this.eventBus.dispatch(\"currentoutlineitem\", { source: this }); }); const onTreeLoaded = (count, button, view) => { button.disabled = !count; if (count) { this._showUINotification(); } else if (this.active === view) { this.switchView(_ui_utils.SidebarView.THUMBS); } }; this.eventBus._on(\"outlineloaded\", evt => { onTreeLoaded(evt.outlineCount, this.outlineButton, _ui_utils.SidebarView.OUTLINE); evt.currentOutlineItemPromise.then(enabled => { if (!this.isInitialViewSet) { return; } this._currentOutlineItemButton.disabled = !enabled; }); }); this.eventBus._on(\"attachmentsloaded\", evt => { onTreeLoaded(evt.attachmentsCount, this.attachmentsButton, _ui_utils.SidebarView.ATTACHMENTS); }); this.eventBus._on(\"layersloaded\", evt => { onTreeLoaded(evt.layersCount, this.layersButton, _ui_utils.SidebarView.LAYERS); }); this.eventBus._on(\"presentationmodechanged\", evt => { if (evt.state === _ui_utils.PresentationModeState.NORMAL && this.isThumbnailViewVisible) { this._updateThumbnailViewer(); } }); } } exports.PDFSidebar = PDFSidebar; /***/ }), /* 24 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFSidebarResizer = void 0; const SIDEBAR_WIDTH_VAR = \"--sidebar-width\"; const SIDEBAR_MIN_WIDTH = 200; const SIDEBAR_RESIZING_CLASS = \"sidebarResizing\"; class PDFSidebarResizer { constructor(options, eventBus, l10n) { this.isRTL = false; this.sidebarOpen = false; this.doc = document.documentElement; this._width = null; this._outerContainerWidth = null; this._boundEvents = Object.create(null); this.outerContainer = options.outerContainer; this.resizer = options.resizer; this.eventBus = eventBus; l10n.getDirection().then(dir => { this.isRTL = dir === \"rtl\"; }); this._addEventListeners(); } get outerContainerWidth() { return this._outerContainerWidth ||= this.outerContainer.clientWidth; } _updateWidth(width = 0) { const maxWidth = Math.floor(this.outerContainerWidth / 2); if (width > maxWidth) { width = maxWidth; } if (width < SIDEBAR_MIN_WIDTH) { width = SIDEBAR_MIN_WIDTH; } if (width === this._width) { return false; } this._width = width; this.doc.style.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`); return true; } _mouseMove(evt) { let width = evt.clientX; if (this.isRTL) { width = this.outerContainerWidth - width; } this._updateWidth(width); } _mouseUp(evt) { this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS); this.eventBus.dispatch(\"resize\", { source: this }); const _boundEvents = this._boundEvents; window.removeEventListener(\"mousemove\", _boundEvents.mouseMove); window.removeEventListener(\"mouseup\", _boundEvents.mouseUp); } _addEventListeners() { const _boundEvents = this._boundEvents; _boundEvents.mouseMove = this._mouseMove.bind(this); _boundEvents.mouseUp = this._mouseUp.bind(this); this.resizer.addEventListener(\"mousedown\", evt => { if (evt.button !== 0) { return; } this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS); window.addEventListener(\"mousemove\", _boundEvents.mouseMove); window.addEventListener(\"mouseup\", _boundEvents.mouseUp); }); this.eventBus._on(\"sidebarviewchanged\", evt => { this.sidebarOpen = !!evt?.view; }); this.eventBus._on(\"resize\", evt => { if (evt?.source !== window) { return; } this._outerContainerWidth = null; if (!this._width) { return; } if (!this.sidebarOpen) { this._updateWidth(this._width); return; } this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS); const updated = this._updateWidth(this._width); Promise.resolve().then(() => { this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS); if (updated) { this.eventBus.dispatch(\"resize\", { source: this }); } }); }); } } exports.PDFSidebarResizer = PDFSidebarResizer; /***/ }), /* 25 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFThumbnailViewer = void 0; var _ui_utils = __webpack_require__(3); var _pdf_thumbnail_view = __webpack_require__(26); const THUMBNAIL_SCROLL_MARGIN = -19; const THUMBNAIL_SELECTED_CLASS = \"selected\"; class PDFThumbnailViewer { constructor({ container, eventBus, linkService, renderingQueue, l10n }) { this.container = container; this.linkService = linkService; this.renderingQueue = renderingQueue; this.l10n = l10n; this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdated.bind(this)); this._resetView(); eventBus._on(\"optionalcontentconfigchanged\", () => { this._setImageDisabled = true; }); } _scrollUpdated() { this.renderingQueue.renderHighestPriority(); } getThumbnail(index) { return this._thumbnails[index]; } _getVisibleThumbs() { return (0, _ui_utils.getVisibleElements)({ scrollEl: this.container, views: this._thumbnails }); } scrollThumbnailIntoView(pageNumber) { if (!this.pdfDocument) { return; } const thumbnailView = this._thumbnails[pageNumber - 1]; if (!thumbnailView) { console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.'); return; } if (pageNumber !== this._currentPageNumber) { const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1]; prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS); thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS); } const { first, last, views } = this._getVisibleThumbs(); if (views.length > 0) { let shouldScroll = false; if (pageNumber = last.id) { shouldScroll = true; } else { for (const { id, percent } of views) { if (id !== pageNumber) { continue; } shouldScroll = percent < 100; break; } } if (shouldScroll) { (0, _ui_utils.scrollIntoView)(thumbnailView.div, { top: THUMBNAIL_SCROLL_MARGIN }); } } this._currentPageNumber = pageNumber; } get pagesRotation() { return this._pagesRotation; } set pagesRotation(rotation) { if (!(0, _ui_utils.isValidRotation)(rotation)) { throw new Error(\"Invalid thumbnails rotation angle.\"); } if (!this.pdfDocument) { return; } if (this._pagesRotation === rotation) { return; } this._pagesRotation = rotation; const updateArgs = { rotation }; for (const thumbnail of this._thumbnails) { thumbnail.update(updateArgs); } } cleanup() { for (const thumbnail of this._thumbnails) { if (thumbnail.renderingState !== _ui_utils.RenderingStates.FINISHED) { thumbnail.reset(); } } _pdf_thumbnail_view.TempImageFactory.destroyCanvas(); } _resetView() { this._thumbnails = []; this._currentPageNumber = 1; this._pageLabels = null; this._pagesRotation = 0; this._optionalContentConfigPromise = null; this._setImageDisabled = false; this.container.textContent = \"\"; } setDocument(pdfDocument) { if (this.pdfDocument) { this._cancelRendering(); this._resetView(); } this.pdfDocument = pdfDocument; if (!pdfDocument) { return; } const firstPagePromise = pdfDocument.getPage(1); const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig(); firstPagePromise.then(firstPdfPage => { this._optionalContentConfigPromise = optionalContentConfigPromise; const pagesCount = pdfDocument.numPages; const viewport = firstPdfPage.getViewport({ scale: 1 }); const checkSetImageDisabled = () => { return this._setImageDisabled; }; for (let pageNum = 1; pageNum { console.error(\"Unable to initialize thumbnail viewer\", reason); }); } _cancelRendering() { for (const thumbnail of this._thumbnails) { thumbnail.cancelRendering(); } } setPageLabels(labels) { if (!this.pdfDocument) { return; } if (!labels) { this._pageLabels = null; } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) { this._pageLabels = null; console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\"); } else { this._pageLabels = labels; } for (let i = 0, ii = this._thumbnails.length; i < ii; i++) { this._thumbnails[i].setPageLabel(this._pageLabels?.[i] ?? null); } } async #ensurePdfPageLoaded(thumbView) { if (thumbView.pdfPage) { return thumbView.pdfPage; } try { const pdfPage = await this.pdfDocument.getPage(thumbView.id); if (!thumbView.pdfPage) { thumbView.setPdfPage(pdfPage); } return pdfPage; } catch (reason) { console.error(\"Unable to get page for thumb view\", reason); return null; } } #getScrollAhead(visible) { if (visible.first?.id === 1) { return true; } else if (visible.last?.id === this._thumbnails.length) { return false; } return this.scroll.down; } forceRendering() { const visibleThumbs = this._getVisibleThumbs(); const scrollAhead = this.#getScrollAhead(visibleThumbs); const thumbView = this.renderingQueue.getHighestPriority(visibleThumbs, this._thumbnails, scrollAhead); if (thumbView) { this.#ensurePdfPageLoaded(thumbView).then(() => { this.renderingQueue.renderView(thumbView); }); return true; } return false; } } exports.PDFThumbnailViewer = PDFThumbnailViewer; /***/ }), /* 26 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.TempImageFactory = exports.PDFThumbnailView = void 0; var _ui_utils = __webpack_require__(3); var _pdfjsLib = __webpack_require__(5); const DRAW_UPSCALE_FACTOR = 2; const MAX_NUM_SCALING_STEPS = 3; const THUMBNAIL_CANVAS_BORDER_WIDTH = 1; const THUMBNAIL_WIDTH = 98; class TempImageFactory { static #tempCanvas = null; static getCanvas(width, height) { const tempCanvas = this.#tempCanvas ||= document.createElement(\"canvas\"); tempCanvas.width = width; tempCanvas.height = height; tempCanvas.mozOpaque = true; const ctx = tempCanvas.getContext(\"2d\", { alpha: false }); ctx.save(); ctx.fillStyle = \"rgb(255, 255, 255)\"; ctx.fillRect(0, 0, width, height); ctx.restore(); return [tempCanvas, tempCanvas.getContext(\"2d\")]; } static destroyCanvas() { const tempCanvas = this.#tempCanvas; if (tempCanvas) { tempCanvas.width = 0; tempCanvas.height = 0; } this.#tempCanvas = null; } } exports.TempImageFactory = TempImageFactory; class PDFThumbnailView { constructor({ container, id, defaultViewport, optionalContentConfigPromise, linkService, renderingQueue, checkSetImageDisabled, l10n }) { this.id = id; this.renderingId = \"thumbnail\" + id; this.pageLabel = null; this.pdfPage = null; this.rotation = 0; this.viewport = defaultViewport; this.pdfPageRotate = defaultViewport.rotation; this._optionalContentConfigPromise = optionalContentConfigPromise || null; this.linkService = linkService; this.renderingQueue = renderingQueue; this.renderTask = null; this.renderingState = _ui_utils.RenderingStates.INITIAL; this.resume = null; this._checkSetImageDisabled = checkSetImageDisabled || function () { return false; }; const pageWidth = this.viewport.width, pageHeight = this.viewport.height, pageRatio = pageWidth / pageHeight; this.canvasWidth = THUMBNAIL_WIDTH; this.canvasHeight = this.canvasWidth / pageRatio | 0; this.scale = this.canvasWidth / pageWidth; this.l10n = l10n; const anchor = document.createElement(\"a\"); anchor.href = linkService.getAnchorUrl(\"#page=\" + id); this._thumbPageTitle.then(msg => { anchor.title = msg; }); anchor.onclick = function () { linkService.goToPage(id); return false; }; this.anchor = anchor; const div = document.createElement(\"div\"); div.className = \"thumbnail\"; div.setAttribute(\"data-page-number\", this.id); this.div = div; const ring = document.createElement(\"div\"); ring.className = \"thumbnailSelectionRing\"; const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH; ring.style.width = this.canvasWidth + borderAdjustment + \"px\"; ring.style.height = this.canvasHeight + borderAdjustment + \"px\"; this.ring = ring; div.appendChild(ring); anchor.appendChild(div); container.appendChild(anchor); } setPdfPage(pdfPage) { this.pdfPage = pdfPage; this.pdfPageRotate = pdfPage.rotate; const totalRotation = (this.rotation + this.pdfPageRotate) % 360; this.viewport = pdfPage.getViewport({ scale: 1, rotation: totalRotation }); this.reset(); } reset() { this.cancelRendering(); this.renderingState = _ui_utils.RenderingStates.INITIAL; const pageWidth = this.viewport.width, pageHeight = this.viewport.height, pageRatio = pageWidth / pageHeight; this.canvasHeight = this.canvasWidth / pageRatio | 0; this.scale = this.canvasWidth / pageWidth; this.div.removeAttribute(\"data-loaded\"); const ring = this.ring; ring.textContent = \"\"; const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH; ring.style.width = this.canvasWidth + borderAdjustment + \"px\"; ring.style.height = this.canvasHeight + borderAdjustment + \"px\"; if (this.canvas) { this.canvas.width = 0; this.canvas.height = 0; delete this.canvas; } if (this.image) { this.image.removeAttribute(\"src\"); delete this.image; } } update({ rotation = null }) { if (typeof rotation === \"number\") { this.rotation = rotation; } const totalRotation = (this.rotation + this.pdfPageRotate) % 360; this.viewport = this.viewport.clone({ scale: 1, rotation: totalRotation }); this.reset(); } cancelRendering() { if (this.renderTask) { this.renderTask.cancel(); this.renderTask = null; } this.resume = null; } _getPageDrawContext(upscaleFactor = 1) { const canvas = document.createElement(\"canvas\"); canvas.mozOpaque = true; const ctx = canvas.getContext(\"2d\", { alpha: false }); const outputScale = new _ui_utils.OutputScale(); canvas.width = upscaleFactor * this.canvasWidth * outputScale.sx | 0; canvas.height = upscaleFactor * this.canvasHeight * outputScale.sy | 0; const transform = outputScale.scaled ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0] : null; return { ctx, canvas, transform }; } _convertCanvasToImage(canvas) { if (this.renderingState !== _ui_utils.RenderingStates.FINISHED) { throw new Error(\"_convertCanvasToImage: Rendering has not finished.\"); } const reducedCanvas = this._reduceImage(canvas); const image = document.createElement(\"img\"); image.className = \"thumbnailImage\"; this._thumbPageCanvas.then(msg => { image.setAttribute(\"aria-label\", msg); }); image.style.width = this.canvasWidth + \"px\"; image.style.height = this.canvasHeight + \"px\"; image.src = reducedCanvas.toDataURL(); this.image = image; this.div.setAttribute(\"data-loaded\", true); this.ring.appendChild(image); reducedCanvas.width = 0; reducedCanvas.height = 0; } draw() { if (this.renderingState !== _ui_utils.RenderingStates.INITIAL) { console.error(\"Must be in new state before drawing\"); return Promise.resolve(); } const { pdfPage } = this; if (!pdfPage) { this.renderingState = _ui_utils.RenderingStates.FINISHED; return Promise.reject(new Error(\"pdfPage is not loaded\")); } this.renderingState = _ui_utils.RenderingStates.RUNNING; const finishRenderTask = async (error = null) => { if (renderTask === this.renderTask) { this.renderTask = null; } if (error instanceof _pdfjsLib.RenderingCancelledException) { return; } this.renderingState = _ui_utils.RenderingStates.FINISHED; this._convertCanvasToImage(canvas); if (error) { throw error; } }; const { ctx, canvas, transform } = this._getPageDrawContext(DRAW_UPSCALE_FACTOR); const drawViewport = this.viewport.clone({ scale: DRAW_UPSCALE_FACTOR * this.scale }); const renderContinueCallback = cont => { if (!this.renderingQueue.isHighestPriority(this)) { this.renderingState = _ui_utils.RenderingStates.PAUSED; this.resume = () => { this.renderingState = _ui_utils.RenderingStates.RUNNING; cont(); }; return; } cont(); }; const renderContext = { canvasContext: ctx, transform, viewport: drawViewport, optionalContentConfigPromise: this._optionalContentConfigPromise }; const renderTask = this.renderTask = pdfPage.render(renderContext); renderTask.onContinue = renderContinueCallback; const resultPromise = renderTask.promise.then(function () { return finishRenderTask(null); }, function (error) { return finishRenderTask(error); }); resultPromise.finally(() => { canvas.width = 0; canvas.height = 0; const pageCached = this.linkService.isPageCached(this.id); if (!pageCached) { this.pdfPage?.cleanup(); } }); return resultPromise; } setImage(pageView) { if (this._checkSetImageDisabled()) { return; } if (this.renderingState !== _ui_utils.RenderingStates.INITIAL) { return; } const { canvas, pdfPage } = pageView; if (!canvas) { return; } if (!this.pdfPage) { this.setPdfPage(pdfPage); } this.renderingState = _ui_utils.RenderingStates.FINISHED; this._convertCanvasToImage(canvas); } _reduceImage(img) { const { ctx, canvas } = this._getPageDrawContext(); if (img.width >= 1; } reducedImageCtx.drawImage(img, 0, 0, img.width, img.height, 0, 0, reducedWidth, reducedHeight); while (reducedWidth > 2 * canvas.width) { reducedImageCtx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, reducedWidth >> 1, reducedHeight >> 1); reducedWidth >>= 1; reducedHeight >>= 1; } ctx.drawImage(reducedImage, 0, 0, reducedWidth, reducedHeight, 0, 0, canvas.width, canvas.height); return canvas; } get _thumbPageTitle() { return this.l10n.get(\"thumb_page_title\", { page: this.pageLabel ?? this.id }); } get _thumbPageCanvas() { return this.l10n.get(\"thumb_page_canvas\", { page: this.pageLabel ?? this.id }); } setPageLabel(label) { this.pageLabel = typeof label === \"string\" ? label : null; this._thumbPageTitle.then(msg => { this.anchor.title = msg; }); if (this.renderingState !== _ui_utils.RenderingStates.FINISHED) { return; } this._thumbPageCanvas.then(msg => { this.image?.setAttribute(\"aria-label\", msg); }); } } exports.PDFThumbnailView = PDFThumbnailView; /***/ }), /* 27 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFViewer = exports.PDFSinglePageViewer = void 0; var _ui_utils = __webpack_require__(3); var _base_viewer = __webpack_require__(28); class PDFViewer extends _base_viewer.BaseViewer {} exports.PDFViewer = PDFViewer; class PDFSinglePageViewer extends _base_viewer.BaseViewer { _resetView() { super._resetView(); this._scrollMode = _ui_utils.ScrollMode.PAGE; this._spreadMode = _ui_utils.SpreadMode.NONE; } set scrollMode(mode) {} _updateScrollMode() {} set spreadMode(mode) {} _updateSpreadMode() {} } exports.PDFSinglePageViewer = PDFSinglePageViewer; /***/ }), /* 28 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PagesCountLimit = exports.PDFPageViewBuffer = exports.BaseViewer = void 0; var _pdfjsLib = __webpack_require__(5); var _ui_utils = __webpack_require__(3); var _annotation_layer_builder = __webpack_require__(29); var _l10n_utils = __webpack_require__(30); var _pdf_page_view = __webpack_require__(31); var _pdf_rendering_queue = __webpack_require__(21); var _pdf_link_service = __webpack_require__(8); var _struct_tree_layer_builder = __webpack_require__(32); var _text_highlighter = __webpack_require__(33); var _text_layer_builder = __webpack_require__(34); var _xfa_layer_builder = __webpack_require__(35); const DEFAULT_CACHE_SIZE = 10; const ENABLE_PERMISSIONS_CLASS = \"enablePermissions\"; const PagesCountLimit = { FORCE_SCROLL_MODE_PAGE: 15000, FORCE_LAZY_PAGE_INIT: 7500, PAUSE_EAGER_PAGE_INIT: 250 }; exports.PagesCountLimit = PagesCountLimit; class PDFPageViewBuffer { #buf = new Set(); #size = 0; constructor(size) { this.#size = size; } push(view) { const buf = this.#buf; if (buf.has(view)) { buf.delete(view); } buf.add(view); if (buf.size > this.#size) { this.#destroyFirstView(); } } resize(newSize, idsToKeep = null) { this.#size = newSize; const buf = this.#buf; if (idsToKeep) { const ii = buf.size; let i = 1; for (const view of buf) { if (idsToKeep.has(view.id)) { buf.delete(view); buf.add(view); } if (++i > ii) { break; } } } while (buf.size > this.#size) { this.#destroyFirstView(); } } has(view) { return this.#buf.has(view); } [Symbol.iterator]() { return this.#buf.keys(); } #destroyFirstView() { const firstView = this.#buf.keys().next().value; firstView?.destroy(); this.#buf.delete(firstView); } } exports.PDFPageViewBuffer = PDFPageViewBuffer; class BaseViewer { #buffer = null; #annotationMode = _pdfjsLib.AnnotationMode.ENABLE_FORMS; #previousAnnotationMode = null; #enablePermissions = false; #previousContainerHeight = 0; #scrollModePageState = null; #onVisibilityChange = null; constructor(options) { if (this.constructor === BaseViewer) { throw new Error(\"Cannot initialize BaseViewer.\"); } const viewerVersion = '2.14.0'; if (_pdfjsLib.version !== viewerVersion) { throw new Error(`The API version \"${_pdfjsLib.version}\" does not match the Viewer version \"${viewerVersion}\".`); } this.container = options.container; this.viewer = options.viewer || options.container.firstElementChild; if (!(this.container?.tagName.toUpperCase() === \"DIV\" && this.viewer?.tagName.toUpperCase() === \"DIV\")) { throw new Error(\"Invalid `container` and/or `viewer` option.\"); } if (this.container.offsetParent && getComputedStyle(this.container).position !== \"absolute\") { throw new Error(\"The `container` must be absolutely positioned.\"); } this.eventBus = options.eventBus; this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService(); this.downloadManager = options.downloadManager || null; this.findController = options.findController || null; this._scriptingManager = options.scriptingManager || null; this.removePageBorders = options.removePageBorders || false; this.textLayerMode = options.textLayerMode ?? _ui_utils.TextLayerMode.ENABLE; this.#annotationMode = options.annotationMode ?? _pdfjsLib.AnnotationMode.ENABLE_FORMS; this.imageResourcesPath = options.imageResourcesPath || \"\"; this.enablePrintAutoRotate = options.enablePrintAutoRotate || false; this.renderer = options.renderer || _ui_utils.RendererType.CANVAS; this.useOnlyCssZoom = options.useOnlyCssZoom || false; this.maxCanvasPixels = options.maxCanvasPixels; this.l10n = options.l10n || _l10n_utils.NullL10n; this.#enablePermissions = options.enablePermissions || false; this.defaultRenderingQueue = !options.renderingQueue; if (this.defaultRenderingQueue) { this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue(); this.renderingQueue.setViewer(this); } else { this.renderingQueue = options.renderingQueue; } this._doc = document.documentElement; this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this)); this.presentationModeState = _ui_utils.PresentationModeState.UNKNOWN; this._onBeforeDraw = this._onAfterDraw = null; this._resetView(); if (this.removePageBorders) { this.viewer.classList.add(\"removePageBorders\"); } Promise.resolve().then(() => { this.eventBus.dispatch(\"baseviewerinit\", { source: this }); }); } get pagesCount() { return this._pages.length; } getPageView(index) { return this._pages[index]; } get pageViewsReady() { if (!this._pagesCapability.settled) { return false; } return this._pages.every(function (pageView) { return pageView?.pdfPage; }); } get renderForms() { return this.#annotationMode === _pdfjsLib.AnnotationMode.ENABLE_FORMS; } get enableScripting() { return !!this._scriptingManager; } get currentPageNumber() { return this._currentPageNumber; } set currentPageNumber(val) { if (!Number.isInteger(val)) { throw new Error(\"Invalid page number.\"); } if (!this.pdfDocument) { return; } if (!this._setCurrentPageNumber(val, true)) { console.error(`currentPageNumber: \"${val}\" is not a valid page.`); } } _setCurrentPageNumber(val, resetCurrentPageView = false) { if (this._currentPageNumber === val) { if (resetCurrentPageView) { this.#resetCurrentPageView(); } return true; } if (!(0 < val && val = 0) { page = i + 1; } } if (!this._setCurrentPageNumber(page, true)) { console.error(`currentPageLabel: \"${val}\" is not a valid page.`); } } get currentScale() { return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE; } set currentScale(val) { if (isNaN(val)) { throw new Error(\"Invalid numeric scale.\"); } if (!this.pdfDocument) { return; } this._setScale(val, false); } get currentScaleValue() { return this._currentScaleValue; } set currentScaleValue(val) { if (!this.pdfDocument) { return; } this._setScale(val, false); } get pagesRotation() { return this._pagesRotation; } set pagesRotation(rotation) { if (!(0, _ui_utils.isValidRotation)(rotation)) { throw new Error(\"Invalid pages rotation angle.\"); } if (!this.pdfDocument) { return; } rotation %= 360; if (rotation < 0) { rotation += 360; } if (this._pagesRotation === rotation) { return; } this._pagesRotation = rotation; const pageNumber = this._currentPageNumber; const updateArgs = { rotation }; for (const pageView of this._pages) { pageView.update(updateArgs); } if (this._currentScaleValue) { this._setScale(this._currentScaleValue, true); } this.eventBus.dispatch(\"rotationchanging\", { source: this, pagesRotation: rotation, pageNumber }); if (this.defaultRenderingQueue) { this.update(); } } get firstPagePromise() { return this.pdfDocument ? this._firstPageCapability.promise : null; } get onePageRendered() { return this.pdfDocument ? this._onePageRenderedCapability.promise : null; } get pagesPromise() { return this.pdfDocument ? this._pagesCapability.promise : null; } #initializePermissions(permissions) { if (!permissions) { return; } if (!permissions.includes(_pdfjsLib.PermissionFlag.COPY)) { this.viewer.classList.add(ENABLE_PERMISSIONS_CLASS); } if (!permissions.includes(_pdfjsLib.PermissionFlag.MODIFY_ANNOTATIONS) && !permissions.includes(_pdfjsLib.PermissionFlag.FILL_INTERACTIVE_FORMS)) { if (this.#annotationMode === _pdfjsLib.AnnotationMode.ENABLE_FORMS) { this.#previousAnnotationMode = this.#annotationMode; this.#annotationMode = _pdfjsLib.AnnotationMode.ENABLE; } } } #onePageRenderedOrForceFetch() { if (document.visibilityState === \"hidden\" || !this.container.offsetParent || this._getVisiblePages().views.length === 0) { return Promise.resolve(); } const visibilityChangePromise = new Promise(resolve => { this.#onVisibilityChange = () => { if (document.visibilityState !== \"hidden\") { return; } resolve(); document.removeEventListener(\"visibilitychange\", this.#onVisibilityChange); this.#onVisibilityChange = null; }; document.addEventListener(\"visibilitychange\", this.#onVisibilityChange); }); return Promise.race([this._onePageRenderedCapability.promise, visibilityChangePromise]); } setDocument(pdfDocument) { if (this.pdfDocument) { this.eventBus.dispatch(\"pagesdestroy\", { source: this }); this._cancelRendering(); this._resetView(); if (this.findController) { this.findController.setDocument(null); } if (this._scriptingManager) { this._scriptingManager.setDocument(null); } } this.pdfDocument = pdfDocument; if (!pdfDocument) { return; } const isPureXfa = pdfDocument.isPureXfa; const pagesCount = pdfDocument.numPages; const firstPagePromise = pdfDocument.getPage(1); const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig(); const permissionsPromise = this.#enablePermissions ? pdfDocument.getPermissions() : Promise.resolve(); if (pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE) { console.warn(\"Forcing PAGE-scrolling for performance reasons, given the length of the document.\"); const mode = this._scrollMode = _ui_utils.ScrollMode.PAGE; this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode }); } this._pagesCapability.promise.then(() => { this.eventBus.dispatch(\"pagesloaded\", { source: this, pagesCount }); }, () => {}); this._onBeforeDraw = evt => { const pageView = this._pages[evt.pageNumber - 1]; if (!pageView) { return; } this.#buffer.push(pageView); }; this.eventBus._on(\"pagerender\", this._onBeforeDraw); this._onAfterDraw = evt => { if (evt.cssTransform || this._onePageRenderedCapability.settled) { return; } this._onePageRenderedCapability.resolve({ timestamp: evt.timestamp }); this.eventBus._off(\"pagerendered\", this._onAfterDraw); this._onAfterDraw = null; if (this.#onVisibilityChange) { document.removeEventListener(\"visibilitychange\", this.#onVisibilityChange); this.#onVisibilityChange = null; } }; this.eventBus._on(\"pagerendered\", this._onAfterDraw); Promise.all([firstPagePromise, permissionsPromise]).then(([firstPdfPage, permissions]) => { if (pdfDocument !== this.pdfDocument) { return; } this._firstPageCapability.resolve(firstPdfPage); this._optionalContentConfigPromise = optionalContentConfigPromise; this.#initializePermissions(permissions); const viewerElement = this._scrollMode === _ui_utils.ScrollMode.PAGE ? null : this.viewer; const scale = this.currentScale; const viewport = firstPdfPage.getViewport({ scale: scale * _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS }); const textLayerFactory = this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE && !isPureXfa ? this : null; const annotationLayerFactory = this.#annotationMode !== _pdfjsLib.AnnotationMode.DISABLE ? this : null; const xfaLayerFactory = isPureXfa ? this : null; for (let pageNum = 1; pageNum { if (this.findController) { this.findController.setDocument(pdfDocument); } if (this._scriptingManager) { this._scriptingManager.setDocument(pdfDocument); } if (pdfDocument.loadingParams.disableAutoFetch || pagesCount > PagesCountLimit.FORCE_LAZY_PAGE_INIT) { this._pagesCapability.resolve(); return; } let getPagesLeft = pagesCount - 1; if (getPagesLeft { console.error(`Unable to get page ${pageNum} to initialize viewer`, reason); if (--getPagesLeft === 0) { this._pagesCapability.resolve(); } }); if (pageNum % PagesCountLimit.PAUSE_EAGER_PAGE_INIT === 0) { await promise; } } }); this.eventBus.dispatch(\"pagesinit\", { source: this }); pdfDocument.getMetadata().then(({ info }) => { if (pdfDocument !== this.pdfDocument) { return; } if (info.Language) { this.viewer.lang = info.Language; } }); if (this.defaultRenderingQueue) { this.update(); } }).catch(reason => { console.error(\"Unable to initialize viewer\", reason); this._pagesCapability.reject(reason); }); } setPageLabels(labels) { if (!this.pdfDocument) { return; } if (!labels) { this._pageLabels = null; } else if (!(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)) { this._pageLabels = null; console.error(`setPageLabels: Invalid page labels.`); } else { this._pageLabels = labels; } for (let i = 0, ii = this._pages.length; i < ii; i++) { this._pages[i].setPageLabel(this._pageLabels?.[i] ?? null); } } _resetView() { this._pages = []; this._currentPageNumber = 1; this._currentScale = _ui_utils.UNKNOWN_SCALE; this._currentScaleValue = null; this._pageLabels = null; this.#buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE); this._location = null; this._pagesRotation = 0; this._optionalContentConfigPromise = null; this._firstPageCapability = (0, _pdfjsLib.createPromiseCapability)(); this._onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)(); this._pagesCapability = (0, _pdfjsLib.createPromiseCapability)(); this._scrollMode = _ui_utils.ScrollMode.VERTICAL; this._previousScrollMode = _ui_utils.ScrollMode.UNKNOWN; this._spreadMode = _ui_utils.SpreadMode.NONE; this.#scrollModePageState = { previousPageNumber: 1, scrollDown: true, pages: [] }; if (this._onBeforeDraw) { this.eventBus._off(\"pagerender\", this._onBeforeDraw); this._onBeforeDraw = null; } if (this._onAfterDraw) { this.eventBus._off(\"pagerendered\", this._onAfterDraw); this._onAfterDraw = null; } if (this.#onVisibilityChange) { document.removeEventListener(\"visibilitychange\", this.#onVisibilityChange); this.#onVisibilityChange = null; } this.viewer.textContent = \"\"; this._updateScrollMode(); this.viewer.removeAttribute(\"lang\"); this.viewer.classList.remove(ENABLE_PERMISSIONS_CLASS); if (this.#previousAnnotationMode !== null) { this.#annotationMode = this.#previousAnnotationMode; this.#previousAnnotationMode = null; } } #ensurePageViewVisible() { if (this._scrollMode !== _ui_utils.ScrollMode.PAGE) { throw new Error(\"#ensurePageViewVisible: Invalid scrollMode value.\"); } const pageNumber = this._currentPageNumber, state = this.#scrollModePageState, viewer = this.viewer; viewer.textContent = \"\"; state.pages.length = 0; if (this._spreadMode === _ui_utils.SpreadMode.NONE) { const pageView = this._pages[pageNumber - 1]; if (this.isInPresentationMode) { const spread = document.createElement(\"div\"); spread.className = \"spread\"; const dummyPage = document.createElement(\"div\"); dummyPage.className = \"dummyPage\"; dummyPage.style.height = `${this.container.clientHeight}px`; spread.appendChild(dummyPage); spread.appendChild(pageView.div); viewer.appendChild(spread); } else { viewer.appendChild(pageView.div); } state.pages.push(pageView); } else { const pageIndexSet = new Set(), parity = this._spreadMode - 1; if (pageNumber % 2 !== parity) { pageIndexSet.add(pageNumber - 1); pageIndexSet.add(pageNumber); } else { pageIndexSet.add(pageNumber - 2); pageIndexSet.add(pageNumber - 1); } const spread = document.createElement(\"div\"); spread.className = \"spread\"; for (const i of pageIndexSet) { const pageView = this._pages[i]; if (!pageView) { continue; } spread.appendChild(pageView.div); state.pages.push(pageView); } viewer.appendChild(spread); } state.scrollDown = pageNumber >= state.previousPageNumber; state.previousPageNumber = pageNumber; } _scrollUpdate() { if (this.pagesCount === 0) { return; } this.update(); } _scrollIntoView({ pageDiv, pageNumber, pageSpot = null }) { if (this._scrollMode === _ui_utils.ScrollMode.PAGE) { this._setCurrentPageNumber(pageNumber); this.#ensurePageViewVisible(); this.update(); } if (!pageSpot && !this.isInPresentationMode) { const left = pageDiv.offsetLeft + pageDiv.clientLeft; const right = left + pageDiv.clientWidth; const { scrollLeft, clientWidth } = this.container; if (this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL || left < scrollLeft || right > scrollLeft + clientWidth) { pageSpot = { left: 0, top: 0 }; } } (0, _ui_utils.scrollIntoView)(pageDiv, pageSpot); } #isSameScale(newScale) { if (this.isInPresentationMode && this.container.clientHeight !== this.#previousContainerHeight) { return false; } return newScale === this._currentScale || Math.abs(newScale - this._currentScale) < 1e-15; } _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) { this._currentScaleValue = newValue.toString(); if (this.#isSameScale(newScale)) { if (preset) { this.eventBus.dispatch(\"scalechanging\", { source: this, scale: newScale, presetValue: newValue }); } return; } this._doc.style.setProperty(\"--zoom-factor\", newScale); const updateArgs = { scale: newScale }; for (const pageView of this._pages) { pageView.update(updateArgs); } this._currentScale = newScale; if (!noScroll) { let page = this._currentPageNumber, dest; if (this._location && !(this.isInPresentationMode || this.isChangingPresentationMode)) { page = this._location.pageNumber; dest = [null, { name: \"XYZ\" }, this._location.left, this._location.top, null]; } this.scrollPageIntoView({ pageNumber: page, destArray: dest, allowNegativeOffset: true }); } this.eventBus.dispatch(\"scalechanging\", { source: this, scale: newScale, presetValue: preset ? newValue : undefined }); if (this.defaultRenderingQueue) { this.update(); } this.#previousContainerHeight = this.container.clientHeight; } get _pageWidthScaleFactor() { if (this._spreadMode !== _ui_utils.SpreadMode.NONE && this._scrollMode !== _ui_utils.ScrollMode.HORIZONTAL) { return 2; } return 1; } _setScale(value, noScroll = false) { let scale = parseFloat(value); if (scale > 0) { this._setScaleUpdatePages(scale, value, noScroll, false); } else { const currentPage = this._pages[this._currentPageNumber - 1]; if (!currentPage) { return; } let hPadding = _ui_utils.SCROLLBAR_PADDING, vPadding = _ui_utils.VERTICAL_PADDING; if (this.isInPresentationMode) { hPadding = vPadding = 4; } else if (this.removePageBorders) { hPadding = vPadding = 0; } if (this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL) { [hPadding, vPadding] = [vPadding, hPadding]; } const pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale / this._pageWidthScaleFactor; const pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale; switch (value) { case \"page-actual\": scale = 1; break; case \"page-width\": scale = pageWidthScale; break; case \"page-height\": scale = pageHeightScale; break; case \"page-fit\": scale = Math.min(pageWidthScale, pageHeightScale); break; case \"auto\": const horizontalScale = (0, _ui_utils.isPortraitOrientation)(currentPage) ? pageWidthScale : Math.min(pageHeightScale, pageWidthScale); scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale); break; default: console.error(`_setScale: \"${value}\" is an unknown zoom value.`); return; } this._setScaleUpdatePages(scale, value, noScroll, true); } } #resetCurrentPageView() { const pageNumber = this._currentPageNumber; if (this.isInPresentationMode) { this._setScale(this._currentScaleValue, true); } const pageView = this._pages[pageNumber - 1]; this._scrollIntoView({ pageDiv: pageView.div, pageNumber }); } pageLabelToPageNumber(label) { if (!this._pageLabels) { return null; } const i = this._pageLabels.indexOf(label); if (i < 0) { return null; } return i + 1; } scrollPageIntoView({ pageNumber, destArray = null, allowNegativeOffset = false, ignoreDestinationZoom = false }) { if (!this.pdfDocument) { return; } const pageView = Number.isInteger(pageNumber) && this._pages[pageNumber - 1]; if (!pageView) { console.error(`scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`); return; } if (this.isInPresentationMode || !destArray) { this._setCurrentPageNumber(pageNumber, true); return; } let x = 0, y = 0; let width = 0, height = 0, widthScale, heightScale; const changeOrientation = pageView.rotation % 180 !== 0; const pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS; const pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS; let scale = 0; switch (destArray[1].name) { case \"XYZ\": x = destArray[2]; y = destArray[3]; scale = destArray[4]; x = x !== null ? x : 0; y = y !== null ? y : pageHeight; break; case \"Fit\": case \"FitB\": scale = \"page-fit\"; break; case \"FitH\": case \"FitBH\": y = destArray[2]; scale = \"page-width\"; if (y === null && this._location) { x = this._location.left; y = this._location.top; } else if (typeof y !== \"number\" || y < 0) { y = pageHeight; } break; case \"FitV\": case \"FitBV\": x = destArray[2]; width = pageWidth; height = pageHeight; scale = \"page-height\"; break; case \"FitR\": x = destArray[2]; y = destArray[3]; width = destArray[4] - x; height = destArray[5] - y; const hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING; const vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING; widthScale = (this.container.clientWidth - hPadding) / width / _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS; heightScale = (this.container.clientHeight - vPadding) / height / _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS; scale = Math.min(Math.abs(widthScale), Math.abs(heightScale)); break; default: console.error(`scrollPageIntoView: \"${destArray[1].name}\" is not a valid destination type.`); return; } if (!ignoreDestinationZoom) { if (scale && scale !== this._currentScale) { this.currentScaleValue = scale; } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) { this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE; } } if (scale === \"page-fit\" && !destArray[4]) { this._scrollIntoView({ pageDiv: pageView.div, pageNumber }); return; } const boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)]; let left = Math.min(boundingRect[0][0], boundingRect[1][0]); let top = Math.min(boundingRect[0][1], boundingRect[1][1]); if (!allowNegativeOffset) { left = Math.max(left, 0); top = Math.max(top, 0); } this._scrollIntoView({ pageDiv: pageView.div, pageSpot: { left, top }, pageNumber }); } _updateLocation(firstPage) { const currentScale = this._currentScale; const currentScaleValue = this._currentScaleValue; const normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue; const pageNumber = firstPage.id; const currentPageView = this._pages[pageNumber - 1]; const container = this.container; const topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y); const intLeft = Math.round(topLeft[0]); const intTop = Math.round(topLeft[1]); let pdfOpenParams = `#page=${pageNumber}`; if (!this.isInPresentationMode) { pdfOpenParams += `&zoom=${normalizedScaleValue},${intLeft},${intTop}`; } this._location = { pageNumber, scale: normalizedScaleValue, top: intTop, left: intLeft, rotation: this._pagesRotation, pdfOpenParams }; } update() { const visible = this._getVisiblePages(); const visiblePages = visible.views, numVisiblePages = visiblePages.length; if (numVisiblePages === 0) { return; } const newCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * numVisiblePages + 1); this.#buffer.resize(newCacheSize, visible.ids); this.renderingQueue.renderHighestPriority(visible); const isSimpleLayout = this._spreadMode === _ui_utils.SpreadMode.NONE && (this._scrollMode === _ui_utils.ScrollMode.PAGE || this._scrollMode === _ui_utils.ScrollMode.VERTICAL); const currentId = this._currentPageNumber; let stillFullyVisible = false; for (const page of visiblePages) { if (page.percent < 100) { break; } if (page.id === currentId && isSimpleLayout) { stillFullyVisible = true; break; } } this._setCurrentPageNumber(stillFullyVisible ? currentId : visiblePages[0].id); this._updateLocation(visible.first); this.eventBus.dispatch(\"updateviewarea\", { source: this, location: this._location }); } containsElement(element) { return this.container.contains(element); } focus() { this.container.focus(); } get _isContainerRtl() { return getComputedStyle(this.container).direction === \"rtl\"; } get isInPresentationMode() { return this.presentationModeState === _ui_utils.PresentationModeState.FULLSCREEN; } get isChangingPresentationMode() { return this.presentationModeState === _ui_utils.PresentationModeState.CHANGING; } get isHorizontalScrollbarEnabled() { return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth; } get isVerticalScrollbarEnabled() { return this.isInPresentationMode ? false : this.container.scrollHeight > this.container.clientHeight; } _getVisiblePages() { const views = this._scrollMode === _ui_utils.ScrollMode.PAGE ? this.#scrollModePageState.pages : this._pages, horizontal = this._scrollMode === _ui_utils.ScrollMode.HORIZONTAL, rtl = horizontal && this._isContainerRtl; return (0, _ui_utils.getVisibleElements)({ scrollEl: this.container, views, sortByVisibility: true, horizontal, rtl }); } isPageVisible(pageNumber) { if (!this.pdfDocument) { return false; } if (!(Number.isInteger(pageNumber) && pageNumber > 0 && pageNumber 0 && pageNumber { this.renderingQueue.renderView(pageView); }); return true; } return false; } createTextLayerBuilder(textLayerDiv, pageIndex, viewport, enhanceTextSelection = false, eventBus, highlighter) { return new _text_layer_builder.TextLayerBuilder({ textLayerDiv, eventBus, pageIndex, viewport, enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection, highlighter }); } createTextHighlighter(pageIndex, eventBus) { return new _text_highlighter.TextHighlighter({ eventBus, pageIndex, findController: this.isInPresentationMode ? null : this.findController }); } createAnnotationLayerBuilder(pageDiv, pdfPage, annotationStorage = null, imageResourcesPath = \"\", renderForms = true, l10n = _l10n_utils.NullL10n, enableScripting = null, hasJSActionsPromise = null, mouseState = null, fieldObjectsPromise = null, annotationCanvasMap = null) { return new _annotation_layer_builder.AnnotationLayerBuilder({ pageDiv, pdfPage, annotationStorage: annotationStorage || this.pdfDocument?.annotationStorage, imageResourcesPath, renderForms, linkService: this.linkService, downloadManager: this.downloadManager, l10n, enableScripting: enableScripting ?? this.enableScripting, hasJSActionsPromise: hasJSActionsPromise || this.pdfDocument?.hasJSActions(), fieldObjectsPromise: fieldObjectsPromise || this.pdfDocument?.getFieldObjects(), mouseState: mouseState || this._scriptingManager?.mouseState, annotationCanvasMap }); } createXfaLayerBuilder(pageDiv, pdfPage, annotationStorage = null) { return new _xfa_layer_builder.XfaLayerBuilder({ pageDiv, pdfPage, annotationStorage: annotationStorage || this.pdfDocument?.annotationStorage, linkService: this.linkService }); } createStructTreeLayerBuilder(pdfPage) { return new _struct_tree_layer_builder.StructTreeLayerBuilder({ pdfPage }); } get hasEqualPageSizes() { const firstPageView = this._pages[0]; for (let i = 1, ii = this._pages.length; i < ii; ++i) { const pageView = this._pages[i]; if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) { return false; } } return true; } getPagesOverview() { return this._pages.map(pageView => { const viewport = pageView.pdfPage.getViewport({ scale: 1 }); if (!this.enablePrintAutoRotate || (0, _ui_utils.isPortraitOrientation)(viewport)) { return { width: viewport.width, height: viewport.height, rotation: viewport.rotation }; } return { width: viewport.height, height: viewport.width, rotation: (viewport.rotation - 90) % 360 }; }); } get optionalContentConfigPromise() { if (!this.pdfDocument) { return Promise.resolve(null); } if (!this._optionalContentConfigPromise) { return this.pdfDocument.getOptionalContentConfig(); } return this._optionalContentConfigPromise; } set optionalContentConfigPromise(promise) { if (!(promise instanceof Promise)) { throw new Error(`Invalid optionalContentConfigPromise: ${promise}`); } if (!this.pdfDocument) { return; } if (!this._optionalContentConfigPromise) { return; } this._optionalContentConfigPromise = promise; const updateArgs = { optionalContentConfigPromise: promise }; for (const pageView of this._pages) { pageView.update(updateArgs); } this.update(); this.eventBus.dispatch(\"optionalcontentconfigchanged\", { source: this, promise }); } get scrollMode() { return this._scrollMode; } set scrollMode(mode) { if (this._scrollMode === mode) { return; } if (!(0, _ui_utils.isValidScrollMode)(mode)) { throw new Error(`Invalid scroll mode: ${mode}`); } if (this.pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE) { return; } this._previousScrollMode = this._scrollMode; this._scrollMode = mode; this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode }); this._updateScrollMode(this._currentPageNumber); } _updateScrollMode(pageNumber = null) { const scrollMode = this._scrollMode, viewer = this.viewer; viewer.classList.toggle(\"scrollHorizontal\", scrollMode === _ui_utils.ScrollMode.HORIZONTAL); viewer.classList.toggle(\"scrollWrapped\", scrollMode === _ui_utils.ScrollMode.WRAPPED); if (!this.pdfDocument || !pageNumber) { return; } if (scrollMode === _ui_utils.ScrollMode.PAGE) { this.#ensurePageViewVisible(); } else if (this._previousScrollMode === _ui_utils.ScrollMode.PAGE) { this._updateSpreadMode(); } if (this._currentScaleValue && isNaN(this._currentScaleValue)) { this._setScale(this._currentScaleValue, true); } this._setCurrentPageNumber(pageNumber, true); this.update(); } get spreadMode() { return this._spreadMode; } set spreadMode(mode) { if (this._spreadMode === mode) { return; } if (!(0, _ui_utils.isValidSpreadMode)(mode)) { throw new Error(`Invalid spread mode: ${mode}`); } this._spreadMode = mode; this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode }); this._updateSpreadMode(this._currentPageNumber); } _updateSpreadMode(pageNumber = null) { if (!this.pdfDocument) { return; } const viewer = this.viewer, pages = this._pages; if (this._scrollMode === _ui_utils.ScrollMode.PAGE) { this.#ensurePageViewVisible(); } else { viewer.textContent = \"\"; if (this._spreadMode === _ui_utils.SpreadMode.NONE) { for (const pageView of this._pages) { viewer.appendChild(pageView.div); } } else { const parity = this._spreadMode - 1; let spread = null; for (let i = 0, ii = pages.length; i < ii; ++i) { if (spread === null) { spread = document.createElement(\"div\"); spread.className = \"spread\"; viewer.appendChild(spread); } else if (i % 2 === parity) { spread = spread.cloneNode(false); viewer.appendChild(spread); } spread.appendChild(pages[i].div); } } } if (!pageNumber) { return; } if (this._currentScaleValue && isNaN(this._currentScaleValue)) { this._setScale(this._currentScaleValue, true); } this._setCurrentPageNumber(pageNumber, true); this.update(); } _getPageAdvance(currentPageNumber, previous = false) { switch (this._scrollMode) { case _ui_utils.ScrollMode.WRAPPED: { const { views } = this._getVisiblePages(), pageLayout = new Map(); for (const { id, y, percent, widthPercent } of views) { if (percent === 0 || widthPercent < 100) { continue; } let yArray = pageLayout.get(y); if (!yArray) { pageLayout.set(y, yArray ||= []); } yArray.push(id); } for (const yArray of pageLayout.values()) { const currentIndex = yArray.indexOf(currentPageNumber); if (currentIndex === -1) { continue; } const numPages = yArray.length; if (numPages === 1) { break; } if (previous) { for (let i = currentIndex - 1, ii = 0; i >= ii; i--) { const currentId = yArray[i], expectedId = yArray[i + 1] - 1; if (currentId < expectedId) { return currentPageNumber - expectedId; } } } else { for (let i = currentIndex + 1, ii = numPages; i < ii; i++) { const currentId = yArray[i], expectedId = yArray[i - 1] + 1; if (currentId > expectedId) { return expectedId - currentPageNumber; } } } if (previous) { const firstId = yArray[0]; if (firstId < currentPageNumber) { return currentPageNumber - firstId + 1; } } else { const lastId = yArray[numPages - 1]; if (lastId > currentPageNumber) { return lastId - currentPageNumber + 1; } } break; } break; } case _ui_utils.ScrollMode.HORIZONTAL: { break; } case _ui_utils.ScrollMode.PAGE: case _ui_utils.ScrollMode.VERTICAL: { if (this._spreadMode === _ui_utils.SpreadMode.NONE) { break; } const parity = this._spreadMode - 1; if (previous && currentPageNumber % 2 !== parity) { break; } else if (!previous && currentPageNumber % 2 === parity) { break; } const { views } = this._getVisiblePages(), expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1; for (const { id, percent, widthPercent } of views) { if (id !== expectedId) { continue; } if (percent > 0 && widthPercent === 100) { return 2; } break; } break; } } return 1; } nextPage() { const currentPageNumber = this._currentPageNumber, pagesCount = this.pagesCount; if (currentPageNumber >= pagesCount) { return false; } const advance = this._getPageAdvance(currentPageNumber, false) || 1; this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount); return true; } previousPage() { const currentPageNumber = this._currentPageNumber; if (currentPageNumber 0 && newScale < _ui_utils.MAX_SCALE); this.currentScaleValue = newScale; } decreaseScale(steps = 1) { let newScale = this._currentScale; do { newScale = (newScale / _ui_utils.DEFAULT_SCALE_DELTA).toFixed(2); newScale = Math.floor(newScale * 10) / 10; newScale = Math.max(_ui_utils.MIN_SCALE, newScale); } while (--steps > 0 && newScale > _ui_utils.MIN_SCALE); this.currentScaleValue = newScale; } } exports.BaseViewer = BaseViewer; /***/ }), /* 29 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.AnnotationLayerBuilder = void 0; var _pdfjsLib = __webpack_require__(5); var _l10n_utils = __webpack_require__(30); class AnnotationLayerBuilder { constructor({ pageDiv, pdfPage, linkService, downloadManager, annotationStorage = null, imageResourcesPath = \"\", renderForms = true, l10n = _l10n_utils.NullL10n, enableScripting = false, hasJSActionsPromise = null, fieldObjectsPromise = null, mouseState = null, annotationCanvasMap = null }) { this.pageDiv = pageDiv; this.pdfPage = pdfPage; this.linkService = linkService; this.downloadManager = downloadManager; this.imageResourcesPath = imageResourcesPath; this.renderForms = renderForms; this.l10n = l10n; this.annotationStorage = annotationStorage; this.enableScripting = enableScripting; this._hasJSActionsPromise = hasJSActionsPromise; this._fieldObjectsPromise = fieldObjectsPromise; this._mouseState = mouseState; this._annotationCanvasMap = annotationCanvasMap; this.div = null; this._cancelled = false; } async render(viewport, intent = \"display\") { const [annotations, hasJSActions = false, fieldObjects = null] = await Promise.all([this.pdfPage.getAnnotations({ intent }), this._hasJSActionsPromise, this._fieldObjectsPromise]); if (this._cancelled || annotations.length === 0) { return; } const parameters = { viewport: viewport.clone({ dontFlip: true }), div: this.div, annotations, page: this.pdfPage, imageResourcesPath: this.imageResourcesPath, renderForms: this.renderForms, linkService: this.linkService, downloadManager: this.downloadManager, annotationStorage: this.annotationStorage, enableScripting: this.enableScripting, hasJSActions, fieldObjects, mouseState: this._mouseState, annotationCanvasMap: this._annotationCanvasMap }; if (this.div) { _pdfjsLib.AnnotationLayer.update(parameters); } else { this.div = document.createElement(\"div\"); this.div.className = \"annotationLayer\"; this.pageDiv.appendChild(this.div); parameters.div = this.div; _pdfjsLib.AnnotationLayer.render(parameters); this.l10n.translate(this.div); } } cancel() { this._cancelled = true; } hide() { if (!this.div) { return; } this.div.hidden = true; } } exports.AnnotationLayerBuilder = AnnotationLayerBuilder; /***/ }), /* 30 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.NullL10n = void 0; exports.fixupLangCode = fixupLangCode; exports.getL10nFallback = getL10nFallback; const DEFAULT_L10N_STRINGS = { of_pages: \"of {{pagesCount}}\", page_of_pages: \"({{pageNumber}} of {{pagesCount}})\", document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\", document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\", document_properties_date_string: \"{{date}}, {{time}}\", document_properties_page_size_unit_inches: \"in\", document_properties_page_size_unit_millimeters: \"mm\", document_properties_page_size_orientation_portrait: \"portrait\", document_properties_page_size_orientation_landscape: \"landscape\", document_properties_page_size_name_a3: \"A3\", document_properties_page_size_name_a4: \"A4\", document_properties_page_size_name_letter: \"Letter\", document_properties_page_size_name_legal: \"Legal\", document_properties_page_size_dimension_string: \"{{width}} × {{height}} {{unit}} ({{orientation}})\", document_properties_page_size_dimension_name_string: \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\", document_properties_linearized_yes: \"Yes\", document_properties_linearized_no: \"No\", print_progress_percent: \"{{progress}}%\", \"toggle_sidebar.title\": \"Toggle Sidebar\", \"toggle_sidebar_notification2.title\": \"Toggle Sidebar (document contains outline/attachments/layers)\", additional_layers: \"Additional Layers\", page_landmark: \"Page {{page}}\", thumb_page_title: \"Page {{page}}\", thumb_page_canvas: \"Thumbnail of Page {{page}}\", find_reached_top: \"Reached top of document, continued from bottom\", find_reached_bottom: \"Reached end of document, continued from top\", \"find_match_count[one]\": \"{{current}} of {{total}} match\", \"find_match_count[other]\": \"{{current}} of {{total}} matches\", \"find_match_count_limit[one]\": \"More than {{limit}} match\", \"find_match_count_limit[other]\": \"More than {{limit}} matches\", find_not_found: \"Phrase not found\", error_version_info: \"PDF.js v{{version}} (build: {{build}})\", error_message: \"Message: {{message}}\", error_stack: \"Stack: {{stack}}\", error_file: \"File: {{file}}\", error_line: \"Line: {{line}}\", rendering_error: \"An error occurred while rendering the page.\", page_scale_width: \"Page Width\", page_scale_fit: \"Page Fit\", page_scale_auto: \"Automatic Zoom\", page_scale_actual: \"Actual Size\", page_scale_percent: \"{{scale}}%\", loading: \"Loading…\", loading_error: \"An error occurred while loading the PDF.\", invalid_file_error: \"Invalid or corrupted PDF file.\", missing_file_error: \"Missing PDF file.\", unexpected_response_error: \"Unexpected server response.\", printing_not_supported: \"Warning: Printing is not fully supported by this browser.\", printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\", web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\" }; function getL10nFallback(key, args) { switch (key) { case \"find_match_count\": key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`; break; case \"find_match_count_limit\": key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`; break; } return DEFAULT_L10N_STRINGS[key] || \"\"; } const PARTIAL_LANG_CODES = { en: \"en-US\", es: \"es-ES\", fy: \"fy-NL\", ga: \"ga-IE\", gu: \"gu-IN\", hi: \"hi-IN\", hy: \"hy-AM\", nb: \"nb-NO\", ne: \"ne-NP\", nn: \"nn-NO\", pa: \"pa-IN\", pt: \"pt-PT\", sv: \"sv-SE\", zh: \"zh-CN\" }; function fixupLangCode(langCode) { return PARTIAL_LANG_CODES[langCode?.toLowerCase()] || langCode; } function formatL10nValue(text, args) { if (!args) { return text; } return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => { return name in args ? args[name] : \"{{\" + name + \"}}\"; }); } const NullL10n = { async getLanguage() { return \"en-us\"; }, async getDirection() { return \"ltr\"; }, async get(key, args = null, fallback = getL10nFallback(key, args)) { return formatL10nValue(fallback, args); }, async translate(element) {} }; exports.NullL10n = NullL10n; /***/ }), /* 31 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFPageView = void 0; var _pdfjsLib = __webpack_require__(5); var _ui_utils = __webpack_require__(3); var _app_options = __webpack_require__(1); var _l10n_utils = __webpack_require__(30); const MAX_CANVAS_PIXELS = _app_options.compatibilityParams.maxCanvasPixels || 16777216; class PDFPageView { #annotationMode = _pdfjsLib.AnnotationMode.ENABLE_FORMS; constructor(options) { const container = options.container; const defaultViewport = options.defaultViewport; this.id = options.id; this.renderingId = \"page\" + this.id; this.pdfPage = null; this.pageLabel = null; this.rotation = 0; this.scale = options.scale || _ui_utils.DEFAULT_SCALE; this.viewport = defaultViewport; this.pdfPageRotate = defaultViewport.rotation; this._optionalContentConfigPromise = options.optionalContentConfigPromise || null; this.hasRestrictedScaling = false; this.textLayerMode = options.textLayerMode ?? _ui_utils.TextLayerMode.ENABLE; this.#annotationMode = options.annotationMode ?? _pdfjsLib.AnnotationMode.ENABLE_FORMS; this.imageResourcesPath = options.imageResourcesPath || \"\"; this.useOnlyCssZoom = options.useOnlyCssZoom || false; this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS; this.eventBus = options.eventBus; this.renderingQueue = options.renderingQueue; this.textLayerFactory = options.textLayerFactory; this.annotationLayerFactory = options.annotationLayerFactory; this.xfaLayerFactory = options.xfaLayerFactory; this.textHighlighter = options.textHighlighterFactory?.createTextHighlighter(this.id - 1, this.eventBus); this.structTreeLayerFactory = options.structTreeLayerFactory; this.renderer = options.renderer || _ui_utils.RendererType.CANVAS; this.l10n = options.l10n || _l10n_utils.NullL10n; this.paintTask = null; this.paintedViewportMap = new WeakMap(); this.renderingState = _ui_utils.RenderingStates.INITIAL; this.resume = null; this._renderError = null; this._isStandalone = !this.renderingQueue?.hasViewer(); this._annotationCanvasMap = null; this.annotationLayer = null; this.textLayer = null; this.zoomLayer = null; this.xfaLayer = null; this.structTreeLayer = null; const div = document.createElement(\"div\"); div.className = \"page\"; div.style.width = Math.floor(this.viewport.width) + \"px\"; div.style.height = Math.floor(this.viewport.height) + \"px\"; div.setAttribute(\"data-page-number\", this.id); div.setAttribute(\"role\", \"region\"); this.l10n.get(\"page_landmark\", { page: this.id }).then(msg => { div.setAttribute(\"aria-label\", msg); }); this.div = div; container?.appendChild(div); } setPdfPage(pdfPage) { this.pdfPage = pdfPage; this.pdfPageRotate = pdfPage.rotate; const totalRotation = (this.rotation + this.pdfPageRotate) % 360; this.viewport = pdfPage.getViewport({ scale: this.scale * _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS, rotation: totalRotation }); this.reset(); } destroy() { this.reset(); if (this.pdfPage) { this.pdfPage.cleanup(); } } async _renderAnnotationLayer() { let error = null; try { await this.annotationLayer.render(this.viewport, \"display\"); } catch (ex) { error = ex; } finally { this.eventBus.dispatch(\"annotationlayerrendered\", { source: this, pageNumber: this.id, error }); } } async _renderXfaLayer() { let error = null; try { const result = await this.xfaLayer.render(this.viewport, \"display\"); if (this.textHighlighter) { this._buildXfaTextContentItems(result.textDivs); } } catch (ex) { error = ex; } finally { this.eventBus.dispatch(\"xfalayerrendered\", { source: this, pageNumber: this.id, error }); } } async _buildXfaTextContentItems(textDivs) { const text = await this.pdfPage.getTextContent(); const items = []; for (const item of text.items) { items.push(item.str); } this.textHighlighter.setTextMapping(textDivs, items); this.textHighlighter.enable(); } _resetZoomLayer(removeFromDOM = false) { if (!this.zoomLayer) { return; } const zoomLayerCanvas = this.zoomLayer.firstChild; this.paintedViewportMap.delete(zoomLayerCanvas); zoomLayerCanvas.width = 0; zoomLayerCanvas.height = 0; if (removeFromDOM) { this.zoomLayer.remove(); } this.zoomLayer = null; } reset({ keepZoomLayer = false, keepAnnotationLayer = false, keepXfaLayer = false } = {}) { this.cancelRendering({ keepAnnotationLayer, keepXfaLayer }); this.renderingState = _ui_utils.RenderingStates.INITIAL; const div = this.div; div.style.width = Math.floor(this.viewport.width) + \"px\"; div.style.height = Math.floor(this.viewport.height) + \"px\"; const childNodes = div.childNodes, zoomLayerNode = keepZoomLayer && this.zoomLayer || null, annotationLayerNode = keepAnnotationLayer && this.annotationLayer?.div || null, xfaLayerNode = keepXfaLayer && this.xfaLayer?.div || null; for (let i = childNodes.length - 1; i >= 0; i--) { const node = childNodes[i]; switch (node) { case zoomLayerNode: case annotationLayerNode: case xfaLayerNode: continue; } node.remove(); } div.removeAttribute(\"data-loaded\"); if (annotationLayerNode) { this.annotationLayer.hide(); } if (xfaLayerNode) { this.xfaLayer.hide(); } if (!zoomLayerNode) { if (this.canvas) { this.paintedViewportMap.delete(this.canvas); this.canvas.width = 0; this.canvas.height = 0; delete this.canvas; } this._resetZoomLayer(); } if (this.svg) { this.paintedViewportMap.delete(this.svg); delete this.svg; } this.loadingIconDiv = document.createElement(\"div\"); this.loadingIconDiv.className = \"loadingIcon notVisible\"; if (this._isStandalone) { this.toggleLoadingIconSpinner(true); } this.loadingIconDiv.setAttribute(\"role\", \"img\"); this.l10n.get(\"loading\").then(msg => { this.loadingIconDiv?.setAttribute(\"aria-label\", msg); }); div.appendChild(this.loadingIconDiv); } update({ scale = 0, rotation = null, optionalContentConfigPromise = null }) { this.scale = scale || this.scale; if (typeof rotation === \"number\") { this.rotation = rotation; } if (optionalContentConfigPromise instanceof Promise) { this._optionalContentConfigPromise = optionalContentConfigPromise; } const totalRotation = (this.rotation + this.pdfPageRotate) % 360; this.viewport = this.viewport.clone({ scale: this.scale * _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS, rotation: totalRotation }); if (this._isStandalone) { const { style } = document.documentElement; style.setProperty(\"--zoom-factor\", this.scale); } if (this.svg) { this.cssTransform({ target: this.svg, redrawAnnotationLayer: true, redrawXfaLayer: true }); this.eventBus.dispatch(\"pagerendered\", { source: this, pageNumber: this.id, cssTransform: true, timestamp: performance.now(), error: this._renderError }); return; } let isScalingRestricted = false; if (this.canvas && this.maxCanvasPixels > 0) { const outputScale = this.outputScale; if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > this.maxCanvasPixels) { isScalingRestricted = true; } } if (this.canvas) { if (this.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) { this.cssTransform({ target: this.canvas, redrawAnnotationLayer: true, redrawXfaLayer: true }); this.eventBus.dispatch(\"pagerendered\", { source: this, pageNumber: this.id, cssTransform: true, timestamp: performance.now(), error: this._renderError }); return; } if (!this.zoomLayer && !this.canvas.hidden) { this.zoomLayer = this.canvas.parentNode; this.zoomLayer.style.position = \"absolute\"; } } if (this.zoomLayer) { this.cssTransform({ target: this.zoomLayer.firstChild }); } this.reset({ keepZoomLayer: true, keepAnnotationLayer: true, keepXfaLayer: true }); } cancelRendering({ keepAnnotationLayer = false, keepXfaLayer = false } = {}) { if (this.paintTask) { this.paintTask.cancel(); this.paintTask = null; } this.resume = null; if (this.textLayer) { this.textLayer.cancel(); this.textLayer = null; } if (this.annotationLayer && (!keepAnnotationLayer || !this.annotationLayer.div)) { this.annotationLayer.cancel(); this.annotationLayer = null; this._annotationCanvasMap = null; } if (this.xfaLayer && (!keepXfaLayer || !this.xfaLayer.div)) { this.xfaLayer.cancel(); this.xfaLayer = null; this.textHighlighter?.disable(); } if (this._onTextLayerRendered) { this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered); this._onTextLayerRendered = null; } } cssTransform({ target, redrawAnnotationLayer = false, redrawXfaLayer = false }) { const width = this.viewport.width; const height = this.viewport.height; const div = this.div; target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + \"px\"; target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + \"px\"; const relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation; const absRotation = Math.abs(relativeRotation); let scaleX = 1, scaleY = 1; if (absRotation === 90 || absRotation === 270) { scaleX = height / width; scaleY = width / height; } target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`; if (this.textLayer) { const textLayerViewport = this.textLayer.viewport; const textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation; const textAbsRotation = Math.abs(textRelativeRotation); let scale = width / textLayerViewport.width; if (textAbsRotation === 90 || textAbsRotation === 270) { scale = width / textLayerViewport.height; } const textLayerDiv = this.textLayer.textLayerDiv; let transX, transY; switch (textAbsRotation) { case 0: transX = transY = 0; break; case 90: transX = 0; transY = \"-\" + textLayerDiv.style.height; break; case 180: transX = \"-\" + textLayerDiv.style.width; transY = \"-\" + textLayerDiv.style.height; break; case 270: transX = \"-\" + textLayerDiv.style.width; transY = 0; break; default: console.error(\"Bad rotation value.\"); break; } textLayerDiv.style.transform = `rotate(${textAbsRotation}deg) ` + `scale(${scale}) ` + `translate(${transX}, ${transY})`; textLayerDiv.style.transformOrigin = \"0% 0%\"; } if (redrawAnnotationLayer && this.annotationLayer) { this._renderAnnotationLayer(); } if (redrawXfaLayer && this.xfaLayer) { this._renderXfaLayer(); } } get width() { return this.viewport.width; } get height() { return this.viewport.height; } getPagePoint(x, y) { return this.viewport.convertToPdfPoint(x, y); } toggleLoadingIconSpinner(viewVisible = false) { this.loadingIconDiv?.classList.toggle(\"notVisible\", !viewVisible); } draw() { if (this.renderingState !== _ui_utils.RenderingStates.INITIAL) { console.error(\"Must be in new state before drawing\"); this.reset(); } const { div, pdfPage } = this; if (!pdfPage) { this.renderingState = _ui_utils.RenderingStates.FINISHED; if (this.loadingIconDiv) { this.loadingIconDiv.remove(); delete this.loadingIconDiv; } return Promise.reject(new Error(\"pdfPage is not loaded\")); } this.renderingState = _ui_utils.RenderingStates.RUNNING; const canvasWrapper = document.createElement(\"div\"); canvasWrapper.style.width = div.style.width; canvasWrapper.style.height = div.style.height; canvasWrapper.classList.add(\"canvasWrapper\"); if (this.annotationLayer?.div) { div.insertBefore(canvasWrapper, this.annotationLayer.div); } else { div.appendChild(canvasWrapper); } let textLayer = null; if (this.textLayerMode !== _ui_utils.TextLayerMode.DISABLE && this.textLayerFactory) { const textLayerDiv = document.createElement(\"div\"); textLayerDiv.className = \"textLayer\"; textLayerDiv.style.width = canvasWrapper.style.width; textLayerDiv.style.height = canvasWrapper.style.height; if (this.annotationLayer?.div) { div.insertBefore(textLayerDiv, this.annotationLayer.div); } else { div.appendChild(textLayerDiv); } textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.textLayerMode === _ui_utils.TextLayerMode.ENABLE_ENHANCE, this.eventBus, this.textHighlighter); } this.textLayer = textLayer; if (this.#annotationMode !== _pdfjsLib.AnnotationMode.DISABLE && this.annotationLayerFactory) { this._annotationCanvasMap ||= new Map(); this.annotationLayer ||= this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, null, this.imageResourcesPath, this.#annotationMode === _pdfjsLib.AnnotationMode.ENABLE_FORMS, this.l10n, null, null, null, null, this._annotationCanvasMap); } if (this.xfaLayer?.div) { div.appendChild(this.xfaLayer.div); } let renderContinueCallback = null; if (this.renderingQueue) { renderContinueCallback = cont => { if (!this.renderingQueue.isHighestPriority(this)) { this.renderingState = _ui_utils.RenderingStates.PAUSED; this.resume = () => { this.renderingState = _ui_utils.RenderingStates.RUNNING; cont(); }; return; } cont(); }; } const finishPaintTask = async (error = null) => { if (paintTask === this.paintTask) { this.paintTask = null; } if (error instanceof _pdfjsLib.RenderingCancelledException) { this._renderError = null; return; } this._renderError = error; this.renderingState = _ui_utils.RenderingStates.FINISHED; if (this.loadingIconDiv) { this.loadingIconDiv.remove(); delete this.loadingIconDiv; } this._resetZoomLayer(true); this.eventBus.dispatch(\"pagerendered\", { source: this, pageNumber: this.id, cssTransform: false, timestamp: performance.now(), error: this._renderError }); if (error) { throw error; } }; const paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper); paintTask.onRenderContinue = renderContinueCallback; this.paintTask = paintTask; const resultPromise = paintTask.promise.then(() => { return finishPaintTask(null).then(() => { if (textLayer) { const readableStream = pdfPage.streamTextContent({ includeMarkedContent: true }); textLayer.setTextContentStream(readableStream); textLayer.render(); } if (this.annotationLayer) { this._renderAnnotationLayer(); } }); }, function (reason) { return finishPaintTask(reason); }); if (this.xfaLayerFactory) { if (!this.xfaLayer) { this.xfaLayer = this.xfaLayerFactory.createXfaLayerBuilder(div, pdfPage, null); } this._renderXfaLayer(); } if (this.structTreeLayerFactory && this.textLayer && this.canvas) { this._onTextLayerRendered = event => { if (event.pageNumber !== this.id) { return; } this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered); this._onTextLayerRendered = null; if (!this.canvas) { return; } this.pdfPage.getStructTree().then(tree => { if (!tree) { return; } if (!this.canvas) { return; } const treeDom = this.structTreeLayer.render(tree); treeDom.classList.add(\"structTree\"); this.canvas.appendChild(treeDom); }); }; this.eventBus._on(\"textlayerrendered\", this._onTextLayerRendered); this.structTreeLayer = this.structTreeLayerFactory.createStructTreeLayerBuilder(pdfPage); } div.setAttribute(\"data-loaded\", true); this.eventBus.dispatch(\"pagerender\", { source: this, pageNumber: this.id }); return resultPromise; } paintOnCanvas(canvasWrapper) { const renderCapability = (0, _pdfjsLib.createPromiseCapability)(); const result = { promise: renderCapability.promise, onRenderContinue(cont) { cont(); }, cancel() { renderTask.cancel(); } }; const viewport = this.viewport; const canvas = document.createElement(\"canvas\"); canvas.hidden = true; let isCanvasHidden = true; const showCanvas = function () { if (isCanvasHidden) { canvas.hidden = false; isCanvasHidden = false; } }; canvasWrapper.appendChild(canvas); this.canvas = canvas; canvas.mozOpaque = true; const ctx = canvas.getContext(\"2d\", { alpha: false }); const outputScale = this.outputScale = new _ui_utils.OutputScale(); if (this.useOnlyCssZoom) { const actualSizeViewport = viewport.clone({ scale: _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS }); outputScale.sx *= actualSizeViewport.width / viewport.width; outputScale.sy *= actualSizeViewport.height / viewport.height; } if (this.maxCanvasPixels > 0) { const pixelsInViewport = viewport.width * viewport.height; const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport); if (outputScale.sx > maxScale || outputScale.sy > maxScale) { outputScale.sx = maxScale; outputScale.sy = maxScale; this.hasRestrictedScaling = true; } else { this.hasRestrictedScaling = false; } } const sfx = (0, _ui_utils.approximateFraction)(outputScale.sx); const sfy = (0, _ui_utils.approximateFraction)(outputScale.sy); canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]); canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]); canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + \"px\"; canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + \"px\"; this.paintedViewportMap.set(canvas, viewport); const transform = outputScale.scaled ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0] : null; const renderContext = { canvasContext: ctx, transform, viewport: this.viewport, annotationMode: this.#annotationMode, optionalContentConfigPromise: this._optionalContentConfigPromise, annotationCanvasMap: this._annotationCanvasMap }; const renderTask = this.pdfPage.render(renderContext); renderTask.onContinue = function (cont) { showCanvas(); if (result.onRenderContinue) { result.onRenderContinue(cont); } else { cont(); } }; renderTask.promise.then(function () { showCanvas(); renderCapability.resolve(); }, function (error) { showCanvas(); renderCapability.reject(error); }); return result; } paintOnSvg(wrapper) { let cancelled = false; const ensureNotCancelled = () => { if (cancelled) { throw new _pdfjsLib.RenderingCancelledException(`Rendering cancelled, page ${this.id}`, \"svg\"); } }; const pdfPage = this.pdfPage; const actualSizeViewport = this.viewport.clone({ scale: _pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS }); const promise = pdfPage.getOperatorList({ annotationMode: this.#annotationMode }).then(opList => { ensureNotCancelled(); const svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs); return svgGfx.getSVG(opList, actualSizeViewport).then(svg => { ensureNotCancelled(); this.svg = svg; this.paintedViewportMap.set(svg, actualSizeViewport); svg.style.width = wrapper.style.width; svg.style.height = wrapper.style.height; this.renderingState = _ui_utils.RenderingStates.FINISHED; wrapper.appendChild(svg); }); }); return { promise, onRenderContinue(cont) { cont(); }, cancel() { cancelled = true; } }; } setPageLabel(label) { this.pageLabel = typeof label === \"string\" ? label : null; if (this.pageLabel !== null) { this.div.setAttribute(\"data-page-label\", this.pageLabel); } else { this.div.removeAttribute(\"data-page-label\"); } } } exports.PDFPageView = PDFPageView; /***/ }), /* 32 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.StructTreeLayerBuilder = void 0; const PDF_ROLE_TO_HTML_ROLE = { Document: null, DocumentFragment: null, Part: \"group\", Sect: \"group\", Div: \"group\", Aside: \"note\", NonStruct: \"none\", P: null, H: \"heading\", Title: null, FENote: \"note\", Sub: \"group\", Lbl: null, Span: null, Em: null, Strong: null, Link: \"link\", Annot: \"note\", Form: \"form\", Ruby: null, RB: null, RT: null, RP: null, Warichu: null, WT: null, WP: null, L: \"list\", LI: \"listitem\", LBody: null, Table: \"table\", TR: \"row\", TH: \"columnheader\", TD: \"cell\", THead: \"columnheader\", TBody: null, TFoot: null, Caption: null, Figure: \"figure\", Formula: null, Artifact: null }; const HEADING_PATTERN = /^H(\\d+)$/; class StructTreeLayerBuilder { constructor({ pdfPage }) { this.pdfPage = pdfPage; } render(structTree) { return this._walk(structTree); } _setAttributes(structElement, htmlElement) { if (structElement.alt !== undefined) { htmlElement.setAttribute(\"aria-label\", structElement.alt); } if (structElement.id !== undefined) { htmlElement.setAttribute(\"aria-owns\", structElement.id); } if (structElement.lang !== undefined) { htmlElement.setAttribute(\"lang\", structElement.lang); } } _walk(node) { if (!node) { return null; } const element = document.createElement(\"span\"); if (\"role\" in node) { const { role } = node; const match = role.match(HEADING_PATTERN); if (match) { element.setAttribute(\"role\", \"heading\"); element.setAttribute(\"aria-level\", match[1]); } else if (PDF_ROLE_TO_HTML_ROLE[role]) { element.setAttribute(\"role\", PDF_ROLE_TO_HTML_ROLE[role]); } } this._setAttributes(node, element); if (node.children) { if (node.children.length === 1 && \"id\" in node.children[0]) { this._setAttributes(node.children[0], element); } else { for (const kid of node.children) { element.appendChild(this._walk(kid)); } } } return element; } } exports.StructTreeLayerBuilder = StructTreeLayerBuilder; /***/ }), /* 33 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.TextHighlighter = void 0; class TextHighlighter { constructor({ findController, eventBus, pageIndex }) { this.findController = findController; this.matches = []; this.eventBus = eventBus; this.pageIdx = pageIndex; this._onUpdateTextLayerMatches = null; this.textDivs = null; this.textContentItemsStr = null; this.enabled = false; } setTextMapping(divs, texts) { this.textDivs = divs; this.textContentItemsStr = texts; } enable() { if (!this.textDivs || !this.textContentItemsStr) { throw new Error(\"Text divs and strings have not been set.\"); } if (this.enabled) { throw new Error(\"TextHighlighter is already enabled.\"); } this.enabled = true; if (!this._onUpdateTextLayerMatches) { this._onUpdateTextLayerMatches = evt => { if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) { this._updateMatches(); } }; this.eventBus._on(\"updatetextlayermatches\", this._onUpdateTextLayerMatches); } this._updateMatches(); } disable() { if (!this.enabled) { return; } this.enabled = false; if (this._onUpdateTextLayerMatches) { this.eventBus._off(\"updatetextlayermatches\", this._onUpdateTextLayerMatches); this._onUpdateTextLayerMatches = null; } } _convertMatches(matches, matchesLength) { if (!matches) { return []; } const { textContentItemsStr } = this; let i = 0, iIndex = 0; const end = textContentItemsStr.length - 1; const result = []; for (let m = 0, mm = matches.length; m < mm; m++) { let matchIdx = matches[m]; while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) { iIndex += textContentItemsStr[i].length; i++; } if (i === textContentItemsStr.length) { console.error(\"Could not find a matching mapping\"); } const match = { begin: { divIdx: i, offset: matchIdx - iIndex } }; matchIdx += matchesLength[m]; while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) { iIndex += textContentItemsStr[i].length; i++; } match.end = { divIdx: i, offset: matchIdx - iIndex }; result.push(match); } return result; } _renderMatches(matches) { if (matches.length === 0) { return; } const { findController, pageIdx } = this; const { textContentItemsStr, textDivs } = this; const isSelectedPage = pageIdx === findController.selected.pageIdx; const selectedMatchIdx = findController.selected.matchIdx; const highlightAll = findController.state.highlightAll; let prevEnd = null; const infinity = { divIdx: -1, offset: undefined }; function beginText(begin, className) { const divIdx = begin.divIdx; textDivs[divIdx].textContent = \"\"; return appendTextToDiv(divIdx, 0, begin.offset, className); } function appendTextToDiv(divIdx, fromOffset, toOffset, className) { let div = textDivs[divIdx]; if (div.nodeType === Node.TEXT_NODE) { const span = document.createElement(\"span\"); div.parentNode.insertBefore(span, div); span.appendChild(div); textDivs[divIdx] = span; div = span; } const content = textContentItemsStr[divIdx].substring(fromOffset, toOffset); const node = document.createTextNode(content); if (className) { const span = document.createElement(\"span\"); span.className = `${className} appended`; span.appendChild(node); div.appendChild(span); return className.includes(\"selected\") ? span.offsetLeft : 0; } div.appendChild(node); return 0; } let i0 = selectedMatchIdx, i1 = i0 + 1; if (highlightAll) { i0 = 0; i1 = matches.length; } else if (!isSelectedPage) { return; } for (let i = i0; i < i1; i++) { const match = matches[i]; const begin = match.begin; const end = match.end; const isSelected = isSelectedPage && i === selectedMatchIdx; const highlightSuffix = isSelected ? \" selected\" : \"\"; let selectedLeft = 0; if (!prevEnd || begin.divIdx !== prevEnd.divIdx) { if (prevEnd !== null) { appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset); } beginText(begin); } else { appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset); } if (begin.divIdx === end.divIdx) { selectedLeft = appendTextToDiv(begin.divIdx, begin.offset, end.offset, \"highlight\" + highlightSuffix); } else { selectedLeft = appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, \"highlight begin\" + highlightSuffix); for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) { textDivs[n0].className = \"highlight middle\" + highlightSuffix; } beginText(end, \"highlight end\" + highlightSuffix); } prevEnd = end; if (isSelected) { findController.scrollMatchIntoView({ element: textDivs[begin.divIdx], selectedLeft, pageIndex: pageIdx, matchIndex: selectedMatchIdx }); } } if (prevEnd) { appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset); } } _updateMatches() { if (!this.enabled) { return; } const { findController, matches, pageIdx } = this; const { textContentItemsStr, textDivs } = this; let clearedUntilDivIdx = -1; for (let i = 0, ii = matches.length; i < ii; i++) { const match = matches[i]; const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx); for (let n = begin, end = match.end.divIdx; n { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.TextLayerBuilder = void 0; var _pdfjsLib = __webpack_require__(5); const EXPAND_DIVS_TIMEOUT = 300; class TextLayerBuilder { constructor({ textLayerDiv, eventBus, pageIndex, viewport, highlighter = null, enhanceTextSelection = false }) { this.textLayerDiv = textLayerDiv; this.eventBus = eventBus; this.textContent = null; this.textContentItemsStr = []; this.textContentStream = null; this.renderingDone = false; this.pageNumber = pageIndex + 1; this.viewport = viewport; this.textDivs = []; this.textLayerRenderTask = null; this.highlighter = highlighter; this.enhanceTextSelection = enhanceTextSelection; this._bindMouse(); } _finishRendering() { this.renderingDone = true; if (!this.enhanceTextSelection) { const endOfContent = document.createElement(\"div\"); endOfContent.className = \"endOfContent\"; this.textLayerDiv.appendChild(endOfContent); } this.eventBus.dispatch(\"textlayerrendered\", { source: this, pageNumber: this.pageNumber, numTextDivs: this.textDivs.length }); } render(timeout = 0) { if (!(this.textContent || this.textContentStream) || this.renderingDone) { return; } this.cancel(); this.textDivs.length = 0; this.highlighter?.setTextMapping(this.textDivs, this.textContentItemsStr); const textLayerFrag = document.createDocumentFragment(); this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({ textContent: this.textContent, textContentStream: this.textContentStream, container: textLayerFrag, viewport: this.viewport, textDivs: this.textDivs, textContentItemsStr: this.textContentItemsStr, timeout, enhanceTextSelection: this.enhanceTextSelection }); this.textLayerRenderTask.promise.then(() => { this.textLayerDiv.appendChild(textLayerFrag); this._finishRendering(); this.highlighter?.enable(); }, function (reason) {}); } cancel() { if (this.textLayerRenderTask) { this.textLayerRenderTask.cancel(); this.textLayerRenderTask = null; } this.highlighter?.disable(); } setTextContentStream(readableStream) { this.cancel(); this.textContentStream = readableStream; } setTextContent(textContent) { this.cancel(); this.textContent = textContent; } _bindMouse() { const div = this.textLayerDiv; let expandDivsTimer = null; div.addEventListener(\"mousedown\", evt => { if (this.enhanceTextSelection && this.textLayerRenderTask) { this.textLayerRenderTask.expandTextDivs(true); if (expandDivsTimer) { clearTimeout(expandDivsTimer); expandDivsTimer = null; } return; } const end = div.querySelector(\".endOfContent\"); if (!end) { return; } let adjustTop = evt.target !== div; adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue(\"-moz-user-select\") !== \"none\"; if (adjustTop) { const divBounds = div.getBoundingClientRect(); const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height); end.style.top = (r * 100).toFixed(2) + \"%\"; } end.classList.add(\"active\"); }); div.addEventListener(\"mouseup\", () => { if (this.enhanceTextSelection && this.textLayerRenderTask) { expandDivsTimer = setTimeout(() => { if (this.textLayerRenderTask) { this.textLayerRenderTask.expandTextDivs(false); } expandDivsTimer = null; }, EXPAND_DIVS_TIMEOUT); return; } const end = div.querySelector(\".endOfContent\"); if (!end) { return; } end.style.top = \"\"; end.classList.remove(\"active\"); }); } } exports.TextLayerBuilder = TextLayerBuilder; /***/ }), /* 35 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.XfaLayerBuilder = void 0; var _pdfjsLib = __webpack_require__(5); class XfaLayerBuilder { constructor({ pageDiv, pdfPage, annotationStorage = null, linkService, xfaHtml = null }) { this.pageDiv = pageDiv; this.pdfPage = pdfPage; this.annotationStorage = annotationStorage; this.linkService = linkService; this.xfaHtml = xfaHtml; this.div = null; this._cancelled = false; } render(viewport, intent = \"display\") { if (intent === \"print\") { const parameters = { viewport: viewport.clone({ dontFlip: true }), div: this.div, xfaHtml: this.xfaHtml, annotationStorage: this.annotationStorage, linkService: this.linkService, intent }; const div = document.createElement(\"div\"); this.pageDiv.appendChild(div); parameters.div = div; const result = _pdfjsLib.XfaLayer.render(parameters); return Promise.resolve(result); } return this.pdfPage.getXfa().then(xfaHtml => { if (this._cancelled || !xfaHtml) { return { textDivs: [] }; } const parameters = { viewport: viewport.clone({ dontFlip: true }), div: this.div, xfaHtml, annotationStorage: this.annotationStorage, linkService: this.linkService, intent }; if (this.div) { return _pdfjsLib.XfaLayer.update(parameters); } this.div = document.createElement(\"div\"); this.pageDiv.appendChild(this.div); parameters.div = this.div; return _pdfjsLib.XfaLayer.render(parameters); }).catch(error => { console.error(error); }); } cancel() { this._cancelled = true; } hide() { if (!this.div) { return; } this.div.hidden = true; } } exports.XfaLayerBuilder = XfaLayerBuilder; /***/ }), /* 36 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.SecondaryToolbar = void 0; var _ui_utils = __webpack_require__(3); var _pdf_cursor_tools = __webpack_require__(6); var _base_viewer = __webpack_require__(28); class SecondaryToolbar { constructor(options, mainContainer, eventBus) { this.toolbar = options.toolbar; this.toggleButton = options.toggleButton; this.toolbarButtonContainer = options.toolbarButtonContainer; this.buttons = [{ element: options.presentationModeButton, eventName: \"presentationmode\", close: true }, { element: options.printButton, eventName: \"print\", close: true }, { element: options.downloadButton, eventName: \"download\", close: true }, { element: options.viewBookmarkButton, eventName: null, close: true }, { element: options.firstPageButton, eventName: \"firstpage\", close: true }, { element: options.lastPageButton, eventName: \"lastpage\", close: true }, { element: options.pageRotateCwButton, eventName: \"rotatecw\", close: false }, { element: options.pageRotateCcwButton, eventName: \"rotateccw\", close: false }, { element: options.cursorSelectToolButton, eventName: \"switchcursortool\", eventDetails: { tool: _pdf_cursor_tools.CursorTool.SELECT }, close: true }, { element: options.cursorHandToolButton, eventName: \"switchcursortool\", eventDetails: { tool: _pdf_cursor_tools.CursorTool.HAND }, close: true }, { element: options.scrollPageButton, eventName: \"switchscrollmode\", eventDetails: { mode: _ui_utils.ScrollMode.PAGE }, close: true }, { element: options.scrollVerticalButton, eventName: \"switchscrollmode\", eventDetails: { mode: _ui_utils.ScrollMode.VERTICAL }, close: true }, { element: options.scrollHorizontalButton, eventName: \"switchscrollmode\", eventDetails: { mode: _ui_utils.ScrollMode.HORIZONTAL }, close: true }, { element: options.scrollWrappedButton, eventName: \"switchscrollmode\", eventDetails: { mode: _ui_utils.ScrollMode.WRAPPED }, close: true }, { element: options.spreadNoneButton, eventName: \"switchspreadmode\", eventDetails: { mode: _ui_utils.SpreadMode.NONE }, close: true }, { element: options.spreadOddButton, eventName: \"switchspreadmode\", eventDetails: { mode: _ui_utils.SpreadMode.ODD }, close: true }, { element: options.spreadEvenButton, eventName: \"switchspreadmode\", eventDetails: { mode: _ui_utils.SpreadMode.EVEN }, close: true }, { element: options.documentPropertiesButton, eventName: \"documentproperties\", close: true }]; this.buttons.push({ element: options.openFileButton, eventName: \"openfile\", close: true }); this.items = { firstPage: options.firstPageButton, lastPage: options.lastPageButton, pageRotateCw: options.pageRotateCwButton, pageRotateCcw: options.pageRotateCcwButton }; this.mainContainer = mainContainer; this.eventBus = eventBus; this.opened = false; this.containerHeight = null; this.previousContainerHeight = null; this.reset(); this.#bindClickListeners(); this.#bindCursorToolsListener(options); this.#bindScrollModeListener(options); this.#bindSpreadModeListener(options); this.eventBus._on(\"resize\", this.#setMaxHeight.bind(this)); } get isOpen() { return this.opened; } setPageNumber(pageNumber) { this.pageNumber = pageNumber; this.#updateUIState(); } setPagesCount(pagesCount) { this.pagesCount = pagesCount; this.#updateUIState(); } reset() { this.pageNumber = 0; this.pagesCount = 0; this.#updateUIState(); this.eventBus.dispatch(\"secondarytoolbarreset\", { source: this }); } #updateUIState() { this.items.firstPage.disabled = this.pageNumber = this.pagesCount; this.items.pageRotateCw.disabled = this.pagesCount === 0; this.items.pageRotateCcw.disabled = this.pagesCount === 0; } #bindClickListeners() { this.toggleButton.addEventListener(\"click\", this.toggle.bind(this)); for (const { element, eventName, close, eventDetails } of this.buttons) { element.addEventListener(\"click\", evt => { if (eventName !== null) { const details = { source: this }; for (const property in eventDetails) { details[property] = eventDetails[property]; } this.eventBus.dispatch(eventName, details); } if (close) { this.close(); } }); } } #bindCursorToolsListener({ cursorSelectToolButton, cursorHandToolButton }) { this.eventBus._on(\"cursortoolchanged\", function ({ tool }) { const isSelect = tool === _pdf_cursor_tools.CursorTool.SELECT, isHand = tool === _pdf_cursor_tools.CursorTool.HAND; cursorSelectToolButton.classList.toggle(\"toggled\", isSelect); cursorHandToolButton.classList.toggle(\"toggled\", isHand); cursorSelectToolButton.setAttribute(\"aria-checked\", isSelect); cursorHandToolButton.setAttribute(\"aria-checked\", isHand); }); } #bindScrollModeListener({ scrollPageButton, scrollVerticalButton, scrollHorizontalButton, scrollWrappedButton, spreadNoneButton, spreadOddButton, spreadEvenButton }) { const scrollModeChanged = ({ mode }) => { const isPage = mode === _ui_utils.ScrollMode.PAGE, isVertical = mode === _ui_utils.ScrollMode.VERTICAL, isHorizontal = mode === _ui_utils.ScrollMode.HORIZONTAL, isWrapped = mode === _ui_utils.ScrollMode.WRAPPED; scrollPageButton.classList.toggle(\"toggled\", isPage); scrollVerticalButton.classList.toggle(\"toggled\", isVertical); scrollHorizontalButton.classList.toggle(\"toggled\", isHorizontal); scrollWrappedButton.classList.toggle(\"toggled\", isWrapped); scrollPageButton.setAttribute(\"aria-checked\", isPage); scrollVerticalButton.setAttribute(\"aria-checked\", isVertical); scrollHorizontalButton.setAttribute(\"aria-checked\", isHorizontal); scrollWrappedButton.setAttribute(\"aria-checked\", isWrapped); const forceScrollModePage = this.pagesCount > _base_viewer.PagesCountLimit.FORCE_SCROLL_MODE_PAGE; scrollPageButton.disabled = forceScrollModePage; scrollVerticalButton.disabled = forceScrollModePage; scrollHorizontalButton.disabled = forceScrollModePage; scrollWrappedButton.disabled = forceScrollModePage; spreadNoneButton.disabled = isHorizontal; spreadOddButton.disabled = isHorizontal; spreadEvenButton.disabled = isHorizontal; }; this.eventBus._on(\"scrollmodechanged\", scrollModeChanged); this.eventBus._on(\"secondarytoolbarreset\", evt => { if (evt.source === this) { scrollModeChanged({ mode: _ui_utils.ScrollMode.VERTICAL }); } }); } #bindSpreadModeListener({ spreadNoneButton, spreadOddButton, spreadEvenButton }) { function spreadModeChanged({ mode }) { const isNone = mode === _ui_utils.SpreadMode.NONE, isOdd = mode === _ui_utils.SpreadMode.ODD, isEven = mode === _ui_utils.SpreadMode.EVEN; spreadNoneButton.classList.toggle(\"toggled\", isNone); spreadOddButton.classList.toggle(\"toggled\", isOdd); spreadEvenButton.classList.toggle(\"toggled\", isEven); spreadNoneButton.setAttribute(\"aria-checked\", isNone); spreadOddButton.setAttribute(\"aria-checked\", isOdd); spreadEvenButton.setAttribute(\"aria-checked\", isEven); } this.eventBus._on(\"spreadmodechanged\", spreadModeChanged); this.eventBus._on(\"secondarytoolbarreset\", evt => { if (evt.source === this) { spreadModeChanged({ mode: _ui_utils.SpreadMode.NONE }); } }); } open() { if (this.opened) { return; } this.opened = true; this.#setMaxHeight(); this.toggleButton.classList.add(\"toggled\"); this.toggleButton.setAttribute(\"aria-expanded\", \"true\"); this.toolbar.classList.remove(\"hidden\"); } close() { if (!this.opened) { return; } this.opened = false; this.toolbar.classList.add(\"hidden\"); this.toggleButton.classList.remove(\"toggled\"); this.toggleButton.setAttribute(\"aria-expanded\", \"false\"); } toggle() { if (this.opened) { this.close(); } else { this.open(); } } #setMaxHeight() { if (!this.opened) { return; } this.containerHeight = this.mainContainer.clientHeight; if (this.containerHeight === this.previousContainerHeight) { return; } this.toolbarButtonContainer.style.maxHeight = `${this.containerHeight - _ui_utils.SCROLLBAR_PADDING}px`; this.previousContainerHeight = this.containerHeight; } } exports.SecondaryToolbar = SecondaryToolbar; /***/ }), /* 37 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.Toolbar = void 0; var _ui_utils = __webpack_require__(3); const PAGE_NUMBER_LOADING_INDICATOR = \"visiblePageIsLoading\"; class Toolbar { constructor(options, eventBus, l10n) { this.toolbar = options.container; this.eventBus = eventBus; this.l10n = l10n; this.buttons = [{ element: options.previous, eventName: \"previouspage\" }, { element: options.next, eventName: \"nextpage\" }, { element: options.zoomIn, eventName: \"zoomin\" }, { element: options.zoomOut, eventName: \"zoomout\" }, { element: options.print, eventName: \"print\" }, { element: options.presentationModeButton, eventName: \"presentationmode\" }, { element: options.download, eventName: \"download\" }, { element: options.viewBookmark, eventName: null }]; this.buttons.push({ element: options.openFile, eventName: \"openfile\" }); this.items = { numPages: options.numPages, pageNumber: options.pageNumber, scaleSelect: options.scaleSelect, customScaleOption: options.customScaleOption, previous: options.previous, next: options.next, zoomIn: options.zoomIn, zoomOut: options.zoomOut }; this._wasLocalized = false; this.reset(); this._bindListeners(); } setPageNumber(pageNumber, pageLabel) { this.pageNumber = pageNumber; this.pageLabel = pageLabel; this._updateUIState(false); } setPagesCount(pagesCount, hasPageLabels) { this.pagesCount = pagesCount; this.hasPageLabels = hasPageLabels; this._updateUIState(true); } setPageScale(pageScaleValue, pageScale) { this.pageScaleValue = (pageScaleValue || pageScale).toString(); this.pageScale = pageScale; this._updateUIState(false); } reset() { this.pageNumber = 0; this.pageLabel = null; this.hasPageLabels = false; this.pagesCount = 0; this.pageScaleValue = _ui_utils.DEFAULT_SCALE_VALUE; this.pageScale = _ui_utils.DEFAULT_SCALE; this._updateUIState(true); this.updateLoadingIndicatorState(); } _bindListeners() { const { pageNumber, scaleSelect } = this.items; const self = this; for (const { element, eventName } of this.buttons) { element.addEventListener(\"click\", evt => { if (eventName !== null) { this.eventBus.dispatch(eventName, { source: this }); } }); } pageNumber.addEventListener(\"click\", function () { this.select(); }); pageNumber.addEventListener(\"change\", function () { self.eventBus.dispatch(\"pagenumberchanged\", { source: self, value: this.value }); }); scaleSelect.addEventListener(\"change\", function () { if (this.value === \"custom\") { return; } self.eventBus.dispatch(\"scalechanged\", { source: self, value: this.value }); }); scaleSelect.addEventListener(\"click\", function (evt) { const target = evt.target; if (this.value === self.pageScaleValue && target.tagName.toUpperCase() === \"OPTION\") { this.blur(); } }); scaleSelect.oncontextmenu = _ui_utils.noContextMenuHandler; this.eventBus._on(\"localized\", () => { this._wasLocalized = true; this._adjustScaleWidth(); this._updateUIState(true); }); } _updateUIState(resetNumPages = false) { if (!this._wasLocalized) { return; } const { pageNumber, pagesCount, pageScaleValue, pageScale, items } = this; if (resetNumPages) { if (this.hasPageLabels) { items.pageNumber.type = \"text\"; } else { items.pageNumber.type = \"number\"; this.l10n.get(\"of_pages\", { pagesCount }).then(msg => { items.numPages.textContent = msg; }); } items.pageNumber.max = pagesCount; } if (this.hasPageLabels) { items.pageNumber.value = this.pageLabel; this.l10n.get(\"page_of_pages\", { pageNumber, pagesCount }).then(msg => { items.numPages.textContent = msg; }); } else { items.pageNumber.value = pageNumber; } items.previous.disabled = pageNumber = pagesCount; items.zoomOut.disabled = pageScale = _ui_utils.MAX_SCALE; this.l10n.get(\"page_scale_percent\", { scale: Math.round(pageScale * 10000) / 100 }).then(msg => { let predefinedValueFound = false; for (const option of items.scaleSelect.options) { if (option.value !== pageScaleValue) { option.selected = false; continue; } option.selected = true; predefinedValueFound = true; } if (!predefinedValueFound) { items.customScaleOption.textContent = msg; items.customScaleOption.selected = true; } }); } updateLoadingIndicatorState(loading = false) { const pageNumberInput = this.items.pageNumber; pageNumberInput.classList.toggle(PAGE_NUMBER_LOADING_INDICATOR, loading); } async _adjustScaleWidth() { const { items, l10n } = this; const predefinedValuesPromise = Promise.all([l10n.get(\"page_scale_auto\"), l10n.get(\"page_scale_actual\"), l10n.get(\"page_scale_fit\"), l10n.get(\"page_scale_width\")]); const style = getComputedStyle(items.scaleSelect), scaleSelectContainerWidth = parseInt(style.getPropertyValue(\"--scale-select-container-width\"), 10), scaleSelectOverflow = parseInt(style.getPropertyValue(\"--scale-select-overflow\"), 10); let canvas = document.createElement(\"canvas\"); canvas.mozOpaque = true; let ctx = canvas.getContext(\"2d\", { alpha: false }); await _ui_utils.animationStarted; ctx.font = `${style.fontSize} ${style.fontFamily}`; let maxWidth = 0; for (const predefinedValue of await predefinedValuesPromise) { const { width } = ctx.measureText(predefinedValue); if (width > maxWidth) { maxWidth = width; } } maxWidth += 2 * scaleSelectOverflow; if (maxWidth > scaleSelectContainerWidth) { const doc = document.documentElement; doc.style.setProperty(\"--scale-select-container-width\", `${maxWidth}px`); } canvas.width = 0; canvas.height = 0; canvas = ctx = null; } } exports.Toolbar = Toolbar; /***/ }), /* 38 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ViewHistory = void 0; const DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20; class ViewHistory { constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) { this.fingerprint = fingerprint; this.cacheSize = cacheSize; this._initializedPromise = this._readFromStorage().then(databaseStr => { const database = JSON.parse(databaseStr || \"{}\"); let index = -1; if (!Array.isArray(database.files)) { database.files = []; } else { while (database.files.length >= this.cacheSize) { database.files.shift(); } for (let i = 0, ii = database.files.length; i < ii; i++) { const branch = database.files[i]; if (branch.fingerprint === this.fingerprint) { index = i; break; } } } if (index === -1) { index = database.files.push({ fingerprint: this.fingerprint }) - 1; } this.file = database.files[index]; this.database = database; }); } async _writeToStorage() { const databaseStr = JSON.stringify(this.database); localStorage.setItem(\"pdfjs.history\", databaseStr); } async _readFromStorage() { return localStorage.getItem(\"pdfjs.history\"); } async set(name, val) { await this._initializedPromise; this.file[name] = val; return this._writeToStorage(); } async setMultiple(properties) { await this._initializedPromise; for (const name in properties) { this.file[name] = properties[name]; } return this._writeToStorage(); } async get(name, defaultValue) { await this._initializedPromise; const val = this.file[name]; return val !== undefined ? val : defaultValue; } async getMultiple(properties) { await this._initializedPromise; const values = Object.create(null); for (const name in properties) { const val = this.file[name]; values[name] = val !== undefined ? val : properties[name]; } return values; } } exports.ViewHistory = ViewHistory; /***/ }), /* 39 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.GenericCom = void 0; var _app = __webpack_require__(2); var _preferences = __webpack_require__(40); var _download_manager = __webpack_require__(41); var _genericl10n = __webpack_require__(42); var _generic_scripting = __webpack_require__(44); ; const GenericCom = {}; exports.GenericCom = GenericCom; class GenericPreferences extends _preferences.BasePreferences { async _writeToStorage(prefObj) { localStorage.setItem(\"pdfjs.preferences\", JSON.stringify(prefObj)); } async _readFromStorage(prefObj) { return JSON.parse(localStorage.getItem(\"pdfjs.preferences\")); } } class GenericExternalServices extends _app.DefaultExternalServices { static createDownloadManager(options) { return new _download_manager.DownloadManager(); } static createPreferences() { return new GenericPreferences(); } static createL10n({ locale = \"en-US\" }) { return new _genericl10n.GenericL10n(locale); } static createScripting({ sandboxBundleSrc }) { return new _generic_scripting.GenericScripting(sandboxBundleSrc); } } _app.PDFViewerApplication.externalServices = GenericExternalServices; /***/ }), /* 40 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.BasePreferences = void 0; var _app_options = __webpack_require__(1); class BasePreferences { #defaults = Object.freeze({ \"annotationMode\": 2, \"cursorToolOnLoad\": 0, \"defaultZoomValue\": \"\", \"disablePageLabels\": false, \"enablePermissions\": false, \"enablePrintAutoRotate\": true, \"enableScripting\": true, \"externalLinkTarget\": 0, \"historyUpdateUrl\": false, \"ignoreDestinationZoom\": false, \"pdfBugEnabled\": false, \"renderer\": \"canvas\", \"sidebarViewOnLoad\": -1, \"scrollModeOnLoad\": -1, \"spreadModeOnLoad\": -1, \"textLayerMode\": 1, \"useOnlyCssZoom\": false, \"viewerCssTheme\": 0, \"viewOnLoad\": 0, \"disableAutoFetch\": false, \"disableFontFace\": false, \"disableRange\": false, \"disableStream\": false, \"enableXfa\": true }); #prefs = Object.create(null); #initializedPromise = null; constructor() { if (this.constructor === BasePreferences) { throw new Error(\"Cannot initialize BasePreferences.\"); } this.#initializedPromise = this._readFromStorage(this.#defaults).then(prefs => { for (const name in this.#defaults) { const prefValue = prefs?.[name]; if (typeof prefValue === typeof this.#defaults[name]) { this.#prefs[name] = prefValue; } } }); } async _writeToStorage(prefObj) { throw new Error(\"Not implemented: _writeToStorage\"); } async _readFromStorage(prefObj) { throw new Error(\"Not implemented: _readFromStorage\"); } async reset() { await this.#initializedPromise; const prefs = this.#prefs; this.#prefs = Object.create(null); return this._writeToStorage(this.#defaults).catch(reason => { this.#prefs = prefs; throw reason; }); } async set(name, value) { await this.#initializedPromise; const defaultValue = this.#defaults[name], prefs = this.#prefs; if (defaultValue === undefined) { throw new Error(`Set preference: \"${name}\" is undefined.`); } else if (value === undefined) { throw new Error(\"Set preference: no value is specified.\"); } const valueType = typeof value, defaultType = typeof defaultValue; if (valueType !== defaultType) { if (valueType === \"number\" && defaultType === \"string\") { value = value.toString(); } else { throw new Error(`Set preference: \"${value}\" is a ${valueType}, expected a ${defaultType}.`); } } else { if (valueType === \"number\" && !Number.isInteger(value)) { throw new Error(`Set preference: \"${value}\" must be an integer.`); } } this.#prefs[name] = value; return this._writeToStorage(this.#prefs).catch(reason => { this.#prefs = prefs; throw reason; }); } async get(name) { await this.#initializedPromise; const defaultValue = this.#defaults[name]; if (defaultValue === undefined) { throw new Error(`Get preference: \"${name}\" is undefined.`); } return this.#prefs[name] ?? defaultValue; } async getAll() { await this.#initializedPromise; const obj = Object.create(null); for (const name in this.#defaults) { obj[name] = this.#prefs[name] ?? this.#defaults[name]; } return obj; } } exports.BasePreferences = BasePreferences; /***/ }), /* 41 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.DownloadManager = void 0; var _pdfjsLib = __webpack_require__(5); ; function download(blobUrl, filename) { const a = document.createElement(\"a\"); if (!a.click) { throw new Error('DownloadManager: \"a.click()\" is not supported.'); } a.href = blobUrl; a.target = \"_parent\"; if (\"download\" in a) { a.download = filename; } (document.body || document.documentElement).appendChild(a); a.click(); a.remove(); } class DownloadManager { constructor() { this._openBlobUrls = new WeakMap(); } downloadUrl(url, filename) { if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, \"http://example.com\")) { console.error(`downloadUrl - not a valid URL: ${url}`); return; } download(url + \"#pdfjs.action=download\", filename); } downloadData(data, filename, contentType) { const blobUrl = URL.createObjectURL(new Blob([data], { type: contentType })); download(blobUrl, filename); } openOrDownloadData(element, data, filename) { const isPdfData = (0, _pdfjsLib.isPdfFile)(filename); const contentType = isPdfData ? \"application/pdf\" : \"\"; if (isPdfData) { let blobUrl = this._openBlobUrls.get(element); if (!blobUrl) { blobUrl = URL.createObjectURL(new Blob([data], { type: contentType })); this._openBlobUrls.set(element, blobUrl); } let viewerUrl; viewerUrl = \"?file=\" + encodeURIComponent(blobUrl + \"#\" + filename); try { window.open(viewerUrl); return true; } catch (ex) { console.error(`openOrDownloadData: ${ex}`); URL.revokeObjectURL(blobUrl); this._openBlobUrls.delete(element); } } this.downloadData(data, filename, contentType); return false; } download(blob, url, filename, sourceEventType = \"download\") { const blobUrl = URL.createObjectURL(blob); download(blobUrl, filename); } } exports.DownloadManager = DownloadManager; /***/ }), /* 42 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.GenericL10n = void 0; __webpack_require__(43); var _l10n_utils = __webpack_require__(30); const webL10n = document.webL10n; class GenericL10n { constructor(lang) { this._lang = lang; this._ready = new Promise((resolve, reject) => { webL10n.setLanguage((0, _l10n_utils.fixupLangCode)(lang), () => { resolve(webL10n); }); }); } async getLanguage() { const l10n = await this._ready; return l10n.getLanguage(); } async getDirection() { const l10n = await this._ready; return l10n.getDirection(); } async get(key, args = null, fallback = (0, _l10n_utils.getL10nFallback)(key, args)) { const l10n = await this._ready; return l10n.get(key, args, fallback); } async translate(element) { const l10n = await this._ready; return l10n.translate(element); } } exports.GenericL10n = GenericL10n; /***/ }), /* 43 */ /***/ (() => { document.webL10n = function (window, document, undefined) { var gL10nData = {}; var gTextData = ''; var gTextProp = 'textContent'; var gLanguage = ''; var gMacros = {}; var gReadyState = 'loading'; var gAsyncResourceLoading = true; function getL10nResourceLinks() { return document.querySelectorAll('link[type=\"application/l10n\"]'); } function getL10nDictionary() { var script = document.querySelector('script[type=\"application/l10n\"]'); return script ? JSON.parse(script.innerHTML) : null; } function getTranslatableChildren(element) { return element ? element.querySelectorAll('*[data-l10n-id]') : []; } function getL10nAttributes(element) { if (!element) return {}; var l10nId = element.getAttribute('data-l10n-id'); var l10nArgs = element.getAttribute('data-l10n-args'); var args = {}; if (l10nArgs) { try { args = JSON.parse(l10nArgs); } catch (e) { console.warn('could not parse arguments for #' + l10nId); } } return { id: l10nId, args: args }; } function xhrLoadText(url, onSuccess, onFailure) { onSuccess = onSuccess || function _onSuccess(data) {}; onFailure = onFailure || function _onFailure() {}; var xhr = new XMLHttpRequest(); xhr.open('GET', url, gAsyncResourceLoading); if (xhr.overrideMimeType) { xhr.overrideMimeType('text/plain; charset=utf-8'); } xhr.onreadystatechange = function () { if (xhr.readyState == 4) { if (xhr.status == 200 || xhr.status === 0) { onSuccess(xhr.responseText); } else { onFailure(); } } }; xhr.onerror = onFailure; xhr.ontimeout = onFailure; try { xhr.send(null); } catch (e) { onFailure(); } } function parseResource(href, lang, successCallback, failureCallback) { var baseURL = href.replace(/[^\\/]*$/, '') || './'; function evalString(text) { if (text.lastIndexOf('\\\\') < 0) return text; return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\ /g, ' ').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\"); } function parseProperties(text, parsedPropertiesCallback) { var dictionary = {}; var reBlank = /^\\s*|\\s*$/; var reComment = /^\\s*#|^\\s*$/; var reSection = /^\\s*\\[(.*)\\]\\s*$/; var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i; var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/; function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) { var entries = rawText.replace(reBlank, '').split(/[\\r ]+/); var currentLang = '*'; var genericLang = lang.split('-', 1)[0]; var skipLang = false; var match = ''; function nextEntry() { while (true) { if (!entries.length) { parsedRawLinesCallback(); return; } var line = entries.shift(); if (reComment.test(line)) continue; if (extendedSyntax) { match = reSection.exec(line); if (match) { currentLang = match[1].toLowerCase(); skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang; continue; } else if (skipLang) { continue; } match = reImport.exec(line); if (match) { loadImport(baseURL + match[1], nextEntry); return; } } var tmp = line.match(reSplit); if (tmp && tmp.length == 3) { dictionary[tmp[1]] = evalString(tmp[2]); } } } nextEntry(); } function loadImport(url, callback) { xhrLoadText(url, function (content) { parseRawLines(content, false, callback); }, function () { console.warn(url + ' not found.'); callback(); }); } parseRawLines(text, true, function () { parsedPropertiesCallback(dictionary); }); } xhrLoadText(href, function (response) { gTextData += response; parseProperties(response, function (data) { for (var key in data) { var id, prop, index = key.lastIndexOf('.'); if (index > 0) { id = key.substring(0, index); prop = key.substring(index + 1); } else { id = key; prop = gTextProp; } if (!gL10nData[id]) { gL10nData[id] = {}; } gL10nData[id][prop] = data[key]; } if (successCallback) { successCallback(); } }); }, failureCallback); } function loadLocale(lang, callback) { if (lang) { lang = lang.toLowerCase(); } callback = callback || function _callback() {}; clear(); gLanguage = lang; var langLinks = getL10nResourceLinks(); var langCount = langLinks.length; if (langCount === 0) { var dict = getL10nDictionary(); if (dict && dict.locales && dict.default_locale) { console.log('using the embedded JSON directory, early way out'); gL10nData = dict.locales[lang]; if (!gL10nData) { var defaultLocale = dict.default_locale.toLowerCase(); for (var anyCaseLang in dict.locales) { anyCaseLang = anyCaseLang.toLowerCase(); if (anyCaseLang === lang) { gL10nData = dict.locales[lang]; break; } else if (anyCaseLang === defaultLocale) { gL10nData = dict.locales[defaultLocale]; } } } callback(); } else { console.log('no resource to load, early way out'); } gReadyState = 'complete'; return; } var onResourceLoaded = null; var gResourceCount = 0; onResourceLoaded = function () { gResourceCount++; if (gResourceCount >= langCount) { callback(); gReadyState = 'complete'; } }; function L10nResourceLink(link) { var href = link.href; this.load = function (lang, callback) { parseResource(href, lang, callback, function () { console.warn(href + ' not found.'); console.warn('\"' + lang + '\" resource not found'); gLanguage = ''; callback(); }); }; } for (var i = 0; i < langCount; i++) { var resource = new L10nResourceLink(langLinks[i]); resource.load(lang, onResourceLoaded); } } function clear() { gL10nData = {}; gTextData = ''; gLanguage = ''; } function getPluralRules(lang) { var locales2rules = { 'af': 3, 'ak': 4, 'am': 4, 'ar': 1, 'asa': 3, 'az': 0, 'be': 11, 'bem': 3, 'bez': 3, 'bg': 3, 'bh': 4, 'bm': 0, 'bn': 3, 'bo': 0, 'br': 20, 'brx': 3, 'bs': 11, 'ca': 3, 'cgg': 3, 'chr': 3, 'cs': 12, 'cy': 17, 'da': 3, 'de': 3, 'dv': 3, 'dz': 0, 'ee': 3, 'el': 3, 'en': 3, 'eo': 3, 'es': 3, 'et': 3, 'eu': 3, 'fa': 0, 'ff': 5, 'fi': 3, 'fil': 4, 'fo': 3, 'fr': 5, 'fur': 3, 'fy': 3, 'ga': 8, 'gd': 24, 'gl': 3, 'gsw': 3, 'gu': 3, 'guw': 4, 'gv': 23, 'ha': 3, 'haw': 3, 'he': 2, 'hi': 4, 'hr': 11, 'hu': 0, 'id': 0, 'ig': 0, 'ii': 0, 'is': 3, 'it': 3, 'iu': 7, 'ja': 0, 'jmc': 3, 'jv': 0, 'ka': 0, 'kab': 5, 'kaj': 3, 'kcg': 3, 'kde': 0, 'kea': 0, 'kk': 3, 'kl': 3, 'km': 0, 'kn': 0, 'ko': 0, 'ksb': 3, 'ksh': 21, 'ku': 3, 'kw': 7, 'lag': 18, 'lb': 3, 'lg': 3, 'ln': 4, 'lo': 0, 'lt': 10, 'lv': 6, 'mas': 3, 'mg': 4, 'mk': 16, 'ml': 3, 'mn': 3, 'mo': 9, 'mr': 3, 'ms': 0, 'mt': 15, 'my': 0, 'nah': 3, 'naq': 7, 'nb': 3, 'nd': 3, 'ne': 3, 'nl': 3, 'nn': 3, 'no': 3, 'nr': 3, 'nso': 4, 'ny': 3, 'nyn': 3, 'om': 3, 'or': 3, 'pa': 3, 'pap': 3, 'pl': 13, 'ps': 3, 'pt': 3, 'rm': 3, 'ro': 9, 'rof': 3, 'ru': 11, 'rwk': 3, 'sah': 0, 'saq': 3, 'se': 7, 'seh': 3, 'ses': 0, 'sg': 0, 'sh': 11, 'shi': 19, 'sk': 12, 'sl': 14, 'sma': 7, 'smi': 7, 'smj': 7, 'smn': 7, 'sms': 7, 'sn': 3, 'so': 3, 'sq': 3, 'sr': 11, 'ss': 3, 'ssy': 3, 'st': 3, 'sv': 3, 'sw': 3, 'syr': 3, 'ta': 3, 'te': 3, 'teo': 3, 'th': 0, 'ti': 4, 'tig': 3, 'tk': 3, 'tl': 4, 'tn': 3, 'to': 0, 'tr': 0, 'ts': 3, 'tzm': 22, 'uk': 11, 'ur': 3, 've': 3, 'vi': 0, 'vun': 3, 'wa': 4, 'wae': 3, 'wo': 0, 'xh': 3, 'xog': 3, 'yo': 0, 'zh': 0, 'zu': 3 }; function isIn(n, list) { return list.indexOf(n) !== -1; } function isBetween(n, start, end) { return start sandbox.dispatchEvent(event), 0); } async destroySandbox() { const sandbox = await this._ready; sandbox.nukeSandbox(); } } exports.GenericScripting = GenericScripting; /***/ }), /* 45 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFPrintService = PDFPrintService; var _pdfjsLib = __webpack_require__(5); var _app = __webpack_require__(2); var _print_utils = __webpack_require__(46); let activeService = null; let dialog = null; let overlayManager = null; function renderPage(activeServiceOnEntry, pdfDocument, pageNumber, size, printResolution, optionalContentConfigPromise) { const scratchCanvas = activeService.scratchCanvas; const PRINT_UNITS = printResolution / _pdfjsLib.PixelsPerInch.PDF; scratchCanvas.width = Math.floor(size.width * PRINT_UNITS); scratchCanvas.height = Math.floor(size.height * PRINT_UNITS); const ctx = scratchCanvas.getContext(\"2d\"); ctx.save(); ctx.fillStyle = \"rgb(255, 255, 255)\"; ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height); ctx.restore(); return pdfDocument.getPage(pageNumber).then(function (pdfPage) { const renderContext = { canvasContext: ctx, transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0], viewport: pdfPage.getViewport({ scale: 1, rotation: size.rotation }), intent: \"print\", annotationMode: _pdfjsLib.AnnotationMode.ENABLE_STORAGE, optionalContentConfigPromise }; return pdfPage.render(renderContext).promise; }); } function PDFPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise = null, l10n) { this.pdfDocument = pdfDocument; this.pagesOverview = pagesOverview; this.printContainer = printContainer; this._printResolution = printResolution || 150; this._optionalContentConfigPromise = optionalContentConfigPromise || pdfDocument.getOptionalContentConfig(); this.l10n = l10n; this.currentPage = -1; this.scratchCanvas = document.createElement(\"canvas\"); } PDFPrintService.prototype = { layout() { this.throwIfInactive(); const body = document.querySelector(\"body\"); body.setAttribute(\"data-pdfjsprinting\", true); const hasEqualPageSizes = this.pagesOverview.every(function (size) { return size.width === this.pagesOverview[0].width && size.height === this.pagesOverview[0].height; }, this); if (!hasEqualPageSizes) { console.warn(\"Not all pages have the same size. The printed \" + \"result may be incorrect!\"); } this.pageStyleSheet = document.createElement(\"style\"); const pageSize = this.pagesOverview[0]; this.pageStyleSheet.textContent = \"@page { size: \" + pageSize.width + \"pt \" + pageSize.height + \"pt;}\"; body.appendChild(this.pageStyleSheet); }, destroy() { if (activeService !== this) { return; } this.printContainer.textContent = \"\"; const body = document.querySelector(\"body\"); body.removeAttribute(\"data-pdfjsprinting\"); if (this.pageStyleSheet) { this.pageStyleSheet.remove(); this.pageStyleSheet = null; } this.scratchCanvas.width = this.scratchCanvas.height = 0; this.scratchCanvas = null; activeService = null; ensureOverlay().then(function () { if (overlayManager.active === dialog) { overlayManager.close(dialog); } }); }, renderPages() { if (this.pdfDocument.isPureXfa) { (0, _print_utils.getXfaHtmlForPrinting)(this.printContainer, this.pdfDocument); return Promise.resolve(); } const pageCount = this.pagesOverview.length; const renderNextPage = (resolve, reject) => { this.throwIfInactive(); if (++this.currentPage >= pageCount) { renderProgress(pageCount, pageCount, this.l10n); resolve(); return; } const index = this.currentPage; renderProgress(index, pageCount, this.l10n); renderPage(this, this.pdfDocument, index + 1, this.pagesOverview[index], this._printResolution, this._optionalContentConfigPromise).then(this.useRenderedPage.bind(this)).then(function () { renderNextPage(resolve, reject); }, reject); }; return new Promise(renderNextPage); }, useRenderedPage() { this.throwIfInactive(); const img = document.createElement(\"img\"); const scratchCanvas = this.scratchCanvas; if (\"toBlob\" in scratchCanvas) { scratchCanvas.toBlob(function (blob) { img.src = URL.createObjectURL(blob); }); } else { img.src = scratchCanvas.toDataURL(); } const wrapper = document.createElement(\"div\"); wrapper.className = \"printedPage\"; wrapper.appendChild(img); this.printContainer.appendChild(wrapper); return new Promise(function (resolve, reject) { img.onload = resolve; img.onerror = reject; }); }, performPrint() { this.throwIfInactive(); return new Promise(resolve => { setTimeout(() => { if (!this.active) { resolve(); return; } print.call(window); setTimeout(resolve, 20); }, 0); }); }, get active() { return this === activeService; }, throwIfInactive() { if (!this.active) { throw new Error(\"This print request was cancelled or completed.\"); } } }; const print = window.print; window.print = function () { if (activeService) { console.warn(\"Ignored window.print() because of a pending print job.\"); return; } ensureOverlay().then(function () { if (activeService) { overlayManager.open(dialog); } }); try { dispatchEvent(\"beforeprint\"); } finally { if (!activeService) { console.error(\"Expected print service to be initialized.\"); ensureOverlay().then(function () { if (overlayManager.active === dialog) { overlayManager.close(dialog); } }); return; } const activeServiceOnEntry = activeService; activeService.renderPages().then(function () { return activeServiceOnEntry.performPrint(); }).catch(function () {}).then(function () { if (activeServiceOnEntry.active) { abort(); } }); } }; function dispatchEvent(eventType) { const event = document.createEvent(\"CustomEvent\"); event.initCustomEvent(eventType, false, false, \"custom\"); window.dispatchEvent(event); } function abort() { if (activeService) { activeService.destroy(); dispatchEvent(\"afterprint\"); } } function renderProgress(index, total, l10n) { dialog ||= document.getElementById(\"printServiceDialog\"); const progress = Math.round(100 * index / total); const progressBar = dialog.querySelector(\"progress\"); const progressPerc = dialog.querySelector(\".relative-progress\"); progressBar.value = progress; l10n.get(\"print_progress_percent\", { progress }).then(msg => { progressPerc.textContent = msg; }); } window.addEventListener(\"keydown\", function (event) { if (event.keyCode === 80 && (event.ctrlKey || event.metaKey) && !event.altKey && (!event.shiftKey || window.chrome || window.opera)) { window.print(); event.preventDefault(); if (event.stopImmediatePropagation) { event.stopImmediatePropagation(); } else { event.stopPropagation(); } } }, true); if (\"onbeforeprint\" in window) { const stopPropagationIfNeeded = function (event) { if (event.detail !== \"custom\" && event.stopImmediatePropagation) { event.stopImmediatePropagation(); } }; window.addEventListener(\"beforeprint\", stopPropagationIfNeeded); window.addEventListener(\"afterprint\", stopPropagationIfNeeded); } let overlayPromise; function ensureOverlay() { if (!overlayPromise) { overlayManager = _app.PDFViewerApplication.overlayManager; if (!overlayManager) { throw new Error(\"The overlay manager has not yet been initialized.\"); } dialog ||= document.getElementById(\"printServiceDialog\"); overlayPromise = overlayManager.register(dialog, true); document.getElementById(\"printCancel\").onclick = abort; dialog.addEventListener(\"close\", abort); } return overlayPromise; } _app.PDFPrintServiceFactory.instance = { supportsPrinting: true, createPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, l10n) { if (activeService) { throw new Error(\"The print service is created and active.\"); } activeService = new PDFPrintService(pdfDocument, pagesOverview, printContainer, printResolution, optionalContentConfigPromise, l10n); return activeService; } }; /***/ }), /* 46 */ /***/ ((__unused_webpack_module, exports, __webpack_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.getXfaHtmlForPrinting = getXfaHtmlForPrinting; var _pdfjsLib = __webpack_require__(5); var _pdf_link_service = __webpack_require__(8); var _xfa_layer_builder = __webpack_require__(35); function getXfaHtmlForPrinting(printContainer, pdfDocument) { const xfaHtml = pdfDocument.allXfaHtml; const linkService = new _pdf_link_service.SimpleLinkService(); const scale = Math.round(_pdfjsLib.PixelsPerInch.PDF_TO_CSS_UNITS * 100) / 100; for (const xfaPage of xfaHtml.children) { const page = document.createElement(\"div\"); page.className = \"xfaPrintedPage\"; printContainer.appendChild(page); const builder = new _xfa_layer_builder.XfaLayerBuilder({ pageDiv: page, pdfPage: null, annotationStorage: pdfDocument.annotationStorage, linkService, xfaHtml: xfaPage }); const viewport = (0, _pdfjsLib.getXfaPageViewport)(xfaPage, { scale }); builder.render(viewport, \"print\"); } } /***/ }) /******/ ]); /************************************************************************/ /******/ // The module cache /******/ var __webpack_module_cache__ = {}; /******/ /******/ // The require function /******/ function __webpack_require__(moduleId) { /******/ // Check if module is in cache /******/ var cachedModule = __webpack_module_cache__[moduleId]; /******/ if (cachedModule !== undefined) { /******/ return cachedModule.exports; /******/ } /******/ // Create a new module (and put it into the cache) /******/ var module = __webpack_module_cache__[moduleId] = { /******/ // no module.id needed /******/ // no module.loaded needed /******/ exports: {} /******/ }; /******/ /******/ // Execute the module function /******/ __webpack_modules__[moduleId](module, module.exports, __webpack_require__); /******/ /******/ // Return the exports of the module /******/ return module.exports; /******/ } /******/ /************************************************************************/ var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk. (() => { var exports = __webpack_exports__; Object.defineProperty(exports, \"__esModule\", ({ value: true })); Object.defineProperty(exports, \"PDFViewerApplication\", ({ enumerable: true, get: function () { return _app.PDFViewerApplication; } })); Object.defineProperty(exports, \"PDFViewerApplicationOptions\", ({ enumerable: true, get: function () { return _app_options.AppOptions; } })); var _app_options = __webpack_require__(1); var _app = __webpack_require__(2); const pdfjsVersion = '2.14.0'; const pdfjsBuild = '75ac897'; window.PDFViewerApplication = _app.PDFViewerApplication; window.PDFViewerApplicationOptions = _app_options.AppOptions; ; ; { __webpack_require__(39); } ; { __webpack_require__(45); } function getViewerConfiguration() { let errorWrapper = null; errorWrapper = { container: document.getElementById(\"errorWrapper\"), errorMessage: document.getElementById(\"errorMessage\"), closeButton: document.getElementById(\"errorClose\"), errorMoreInfo: document.getElementById(\"errorMoreInfo\"), moreInfoButton: document.getElementById(\"errorShowMore\"), lessInfoButton: document.getElementById(\"errorShowLess\") }; return { appContainer: document.body, mainContainer: document.getElementById(\"viewerContainer\"), viewerContainer: document.getElementById(\"viewer\"), toolbar: { container: document.getElementById(\"toolbarViewer\"), numPages: document.getElementById(\"numPages\"), pageNumber: document.getElementById(\"pageNumber\"), scaleSelect: document.getElementById(\"scaleSelect\"), customScaleOption: document.getElementById(\"customScaleOption\"), previous: document.getElementById(\"previous\"), next: document.getElementById(\"next\"), zoomIn: document.getElementById(\"zoomIn\"), zoomOut: document.getElementById(\"zoomOut\"), viewFind: document.getElementById(\"viewFind\"), openFile: document.getElementById(\"openFile\"), print: document.getElementById(\"print\"), presentationModeButton: document.getElementById(\"presentationMode\"), download: document.getElementById(\"download\"), viewBookmark: document.getElementById(\"viewBookmark\") }, secondaryToolbar: { toolbar: document.getElementById(\"secondaryToolbar\"), toggleButton: document.getElementById(\"secondaryToolbarToggle\"), toolbarButtonContainer: document.getElementById(\"secondaryToolbarButtonContainer\"), presentationModeButton: document.getElementById(\"secondaryPresentationMode\"), openFileButton: document.getElementById(\"secondaryOpenFile\"), printButton: document.getElementById(\"secondaryPrint\"), downloadButton: document.getElementById(\"secondaryDownload\"), viewBookmarkButton: document.getElementById(\"secondaryViewBookmark\"), firstPageButton: document.getElementById(\"firstPage\"), lastPageButton: document.getElementById(\"lastPage\"), pageRotateCwButton: document.getElementById(\"pageRotateCw\"), pageRotateCcwButton: document.getElementById(\"pageRotateCcw\"), cursorSelectToolButton: document.getElementById(\"cursorSelectTool\"), cursorHandToolButton: document.getElementById(\"cursorHandTool\"), scrollPageButton: document.getElementById(\"scrollPage\"), scrollVerticalButton: document.getElementById(\"scrollVertical\"), scrollHorizontalButton: document.getElementById(\"scrollHorizontal\"), scrollWrappedButton: document.getElementById(\"scrollWrapped\"), spreadNoneButton: document.getElementById(\"spreadNone\"), spreadOddButton: document.getElementById(\"spreadOdd\"), spreadEvenButton: document.getElementById(\"spreadEven\"), documentPropertiesButton: document.getElementById(\"documentProperties\") }, sidebar: { outerContainer: document.getElementById(\"outerContainer\"), sidebarContainer: document.getElementById(\"sidebarContainer\"), toggleButton: document.getElementById(\"sidebarToggle\"), thumbnailButton: document.getElementById(\"viewThumbnail\"), outlineButton: document.getElementById(\"viewOutline\"), attachmentsButton: document.getElementById(\"viewAttachments\"), layersButton: document.getElementById(\"viewLayers\"), thumbnailView: document.getElementById(\"thumbnailView\"), outlineView: document.getElementById(\"outlineView\"), attachmentsView: document.getElementById(\"attachmentsView\"), layersView: document.getElementById(\"layersView\"), outlineOptionsContainer: document.getElementById(\"outlineOptionsContainer\"), currentOutlineItemButton: document.getElementById(\"currentOutlineItem\") }, sidebarResizer: { outerContainer: document.getElementById(\"outerContainer\"), resizer: document.getElementById(\"sidebarResizer\") }, findBar: { bar: document.getElementById(\"findbar\"), toggleButton: document.getElementById(\"viewFind\"), findField: document.getElementById(\"findInput\"), highlightAllCheckbox: document.getElementById(\"findHighlightAll\"), caseSensitiveCheckbox: document.getElementById(\"findMatchCase\"), matchDiacriticsCheckbox: document.getElementById(\"findMatchDiacritics\"), entireWordCheckbox: document.getElementById(\"findEntireWord\"), findMsg: document.getElementById(\"findMsg\"), findResultsCount: document.getElementById(\"findResultsCount\"), findPreviousButton: document.getElementById(\"findPrevious\"), findNextButton: document.getElementById(\"findNext\") }, passwordOverlay: { dialog: document.getElementById(\"passwordDialog\"), label: document.getElementById(\"passwordText\"), input: document.getElementById(\"password\"), submitButton: document.getElementById(\"passwordSubmit\"), cancelButton: document.getElementById(\"passwordCancel\") }, documentProperties: { dialog: document.getElementById(\"documentPropertiesDialog\"), closeButton: document.getElementById(\"documentPropertiesClose\"), fields: { fileName: document.getElementById(\"fileNameField\"), fileSize: document.getElementById(\"fileSizeField\"), title: document.getElementById(\"titleField\"), author: document.getElementById(\"authorField\"), subject: document.getElementById(\"subjectField\"), keywords: document.getElementById(\"keywordsField\"), creationDate: document.getElementById(\"creationDateField\"), modificationDate: document.getElementById(\"modificationDateField\"), creator: document.getElementById(\"creatorField\"), producer: document.getElementById(\"producerField\"), version: document.getElementById(\"versionField\"), pageCount: document.getElementById(\"pageCountField\"), pageSize: document.getElementById(\"pageSizeField\"), linearized: document.getElementById(\"linearizedField\") } }, errorWrapper, printContainer: document.getElementById(\"printContainer\"), openFileInput: document.getElementById(\"fileInput\"), debuggerScriptPath: \"./debugger.js\" }; } function webViewerLoad() { const config = getViewerConfiguration(); const event = document.createEvent(\"CustomEvent\"); event.initCustomEvent(\"webviewerloaded\", true, true, { source: window }); try { parent.document.dispatchEvent(event); } catch (ex) { console.error(`webviewerloaded: ${ex}`); document.dispatchEvent(event); } _app.PDFViewerApplication.run(config); } document.blockUnblockOnload?.(true); if (document.readyState === \"interactive\" || document.readyState === \"complete\") { webViewerLoad(); } else { document.addEventListener(\"DOMContentLoaded\", webViewerLoad, true); } })(); /******/ })() ; //# sourceMappingURL=viewer.js.map"},{"path":"/lib/pdf/build/pdf.sandbox.js","content":"/** * @licstart The following is the entire license notice for the * JavaScript code in this page * * Copyright 2022 Mozilla Foundation * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * @licend The above is the entire license notice for the * JavaScript code in this page */ (function webpackUniversalModuleDefinition(root, factory) { if(typeof exports === 'object' && typeof module === 'object') module.exports = factory(); else if(typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf.sandbox\", [], factory); else if(typeof exports === 'object') exports[\"pdfjs-dist/build/pdf.sandbox\"] = factory(); else root[\"pdfjs-dist/build/pdf.sandbox\"] = root.pdfjsSandbox = factory(); })(this, () => { return /******/ (() => { // webpackBootstrap /******/ \"use strict\"; /******/ var __webpack_modules__ = ([ /* 0 */, /* 1 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({value:true}));exports[\"default\"]=void 0;var Module=(()=>{var _scriptDir=typeof document!=='undefined'&&document.currentScript?document.currentScript.src:undefined;return function(Module){Module=Module||{};var b;b||(b=typeof Module!=='undefined'?Module:{});var h=Object.assign,n,q;b.ready=new Promise(function(a,c){n=a;q=c;});var r=h({},b),t=\"\";\"undefined\"!==typeof document&&document.currentScript&&(t=document.currentScript.src);_scriptDir&&(t=_scriptDir);0!==t.indexOf(\"blob:\")?t=t.substr(0,t.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):t=\"\";var aa=b.print||console.log.bind(console),u=b.printErr||console.warn.bind(console);h(b,r);r=null;var v;b.wasmBinary&&(v=b.wasmBinary);var noExitRuntime=b.noExitRuntime||!0;\"object\"!==typeof WebAssembly&&x(\"no native wasm support detected\");var y,z=!1;function A(a,c,d,e){var f={string:function(l){var p=0;if(null!==l&&void 0!==l&&0!==l){var T=(l.length6&63;}c[d++]=128|g&63;}}c[d]=0;}}function K(a){for(var c=0,d=0;d=e?c+3:c+4;}return c;}function L(a){var c=K(a)+1,d=M(c);d&&C(a,E,d,c);return d;}var ba,E,D,N;function ca(){var a=y.buffer;ba=a;b.HEAP8=E=new Int8Array(a);b.HEAP16=new Int16Array(a);b.HEAP32=N=new Int32Array(a);b.HEAPU8=D=new Uint8Array(a);b.HEAPU16=new Uint16Array(a);b.HEAPU32=new Uint32Array(a);b.HEAPF32=new Float32Array(a);b.HEAPF64=new Float64Array(a);}var O,da=[],ea=[],fa=[];function ha(){var a=b.preRun.shift();da.unshift(a);}var P=0,Q=null,R=null;b.preloadedImages={};b.preloadedAudios={};function x(a){if(b.onAbort)b.onAbort(a);a=\"Aborted(\"+a+\")\";u(a);z=!0;a=new WebAssembly.RuntimeError(a+\". Build with -s ASSERTIONS=1 for more info.\");q(a);throw a;}function S(a){return a.startsWith(\"data:application/octet-stream;base64,\");}var U;U=\"data:application/octet-stream;base64,\";if(!S(U)){var ia=U;U=b.locateFile?b.locateFile(ia,t):t+ia;}function ja(){var a=U;try{if(a==U&&v)return new Uint8Array(v);if(S(a))try{var c=ka(a.slice(37)),d=new Uint8Array(c.length);for(a=0;a2]=60*g;N[qa()>>2]=Number(c!=f);d=a(d);e=a(e);d=L(d);e=L(e);f>2]=d,N[X()+4>>2]=e):(N[X()>>2]=e,N[X()+4>>2]=d);}var ra;ma=(a,c,d)=>{a=H(a);c=null!==c?JSON.parse(H(c)):[];try{const e=b.externalCall(a,c);return e?W(e):null;}catch(e){return b.HEAPU8[d]=1,W(e.message);}};var ka=\"function\"===typeof atob?atob:function(a){var c=\"\",d=0;a=a.replace(/[^A-Za-z0-9\\+\\/=]/g,\"\");do{var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));var f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));var g=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));var k=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(a.charAt(d++));e=e4;f=(f&15)2;var m=(g&3)=0;if(2147483648=d;d*=2){var e=c*(1+.2/d);e=Math.min(e,a+100663296);e=Math.max(a,e);0>>16);ca();var f=1;break a;}catch(g){}f=void 0;}if(f)return!0;}return!1;},d:function(a,c,d,e){for(var f=0,g=0;g>2],m=N[c+4>>2];c+=8;for(var w=0;w>2]=f;return 0;},c:function(a){var c=Date.now();N[a>>2]=c/1E3|0;N[a+4>>2]=c%1E3*1E3|0;return 0;},h:function(a,c){ra||(ra=!0,oa());a=new Date(1E3*N[a>>2]);N[c>>2]=a.getSeconds();N[c+4>>2]=a.getMinutes();N[c+8>>2]=a.getHours();N[c+12>>2]=a.getDate();N[c+16>>2]=a.getMonth();N[c+20>>2]=a.getFullYear()-1900;N[c+24>>2]=a.getDay();var d=new Date(a.getFullYear(),0,1);N[c+28>>2]=(a.getTime()-d.getTime())/864E5|0;N[c+36>>2]=-(60*a.getTimezoneOffset());var e=new Date(a.getFullYear(),6,1).getTimezoneOffset();d=d.getTimezoneOffset();a=(e!=d&&a.getTimezoneOffset()==Math.min(d,e))|0;N[c+32>>2]=a;a=N[X()+(a?4:0)>>2];N[c+40>>2]=a;return c;},i:function(a){a=H(a);window.console.log(a);},j:function(a,c,d,e){a=H(a);c=H(c);d=H(d);d=`Quickjs -- ${a}: ${c} ${d}`;0!==e?window.alert(d):window.console.error(d);}};(function(){function a(f){b.asm=f.exports;y=b.asm.k;ca();O=b.asm.t;ea.unshift(b.asm.l);P--;b.monitorRunDependencies&&b.monitorRunDependencies(P);0==P&&(null!==Q&&(clearInterval(Q),Q=null),R&&(f=R,R=null,f()));}function c(f){a(f.instance);}function d(f){return la().then(function(g){return WebAssembly.instantiate(g,e);}).then(function(g){return g;}).then(f,function(g){u(\"failed to asynchronously prepare wasm: \"+g);x(g);});}var e={a:sa};P++;b.monitorRunDependencies&&b.monitorRunDependencies(P);if(b.instantiateWasm)try{return b.instantiateWasm(e,a);}catch(f){return u(\"Module.instantiateWasm callback failed with error: \"+f),!1;}(function(){return v||\"function\"!==typeof WebAssembly.instantiateStreaming||S(U)||\"function\"!==typeof fetch?d(c):fetch(U,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(c,function(g){u(\"wasm streaming compile failed: \"+g);u(\"falling back to ArrayBuffer instantiation\");return d(c);});});})().catch(q);return{};})();b.___wasm_call_ctors=function(){return(b.___wasm_call_ctors=b.asm.l).apply(null,arguments);};b._evalInSandbox=function(){return(b._evalInSandbox=b.asm.m).apply(null,arguments);};b._nukeSandbox=function(){return(b._nukeSandbox=b.asm.n).apply(null,arguments);};b._init=function(){return(b._init=b.asm.o).apply(null,arguments);};b._commFun=function(){return(b._commFun=b.asm.p).apply(null,arguments);};b._dumpMemoryUse=function(){return(b._dumpMemoryUse=b.asm.q).apply(null,arguments);};var M=b._malloc=function(){return(M=b._malloc=b.asm.r).apply(null,arguments);};b._free=function(){return(b._free=b.asm.s).apply(null,arguments);};var X=b.__get_tzname=function(){return(X=b.__get_tzname=b.asm.u).apply(null,arguments);},qa=b.__get_daylight=function(){return(qa=b.__get_daylight=b.asm.v).apply(null,arguments);},pa=b.__get_timezone=function(){return(pa=b.__get_timezone=b.asm.w).apply(null,arguments);},F=b.stackSave=function(){return(F=b.stackSave=b.asm.x).apply(null,arguments);},G=b.stackRestore=function(){return(G=b.stackRestore=b.asm.y).apply(null,arguments);},B=b.stackAlloc=function(){return(B=b.stackAlloc=b.asm.z).apply(null,arguments);};b.ccall=A;b.cwrap=function(a,c,d,e){d=d||[];var f=d.every(function(g){return\"number\"===g;});return\"string\"!==c&&f&&!e?b[\"_\"+a]:function(){return A(a,c,d,arguments,e);};};b.stringToNewUTF8=W;var Y;R=function ta(){Y||Z();Y||(R=ta);};function Z(){function a(){if(!Y&&(Y=!0,b.calledRun=!0,!z)){V(ea);n(b);if(b.onRuntimeInitialized)b.onRuntimeInitialized();if(b.postRun)for(\"function\"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var c=b.postRun.shift();fa.unshift(c);}V(fa);}}if(!(0 { if (typeof callbackId !== \"number\" || typeof nMilliseconds !== \"number\") { return; } const id = this.win.setTimeout(() => { this.timeoutIds.delete(callbackId); this.callSandboxFunction(\"timeoutCb\", { callbackId, interval: false }); }, nMilliseconds); this.timeoutIds.set(callbackId, id); }, clearTimeout: id => { this.win.clearTimeout(this.timeoutIds.get(id)); this.timeoutIds.delete(id); }, setInterval: (callbackId, nMilliseconds) => { if (typeof callbackId !== \"number\" || typeof nMilliseconds !== \"number\") { return; } const id = this.win.setInterval(() => { this.callSandboxFunction(\"timeoutCb\", { callbackId, interval: true }); }, nMilliseconds); this.timeoutIds.set(callbackId, id); }, clearInterval: id => { this.win.clearInterval(this.timeoutIds.get(id)); this.timeoutIds.delete(id); }, alert: cMsg => { if (typeof cMsg !== \"string\") { return; } this.win.alert(cMsg); }, confirm: cMsg => { if (typeof cMsg !== \"string\") { return false; } return this.win.confirm(cMsg); }, prompt: (cQuestion, cDefault) => { if (typeof cQuestion !== \"string\" || typeof cDefault !== \"string\") { return null; } return this.win.prompt(cQuestion, cDefault); }, parseURL: cUrl => { const url = new this.win.URL(cUrl); const props = [\"hash\", \"host\", \"hostname\", \"href\", \"origin\", \"password\", \"pathname\", \"port\", \"protocol\", \"search\", \"searchParams\", \"username\"]; return Object.fromEntries(props.map(name => [name, url[name].toString()])); }, send: data => { if (!data) { return; } const event = new this.win.CustomEvent(\"updatefromsandbox\", { detail: this.importValueFromSandbox(data) }); this.win.dispatchEvent(event); } }; Object.setPrototypeOf(externals, null); return (name, args) => { try { const result = externals[name](...args); return this.exportValueToSandbox(result); } catch (error) { throw this.createErrorForSandbox(error?.toString() ?? \"\"); } }; } } { exports.SandboxSupportBase = SandboxSupportBase; } /***/ }) /******/ ]); /************************************************************************/ /******/ // The module cache /******/ var __webpack_module_cache__ = {}; /******/ /******/ // The require function /******/ function __w_pdfjs_require__(moduleId) { /******/ // Check if module is in cache /******/ var cachedModule = __webpack_module_cache__[moduleId]; /******/ if (cachedModule !== undefined) { /******/ return cachedModule.exports; /******/ } /******/ // Create a new module (and put it into the cache) /******/ var module = __webpack_module_cache__[moduleId] = { /******/ // no module.id needed /******/ // no module.loaded needed /******/ exports: {} /******/ }; /******/ /******/ // Execute the module function /******/ __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__); /******/ /******/ // Return the exports of the module /******/ return module.exports; /******/ } /******/ /************************************************************************/ var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk. (() => { var exports = __webpack_exports__; Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.QuickJSSandbox = QuickJSSandbox; var _quickjsEval = _interopRequireDefault(__w_pdfjs_require__(1)); var _pdfSandboxExternal = __w_pdfjs_require__(2); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } const pdfjsVersion = '2.14.0'; const pdfjsBuild = '75ac897'; class SandboxSupport extends _pdfSandboxExternal.SandboxSupportBase { exportValueToSandbox(val) { return JSON.stringify(val); } importValueFromSandbox(val) { return val; } createErrorForSandbox(errorMessage) { return new Error(errorMessage); } } class Sandbox { constructor(win, module) { this.support = new SandboxSupport(win, this); module.externalCall = this.support.createSandboxExternals(); this._module = module; this._alertOnError = 0; } create(data) { const code = ['(function webpackUniversalModuleDefinition(root, factory) { \\tif(typeof exports === \\'object\\' && typeof module === \\'object\\') \\t\\tmodule.exports = factory(); \\telse if(typeof define === \\'function\\' && define.amd) \\t\\tdefine(\"pdfjs-dist/build/pdf.scripting\", [], factory); \\telse if(typeof exports === \\'object\\') \\t\\texports[\"pdfjs-dist/build/pdf.scripting\"] = factory(); \\telse \\t\\troot.pdfjsScripting = factory(); })(this, () => { return /******/ (() => { // webpackBootstrap /******/ \\t\"use strict\"; /******/ \\tvar __webpack_modules__ = ([ /* 0 */, /* 1 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.initSandbox = initSandbox; var _constants = __w_pdfjs_require__(2); var _field = __w_pdfjs_require__(3); var _aform = __w_pdfjs_require__(8); var _app = __w_pdfjs_require__(9); var _color = __w_pdfjs_require__(5); var _console = __w_pdfjs_require__(13); var _doc = __w_pdfjs_require__(14); var _proxy = __w_pdfjs_require__(16); var _util = __w_pdfjs_require__(17); function initSandbox(params) { delete globalThis.pdfjsScripting; const externalCall = globalThis.callExternalFunction; delete globalThis.callExternalFunction; const globalEval = code => globalThis.eval(code); const send = data => externalCall(\"send\", [data]); const proxyHandler = new _proxy.ProxyHandler(); const { data } = params; const doc = new _doc.Doc({ send, globalEval, ...data.docInfo }); const _document = { obj: doc, wrapped: new Proxy(doc, proxyHandler) }; const app = new _app.App({ send, globalEval, externalCall, _document, calculationOrder: data.calculationOrder, proxyHandler, ...data.appInfo }); const util = new _util.Util({ externalCall }); const appObjects = app._objects; if (data.objects) { const annotations = []; for (const [name, objs] of Object.entries(data.objects)) { annotations.length = 0; let container = null; for (const obj of objs) { if (obj.type !== \"\") { annotations.push(obj); } else { container = obj; } } let obj = container; if (annotations.length > 0) { obj = annotations[0]; obj.send = send; } obj.globalEval = globalEval; obj.doc = _document; obj.fieldPath = name; obj.appObjects = appObjects; let field; switch (obj.type) { case \"radiobutton\": { const otherButtons = annotations.slice(1); field = new _field.RadioButtonField(otherButtons, obj); break; } case \"checkbox\": { const otherButtons = annotations.slice(1); field = new _field.CheckboxField(otherButtons, obj); break; } case \"text\": if (annotations.length x.id).slice(1); field = new _field.Field(obj); break; default: field = new _field.Field(obj); } const wrapped = new Proxy(field, proxyHandler); doc._addField(name, wrapped); const _object = { obj: field, wrapped }; for (const object of objs) { appObjects[object.id] = _object; } if (container) { appObjects[container.id] = _object; } } } const color = new _color.Color(); globalThis.event = null; globalThis.global = Object.create(null); globalThis.app = new Proxy(app, proxyHandler); globalThis.color = new Proxy(color, proxyHandler); globalThis.console = new Proxy(new _console.Console({ send }), proxyHandler); globalThis.util = new Proxy(util, proxyHandler); globalThis.border = _constants.Border; globalThis.cursor = _constants.Cursor; globalThis.display = _constants.Display; globalThis.font = _constants.Font; globalThis.highlight = _constants.Highlight; globalThis.position = _constants.Position; globalThis.scaleHow = _constants.ScaleHow; globalThis.scaleWhen = _constants.ScaleWhen; globalThis.style = _constants.Style; globalThis.trans = _constants.Trans; globalThis.zoomtype = _constants.ZoomType; globalThis.ADBE = { Reader_Value_Asked: true, Viewer_Value_Asked: true }; const aform = new _aform.AForm(doc, app, util, color); for (const name of Object.getOwnPropertyNames(_aform.AForm.prototype)) { if (name !== \"constructor\" && !name.startsWith(\"_\")) { globalThis[name] = aform[name].bind(aform); } } for (const [name, value] of Object.entries(_constants.GlobalConstants)) { Object.defineProperty(globalThis, name, { value, writable: false }); } Object.defineProperties(globalThis, { ColorConvert: { value: color.convert.bind(color), writable: true }, ColorEqual: { value: color.equal.bind(color), writable: true } }); const properties = Object.create(null); for (const name of Object.getOwnPropertyNames(_doc.Doc.prototype)) { if (name === \"constructor\" || name.startsWith(\"_\")) { continue; } const descriptor = Object.getOwnPropertyDescriptor(_doc.Doc.prototype, name); if (descriptor.get) { properties[name] = { get: descriptor.get.bind(doc), set: descriptor.set.bind(doc) }; } else { properties[name] = { value: _doc.Doc.prototype[name].bind(doc) }; } } Object.defineProperties(globalThis, properties); const functions = { dispatchEvent: app._dispatchEvent.bind(app), timeoutCb: app._evalCallback.bind(app) }; return (name, args) => { try { functions[name](args); } catch (error) { const value = `${error.toString()}\\ ${error.stack}`; send({ command: \"error\", value }); } }; } /***/ }), /* 2 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ZoomType = exports.Trans = exports.Style = exports.ScaleWhen = exports.ScaleHow = exports.Position = exports.Highlight = exports.GlobalConstants = exports.Font = exports.Display = exports.Cursor = exports.Border = void 0; const Border = Object.freeze({ s: \"solid\", d: \"dashed\", b: \"beveled\", i: \"inset\", u: \"underline\" }); exports.Border = Border; const Cursor = Object.freeze({ visible: 0, hidden: 1, delay: 2 }); exports.Cursor = Cursor; const Display = Object.freeze({ visible: 0, hidden: 1, noPrint: 2, noView: 3 }); exports.Display = Display; const Font = Object.freeze({ Times: \"Times-Roman\", TimesB: \"Times-Bold\", TimesI: \"Times-Italic\", TimesBI: \"Times-BoldItalic\", Helv: \"Helvetica\", HelvB: \"Helvetica-Bold\", HelvI: \"Helvetica-Oblique\", HelvBI: \"Helvetica-BoldOblique\", Cour: \"Courier\", CourB: \"Courier-Bold\", CourI: \"Courier-Oblique\", CourBI: \"Courier-BoldOblique\", Symbol: \"Symbol\", ZapfD: \"ZapfDingbats\", KaGo: \"HeiseiKakuGo-W5-UniJIS-UCS2-H\", KaMi: \"HeiseiMin-W3-UniJIS-UCS2-H\" }); exports.Font = Font; const Highlight = Object.freeze({ n: \"none\", i: \"invert\", p: \"push\", o: \"outline\" }); exports.Highlight = Highlight; const Position = Object.freeze({ textOnly: 0, iconOnly: 1, iconTextV: 2, textIconV: 3, iconTextH: 4, textIconH: 5, overlay: 6 }); exports.Position = Position; const ScaleHow = Object.freeze({ proportional: 0, anamorphic: 1 }); exports.ScaleHow = ScaleHow; const ScaleWhen = Object.freeze({ always: 0, never: 1, tooBig: 2, tooSmall: 3 }); exports.ScaleWhen = ScaleWhen; const Style = Object.freeze({ ch: \"check\", cr: \"cross\", di: \"diamond\", ci: \"circle\", st: \"star\", sq: \"square\" }); exports.Style = Style; const Trans = Object.freeze({ blindsH: \"BlindsHorizontal\", blindsV: \"BlindsVertical\", boxI: \"BoxIn\", boxO: \"BoxOut\", dissolve: \"Dissolve\", glitterD: \"GlitterDown\", glitterR: \"GlitterRight\", glitterRD: \"GlitterRightDown\", random: \"Random\", replace: \"Replace\", splitHI: \"SplitHorizontalIn\", splitHO: \"SplitHorizontalOut\", splitVI: \"SplitVerticalIn\", splitVO: \"SplitVerticalOut\", wipeD: \"WipeDown\", wipeL: \"WipeLeft\", wipeR: \"WipeRight\", wipeU: \"WipeUp\" }); exports.Trans = Trans; const ZoomType = Object.freeze({ none: \"NoVary\", fitP: \"FitPage\", fitW: \"FitWidth\", fitH: \"FitHeight\", fitV: \"FitVisibleWidth\", pref: \"Preferred\", refW: \"ReflowWidth\" }); exports.ZoomType = ZoomType; const GlobalConstants = Object.freeze({ IDS_GREATER_THAN: \"Invalid value: must be greater than or equal to % s.\", IDS_GT_AND_LT: \"Invalid value: must be greater than or equal to % s \" + \"and less than or equal to % s.\", IDS_LESS_THAN: \"Invalid value: must be less than or equal to % s.\", IDS_INVALID_MONTH: \"** Invalid **\", IDS_INVALID_DATE: \"Invalid date / time: please ensure that the date / time exists.Field\", IDS_INVALID_DATE2: \" should match format \", IDS_INVALID_VALUE: \"The value entered does not match the format of the field\", IDS_AM: \"am\", IDS_PM: \"pm\", IDS_MONTH_INFO: \"January[1] February[2] March[3] April[4] May[5] \" + \"June[6] July[7] August[8] September[9] October[10] \" + \"November[11] December[12] Sept[9] Jan[1] Feb[2] Mar[3] \" + \"Apr[4] Jun[6] Jul[7] Aug[8] Sep[9] Oct[10] Nov[11] Dec[12]\", IDS_STARTUP_CONSOLE_MSG: \"** ^ _ ^ **\", RE_NUMBER_ENTRY_DOT_SEP: [\"[+-]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d*\"], RE_NUMBER_COMMIT_DOT_SEP: [\"[+-]?\\\\\\\\d+(\\\\\\\\.\\\\\\\\d+)?\", \"[+-]?\\\\\\\\.\\\\\\\\d+\", \"[+-]?\\\\\\\\d+\\\\\\\\.\"], RE_NUMBER_ENTRY_COMMA_SEP: [\"[+-]?\\\\\\\\d*,?\\\\\\\\d*\"], RE_NUMBER_COMMIT_COMMA_SEP: [\"[+-]?\\\\\\\\d+([.,]\\\\\\\\d+)?\", \"[+-]?[.,]\\\\\\\\d+\", \"[+-]?\\\\\\\\d+[.,]\"], RE_ZIP_ENTRY: [\"\\\\\\\\d{0,5}\"], RE_ZIP_COMMIT: [\"\\\\\\\\d{5}\"], RE_ZIP4_ENTRY: [\"\\\\\\\\d{0,5}(\\\\\\\\.|[- ])?\\\\\\\\d{0,4}\"], RE_ZIP4_COMMIT: [\"\\\\\\\\d{5}(\\\\\\\\.|[- ])?\\\\\\\\d{4}\"], RE_PHONE_ENTRY: [\"\\\\\\\\d{0,3}(\\\\\\\\.|[- ])?\\\\\\\\d{0,3}(\\\\\\\\.|[- ])?\\\\\\\\d{0,4}\", \"\\\\\\\\(\\\\\\\\d{0,3}\", \"\\\\\\\\(\\\\\\\\d{0,3}\\\\\\\\)(\\\\\\\\.|[- ])?\\\\\\\\d{0,3}(\\\\\\\\.|[- ])?\\\\\\\\d{0,4}\", \"\\\\\\\\(\\\\\\\\d{0,3}(\\\\\\\\.|[- ])?\\\\\\\\d{0,3}(\\\\\\\\.|[- ])?\\\\\\\\d{0,4}\", \"\\\\\\\\d{0,3}\\\\\\\\)(\\\\\\\\.|[- ])?\\\\\\\\d{0,3}(\\\\\\\\.|[- ])?\\\\\\\\d{0,4}\", \"011(\\\\\\\\.|[- \\\\\\\\d])*\"], RE_PHONE_COMMIT: [\"\\\\\\\\d{3}(\\\\\\\\.|[- ])?\\\\\\\\d{4}\", \"\\\\\\\\d{3}(\\\\\\\\.|[- ])?\\\\\\\\d{3}(\\\\\\\\.|[- ])?\\\\\\\\d{4}\", \"\\\\\\\\(\\\\\\\\d{3}\\\\\\\\)(\\\\\\\\.|[- ])?\\\\\\\\d{3}(\\\\\\\\.|[- ])?\\\\\\\\d{4}\", \"011(\\\\\\\\.|[- \\\\\\\\d])*\"], RE_SSN_ENTRY: [\"\\\\\\\\d{0,3}(\\\\\\\\.|[- ])?\\\\\\\\d{0,2}(\\\\\\\\.|[- ])?\\\\\\\\d{0,4}\"], RE_SSN_COMMIT: [\"\\\\\\\\d{3}(\\\\\\\\.|[- ])?\\\\\\\\d{2}(\\\\\\\\.|[- ])?\\\\\\\\d{4}\"] }); exports.GlobalConstants = GlobalConstants; /***/ }), /* 3 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.RadioButtonField = exports.Field = exports.CheckboxField = void 0; var _common = __w_pdfjs_require__(4); var _color = __w_pdfjs_require__(5); var _pdf_object = __w_pdfjs_require__(7); class Field extends _pdf_object.PDFObject { constructor(data) { super(data); this.alignment = data.alignment || \"left\"; this.borderStyle = data.borderStyle || \"\"; this.buttonAlignX = data.buttonAlignX || 50; this.buttonAlignY = data.buttonAlignY || 50; this.buttonFitBounds = data.buttonFitBounds; this.buttonPosition = data.buttonPosition; this.buttonScaleHow = data.buttonScaleHow; this.ButtonScaleWhen = data.buttonScaleWhen; this.calcOrderIndex = data.calcOrderIndex; this.charLimit = data.charLimit; this.comb = data.comb; this.commitOnSelChange = data.commitOnSelChange; this.currentValueIndices = data.currentValueIndices; this.defaultStyle = data.defaultStyle; this.defaultValue = data.defaultValue; this.doNotScroll = data.doNotScroll; this.doNotSpellCheck = data.doNotSpellCheck; this.delay = data.delay; this.display = data.display; this.doc = data.doc.wrapped; this.editable = data.editable; this.exportValues = data.exportValues; this.fileSelect = data.fileSelect; this.hidden = data.hidden; this.highlight = data.highlight; this.lineWidth = data.lineWidth; this.multiline = data.multiline; this.multipleSelection = !!data.multipleSelection; this.name = data.name; this.password = data.password; this.print = data.print; this.radiosInUnison = data.radiosInUnison; this.readonly = data.readonly; this.rect = data.rect; this.required = data.required; this.richText = data.richText; this.richValue = data.richValue; this.rotation = data.rotation; this.style = data.style; this.submitName = data.submitName; this.textFont = data.textFont; this.textSize = data.textSize; this.type = data.type; this.userName = data.userName; this._actions = (0, _common.createActionsMap)(data.actions); this._browseForFileToSubmit = data.browseForFileToSubmit || null; this._buttonCaption = null; this._buttonIcon = null; this._children = null; this._currentValueIndices = data.currentValueIndices || 0; this._document = data.doc; this._fieldPath = data.fieldPath; this._fillColor = data.fillColor || [\"T\"]; this._isChoice = Array.isArray(data.items); this._items = data.items || []; this._page = data.page || 0; this._strokeColor = data.strokeColor || [\"G\", 0]; this._textColor = data.textColor || [\"G\", 0]; this._value = data.value || \"\"; this._kidIds = data.kidIds || null; this._fieldType = (0, _common.getFieldType)(this._actions); this._siblings = data.siblings || null; this._globalEval = data.globalEval; this._appObjects = data.appObjects; this.valueAsString = data.valueAsString || this._value; } get currentValueIndices() { if (!this._isChoice) { return 0; } return this._currentValueIndices; } set currentValueIndices(indices) { if (!this._isChoice) { return; } if (!Array.isArray(indices)) { indices = [indices]; } if (!indices.every(i => typeof i === \"number\" && Number.isInteger(i) && i >= 0 && i < this.numItems)) { return; } indices.sort(); if (this.multipleSelection) { this._currentValueIndices = indices; this._value = []; indices.forEach(i => { this._value.push(this._items[i].displayValue); }); } else { if (indices.length > 0) { indices = indices.splice(1, indices.length - 1); this._currentValueIndices = indices[0]; this._value = this._items[this._currentValueIndices]; } } this._send({ id: this._id, indices }); } get fillColor() { return this._fillColor; } set fillColor(color) { if (_color.Color._isValidColor(color)) { this._fillColor = color; } } get bgColor() { return this.fillColor; } set bgColor(color) { this.fillColor = color; } get numItems() { if (!this._isChoice) { throw new Error(\"Not a choice widget\"); } return this._items.length; } set numItems(_) { throw new Error(\"field.numItems is read-only\"); } get strokeColor() { return this._strokeColor; } set strokeColor(color) { if (_color.Color._isValidColor(color)) { this._strokeColor = color; } } get borderColor() { return this.strokeColor; } set borderColor(color) { this.strokeColor = color; } get page() { return this._page; } set page(_) { throw new Error(\"field.page is read-only\"); } get textColor() { return this._textColor; } set textColor(color) { if (_color.Color._isValidColor(color)) { this._textColor = color; } } get fgColor() { return this.textColor; } set fgColor(color) { this.textColor = color; } get value() { return this._value; } set value(value) { if (value === \"\") { this._value = \"\"; } else if (typeof value === \"string\") { switch (this._fieldType) { case _common.FieldType.number: case _common.FieldType.percent: value = parseFloat(value); if (!isNaN(value)) { this._value = value; } break; default: this._value = value; } } else { this._value = value; } if (this._isChoice) { if (this.multipleSelection) { const values = new Set(value); if (Array.isArray(this._currentValueIndices)) { this._currentValueIndices.length = 0; } else { this._currentValueIndices = []; } this._items.forEach(({ displayValue }, i) => { if (values.has(displayValue)) { this._currentValueIndices.push(i); } }); } else { this._currentValueIndices = this._items.findIndex(({ displayValue }) => value === displayValue); } } } get valueAsString() { if (this._valueAsString === undefined) { this._valueAsString = this._value ? this._value.toString() : \"\"; } return this._valueAsString; } set valueAsString(val) { this._valueAsString = val ? val.toString() : \"\"; } browseForFileToSubmit() { if (this._browseForFileToSubmit) { this._browseForFileToSubmit(); } } buttonGetCaption(nFace = 0) { if (this._buttonCaption) { return this._buttonCaption[nFace]; } return \"\"; } buttonGetIcon(nFace = 0) { if (this._buttonIcon) { return this._buttonIcon[nFace]; } return null; } buttonImportIcon(cPath = null, nPave = 0) {} buttonSetCaption(cCaption, nFace = 0) { if (!this._buttonCaption) { this._buttonCaption = [\"\", \"\", \"\"]; } this._buttonCaption[nFace] = cCaption; } buttonSetIcon(oIcon, nFace = 0) { if (!this._buttonIcon) { this._buttonIcon = [null, null, null]; } this._buttonIcon[nFace] = oIcon; } checkThisBox(nWidget, bCheckIt = true) {} clearItems() { if (!this._isChoice) { throw new Error(\"Not a choice widget\"); } this._items = []; this._send({ id: this._id, clear: null }); } deleteItemAt(nIdx = null) { if (!this._isChoice) { throw new Error(\"Not a choice widget\"); } if (!this.numItems) { return; } if (nIdx === null) { nIdx = Array.isArray(this._currentValueIndices) ? this._currentValueIndices[0] : this._currentValueIndices; nIdx = nIdx || 0; } if (nIdx < 0 || nIdx >= this.numItems) { nIdx = this.numItems - 1; } this._items.splice(nIdx, 1); if (Array.isArray(this._currentValueIndices)) { let index = this._currentValueIndices.findIndex(i => i >= nIdx); if (index !== -1) { if (this._currentValueIndices[index] === nIdx) { this._currentValueIndices.splice(index, 1); } for (const ii = this._currentValueIndices.length; index < ii; index++) { --this._currentValueIndices[index]; } } } else { if (this._currentValueIndices === nIdx) { this._currentValueIndices = this.numItems > 0 ? 0 : -1; } else if (this._currentValueIndices > nIdx) { --this._currentValueIndices; } } this._send({ id: this._id, remove: nIdx }); } getItemAt(nIdx = -1, bExportValue = false) { if (!this._isChoice) { throw new Error(\"Not a choice widget\"); } if (nIdx < 0 || nIdx >= this.numItems) { nIdx = this.numItems - 1; } const item = this._items[nIdx]; return bExportValue ? item.exportValue : item.displayValue; } getArray() { if (this._kidIds) { return this._kidIds.map(id => this._appObjects[id].wrapped); } if (this._children === null) { this._children = this._document.obj._getChildren(this._fieldPath); } return this._children; } getLock() { return undefined; } isBoxChecked(nWidget) { return false; } isDefaultChecked(nWidget) { return false; } insertItemAt(cName, cExport = undefined, nIdx = 0) { if (!this._isChoice) { throw new Error(\"Not a choice widget\"); } if (!cName) { return; } if (nIdx < 0 || nIdx > this.numItems) { nIdx = this.numItems; } if (this._items.some(({ displayValue }) => displayValue === cName)) { return; } if (cExport === undefined) { cExport = cName; } const data = { displayValue: cName, exportValue: cExport }; this._items.splice(nIdx, 0, data); if (Array.isArray(this._currentValueIndices)) { let index = this._currentValueIndices.findIndex(i => i >= nIdx); if (index !== -1) { for (const ii = this._currentValueIndices.length; index < ii; index++) { ++this._currentValueIndices[index]; } } } else if (this._currentValueIndices >= nIdx) { ++this._currentValueIndices; } this._send({ id: this._id, insert: { index: nIdx, ...data } }); } setAction(cTrigger, cScript) { if (typeof cTrigger !== \"string\" || typeof cScript !== \"string\") { return; } if (!(cTrigger in this._actions)) { this._actions[cTrigger] = []; } this._actions[cTrigger].push(cScript); } setFocus() { this._send({ id: this._id, focus: true }); } setItems(oArray) { if (!this._isChoice) { throw new Error(\"Not a choice widget\"); } this._items.length = 0; for (const element of oArray) { let displayValue, exportValue; if (Array.isArray(element)) { displayValue = element[0]?.toString() || \"\"; exportValue = element[1]?.toString() || \"\"; } else { displayValue = exportValue = element?.toString() || \"\"; } this._items.push({ displayValue, exportValue }); } this._currentValueIndices = 0; this._send({ id: this._id, items: this._items }); } setLock() {} signatureGetModifications() {} signatureGetSeedValue() {} signatureInfo() {} signatureSetSeedValue() {} signatureSign() {} signatureValidate() {} _isButton() { return false; } _reset() { this.value = this.valueAsString = this.defaultValue; } _runActions(event) { const eventName = event.name; if (!this._actions.has(eventName)) { return false; } const actions = this._actions.get(eventName); try { for (const action of actions) { this._globalEval(action); } } catch (error) { event.rc = false; throw error; } return true; } } exports.Field = Field; class RadioButtonField extends Field { constructor(otherButtons, data) { super(data); this.exportValues = [this.exportValues]; this._radioIds = [this._id]; this._radioActions = [this._actions]; for (const radioData of otherButtons) { this.exportValues.push(radioData.exportValues); this._radioIds.push(radioData.id); this._radioActions.push((0, _common.createActionsMap)(radioData.actions)); if (this._value === radioData.exportValues) { this._id = radioData.id; } } } get value() { return this._value; } set value(value) { if (value === null || value === undefined) { this._value = \"\"; } const i = this.exportValues.indexOf(value); if (0 { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.Color = void 0; var _scripting_utils = __w_pdfjs_require__(6); var _pdf_object = __w_pdfjs_require__(7); class Color extends _pdf_object.PDFObject { constructor() { super({}); this.transparent = [\"T\"]; this.black = [\"G\", 0]; this.white = [\"G\", 1]; this.red = [\"RGB\", 1, 0, 0]; this.green = [\"RGB\", 0, 1, 0]; this.blue = [\"RGB\", 0, 0, 1]; this.cyan = [\"CMYK\", 1, 0, 0, 0]; this.magenta = [\"CMYK\", 0, 1, 0, 0]; this.yellow = [\"CMYK\", 0, 0, 1, 0]; this.dkGray = [\"G\", 0.25]; this.gray = [\"G\", 0.5]; this.ltGray = [\"G\", 0.75]; } static _isValidSpace(cColorSpace) { return typeof cColorSpace === \"string\" && (cColorSpace === \"T\" || cColorSpace === \"G\" || cColorSpace === \"RGB\" || cColorSpace === \"CMYK\"); } static _isValidColor(colorArray) { if (!Array.isArray(colorArray) || colorArray.length === 0) { return false; } const space = colorArray[0]; if (!Color._isValidSpace(space)) { return false; } switch (space) { case \"T\": if (colorArray.length !== 1) { return false; } break; case \"G\": if (colorArray.length !== 2) { return false; } break; case \"RGB\": if (colorArray.length !== 4) { return false; } break; case \"CMYK\": if (colorArray.length !== 5) { return false; } break; default: return false; } return colorArray.slice(1).every(c => typeof c === \"number\" && c >= 0 && c c === colorArray2[i + 1]); } } exports.Color = Color; /***/ }), /* 6 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ColorConverters = void 0; function makeColorComp(n) { return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\"); } class ColorConverters { static CMYK_G([c, y, m, k]) { return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)]; } static G_CMYK([g]) { return [\"CMYK\", 0, 0, 0, 1 - g]; } static G_RGB([g]) { return [\"RGB\", g, g, g]; } static G_HTML([g]) { const G = makeColorComp(g); return `#${G}${G}${G}`; } static RGB_G([r, g, b]) { return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b]; } static RGB_HTML([r, g, b]) { const R = makeColorComp(r); const G = makeColorComp(g); const B = makeColorComp(b); return `#${R}${G}${B}`; } static T_HTML() { return \"#00000000\"; } static CMYK_RGB([c, y, m, k]) { return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)]; } static CMYK_HTML(components) { return this.RGB_HTML(this.CMYK_RGB(components)); } static RGB_CMYK([r, g, b]) { const c = 1 - r; const m = 1 - g; const y = 1 - b; const k = Math.min(c, m, y); return [\"CMYK\", c, m, y, k]; } } exports.ColorConverters = ColorConverters; /***/ }), /* 7 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.PDFObject = void 0; class PDFObject { constructor(data) { this._expandos = Object.create(null); this._send = data.send || null; this._id = data.id || null; } } exports.PDFObject = PDFObject; /***/ }), /* 8 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.AForm = void 0; var _constants = __w_pdfjs_require__(2); class AForm { constructor(document, app, util, color) { this._document = document; this._app = app; this._util = util; this._color = color; this._dateFormats = [\"m/d\", \"m/d/yy\", \"mm/dd/yy\", \"mm/yy\", \"d-mmm\", \"d-mmm-yy\", \"dd-mmm-yy\", \"yy-mm-dd\", \"mmm-yy\", \"mmmm-yy\", \"mmm d, yyyy\", \"mmmm d, yyyy\", \"m/d/yy h:MM tt\", \"m/d/yy HH:MM\"]; this._timeFormats = [\"HH:MM\", \"h:MM tt\", \"HH:MM:ss\", \"h:MM:ss tt\"]; this._emailRegex = new RegExp(\"^[a-zA-Z0-9.!#$%&\\'*+\\\\\\\\/=?^_`{|}~-]+\" + \"@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\" + \"(?:\\\\\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\"); } _mkTargetName(event) { return event.target ? `[ ${event.target.name} ]` : \"\"; } _parseDate(cFormat, cDate) { let date = null; try { date = this._util.scand(cFormat, cDate); } catch (error) {} if (!date) { date = Date.parse(cDate); if (isNaN(date)) { date = null; } else { date = new Date(date); } } return date; } AFMergeChange(event = globalThis.event) { if (event.willCommit) { return event.value.toString(); } return this._app._eventDispatcher.mergeChange(event); } AFParseDateEx(cString, cOrder) { return this._parseDate(cOrder, cString); } AFExtractNums(str) { if (typeof str === \"number\") { return [str]; } if (!str || typeof str !== \"string\") { return null; } const first = str.charAt(0); if (first === \".\" || first === \",\") { str = `0${str}`; } const numbers = str.match(/(\\\\d+)/g); if (numbers.length === 0) { return null; } return numbers; } AFMakeNumber(str) { if (typeof str === \"number\") { return str; } if (typeof str !== \"string\") { return null; } str = str.trim().replace(\",\", \".\"); const number = parseFloat(str); if (isNaN(number) || !isFinite(number)) { return null; } return number; } AFMakeArrayFromList(string) { if (typeof string === \"string\") { return string.split(/, ?/g); } return string; } AFNumber_Format(nDec, sepStyle, negStyle, currStyle, strCurrency, bCurrencyPrepend) { const event = globalThis.event; if (!event.value) { return; } let value = this.AFMakeNumber(event.value); if (value === null) { event.value = \"\"; return; } const sign = Math.sign(value); const buf = []; let hasParen = false; if (sign === -1 && bCurrencyPrepend && negStyle === 0) { buf.push(\"-\"); } if ((negStyle === 2 || negStyle === 3) && sign === -1) { buf.push(\"(\"); hasParen = true; } if (bCurrencyPrepend) { buf.push(strCurrency); } sepStyle = Math.min(Math.max(0, Math.floor(sepStyle)), 4); buf.push(\"%,\", sepStyle, \".\", nDec.toString(), \"f\"); if (!bCurrencyPrepend) { buf.push(strCurrency); } if (hasParen) { buf.push(\")\"); } if (negStyle === 1 || negStyle === 3) { event.target.textColor = sign === 1 ? this._color.black : this._color.red; } if ((negStyle !== 0 || bCurrencyPrepend) && sign === -1) { value = -value; } const formatStr = buf.join(\"\"); event.value = this._util.printf(formatStr, value); } AFNumber_Keystroke(nDec, sepStyle, negStyle, currStyle, strCurrency, bCurrencyPrepend) { const event = globalThis.event; let value = this.AFMergeChange(event); if (!value) { return; } value = value.trim(); let pattern; if (sepStyle > 1) { pattern = event.willCommit ? /^[+-]?(\\\\d+(,\\\\d*)?|,\\\\d+)$/ : /^[+-]?\\\\d*,?\\\\d*$/; } else { pattern = event.willCommit ? /^[+-]?(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)$/ : /^[+-]?\\\\d*\\\\.?\\\\d*$/; } if (!pattern.test(value)) { if (event.willCommit) { const err = `${_constants.GlobalConstants.IDS_INVALID_VALUE} ${this._mkTargetName(event)}`; this._app.alert(err); } event.rc = false; } if (event.willCommit && sepStyle > 1) { event.value = parseFloat(value.replace(\",\", \".\")); } } AFPercent_Format(nDec, sepStyle, percentPrepend = false) { if (typeof nDec !== \"number\") { return; } if (typeof sepStyle !== \"number\") { return; } if (nDec < 0) { throw new Error(\"Invalid nDec value in AFPercent_Format\"); } const event = globalThis.event; if (nDec > 512) { event.value = \"%\"; return; } nDec = Math.floor(nDec); sepStyle = Math.min(Math.max(0, Math.floor(sepStyle)), 4); let value = this.AFMakeNumber(event.value); if (value === null) { event.value = \"%\"; return; } const formatStr = `%,${sepStyle}.${nDec}f`; value = this._util.printf(formatStr, value * 100); if (percentPrepend) { event.value = `%${value}`; } else { event.value = `${value}%`; } } AFPercent_Keystroke(nDec, sepStyle) { this.AFNumber_Keystroke(nDec, sepStyle, 0, 0, \"\", true); } AFDate_FormatEx(cFormat) { const event = globalThis.event; const value = event.value; if (!value) { return; } const date = this._parseDate(cFormat, value); if (date !== null) { event.value = this._util.printd(cFormat, date); } } AFDate_Format(pdf) { if (pdf >= 0 && pdf < this._dateFormats.length) { this.AFDate_FormatEx(this._dateFormats[pdf]); } } AFDate_KeystrokeEx(cFormat) { const event = globalThis.event; if (!event.willCommit) { return; } const value = this.AFMergeChange(event); if (!value) { return; } if (this._parseDate(cFormat, value) === null) { const invalid = _constants.GlobalConstants.IDS_INVALID_DATE; const invalid2 = _constants.GlobalConstants.IDS_INVALID_DATE2; const err = `${invalid} ${this._mkTargetName(event)}${invalid2}${cFormat}`; this._app.alert(err); event.rc = false; } } AFDate_Keystroke(pdf) { if (pdf >= 0 && pdf < this._dateFormats.length) { this.AFDate_KeystrokeEx(this._dateFormats[pdf]); } } AFRange_Validate(bGreaterThan, nGreaterThan, bLessThan, nLessThan) { const event = globalThis.event; if (!event.value) { return; } const value = this.AFMakeNumber(event.value); if (value === null) { return; } bGreaterThan = !!bGreaterThan; bLessThan = !!bLessThan; if (bGreaterThan) { nGreaterThan = this.AFMakeNumber(nGreaterThan); if (nGreaterThan === null) { return; } } if (bLessThan) { nLessThan = this.AFMakeNumber(nLessThan); if (nLessThan === null) { return; } } let err = \"\"; if (bGreaterThan && bLessThan) { if (value < nGreaterThan || value > nLessThan) { err = this._util.printf(_constants.GlobalConstants.IDS_GT_AND_LT, nGreaterThan, nLessThan); } } else if (bGreaterThan) { if (value < nGreaterThan) { err = this._util.printf(_constants.GlobalConstants.IDS_GREATER_THAN, nGreaterThan); } } else if (value > nLessThan) { err = this._util.printf(_constants.GlobalConstants.IDS_LESS_THAN, nLessThan); } if (err) { this._app.alert(err); event.rc = false; } } AFSimple(cFunction, nValue1, nValue2) { const value1 = this.AFMakeNumber(nValue1); if (value1 === null) { throw new Error(\"Invalid nValue1 in AFSimple\"); } const value2 = this.AFMakeNumber(nValue2); if (value2 === null) { throw new Error(\"Invalid nValue2 in AFSimple\"); } switch (cFunction) { case \"AVG\": return (value1 + value2) / 2; case \"SUM\": return value1 + value2; case \"PRD\": return value1 * value2; case \"MIN\": return Math.min(value1, value2); case \"MAX\": return Math.max(value1, value2); } throw new Error(\"Invalid cFunction in AFSimple\"); } AFSimple_Calculate(cFunction, cFields) { const actions = { AVG: args => args.reduce((acc, value) => acc + value, 0) / args.length, SUM: args => args.reduce((acc, value) => acc + value, 0), PRD: args => args.reduce((acc, value) => acc * value, 1), MIN: args => args.reduce((acc, value) => Math.min(acc, value), Number.MAX_VALUE), MAX: args => args.reduce((acc, value) => Math.max(acc, value), Number.MIN_VALUE) }; if (!(cFunction in actions)) { throw new TypeError(\"Invalid function in AFSimple_Calculate\"); } const event = globalThis.event; const values = []; for (const cField of cFields) { const field = this._document.getField(cField); const number = this.AFMakeNumber(field.value); if (number !== null) { values.push(number); } } if (values.length === 0) { event.value = cFunction === \"PRD\" ? 1 : 0; return; } const res = actions[cFunction](values); event.value = Math.round(1e6 * res) / 1e6; } AFSpecial_Format(psf) { const event = globalThis.event; if (!event.value) { return; } psf = this.AFMakeNumber(psf); let formatStr; switch (psf) { case 0: formatStr = \"99999\"; break; case 1: formatStr = \"99999-9999\"; break; case 2: if (this._util.printx(\"9999999999\", event.value).length >= 10) { formatStr = \"(999) 999-9999\"; } else { formatStr = \"999-9999\"; } break; case 3: formatStr = \"999-99-9999\"; break; default: throw new Error(\"Invalid psf in AFSpecial_Format\"); } event.value = this._util.printx(formatStr, event.value); } AFSpecial_KeystrokeEx(cMask) { if (!cMask) { return; } const event = globalThis.event; const value = this.AFMergeChange(event); if (!value) { return; } const checkers = new Map([[\"9\", char => char >= \"0\" && char \"a\""},{"path":"/lib/pdf/build/pdf.worker.js","content":"/** * @licstart The following is the entire license notice for the * JavaScript code in this page * * Copyright 2022 Mozilla Foundation * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. * * @licend The above is the entire license notice for the * JavaScript code in this page */ (function webpackUniversalModuleDefinition(root, factory) { if(typeof exports === 'object' && typeof module === 'object') module.exports = factory(); else if(typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf.worker\", [], factory); else if(typeof exports === 'object') exports[\"pdfjs-dist/build/pdf.worker\"] = factory(); else root[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory(); })(this, () => { return /******/ (() => { // webpackBootstrap /******/ \"use strict\"; /******/ var __webpack_modules__ = ([ /* 0 */, /* 1 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.WorkerTask = exports.WorkerMessageHandler = void 0; var _util = __w_pdfjs_require__(2); var _primitives = __w_pdfjs_require__(5); var _pdf_manager = __w_pdfjs_require__(6); var _cleanup_helper = __w_pdfjs_require__(67); var _writer = __w_pdfjs_require__(73); var _is_node = __w_pdfjs_require__(4); var _message_handler = __w_pdfjs_require__(102); var _worker_stream = __w_pdfjs_require__(103); var _core_utils = __w_pdfjs_require__(8); class WorkerTask { constructor(name) { this.name = name; this.terminated = false; this._capability = (0, _util.createPromiseCapability)(); } get finished() { return this._capability.promise; } finish() { this._capability.resolve(); } terminate() { this.terminated = true; } ensureNotTerminated() { if (this.terminated) { throw new Error(\"Worker task was terminated\"); } } } exports.WorkerTask = WorkerTask; class WorkerMessageHandler { static setup(handler, port) { let testMessageProcessed = false; handler.on(\"test\", function wphSetupTest(data) { if (testMessageProcessed) { return; } testMessageProcessed = true; handler.send(\"test\", data instanceof Uint8Array); }); handler.on(\"configure\", function wphConfigure(data) { (0, _util.setVerbosityLevel)(data.verbosity); }); handler.on(\"GetDocRequest\", function wphSetupDoc(data) { return WorkerMessageHandler.createDocumentHandler(data, port); }); } static createDocumentHandler(docParams, port) { let pdfManager; let terminated = false; let cancelXHRs = null; const WorkerTasks = []; const verbosity = (0, _util.getVerbosityLevel)(); const apiVersion = docParams.apiVersion; const workerVersion = '2.14.0'; if (apiVersion !== workerVersion) { throw new Error(`The API version \"${apiVersion}\" does not match ` + `the Worker version \"${workerVersion}\".`); } const enumerableProperties = []; for (const property in []) { enumerableProperties.push(property); } if (enumerableProperties.length) { throw new Error(\"The `Array.prototype` contains unexpected enumerable properties: \" + enumerableProperties.join(\", \") + \"; thus breaking e.g. `for...in` iteration of `Array`s.\"); } if (typeof ReadableStream === \"undefined\") { const partialMsg = \"The browser/environment lacks native support for critical \" + \"functionality used by the PDF.js library (e.g. `ReadableStream`); \"; if (_is_node.isNodeJS) { throw new Error(partialMsg + \"please use a `legacy`-build instead.\"); } throw new Error(partialMsg + \"please update to a supported browser.\"); } const docId = docParams.docId; const docBaseUrl = docParams.docBaseUrl; const workerHandlerName = docParams.docId + \"_worker\"; let handler = new _message_handler.MessageHandler(workerHandlerName, docId, port); function ensureNotTerminated() { if (terminated) { throw new Error(\"Worker was terminated\"); } } function startWorkerTask(task) { WorkerTasks.push(task); } function finishWorkerTask(task) { task.finish(); const i = WorkerTasks.indexOf(task); WorkerTasks.splice(i, 1); } async function loadDocument(recoveryMode) { await pdfManager.ensureDoc(\"checkHeader\"); await pdfManager.ensureDoc(\"parseStartXRef\"); await pdfManager.ensureDoc(\"parse\", [recoveryMode]); await pdfManager.ensureDoc(\"checkFirstPage\", [recoveryMode]); await pdfManager.ensureDoc(\"checkLastPage\", [recoveryMode]); const isPureXfa = await pdfManager.ensureDoc(\"isPureXfa\"); if (isPureXfa) { const task = new WorkerTask(\"loadXfaFonts\"); startWorkerTask(task); await Promise.all([pdfManager.loadXfaFonts(handler, task).catch(reason => {}).then(() => finishWorkerTask(task)), pdfManager.loadXfaImages()]); } const [numPages, fingerprints] = await Promise.all([pdfManager.ensureDoc(\"numPages\"), pdfManager.ensureDoc(\"fingerprints\")]); const htmlForXfa = isPureXfa ? await pdfManager.ensureDoc(\"htmlForXfa\") : null; return { numPages, fingerprints, htmlForXfa }; } function getPdfManager(data, evaluatorOptions, enableXfa) { const pdfManagerCapability = (0, _util.createPromiseCapability)(); let newPdfManager; const source = data.source; if (source.data) { try { newPdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, handler, evaluatorOptions, enableXfa, docBaseUrl); pdfManagerCapability.resolve(newPdfManager); } catch (ex) { pdfManagerCapability.reject(ex); } return pdfManagerCapability.promise; } let pdfStream, cachedChunks = []; try { pdfStream = new _worker_stream.PDFWorkerStream(handler); } catch (ex) { pdfManagerCapability.reject(ex); return pdfManagerCapability.promise; } const fullRequest = pdfStream.getFullReader(); fullRequest.headersReady.then(function () { if (!fullRequest.isRangeSupported) { return; } const disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported; newPdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, { msgHandler: handler, password: source.password, length: fullRequest.contentLength, disableAutoFetch, rangeChunkSize: source.rangeChunkSize }, evaluatorOptions, enableXfa, docBaseUrl); for (let i = 0; i < cachedChunks.length; i++) { newPdfManager.sendProgressiveData(cachedChunks[i]); } cachedChunks = []; pdfManagerCapability.resolve(newPdfManager); cancelXHRs = null; }).catch(function (reason) { pdfManagerCapability.reject(reason); cancelXHRs = null; }); let loaded = 0; const flushChunks = function () { const pdfFile = (0, _util.arraysToBytes)(cachedChunks); if (source.length && pdfFile.length !== source.length) { (0, _util.warn)(\"reported HTTP length is different from actual\"); } try { newPdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, handler, evaluatorOptions, enableXfa, docBaseUrl); pdfManagerCapability.resolve(newPdfManager); } catch (ex) { pdfManagerCapability.reject(ex); } cachedChunks = []; }; const readPromise = new Promise(function (resolve, reject) { const readChunk = function ({ value, done }) { try { ensureNotTerminated(); if (done) { if (!newPdfManager) { flushChunks(); } cancelXHRs = null; return; } loaded += (0, _util.arrayByteLength)(value); if (!fullRequest.isStreamingSupported) { handler.send(\"DocProgress\", { loaded, total: Math.max(loaded, fullRequest.contentLength || 0) }); } if (newPdfManager) { newPdfManager.sendProgressiveData(value); } else { cachedChunks.push(value); } fullRequest.read().then(readChunk, reject); } catch (e) { reject(e); } }; fullRequest.read().then(readChunk, reject); }); readPromise.catch(function (e) { pdfManagerCapability.reject(e); cancelXHRs = null; }); cancelXHRs = function (reason) { pdfStream.cancelAllRequests(reason); }; return pdfManagerCapability.promise; } function setupDoc(data) { function onSuccess(doc) { ensureNotTerminated(); handler.send(\"GetDoc\", { pdfInfo: doc }); } function onFailure(ex) { ensureNotTerminated(); if (ex instanceof _util.PasswordException) { const task = new WorkerTask(`PasswordException: response ${ex.code}`); startWorkerTask(task); handler.sendWithPromise(\"PasswordRequest\", ex).then(function ({ password }) { finishWorkerTask(task); pdfManager.updatePassword(password); pdfManagerReady(); }).catch(function () { finishWorkerTask(task); handler.send(\"DocException\", ex); }); } else if (ex instanceof _util.InvalidPDFException || ex instanceof _util.MissingPDFException || ex instanceof _util.UnexpectedResponseException || ex instanceof _util.UnknownErrorException) { handler.send(\"DocException\", ex); } else { handler.send(\"DocException\", new _util.UnknownErrorException(ex.message, ex.toString())); } } function pdfManagerReady() { ensureNotTerminated(); loadDocument(false).then(onSuccess, function (reason) { ensureNotTerminated(); if (!(reason instanceof _core_utils.XRefParseException)) { onFailure(reason); return; } pdfManager.requestLoadedStream(); pdfManager.onLoadedStream().then(function () { ensureNotTerminated(); loadDocument(true).then(onSuccess, onFailure); }); }); } ensureNotTerminated(); const evaluatorOptions = { maxImageSize: data.maxImageSize, disableFontFace: data.disableFontFace, ignoreErrors: data.ignoreErrors, isEvalSupported: data.isEvalSupported, fontExtraProperties: data.fontExtraProperties, useSystemFonts: data.useSystemFonts, cMapUrl: data.cMapUrl, standardFontDataUrl: data.standardFontDataUrl }; getPdfManager(data, evaluatorOptions, data.enableXfa).then(function (newPdfManager) { if (terminated) { newPdfManager.terminate(new _util.AbortException(\"Worker was terminated.\")); throw new Error(\"Worker was terminated\"); } pdfManager = newPdfManager; pdfManager.onLoadedStream().then(function (stream) { handler.send(\"DataLoaded\", { length: stream.bytes.byteLength }); }); }).then(pdfManagerReady, onFailure); } handler.on(\"GetPage\", function wphSetupGetPage(data) { return pdfManager.getPage(data.pageIndex).then(function (page) { return Promise.all([pdfManager.ensure(page, \"rotate\"), pdfManager.ensure(page, \"ref\"), pdfManager.ensure(page, \"userUnit\"), pdfManager.ensure(page, \"view\")]).then(function ([rotate, ref, userUnit, view]) { return { rotate, ref, userUnit, view }; }); }); }); handler.on(\"GetPageIndex\", function wphSetupGetPageIndex(data) { const pageRef = _primitives.Ref.get(data.num, data.gen); return pdfManager.ensureCatalog(\"getPageIndex\", [pageRef]); }); handler.on(\"GetDestinations\", function wphSetupGetDestinations(data) { return pdfManager.ensureCatalog(\"destinations\"); }); handler.on(\"GetDestination\", function wphSetupGetDestination(data) { return pdfManager.ensureCatalog(\"getDestination\", [data.id]); }); handler.on(\"GetPageLabels\", function wphSetupGetPageLabels(data) { return pdfManager.ensureCatalog(\"pageLabels\"); }); handler.on(\"GetPageLayout\", function wphSetupGetPageLayout(data) { return pdfManager.ensureCatalog(\"pageLayout\"); }); handler.on(\"GetPageMode\", function wphSetupGetPageMode(data) { return pdfManager.ensureCatalog(\"pageMode\"); }); handler.on(\"GetViewerPreferences\", function (data) { return pdfManager.ensureCatalog(\"viewerPreferences\"); }); handler.on(\"GetOpenAction\", function (data) { return pdfManager.ensureCatalog(\"openAction\"); }); handler.on(\"GetAttachments\", function wphSetupGetAttachments(data) { return pdfManager.ensureCatalog(\"attachments\"); }); handler.on(\"GetJavaScript\", function wphSetupGetJavaScript(data) { return pdfManager.ensureCatalog(\"javaScript\"); }); handler.on(\"GetDocJSActions\", function wphSetupGetDocJSActions(data) { return pdfManager.ensureCatalog(\"jsActions\"); }); handler.on(\"GetPageJSActions\", function ({ pageIndex }) { return pdfManager.getPage(pageIndex).then(function (page) { return pdfManager.ensure(page, \"jsActions\"); }); }); handler.on(\"GetOutline\", function wphSetupGetOutline(data) { return pdfManager.ensureCatalog(\"documentOutline\"); }); handler.on(\"GetOptionalContentConfig\", function (data) { return pdfManager.ensureCatalog(\"optionalContentConfig\"); }); handler.on(\"GetPermissions\", function (data) { return pdfManager.ensureCatalog(\"permissions\"); }); handler.on(\"GetMetadata\", function wphSetupGetMetadata(data) { return Promise.all([pdfManager.ensureDoc(\"documentInfo\"), pdfManager.ensureCatalog(\"metadata\")]); }); handler.on(\"GetMarkInfo\", function wphSetupGetMarkInfo(data) { return pdfManager.ensureCatalog(\"markInfo\"); }); handler.on(\"GetData\", function wphSetupGetData(data) { pdfManager.requestLoadedStream(); return pdfManager.onLoadedStream().then(function (stream) { return stream.bytes; }); }); handler.on(\"GetAnnotations\", function ({ pageIndex, intent }) { return pdfManager.getPage(pageIndex).then(function (page) { return page.getAnnotationsData(intent); }); }); handler.on(\"GetFieldObjects\", function (data) { return pdfManager.ensureDoc(\"fieldObjects\"); }); handler.on(\"HasJSActions\", function (data) { return pdfManager.ensureDoc(\"hasJSActions\"); }); handler.on(\"GetCalculationOrderIds\", function (data) { return pdfManager.ensureDoc(\"calculationOrderIds\"); }); handler.on(\"SaveDocument\", function ({ isPureXfa, numPages, annotationStorage, filename }) { pdfManager.requestLoadedStream(); const promises = [pdfManager.onLoadedStream(), pdfManager.ensureCatalog(\"acroForm\"), pdfManager.ensureCatalog(\"acroFormRef\"), pdfManager.ensureDoc(\"xref\"), pdfManager.ensureDoc(\"startXRef\")]; if (isPureXfa) { promises.push(pdfManager.serializeXfaData(annotationStorage)); } else { for (let pageIndex = 0; pageIndex < numPages; pageIndex++) { promises.push(pdfManager.getPage(pageIndex).then(function (page) { const task = new WorkerTask(`Save: page ${pageIndex}`); return page.save(handler, task, annotationStorage).finally(function () { finishWorkerTask(task); }); })); } } return Promise.all(promises).then(function ([stream, acroForm, acroFormRef, xref, startXRef, ...refs]) { let newRefs = []; let xfaData = null; if (isPureXfa) { xfaData = refs[0]; if (!xfaData) { return stream.bytes; } } else { for (const ref of refs) { newRefs = ref.filter(x => x !== null).reduce((a, b) => a.concat(b), newRefs); } if (newRefs.length === 0) { return stream.bytes; } } const xfa = acroForm instanceof _primitives.Dict && acroForm.get(\"XFA\") || null; let xfaDatasetsRef = null; let hasXfaDatasetsEntry = false; if (Array.isArray(xfa)) { for (let i = 0, ii = xfa.length; i < ii; i += 2) { if (xfa[i] === \"datasets\") { xfaDatasetsRef = xfa[i + 1]; acroFormRef = null; hasXfaDatasetsEntry = true; } } if (xfaDatasetsRef === null) { xfaDatasetsRef = xref.getNewRef(); } } else if (xfa) { acroFormRef = null; (0, _util.warn)(\"Unsupported XFA type.\"); } let newXrefInfo = Object.create(null); if (xref.trailer) { const infoObj = Object.create(null); const xrefInfo = xref.trailer.get(\"Info\") || null; if (xrefInfo instanceof _primitives.Dict) { xrefInfo.forEach((key, value) => { if (typeof value === \"string\") { infoObj[key] = (0, _util.stringToPDFString)(value); } }); } newXrefInfo = { rootRef: xref.trailer.getRaw(\"Root\") || null, encryptRef: xref.trailer.getRaw(\"Encrypt\") || null, newRef: xref.getNewRef(), infoRef: xref.trailer.getRaw(\"Info\") || null, info: infoObj, fileIds: xref.trailer.get(\"ID\") || null, startXRef, filename }; } xref.resetNewRef(); return (0, _writer.incrementalUpdate)({ originalData: stream.bytes, xrefInfo: newXrefInfo, newRefs, xref, hasXfa: !!xfa, xfaDatasetsRef, hasXfaDatasetsEntry, acroFormRef, acroForm, xfaData }); }); }); handler.on(\"GetOperatorList\", function wphSetupRenderPage(data, sink) { const pageIndex = data.pageIndex; pdfManager.getPage(pageIndex).then(function (page) { const task = new WorkerTask(`GetOperatorList: page ${pageIndex}`); startWorkerTask(task); const start = verbosity >= _util.VerbosityLevel.INFOS ? Date.now() : 0; page.getOperatorList({ handler, sink, task, intent: data.intent, cacheKey: data.cacheKey, annotationStorage: data.annotationStorage }).then(function (operatorListInfo) { finishWorkerTask(task); if (start) { (0, _util.info)(`page=${pageIndex + 1} - getOperatorList: time=` + `${Date.now() - start}ms, len=${operatorListInfo.length}`); } sink.close(); }, function (reason) { finishWorkerTask(task); if (task.terminated) { return; } handler.send(\"UnsupportedFeature\", { featureId: _util.UNSUPPORTED_FEATURES.errorOperatorList }); sink.error(reason); }); }); }); handler.on(\"GetTextContent\", function wphExtractText(data, sink) { const pageIndex = data.pageIndex; pdfManager.getPage(pageIndex).then(function (page) { const task = new WorkerTask(\"GetTextContent: page \" + pageIndex); startWorkerTask(task); const start = verbosity >= _util.VerbosityLevel.INFOS ? Date.now() : 0; page.extractTextContent({ handler, task, sink, includeMarkedContent: data.includeMarkedContent, combineTextItems: data.combineTextItems }).then(function () { finishWorkerTask(task); if (start) { (0, _util.info)(`page=${pageIndex + 1} - getTextContent: time=` + `${Date.now() - start}ms`); } sink.close(); }, function (reason) { finishWorkerTask(task); if (task.terminated) { return; } sink.error(reason); }); }); }); handler.on(\"GetStructTree\", function wphGetStructTree(data) { return pdfManager.getPage(data.pageIndex).then(function (page) { return pdfManager.ensure(page, \"getStructTree\"); }); }); handler.on(\"FontFallback\", function (data) { return pdfManager.fontFallback(data.id, handler); }); handler.on(\"Cleanup\", function wphCleanup(data) { return pdfManager.cleanup(true); }); handler.on(\"Terminate\", function wphTerminate(data) { terminated = true; const waitOn = []; if (pdfManager) { pdfManager.terminate(new _util.AbortException(\"Worker was terminated.\")); const cleanupPromise = pdfManager.cleanup(); waitOn.push(cleanupPromise); pdfManager = null; } else { (0, _cleanup_helper.clearGlobalCaches)(); } if (cancelXHRs) { cancelXHRs(new _util.AbortException(\"Worker was terminated.\")); } for (const task of WorkerTasks) { waitOn.push(task.finished); task.terminate(); } return Promise.all(waitOn).then(function () { handler.destroy(); handler = null; }); }); handler.on(\"Ready\", function wphReady(data) { setupDoc(docParams); docParams = null; }); return workerHandlerName; } static initializeFromPort(port) { const handler = new _message_handler.MessageHandler(\"worker\", \"main\", port); WorkerMessageHandler.setup(handler, port); handler.send(\"ready\", null); } } exports.WorkerMessageHandler = WorkerMessageHandler; function isMessagePort(maybePort) { return typeof maybePort.postMessage === \"function\" && \"onmessage\" in maybePort; } if (typeof window === \"undefined\" && !_is_node.isNodeJS && typeof self !== \"undefined\" && isMessagePort(self)) { WorkerMessageHandler.initializeFromPort(self); } /***/ }), /* 2 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.UNSUPPORTED_FEATURES = exports.TextRenderingMode = exports.StreamType = exports.RenderingIntentFlag = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMode = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0; exports.arrayByteLength = arrayByteLength; exports.arraysToBytes = arraysToBytes; exports.assert = assert; exports.bytesToString = bytesToString; exports.createPromiseCapability = createPromiseCapability; exports.createValidAbsoluteUrl = createValidAbsoluteUrl; exports.escapeString = escapeString; exports.getModificationDate = getModificationDate; exports.getVerbosityLevel = getVerbosityLevel; exports.info = info; exports.isArrayBuffer = isArrayBuffer; exports.isArrayEqual = isArrayEqual; exports.isAscii = isAscii; exports.objectFromMap = objectFromMap; exports.objectSize = objectSize; exports.setVerbosityLevel = setVerbosityLevel; exports.shadow = shadow; exports.string32 = string32; exports.stringToBytes = stringToBytes; exports.stringToPDFString = stringToPDFString; exports.stringToUTF16BEString = stringToUTF16BEString; exports.stringToUTF8String = stringToUTF8String; exports.unreachable = unreachable; exports.utf8StringToString = utf8StringToString; exports.warn = warn; __w_pdfjs_require__(3); const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0]; exports.IDENTITY_MATRIX = IDENTITY_MATRIX; const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0]; exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX; const RenderingIntentFlag = { ANY: 0x01, DISPLAY: 0x02, PRINT: 0x04, ANNOTATIONS_FORMS: 0x10, ANNOTATIONS_STORAGE: 0x20, ANNOTATIONS_DISABLE: 0x40, OPLIST: 0x100 }; exports.RenderingIntentFlag = RenderingIntentFlag; const AnnotationMode = { DISABLE: 0, ENABLE: 1, ENABLE_FORMS: 2, ENABLE_STORAGE: 3 }; exports.AnnotationMode = AnnotationMode; const PermissionFlag = { PRINT: 0x04, MODIFY_CONTENTS: 0x08, COPY: 0x10, MODIFY_ANNOTATIONS: 0x20, FILL_INTERACTIVE_FORMS: 0x100, COPY_FOR_ACCESSIBILITY: 0x200, ASSEMBLE: 0x400, PRINT_HIGH_QUALITY: 0x800 }; exports.PermissionFlag = PermissionFlag; const TextRenderingMode = { FILL: 0, STROKE: 1, FILL_STROKE: 2, INVISIBLE: 3, FILL_ADD_TO_PATH: 4, STROKE_ADD_TO_PATH: 5, FILL_STROKE_ADD_TO_PATH: 6, ADD_TO_PATH: 7, FILL_STROKE_MASK: 3, ADD_TO_PATH_FLAG: 4 }; exports.TextRenderingMode = TextRenderingMode; const ImageKind = { GRAYSCALE_1BPP: 1, RGB_24BPP: 2, RGBA_32BPP: 3 }; exports.ImageKind = ImageKind; const AnnotationType = { TEXT: 1, LINK: 2, FREETEXT: 3, LINE: 4, SQUARE: 5, CIRCLE: 6, POLYGON: 7, POLYLINE: 8, HIGHLIGHT: 9, UNDERLINE: 10, SQUIGGLY: 11, STRIKEOUT: 12, STAMP: 13, CARET: 14, INK: 15, POPUP: 16, FILEATTACHMENT: 17, SOUND: 18, MOVIE: 19, WIDGET: 20, SCREEN: 21, PRINTERMARK: 22, TRAPNET: 23, WATERMARK: 24, THREED: 25, REDACT: 26 }; exports.AnnotationType = AnnotationType; const AnnotationStateModelType = { MARKED: \"Marked\", REVIEW: \"Review\" }; exports.AnnotationStateModelType = AnnotationStateModelType; const AnnotationMarkedState = { MARKED: \"Marked\", UNMARKED: \"Unmarked\" }; exports.AnnotationMarkedState = AnnotationMarkedState; const AnnotationReviewState = { ACCEPTED: \"Accepted\", REJECTED: \"Rejected\", CANCELLED: \"Cancelled\", COMPLETED: \"Completed\", NONE: \"None\" }; exports.AnnotationReviewState = AnnotationReviewState; const AnnotationReplyType = { GROUP: \"Group\", REPLY: \"R\" }; exports.AnnotationReplyType = AnnotationReplyType; const AnnotationFlag = { INVISIBLE: 0x01, HIDDEN: 0x02, PRINT: 0x04, NOZOOM: 0x08, NOROTATE: 0x10, NOVIEW: 0x20, READONLY: 0x40, LOCKED: 0x80, TOGGLENOVIEW: 0x100, LOCKEDCONTENTS: 0x200 }; exports.AnnotationFlag = AnnotationFlag; const AnnotationFieldFlag = { READONLY: 0x0000001, REQUIRED: 0x0000002, NOEXPORT: 0x0000004, MULTILINE: 0x0001000, PASSWORD: 0x0002000, NOTOGGLETOOFF: 0x0004000, RADIO: 0x0008000, PUSHBUTTON: 0x0010000, COMBO: 0x0020000, EDIT: 0x0040000, SORT: 0x0080000, FILESELECT: 0x0100000, MULTISELECT: 0x0200000, DONOTSPELLCHECK: 0x0400000, DONOTSCROLL: 0x0800000, COMB: 0x1000000, RICHTEXT: 0x2000000, RADIOSINUNISON: 0x2000000, COMMITONSELCHANGE: 0x4000000 }; exports.AnnotationFieldFlag = AnnotationFieldFlag; const AnnotationBorderStyleType = { SOLID: 1, DASHED: 2, BEVELED: 3, INSET: 4, UNDERLINE: 5 }; exports.AnnotationBorderStyleType = AnnotationBorderStyleType; const AnnotationActionEventType = { E: \"Mouse Enter\", X: \"Mouse Exit\", D: \"Mouse Down\", U: \"Mouse Up\", Fo: \"Focus\", Bl: \"Blur\", PO: \"PageOpen\", PC: \"PageClose\", PV: \"PageVisible\", PI: \"PageInvisible\", K: \"Keystroke\", F: \"Format\", V: \"Validate\", C: \"Calculate\" }; exports.AnnotationActionEventType = AnnotationActionEventType; const DocumentActionEventType = { WC: \"WillClose\", WS: \"WillSave\", DS: \"DidSave\", WP: \"WillPrint\", DP: \"DidPrint\" }; exports.DocumentActionEventType = DocumentActionEventType; const PageActionEventType = { O: \"PageOpen\", C: \"PageClose\" }; exports.PageActionEventType = PageActionEventType; const StreamType = { UNKNOWN: \"UNKNOWN\", FLATE: \"FLATE\", LZW: \"LZW\", DCT: \"DCT\", JPX: \"JPX\", JBIG: \"JBIG\", A85: \"A85\", AHX: \"AHX\", CCF: \"CCF\", RLX: \"RLX\" }; exports.StreamType = StreamType; const FontType = { UNKNOWN: \"UNKNOWN\", TYPE1: \"TYPE1\", TYPE1STANDARD: \"TYPE1STANDARD\", TYPE1C: \"TYPE1C\", CIDFONTTYPE0: \"CIDFONTTYPE0\", CIDFONTTYPE0C: \"CIDFONTTYPE0C\", TRUETYPE: \"TRUETYPE\", CIDFONTTYPE2: \"CIDFONTTYPE2\", TYPE3: \"TYPE3\", OPENTYPE: \"OPENTYPE\", TYPE0: \"TYPE0\", MMTYPE1: \"MMTYPE1\" }; exports.FontType = FontType; const VerbosityLevel = { ERRORS: 0, WARNINGS: 1, INFOS: 5 }; exports.VerbosityLevel = VerbosityLevel; const CMapCompressionType = { NONE: 0, BINARY: 1, STREAM: 2 }; exports.CMapCompressionType = CMapCompressionType; const OPS = { dependency: 1, setLineWidth: 2, setLineCap: 3, setLineJoin: 4, setMiterLimit: 5, setDash: 6, setRenderingIntent: 7, setFlatness: 8, setGState: 9, save: 10, restore: 11, transform: 12, moveTo: 13, lineTo: 14, curveTo: 15, curveTo2: 16, curveTo3: 17, closePath: 18, rectangle: 19, stroke: 20, closeStroke: 21, fill: 22, eoFill: 23, fillStroke: 24, eoFillStroke: 25, closeFillStroke: 26, closeEOFillStroke: 27, endPath: 28, clip: 29, eoClip: 30, beginText: 31, endText: 32, setCharSpacing: 33, setWordSpacing: 34, setHScale: 35, setLeading: 36, setFont: 37, setTextRenderingMode: 38, setTextRise: 39, moveText: 40, setLeadingMoveText: 41, setTextMatrix: 42, nextLine: 43, showText: 44, showSpacedText: 45, nextLineShowText: 46, nextLineSetSpacingShowText: 47, setCharWidth: 48, setCharWidthAndBounds: 49, setStrokeColorSpace: 50, setFillColorSpace: 51, setStrokeColor: 52, setStrokeColorN: 53, setFillColor: 54, setFillColorN: 55, setStrokeGray: 56, setFillGray: 57, setStrokeRGBColor: 58, setFillRGBColor: 59, setStrokeCMYKColor: 60, setFillCMYKColor: 61, shadingFill: 62, beginInlineImage: 63, beginImageData: 64, endInlineImage: 65, paintXObject: 66, markPoint: 67, markPointProps: 68, beginMarkedContent: 69, beginMarkedContentProps: 70, endMarkedContent: 71, beginCompat: 72, endCompat: 73, paintFormXObjectBegin: 74, paintFormXObjectEnd: 75, beginGroup: 76, endGroup: 77, beginAnnotations: 78, endAnnotations: 79, beginAnnotation: 80, endAnnotation: 81, paintJpegXObject: 82, paintImageMaskXObject: 83, paintImageMaskXObjectGroup: 84, paintImageXObject: 85, paintInlineImageXObject: 86, paintInlineImageXObjectGroup: 87, paintImageXObjectRepeat: 88, paintImageMaskXObjectRepeat: 89, paintSolidColorImageMask: 90, constructPath: 91 }; exports.OPS = OPS; const UNSUPPORTED_FEATURES = { unknown: \"unknown\", forms: \"forms\", javaScript: \"javaScript\", signatures: \"signatures\", smask: \"smask\", shadingPattern: \"shadingPattern\", font: \"font\", errorTilingPattern: \"errorTilingPattern\", errorExtGState: \"errorExtGState\", errorXObject: \"errorXObject\", errorFontLoadType3: \"errorFontLoadType3\", errorFontState: \"errorFontState\", errorFontMissing: \"errorFontMissing\", errorFontTranslate: \"errorFontTranslate\", errorColorSpace: \"errorColorSpace\", errorOperatorList: \"errorOperatorList\", errorFontToUnicode: \"errorFontToUnicode\", errorFontLoadNative: \"errorFontLoadNative\", errorFontBuildPath: \"errorFontBuildPath\", errorFontGetPath: \"errorFontGetPath\", errorMarkedContent: \"errorMarkedContent\", errorContentSubStream: \"errorContentSubStream\" }; exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES; const PasswordResponses = { NEED_PASSWORD: 1, INCORRECT_PASSWORD: 2 }; exports.PasswordResponses = PasswordResponses; let verbosity = VerbosityLevel.WARNINGS; function setVerbosityLevel(level) { if (Number.isInteger(level)) { verbosity = level; } } function getVerbosityLevel() { return verbosity; } function info(msg) { if (verbosity >= VerbosityLevel.INFOS) { console.log(`Info: ${msg}`); } } function warn(msg) { if (verbosity >= VerbosityLevel.WARNINGS) { console.log(`Warning: ${msg}`); } } function unreachable(msg) { throw new Error(msg); } function assert(cond, msg) { if (!cond) { unreachable(msg); } } function _isValidProtocol(url) { if (!url) { return false; } switch (url.protocol) { case \"http:\": case \"https:\": case \"ftp:\": case \"mailto:\": case \"tel:\": return true; default: return false; } } function createValidAbsoluteUrl(url, baseUrl = null, options = null) { if (!url) { return null; } try { if (options && typeof url === \"string\") { if (options.addDefaultProtocol && url.startsWith(\"www.\")) { const dots = url.match(/\\./g); if (dots && dots.length >= 2) { url = `http://${url}`; } } if (options.tryConvertEncoding) { try { url = stringToUTF8String(url); } catch (ex) {} } } const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url); if (_isValidProtocol(absoluteUrl)) { return absoluteUrl; } } catch (ex) {} return null; } function shadow(obj, prop, value) { Object.defineProperty(obj, prop, { value, enumerable: true, configurable: true, writable: false }); return value; } const BaseException = function BaseExceptionClosure() { function BaseException(message, name) { if (this.constructor === BaseException) { unreachable(\"Cannot initialize BaseException.\"); } this.message = message; this.name = name; } BaseException.prototype = new Error(); BaseException.constructor = BaseException; return BaseException; }(); exports.BaseException = BaseException; class PasswordException extends BaseException { constructor(msg, code) { super(msg, \"PasswordException\"); this.code = code; } } exports.PasswordException = PasswordException; class UnknownErrorException extends BaseException { constructor(msg, details) { super(msg, \"UnknownErrorException\"); this.details = details; } } exports.UnknownErrorException = UnknownErrorException; class InvalidPDFException extends BaseException { constructor(msg) { super(msg, \"InvalidPDFException\"); } } exports.InvalidPDFException = InvalidPDFException; class MissingPDFException extends BaseException { constructor(msg) { super(msg, \"MissingPDFException\"); } } exports.MissingPDFException = MissingPDFException; class UnexpectedResponseException extends BaseException { constructor(msg, status) { super(msg, \"UnexpectedResponseException\"); this.status = status; } } exports.UnexpectedResponseException = UnexpectedResponseException; class FormatError extends BaseException { constructor(msg) { super(msg, \"FormatError\"); } } exports.FormatError = FormatError; class AbortException extends BaseException { constructor(msg) { super(msg, \"AbortException\"); } } exports.AbortException = AbortException; function bytesToString(bytes) { if (typeof bytes !== \"object\" || bytes === null || bytes.length === undefined) { unreachable(\"Invalid argument for bytesToString\"); } const length = bytes.length; const MAX_ARGUMENT_COUNT = 8192; if (length < MAX_ARGUMENT_COUNT) { return String.fromCharCode.apply(null, bytes); } const strBuf = []; for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) { const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length); const chunk = bytes.subarray(i, chunkEnd); strBuf.push(String.fromCharCode.apply(null, chunk)); } return strBuf.join(\"\"); } function stringToBytes(str) { if (typeof str !== \"string\") { unreachable(\"Invalid argument for stringToBytes\"); } const length = str.length; const bytes = new Uint8Array(length); for (let i = 0; i < length; ++i) { bytes[i] = str.charCodeAt(i) & 0xff; } return bytes; } function arrayByteLength(arr) { if (arr.length !== undefined) { return arr.length; } if (arr.byteLength !== undefined) { return arr.byteLength; } unreachable(\"Invalid argument for arrayByteLength\"); } function arraysToBytes(arr) { const length = arr.length; if (length === 1 && arr[0] instanceof Uint8Array) { return arr[0]; } let resultLength = 0; for (let i = 0; i < length; i++) { resultLength += arrayByteLength(arr[i]); } let pos = 0; const data = new Uint8Array(resultLength); for (let i = 0; i < length; i++) { let item = arr[i]; if (!(item instanceof Uint8Array)) { if (typeof item === \"string\") { item = stringToBytes(item); } else { item = new Uint8Array(item); } } const itemLength = item.byteLength; data.set(item, pos); pos += itemLength; } return data; } function string32(value) { return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff); } function objectSize(obj) { return Object.keys(obj).length; } function objectFromMap(map) { const obj = Object.create(null); for (const [key, value] of map) { obj[key] = value; } return obj; } function isLittleEndian() { const buffer8 = new Uint8Array(4); buffer8[0] = 1; const view32 = new Uint32Array(buffer8.buffer, 0, 1); return view32[0] === 1; } function isEvalSupported() { try { new Function(\"\"); return true; } catch (e) { return false; } } class FeatureTest { static get isLittleEndian() { return shadow(this, \"isLittleEndian\", isLittleEndian()); } static get isEvalSupported() { return shadow(this, \"isEvalSupported\", isEvalSupported()); } static get isOffscreenCanvasSupported() { return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\"); } } exports.FeatureTest = FeatureTest; const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\")); class Util { static makeHexColor(r, g, b) { return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`; } static scaleMinMax(transform, minMax) { let temp; if (transform[0]) { if (transform[0] < 0) { temp = minMax[0]; minMax[0] = minMax[1]; minMax[1] = temp; } minMax[0] *= transform[0]; minMax[1] *= transform[0]; if (transform[3] < 0) { temp = minMax[2]; minMax[2] = minMax[3]; minMax[3] = temp; } minMax[2] *= transform[3]; minMax[3] *= transform[3]; } else { temp = minMax[0]; minMax[0] = minMax[2]; minMax[2] = temp; temp = minMax[1]; minMax[1] = minMax[3]; minMax[3] = temp; if (transform[1] < 0) { temp = minMax[2]; minMax[2] = minMax[3]; minMax[3] = temp; } minMax[2] *= transform[1]; minMax[3] *= transform[1]; if (transform[2] < 0) { temp = minMax[0]; minMax[0] = minMax[1]; minMax[1] = temp; } minMax[0] *= transform[2]; minMax[1] *= transform[2]; } minMax[0] += transform[4]; minMax[1] += transform[4]; minMax[2] += transform[5]; minMax[3] += transform[5]; } static transform(m1, m2) { return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]]; } static applyTransform(p, m) { const xt = p[0] * m[0] + p[1] * m[2] + m[4]; const yt = p[0] * m[1] + p[1] * m[3] + m[5]; return [xt, yt]; } static applyInverseTransform(p, m) { const d = m[0] * m[3] - m[1] * m[2]; const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d; const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d; return [xt, yt]; } static getAxialAlignedBoundingBox(r, m) { const p1 = Util.applyTransform(r, m); const p2 = Util.applyTransform(r.slice(2, 4), m); const p3 = Util.applyTransform([r[0], r[3]], m); const p4 = Util.applyTransform([r[2], r[1]], m); return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])]; } static inverseTransform(m) { const d = m[0] * m[3] - m[1] * m[2]; return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d]; } static apply3dTransform(m, v) { return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]]; } static singularValueDecompose2dScale(m) { const transpose = [m[0], m[2], m[1], m[3]]; const a = m[0] * transpose[0] + m[1] * transpose[2]; const b = m[0] * transpose[1] + m[1] * transpose[3]; const c = m[2] * transpose[0] + m[3] * transpose[2]; const d = m[2] * transpose[1] + m[3] * transpose[3]; const first = (a + d) / 2; const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2; const sx = first + second || 1; const sy = first - second || 1; return [Math.sqrt(sx), Math.sqrt(sy)]; } static normalizeRect(rect) { const r = rect.slice(0); if (rect[0] > rect[2]) { r[0] = rect[2]; r[2] = rect[0]; } if (rect[1] > rect[3]) { r[1] = rect[3]; r[3] = rect[1]; } return r; } static intersect(rect1, rect2) { const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2])); const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2])); if (xLow > xHigh) { return null; } const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3])); const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3])); if (yLow > yHigh) { return null; } return [xLow, yLow, xHigh, yHigh]; } static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) { const tvalues = [], bounds = [[], []]; let a, b, c, t, t1, t2, b2ac, sqrtb2ac; for (let i = 0; i < 2; ++i) { if (i === 0) { b = 6 * x0 - 12 * x1 + 6 * x2; a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3; c = 3 * x1 - 3 * x0; } else { b = 6 * y0 - 12 * y1 + 6 * y2; a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3; c = 3 * y1 - 3 * y0; } if (Math.abs(a) < 1e-12) { if (Math.abs(b) < 1e-12) { continue; } t = -c / b; if (0 < t && t < 1) { tvalues.push(t); } continue; } b2ac = b * b - 4 * c * a; sqrtb2ac = Math.sqrt(b2ac); if (b2ac < 0) { continue; } t1 = (-b + sqrtb2ac) / (2 * a); if (0 < t1 && t1 < 1) { tvalues.push(t1); } t2 = (-b - sqrtb2ac) / (2 * a); if (0 < t2 && t2 < 1) { tvalues.push(t2); } } let j = tvalues.length, mt; const jlen = j; while (j--) { t = tvalues[j]; mt = 1 - t; bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3; bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3; } bounds[0][jlen] = x0; bounds[1][jlen] = y0; bounds[0][jlen + 1] = x3; bounds[1][jlen + 1] = y3; bounds[0].length = bounds[1].length = jlen + 2; return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])]; } } exports.Util = Util; const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac]; function stringToPDFString(str) { if (str[0] >= \"\\xEF\") { let encoding; if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") { encoding = \"utf-16be\"; } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") { encoding = \"utf-16le\"; } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") { encoding = \"utf-8\"; } if (encoding) { try { const decoder = new TextDecoder(encoding, { fatal: true }); const buffer = stringToBytes(str); return decoder.decode(buffer); } catch (ex) { warn(`stringToPDFString: \"${ex}\".`); } } } const strBuf = []; for (let i = 0, ii = str.length; i < ii; i++) { const code = PDFStringTranslateTable[str.charCodeAt(i)]; strBuf.push(code ? String.fromCharCode(code) : str.charAt(i)); } return strBuf.join(\"\"); } function escapeString(str) { return str.replace(/([()\\\\ \\r])/g, match => { if (match === \" \") { return \"\\ \"; } else if (match === \"\\r\") { return \"\\\\r\"; } return `\\\\${match}`; }); } function isAscii(str) { return /^[\\x00-\\x7F]*$/.test(str); } function stringToUTF16BEString(str) { const buf = [\"\\xFE\\xFF\"]; for (let i = 0, ii = str.length; i < ii; i++) { const char = str.charCodeAt(i); buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff)); } return buf.join(\"\"); } function stringToUTF8String(str) { return decodeURIComponent(escape(str)); } function utf8StringToString(str) { return unescape(encodeURIComponent(str)); } function isArrayBuffer(v) { return typeof v === \"object\" && v !== null && v.byteLength !== undefined; } function isArrayEqual(arr1, arr2) { if (arr1.length !== arr2.length) { return false; } for (let i = 0, ii = arr1.length; i < ii; i++) { if (arr1[i] !== arr2[i]) { return false; } } return true; } function getModificationDate(date = new Date()) { const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")]; return buffer.join(\"\"); } function createPromiseCapability() { const capability = Object.create(null); let isSettled = false; Object.defineProperty(capability, \"settled\", { get() { return isSettled; } }); capability.promise = new Promise(function (resolve, reject) { capability.resolve = function (data) { isSettled = true; resolve(data); }; capability.reject = function (reason) { isSettled = true; reject(reason); }; }); return capability; } /***/ }), /* 3 */ /***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => { var _is_node = __w_pdfjs_require__(4); ; /***/ }), /* 4 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.isNodeJS = void 0; const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\"); exports.isNodeJS = isNodeJS; /***/ }), /* 5 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.RefSetCache = exports.RefSet = exports.Ref = exports.Name = exports.EOF = exports.Dict = exports.Cmd = exports.CIRCULAR_REF = void 0; exports.clearPrimitiveCaches = clearPrimitiveCaches; exports.isCmd = isCmd; exports.isDict = isDict; exports.isName = isName; exports.isRefsEqual = isRefsEqual; var _util = __w_pdfjs_require__(2); const CIRCULAR_REF = Symbol(\"CIRCULAR_REF\"); exports.CIRCULAR_REF = CIRCULAR_REF; const EOF = Symbol(\"EOF\"); exports.EOF = EOF; const Name = function NameClosure() { let nameCache = Object.create(null); class Name { constructor(name) { this.name = name; } static get(name) { const nameValue = nameCache[name]; return nameValue ? nameValue : nameCache[name] = new Name(name); } static _clearCache() { nameCache = Object.create(null); } } return Name; }(); exports.Name = Name; const Cmd = function CmdClosure() { let cmdCache = Object.create(null); class Cmd { constructor(cmd) { this.cmd = cmd; } static get(cmd) { const cmdValue = cmdCache[cmd]; return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd); } static _clearCache() { cmdCache = Object.create(null); } } return Cmd; }(); exports.Cmd = Cmd; const nonSerializable = function nonSerializableClosure() { return nonSerializable; }; class Dict { constructor(xref = null) { this._map = Object.create(null); this.xref = xref; this.objId = null; this.suppressEncryption = false; this.__nonSerializable__ = nonSerializable; } assignXref(newXref) { this.xref = newXref; } get size() { return Object.keys(this._map).length; } get(key1, key2, key3) { let value = this._map[key1]; if (value === undefined && key2 !== undefined) { value = this._map[key2]; if (value === undefined && key3 !== undefined) { value = this._map[key3]; } } if (value instanceof Ref && this.xref) { return this.xref.fetch(value, this.suppressEncryption); } return value; } async getAsync(key1, key2, key3) { let value = this._map[key1]; if (value === undefined && key2 !== undefined) { value = this._map[key2]; if (value === undefined && key3 !== undefined) { value = this._map[key3]; } } if (value instanceof Ref && this.xref) { return this.xref.fetchAsync(value, this.suppressEncryption); } return value; } getArray(key1, key2, key3) { let value = this._map[key1]; if (value === undefined && key2 !== undefined) { value = this._map[key2]; if (value === undefined && key3 !== undefined) { value = this._map[key3]; } } if (value instanceof Ref && this.xref) { value = this.xref.fetch(value, this.suppressEncryption); } if (Array.isArray(value)) { value = value.slice(); for (let i = 0, ii = value.length; i < ii; i++) { if (value[i] instanceof Ref && this.xref) { value[i] = this.xref.fetch(value[i], this.suppressEncryption); } } } return value; } getRaw(key) { return this._map[key]; } getKeys() { return Object.keys(this._map); } getRawValues() { return Object.values(this._map); } set(key, value) { this._map[key] = value; } has(key) { return this._map[key] !== undefined; } forEach(callback) { for (const key in this._map) { callback(key, this.get(key)); } } static get empty() { const emptyDict = new Dict(null); emptyDict.set = (key, value) => { (0, _util.unreachable)(\"Should not call `set` on the empty dictionary.\"); }; return (0, _util.shadow)(this, \"empty\", emptyDict); } static merge({ xref, dictArray, mergeSubDicts = false }) { const mergedDict = new Dict(xref), properties = new Map(); for (const dict of dictArray) { if (!(dict instanceof Dict)) { continue; } for (const [key, value] of Object.entries(dict._map)) { let property = properties.get(key); if (property === undefined) { property = []; properties.set(key, property); } else if (!mergeSubDicts || !(value instanceof Dict)) { continue; } property.push(value); } } for (const [name, values] of properties) { if (values.length === 1 || !(values[0] instanceof Dict)) { mergedDict._map[name] = values[0]; continue; } const subDict = new Dict(xref); for (const dict of values) { for (const [key, value] of Object.entries(dict._map)) { if (subDict._map[key] === undefined) { subDict._map[key] = value; } } } if (subDict.size > 0) { mergedDict._map[name] = subDict; } } properties.clear(); return mergedDict.size > 0 ? mergedDict : Dict.empty; } } exports.Dict = Dict; const Ref = function RefClosure() { let refCache = Object.create(null); class Ref { constructor(num, gen) { this.num = num; this.gen = gen; } toString() { if (this.gen === 0) { return `${this.num}R`; } return `${this.num}R${this.gen}`; } static get(num, gen) { const key = gen === 0 ? `${num}R` : `${num}R${gen}`; const refValue = refCache[key]; return refValue ? refValue : refCache[key] = new Ref(num, gen); } static _clearCache() { refCache = Object.create(null); } } return Ref; }(); exports.Ref = Ref; class RefSet { constructor(parent = null) { this._set = new Set(parent && parent._set); } has(ref) { return this._set.has(ref.toString()); } put(ref) { this._set.add(ref.toString()); } remove(ref) { this._set.delete(ref.toString()); } [Symbol.iterator]() { return this._set.values(); } clear() { this._set.clear(); } } exports.RefSet = RefSet; class RefSetCache { constructor() { this._map = new Map(); } get size() { return this._map.size; } get(ref) { return this._map.get(ref.toString()); } has(ref) { return this._map.has(ref.toString()); } put(ref, obj) { this._map.set(ref.toString(), obj); } putAlias(ref, aliasRef) { this._map.set(ref.toString(), this.get(aliasRef)); } [Symbol.iterator]() { return this._map.values(); } clear() { this._map.clear(); } } exports.RefSetCache = RefSetCache; function isName(v, name) { return v instanceof Name && (name === undefined || v.name === name); } function isCmd(v, cmd) { return v instanceof Cmd && (cmd === undefined || v.cmd === cmd); } function isDict(v, type) { return v instanceof Dict && (type === undefined || isName(v.get(\"Type\"), type)); } function isRefsEqual(v1, v2) { return v1.num === v2.num && v1.gen === v2.gen; } function clearPrimitiveCaches() { Cmd._clearCache(); Name._clearCache(); Ref._clearCache(); } /***/ }), /* 6 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.NetworkPdfManager = exports.LocalPdfManager = void 0; var _util = __w_pdfjs_require__(2); var _chunked_stream = __w_pdfjs_require__(7); var _core_utils = __w_pdfjs_require__(8); var _document = __w_pdfjs_require__(11); var _stream = __w_pdfjs_require__(10); function parseDocBaseUrl(url) { if (url) { const absoluteUrl = (0, _util.createValidAbsoluteUrl)(url); if (absoluteUrl) { return absoluteUrl.href; } (0, _util.warn)(`Invalid absolute docBaseUrl: \"${url}\".`); } return null; } class BasePdfManager { constructor() { if (this.constructor === BasePdfManager) { (0, _util.unreachable)(\"Cannot initialize BasePdfManager.\"); } } get docId() { return this._docId; } get password() { return this._password; } get docBaseUrl() { const catalog = this.pdfDocument.catalog; return (0, _util.shadow)(this, \"docBaseUrl\", catalog.baseUrl || this._docBaseUrl); } onLoadedStream() { (0, _util.unreachable)(\"Abstract method `onLoadedStream` called\"); } ensureDoc(prop, args) { return this.ensure(this.pdfDocument, prop, args); } ensureXRef(prop, args) { return this.ensure(this.pdfDocument.xref, prop, args); } ensureCatalog(prop, args) { return this.ensure(this.pdfDocument.catalog, prop, args); } getPage(pageIndex) { return this.pdfDocument.getPage(pageIndex); } fontFallback(id, handler) { return this.pdfDocument.fontFallback(id, handler); } loadXfaFonts(handler, task) { return this.pdfDocument.loadXfaFonts(handler, task); } loadXfaImages() { return this.pdfDocument.loadXfaImages(); } serializeXfaData(annotationStorage) { return this.pdfDocument.serializeXfaData(annotationStorage); } cleanup(manuallyTriggered = false) { return this.pdfDocument.cleanup(manuallyTriggered); } async ensure(obj, prop, args) { (0, _util.unreachable)(\"Abstract method `ensure` called\"); } requestRange(begin, end) { (0, _util.unreachable)(\"Abstract method `requestRange` called\"); } requestLoadedStream() { (0, _util.unreachable)(\"Abstract method `requestLoadedStream` called\"); } sendProgressiveData(chunk) { (0, _util.unreachable)(\"Abstract method `sendProgressiveData` called\"); } updatePassword(password) { this._password = password; } terminate(reason) { (0, _util.unreachable)(\"Abstract method `terminate` called\"); } } class LocalPdfManager extends BasePdfManager { constructor(docId, data, password, msgHandler, evaluatorOptions, enableXfa, docBaseUrl) { super(); this._docId = docId; this._password = password; this._docBaseUrl = parseDocBaseUrl(docBaseUrl); this.msgHandler = msgHandler; this.evaluatorOptions = evaluatorOptions; this.enableXfa = enableXfa; const stream = new _stream.Stream(data); this.pdfDocument = new _document.PDFDocument(this, stream); this._loadedStreamPromise = Promise.resolve(stream); } async ensure(obj, prop, args) { const value = obj[prop]; if (typeof value === \"function\") { return value.apply(obj, args); } return value; } requestRange(begin, end) { return Promise.resolve(); } requestLoadedStream() {} onLoadedStream() { return this._loadedStreamPromise; } terminate(reason) {} } exports.LocalPdfManager = LocalPdfManager; class NetworkPdfManager extends BasePdfManager { constructor(docId, pdfNetworkStream, args, evaluatorOptions, enableXfa, docBaseUrl) { super(); this._docId = docId; this._password = args.password; this._docBaseUrl = parseDocBaseUrl(docBaseUrl); this.msgHandler = args.msgHandler; this.evaluatorOptions = evaluatorOptions; this.enableXfa = enableXfa; this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, { msgHandler: args.msgHandler, length: args.length, disableAutoFetch: args.disableAutoFetch, rangeChunkSize: args.rangeChunkSize }); this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream()); } async ensure(obj, prop, args) { try { const value = obj[prop]; if (typeof value === \"function\") { return value.apply(obj, args); } return value; } catch (ex) { if (!(ex instanceof _core_utils.MissingDataException)) { throw ex; } await this.requestRange(ex.begin, ex.end); return this.ensure(obj, prop, args); } } requestRange(begin, end) { return this.streamManager.requestRange(begin, end); } requestLoadedStream() { this.streamManager.requestAllChunks(); } sendProgressiveData(chunk) { this.streamManager.onReceiveData({ chunk }); } onLoadedStream() { return this.streamManager.onLoadedStream(); } terminate(reason) { this.streamManager.abort(reason); } } exports.NetworkPdfManager = NetworkPdfManager; /***/ }), /* 7 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ChunkedStreamManager = exports.ChunkedStream = void 0; var _util = __w_pdfjs_require__(2); var _core_utils = __w_pdfjs_require__(8); var _stream = __w_pdfjs_require__(10); class ChunkedStream extends _stream.Stream { constructor(length, chunkSize, manager) { super(new Uint8Array(length), 0, length, null); this.chunkSize = chunkSize; this._loadedChunks = new Set(); this.numChunks = Math.ceil(length / chunkSize); this.manager = manager; this.progressiveDataLength = 0; this.lastSuccessfulEnsureByteChunk = -1; } getMissingChunks() { const chunks = []; for (let chunk = 0, n = this.numChunks; chunk < n; ++chunk) { if (!this._loadedChunks.has(chunk)) { chunks.push(chunk); } } return chunks; } get numChunksLoaded() { return this._loadedChunks.size; } get isDataLoaded() { return this.numChunksLoaded === this.numChunks; } onReceiveData(begin, chunk) { const chunkSize = this.chunkSize; if (begin % chunkSize !== 0) { throw new Error(`Bad begin offset: ${begin}`); } const end = begin + chunk.byteLength; if (end % chunkSize !== 0 && end !== this.bytes.length) { throw new Error(`Bad end offset: ${end}`); } this.bytes.set(new Uint8Array(chunk), begin); const beginChunk = Math.floor(begin / chunkSize); const endChunk = Math.floor((end - 1) / chunkSize) + 1; for (let curChunk = beginChunk; curChunk < endChunk; ++curChunk) { this._loadedChunks.add(curChunk); } } onReceiveProgressiveData(data) { let position = this.progressiveDataLength; const beginChunk = Math.floor(position / this.chunkSize); this.bytes.set(new Uint8Array(data), position); position += data.byteLength; this.progressiveDataLength = position; const endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize); for (let curChunk = beginChunk; curChunk < endChunk; ++curChunk) { this._loadedChunks.add(curChunk); } } ensureByte(pos) { if (pos < this.progressiveDataLength) { return; } const chunk = Math.floor(pos / this.chunkSize); if (chunk > this.numChunks) { return; } if (chunk === this.lastSuccessfulEnsureByteChunk) { return; } if (!this._loadedChunks.has(chunk)) { throw new _core_utils.MissingDataException(pos, pos + 1); } this.lastSuccessfulEnsureByteChunk = chunk; } ensureRange(begin, end) { if (begin >= end) { return; } if (end this.numChunks) { return; } const endChunk = Math.min(Math.floor((end - 1) / this.chunkSize) + 1, this.numChunks); for (let chunk = beginChunk; chunk < endChunk; ++chunk) { if (!this._loadedChunks.has(chunk)) { throw new _core_utils.MissingDataException(begin, end); } } } nextEmptyChunk(beginChunk) { const numChunks = this.numChunks; for (let i = 0; i < numChunks; ++i) { const chunk = (beginChunk + i) % numChunks; if (!this._loadedChunks.has(chunk)) { return chunk; } } return null; } hasChunk(chunk) { return this._loadedChunks.has(chunk); } getByte() { const pos = this.pos; if (pos >= this.end) { return -1; } if (pos >= this.progressiveDataLength) { this.ensureByte(pos); } return this.bytes[this.pos++]; } getBytes(length) { const bytes = this.bytes; const pos = this.pos; const strEnd = this.end; if (!length) { if (strEnd > this.progressiveDataLength) { this.ensureRange(pos, strEnd); } return bytes.subarray(pos, strEnd); } let end = pos + length; if (end > strEnd) { end = strEnd; } if (end > this.progressiveDataLength) { this.ensureRange(pos, end); } this.pos = end; return bytes.subarray(pos, end); } getByteRange(begin, end) { if (begin < 0) { begin = 0; } if (end > this.end) { end = this.end; } if (end > this.progressiveDataLength) { this.ensureRange(begin, end); } return this.bytes.subarray(begin, end); } makeSubStream(start, length, dict = null) { if (length) { if (start + length > this.progressiveDataLength) { this.ensureRange(start, start + length); } } else { if (start >= this.progressiveDataLength) { this.ensureByte(start); } } function ChunkedStreamSubstream() {} ChunkedStreamSubstream.prototype = Object.create(this); ChunkedStreamSubstream.prototype.getMissingChunks = function () { const chunkSize = this.chunkSize; const beginChunk = Math.floor(this.start / chunkSize); const endChunk = Math.floor((this.end - 1) / chunkSize) + 1; const missingChunks = []; for (let chunk = beginChunk; chunk < endChunk; ++chunk) { if (!this._loadedChunks.has(chunk)) { missingChunks.push(chunk); } } return missingChunks; }; Object.defineProperty(ChunkedStreamSubstream.prototype, \"isDataLoaded\", { get() { if (this.numChunksLoaded === this.numChunks) { return true; } return this.getMissingChunks().length === 0; }, configurable: true }); const subStream = new ChunkedStreamSubstream(); subStream.pos = subStream.start = start; subStream.end = start + length || this.end; subStream.dict = dict; return subStream; } getBaseStreams() { return [this]; } } exports.ChunkedStream = ChunkedStream; class ChunkedStreamManager { constructor(pdfNetworkStream, args) { this.length = args.length; this.chunkSize = args.rangeChunkSize; this.stream = new ChunkedStream(this.length, this.chunkSize, this); this.pdfNetworkStream = pdfNetworkStream; this.disableAutoFetch = args.disableAutoFetch; this.msgHandler = args.msgHandler; this.currRequestId = 0; this._chunksNeededByRequest = new Map(); this._requestsByChunk = new Map(); this._promisesByRequest = new Map(); this.progressiveDataLength = 0; this.aborted = false; this._loadedStreamCapability = (0, _util.createPromiseCapability)(); } onLoadedStream() { return this._loadedStreamCapability.promise; } sendRequest(begin, end) { const rangeReader = this.pdfNetworkStream.getRangeReader(begin, end); if (!rangeReader.isStreamingSupported) { rangeReader.onProgress = this.onProgress.bind(this); } let chunks = [], loaded = 0; return new Promise((resolve, reject) => { const readChunk = chunk => { try { if (!chunk.done) { const data = chunk.value; chunks.push(data); loaded += (0, _util.arrayByteLength)(data); if (rangeReader.isStreamingSupported) { this.onProgress({ loaded }); } rangeReader.read().then(readChunk, reject); return; } const chunkData = (0, _util.arraysToBytes)(chunks); chunks = null; resolve(chunkData); } catch (e) { reject(e); } }; rangeReader.read().then(readChunk, reject); }).then(data => { if (this.aborted) { return; } this.onReceiveData({ chunk: data, begin }); }); } requestAllChunks() { const missingChunks = this.stream.getMissingChunks(); this._requestChunks(missingChunks); return this._loadedStreamCapability.promise; } _requestChunks(chunks) { const requestId = this.currRequestId++; const chunksNeeded = new Set(); this._chunksNeededByRequest.set(requestId, chunksNeeded); for (const chunk of chunks) { if (!this.stream.hasChunk(chunk)) { chunksNeeded.add(chunk); } } if (chunksNeeded.size === 0) { return Promise.resolve(); } const capability = (0, _util.createPromiseCapability)(); this._promisesByRequest.set(requestId, capability); const chunksToRequest = []; for (const chunk of chunksNeeded) { let requestIds = this._requestsByChunk.get(chunk); if (!requestIds) { requestIds = []; this._requestsByChunk.set(chunk, requestIds); chunksToRequest.push(chunk); } requestIds.push(requestId); } if (chunksToRequest.length > 0) { const groupedChunksToRequest = this.groupChunks(chunksToRequest); for (const groupedChunk of groupedChunksToRequest) { const begin = groupedChunk.beginChunk * this.chunkSize; const end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length); this.sendRequest(begin, end).catch(capability.reject); } } return capability.promise.catch(reason => { if (this.aborted) { return; } throw reason; }); } getStream() { return this.stream; } requestRange(begin, end) { end = Math.min(end, this.length); const beginChunk = this.getBeginChunk(begin); const endChunk = this.getEndChunk(end); const chunks = []; for (let chunk = beginChunk; chunk < endChunk; ++chunk) { chunks.push(chunk); } return this._requestChunks(chunks); } requestRanges(ranges = []) { const chunksToRequest = []; for (const range of ranges) { const beginChunk = this.getBeginChunk(range.begin); const endChunk = this.getEndChunk(range.end); for (let chunk = beginChunk; chunk < endChunk; ++chunk) { if (!chunksToRequest.includes(chunk)) { chunksToRequest.push(chunk); } } } chunksToRequest.sort(function (a, b) { return a - b; }); return this._requestChunks(chunksToRequest); } groupChunks(chunks) { const groupedChunks = []; let beginChunk = -1; let prevChunk = -1; for (let i = 0, ii = chunks.length; i < ii; ++i) { const chunk = chunks[i]; if (beginChunk < 0) { beginChunk = chunk; } if (prevChunk >= 0 && prevChunk + 1 !== chunk) { groupedChunks.push({ beginChunk, endChunk: prevChunk + 1 }); beginChunk = chunk; } if (i + 1 === chunks.length) { groupedChunks.push({ beginChunk, endChunk: chunk + 1 }); } prevChunk = chunk; } return groupedChunks; } onProgress(args) { this.msgHandler.send(\"DocProgress\", { loaded: this.stream.numChunksLoaded * this.chunkSize + args.loaded, total: this.length }); } onReceiveData(args) { const chunk = args.chunk; const isProgressive = args.begin === undefined; const begin = isProgressive ? this.progressiveDataLength : args.begin; const end = begin + chunk.byteLength; const beginChunk = Math.floor(begin / this.chunkSize); const endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize); if (isProgressive) { this.stream.onReceiveProgressiveData(chunk); this.progressiveDataLength = end; } else { this.stream.onReceiveData(begin, chunk); } if (this.stream.isDataLoaded) { this._loadedStreamCapability.resolve(this.stream); } const loadedRequests = []; for (let curChunk = beginChunk; curChunk < endChunk; ++curChunk) { const requestIds = this._requestsByChunk.get(curChunk); if (!requestIds) { continue; } this._requestsByChunk.delete(curChunk); for (const requestId of requestIds) { const chunksNeeded = this._chunksNeededByRequest.get(requestId); if (chunksNeeded.has(curChunk)) { chunksNeeded.delete(curChunk); } if (chunksNeeded.size > 0) { continue; } loadedRequests.push(requestId); } } if (!this.disableAutoFetch && this._requestsByChunk.size === 0) { let nextEmptyChunk; if (this.stream.numChunksLoaded === 1) { const lastChunk = this.stream.numChunks - 1; if (!this.stream.hasChunk(lastChunk)) { nextEmptyChunk = lastChunk; } } else { nextEmptyChunk = this.stream.nextEmptyChunk(endChunk); } if (Number.isInteger(nextEmptyChunk)) { this._requestChunks([nextEmptyChunk]); } } for (const requestId of loadedRequests) { const capability = this._promisesByRequest.get(requestId); this._promisesByRequest.delete(requestId); capability.resolve(); } this.msgHandler.send(\"DocProgress\", { loaded: this.stream.numChunksLoaded * this.chunkSize, total: this.length }); } onError(err) { this._loadedStreamCapability.reject(err); } getBeginChunk(begin) { return Math.floor(begin / this.chunkSize); } getEndChunk(end) { return Math.floor((end - 1) / this.chunkSize) + 1; } abort(reason) { this.aborted = true; if (this.pdfNetworkStream) { this.pdfNetworkStream.cancelAllRequests(reason); } for (const capability of this._promisesByRequest.values()) { capability.reject(reason); } } } exports.ChunkedStreamManager = ChunkedStreamManager; /***/ }), /* 8 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.XRefParseException = exports.XRefEntryException = exports.ParserEOFException = exports.MissingDataException = exports.DocStats = void 0; exports.collectActions = collectActions; exports.encodeToXmlString = encodeToXmlString; exports.escapePDFName = escapePDFName; exports.getArrayLookupTableFactory = getArrayLookupTableFactory; exports.getInheritableProperty = getInheritableProperty; exports.getLookupTableFactory = getLookupTableFactory; exports.isWhiteSpace = isWhiteSpace; exports.log2 = log2; exports.parseXFAPath = parseXFAPath; exports.readInt8 = readInt8; exports.readUint16 = readUint16; exports.readUint32 = readUint32; exports.recoverJsURL = recoverJsURL; exports.toRomanNumerals = toRomanNumerals; exports.validateCSSFont = validateCSSFont; var _util = __w_pdfjs_require__(2); var _primitives = __w_pdfjs_require__(5); var _base_stream = __w_pdfjs_require__(9); function getLookupTableFactory(initializer) { let lookup; return function () { if (initializer) { lookup = Object.create(null); initializer(lookup); initializer = null; } return lookup; }; } function getArrayLookupTableFactory(initializer) { let lookup; return function () { if (initializer) { let arr = initializer(); initializer = null; lookup = Object.create(null); for (let i = 0, ii = arr.length; i < ii; i += 2) { lookup[arr[i]] = arr[i + 1]; } arr = null; } return lookup; }; } class MissingDataException extends _util.BaseException { constructor(begin, end) { super(`Missing data [${begin}, ${end})`, \"MissingDataException\"); this.begin = begin; this.end = end; } } exports.MissingDataException = MissingDataException; class ParserEOFException extends _util.BaseException { constructor(msg) { super(msg, \"ParserEOFException\"); } } exports.ParserEOFException = ParserEOFException; class XRefEntryException extends _util.BaseException { constructor(msg) { super(msg, \"XRefEntryException\"); } } exports.XRefEntryException = XRefEntryException; class XRefParseException extends _util.BaseException { constructor(msg) { super(msg, \"XRefParseException\"); } } exports.XRefParseException = XRefParseException; class DocStats { constructor(handler) { this._handler = handler; this._streamTypes = new Set(); this._fontTypes = new Set(); } _send() { const streamTypes = Object.create(null), fontTypes = Object.create(null); for (const type of this._streamTypes) { streamTypes[type] = true; } for (const type of this._fontTypes) { fontTypes[type] = true; } this._handler.send(\"DocStats\", { streamTypes, fontTypes }); } addStreamType(type) { if (this._streamTypes.has(type)) { return; } this._streamTypes.add(type); this._send(); } addFontType(type) { if (this._fontTypes.has(type)) { return; } this._fontTypes.add(type); this._send(); } } exports.DocStats = DocStats; function getInheritableProperty({ dict, key, getArray = false, stopWhenFound = true }) { let values; const visited = new _primitives.RefSet(); while (dict instanceof _primitives.Dict && !(dict.objId && visited.has(dict.objId))) { if (dict.objId) { visited.put(dict.objId); } const value = getArray ? dict.getArray(key) : dict.get(key); if (value !== undefined) { if (stopWhenFound) { return value; } if (!values) { values = []; } values.push(value); } dict = dict.get(\"Parent\"); } return values; } const ROMAN_NUMBER_MAP = [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\", \"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\", \"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"]; function toRomanNumerals(number, lowerCase = false) { (0, _util.assert)(Number.isInteger(number) && number > 0, \"The number should be a positive integer.\"); const romanBuf = []; let pos; while (number >= 1000) { number -= 1000; romanBuf.push(\"M\"); } pos = number / 100 | 0; number %= 100; romanBuf.push(ROMAN_NUMBER_MAP[pos]); pos = number / 10 | 0; number %= 10; romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]); romanBuf.push(ROMAN_NUMBER_MAP[20 + number]); const romanStr = romanBuf.join(\"\"); return lowerCase ? romanStr.toLowerCase() : romanStr; } function log2(x) { if (x annotation && annotation.getFieldObject()).catch(function (reason) { (0, _util.warn)(`_collectFieldObjects: \"${reason}\".`); return null; })); if (field.has(\"Kids\")) { const kids = field.get(\"Kids\"); for (const kid of kids) { this._collectFieldObjects(name, kid, promises); } } } get fieldObjects() { if (!this.formInfo.hasFields) { return (0, _util.shadow)(this, \"fieldObjects\", Promise.resolve(null)); } const allFields = Object.create(null); const fieldPromises = new Map(); for (const fieldRef of this.catalog.acroForm.get(\"Fields\")) { this._collectFieldObjects(\"\", fieldRef, fieldPromises); } const allPromises = []; for (const [name, promises] of fieldPromises) { allPromises.push(Promise.all(promises).then(fields => { fields = fields.filter(field => !!field); if (fields.length > 0) { allFields[name] = fields; } })); } return (0, _util.shadow)(this, \"fieldObjects\", Promise.all(allPromises).then(() => allFields)); } get hasJSActions() { const promise = this.pdfManager.ensureDoc(\"_parseHasJSActions\"); return (0, _util.shadow)(this, \"hasJSActions\", promise); } async _parseHasJSActions() { const [catalogJsActions, fieldObjects] = await Promise.all([this.pdfManager.ensureCatalog(\"jsActions\"), this.pdfManager.ensureDoc(\"fieldObjects\")]); if (catalogJsActions) { return true; } if (fieldObjects) { return Object.values(fieldObjects).some(fieldObject => fieldObject.some(object => object.actions !== null)); } return false; } get calculationOrderIds() { const acroForm = this.catalog.acroForm; if (!acroForm || !acroForm.has(\"CO\")) { return (0, _util.shadow)(this, \"calculationOrderIds\", null); } const calculationOrder = acroForm.get(\"CO\"); if (!Array.isArray(calculationOrder) || calculationOrder.length === 0) { return (0, _util.shadow)(this, \"calculationOrderIds\", null); } const ids = []; for (const id of calculationOrder) { if (id instanceof _primitives.Ref) { ids.push(id.toString()); } } if (ids.length === 0) { return (0, _util.shadow)(this, \"calculationOrderIds\", null); } return (0, _util.shadow)(this, \"calculationOrderIds\", ids); } } exports.PDFDocument = PDFDocument; /***/ }), /* 12 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.getXfaFontDict = getXfaFontDict; exports.getXfaFontName = getXfaFontName; var _calibri_factors = __w_pdfjs_require__(13); var _primitives = __w_pdfjs_require__(5); var _helvetica_factors = __w_pdfjs_require__(14); var _liberationsans_widths = __w_pdfjs_require__(15); var _myriadpro_factors = __w_pdfjs_require__(16); var _segoeui_factors = __w_pdfjs_require__(17); var _core_utils = __w_pdfjs_require__(8); var _fonts_utils = __w_pdfjs_require__(18); const getXFAFontMap = (0, _core_utils.getLookupTableFactory)(function (t) { t[\"MyriadPro-Regular\"] = t[\"PdfJS-Fallback-Regular\"] = { name: \"LiberationSans-Regular\", factors: _myriadpro_factors.MyriadProRegularFactors, baseWidths: _liberationsans_widths.LiberationSansRegularWidths, baseMapping: _liberationsans_widths.LiberationSansRegularMapping, metrics: _myriadpro_factors.MyriadProRegularMetrics }; t[\"MyriadPro-Bold\"] = t[\"PdfJS-Fallback-Bold\"] = { name: \"LiberationSans-Bold\", factors: _myriadpro_factors.MyriadProBoldFactors, baseWidths: _liberationsans_widths.LiberationSansBoldWidths, baseMapping: _liberationsans_widths.LiberationSansBoldMapping, metrics: _myriadpro_factors.MyriadProBoldMetrics }; t[\"MyriadPro-It\"] = t[\"MyriadPro-Italic\"] = t[\"PdfJS-Fallback-Italic\"] = { name: \"LiberationSans-Italic\", factors: _myriadpro_factors.MyriadProItalicFactors, baseWidths: _liberationsans_widths.LiberationSansItalicWidths, baseMapping: _liberationsans_widths.LiberationSansItalicMapping, metrics: _myriadpro_factors.MyriadProItalicMetrics }; t[\"MyriadPro-BoldIt\"] = t[\"MyriadPro-BoldItalic\"] = t[\"PdfJS-Fallback-BoldItalic\"] = { name: \"LiberationSans-BoldItalic\", factors: _myriadpro_factors.MyriadProBoldItalicFactors, baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths, baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping, metrics: _myriadpro_factors.MyriadProBoldItalicMetrics }; t.ArialMT = t.Arial = t[\"Arial-Regular\"] = { name: \"LiberationSans-Regular\", baseWidths: _liberationsans_widths.LiberationSansRegularWidths, baseMapping: _liberationsans_widths.LiberationSansRegularMapping }; t[\"Arial-BoldMT\"] = t[\"Arial-Bold\"] = { name: \"LiberationSans-Bold\", baseWidths: _liberationsans_widths.LiberationSansBoldWidths, baseMapping: _liberationsans_widths.LiberationSansBoldMapping }; t[\"Arial-ItalicMT\"] = t[\"Arial-Italic\"] = { name: \"LiberationSans-Italic\", baseWidths: _liberationsans_widths.LiberationSansItalicWidths, baseMapping: _liberationsans_widths.LiberationSansItalicMapping }; t[\"Arial-BoldItalicMT\"] = t[\"Arial-BoldItalic\"] = { name: \"LiberationSans-BoldItalic\", baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths, baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping }; t[\"Calibri-Regular\"] = { name: \"LiberationSans-Regular\", factors: _calibri_factors.CalibriRegularFactors, baseWidths: _liberationsans_widths.LiberationSansRegularWidths, baseMapping: _liberationsans_widths.LiberationSansRegularMapping, metrics: _calibri_factors.CalibriRegularMetrics }; t[\"Calibri-Bold\"] = { name: \"LiberationSans-Bold\", factors: _calibri_factors.CalibriBoldFactors, baseWidths: _liberationsans_widths.LiberationSansBoldWidths, baseMapping: _liberationsans_widths.LiberationSansBoldMapping, metrics: _calibri_factors.CalibriBoldMetrics }; t[\"Calibri-Italic\"] = { name: \"LiberationSans-Italic\", factors: _calibri_factors.CalibriItalicFactors, baseWidths: _liberationsans_widths.LiberationSansItalicWidths, baseMapping: _liberationsans_widths.LiberationSansItalicMapping, metrics: _calibri_factors.CalibriItalicMetrics }; t[\"Calibri-BoldItalic\"] = { name: \"LiberationSans-BoldItalic\", factors: _calibri_factors.CalibriBoldItalicFactors, baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths, baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping, metrics: _calibri_factors.CalibriBoldItalicMetrics }; t[\"Segoeui-Regular\"] = { name: \"LiberationSans-Regular\", factors: _segoeui_factors.SegoeuiRegularFactors, baseWidths: _liberationsans_widths.LiberationSansRegularWidths, baseMapping: _liberationsans_widths.LiberationSansRegularMapping, metrics: _segoeui_factors.SegoeuiRegularMetrics }; t[\"Segoeui-Bold\"] = { name: \"LiberationSans-Bold\", factors: _segoeui_factors.SegoeuiBoldFactors, baseWidths: _liberationsans_widths.LiberationSansBoldWidths, baseMapping: _liberationsans_widths.LiberationSansBoldMapping, metrics: _segoeui_factors.SegoeuiBoldMetrics }; t[\"Segoeui-Italic\"] = { name: \"LiberationSans-Italic\", factors: _segoeui_factors.SegoeuiItalicFactors, baseWidths: _liberationsans_widths.LiberationSansItalicWidths, baseMapping: _liberationsans_widths.LiberationSansItalicMapping, metrics: _segoeui_factors.SegoeuiItalicMetrics }; t[\"Segoeui-BoldItalic\"] = { name: \"LiberationSans-BoldItalic\", factors: _segoeui_factors.SegoeuiBoldItalicFactors, baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths, baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping, metrics: _segoeui_factors.SegoeuiBoldItalicMetrics }; t[\"Helvetica-Regular\"] = t.Helvetica = { name: \"LiberationSans-Regular\", factors: _helvetica_factors.HelveticaRegularFactors, baseWidths: _liberationsans_widths.LiberationSansRegularWidths, baseMapping: _liberationsans_widths.LiberationSansRegularMapping, metrics: _helvetica_factors.HelveticaRegularMetrics }; t[\"Helvetica-Bold\"] = { name: \"LiberationSans-Bold\", factors: _helvetica_factors.HelveticaBoldFactors, baseWidths: _liberationsans_widths.LiberationSansBoldWidths, baseMapping: _liberationsans_widths.LiberationSansBoldMapping, metrics: _helvetica_factors.HelveticaBoldMetrics }; t[\"Helvetica-Italic\"] = { name: \"LiberationSans-Italic\", factors: _helvetica_factors.HelveticaItalicFactors, baseWidths: _liberationsans_widths.LiberationSansItalicWidths, baseMapping: _liberationsans_widths.LiberationSansItalicMapping, metrics: _helvetica_factors.HelveticaItalicMetrics }; t[\"Helvetica-BoldItalic\"] = { name: \"LiberationSans-BoldItalic\", factors: _helvetica_factors.HelveticaBoldItalicFactors, baseWidths: _liberationsans_widths.LiberationSansBoldItalicWidths, baseMapping: _liberationsans_widths.LiberationSansBoldItalicMapping, metrics: _helvetica_factors.HelveticaBoldItalicMetrics }; }); function getXfaFontName(name) { const fontName = (0, _fonts_utils.normalizeFontName)(name); const fontMap = getXFAFontMap(); return fontMap[fontName]; } function getXfaFontWidths(name) { const info = getXfaFontName(name); if (!info) { return null; } const { baseWidths, baseMapping, factors } = info; let rescaledBaseWidths; if (!factors) { rescaledBaseWidths = baseWidths; } else { rescaledBaseWidths = baseWidths.map((w, i) => w * factors[i]); } let currentCode = -2; let currentArray; const newWidths = []; for (const [unicode, glyphIndex] of baseMapping.map((charUnicode, index) => [charUnicode, index]).sort(([unicode1], [unicode2]) => unicode1 - unicode2)) { if (unicode === -1) { continue; } if (unicode === currentCode + 1) { currentArray.push(rescaledBaseWidths[glyphIndex]); currentCode += 1; } else { currentCode = unicode; currentArray = [rescaledBaseWidths[glyphIndex]]; newWidths.push(unicode, currentArray); } } return newWidths; } function getXfaFontDict(name) { const widths = getXfaFontWidths(name); const dict = new _primitives.Dict(null); dict.set(\"BaseFont\", _primitives.Name.get(name)); dict.set(\"Type\", _primitives.Name.get(\"Font\")); dict.set(\"Subtype\", _primitives.Name.get(\"CIDFontType2\")); dict.set(\"Encoding\", _primitives.Name.get(\"Identity-H\")); dict.set(\"CIDToGIDMap\", _primitives.Name.get(\"Identity\")); dict.set(\"W\", widths); dict.set(\"FirstChar\", widths[0]); dict.set(\"LastChar\", widths[widths.length - 2] + widths[widths.length - 1].length - 1); const descriptor = new _primitives.Dict(null); dict.set(\"FontDescriptor\", descriptor); const systemInfo = new _primitives.Dict(null); systemInfo.set(\"Ordering\", \"Identity\"); systemInfo.set(\"Registry\", \"Adobe\"); systemInfo.set(\"Supplement\", 0); dict.set(\"CIDSystemInfo\", systemInfo); return dict; } /***/ }), /* 13 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.CalibriRegularMetrics = exports.CalibriRegularFactors = exports.CalibriItalicMetrics = exports.CalibriItalicFactors = exports.CalibriBoldMetrics = exports.CalibriBoldItalicMetrics = exports.CalibriBoldItalicFactors = exports.CalibriBoldFactors = void 0; const CalibriBoldFactors = [1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566, 0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134, 1.54657, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284, 0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.73293, 0.87289, 0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225, 1.04924, 0.9121, 0.86943, 0.79795, 0.88198, 0.77958, 0.70864, 0.81055, 0.90399, 0.88653, 0.96017, 0.82577, 0.77892, 0.78257, 0.97507, 1.54657, 0.97507, 0.85284, 0.89552, 0.90176, 0.88762, 0.8785, 0.75241, 0.8785, 0.90518, 0.95015, 0.77618, 0.8785, 0.88401, 0.91916, 0.86304, 0.88401, 0.91488, 0.8785, 0.8801, 0.8785, 0.8785, 0.91343, 0.7173, 1.04106, 0.8785, 0.85075, 0.95794, 0.82616, 0.85162, 0.79492, 0.88331, 1.69808, 0.88331, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.7801, 0.89552, 1.24487, 1.13254, 1.12401, 0.96839, 0.85284, 0.68787, 0.70645, 0.85592, 0.90747, 1.01466, 1.0088, 0.90323, 1, 1.07463, 1, 0.91056, 0.75806, 1.19118, 0.96839, 0.78864, 0.82845, 0.84133, 0.75859, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.77539, 0.73293, 0.73133, 0.73133, 0.73133, 0.73133, 0.95958, 0.95958, 0.95958, 0.95958, 0.88506, 0.9121, 0.86943, 0.86943, 0.86943, 0.86943, 0.86943, 0.85284, 0.87508, 0.90399, 0.90399, 0.90399, 0.90399, 0.77892, 0.79795, 0.90807, 0.88762, 0.88762, 0.88762, 0.88762, 0.88762, 0.88762, 0.8715, 0.75241, 0.90518, 0.90518, 0.90518, 0.90518, 0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.8785, 0.8801, 0.8801, 0.8801, 0.8801, 0.8801, 0.90747, 0.89049, 0.8785, 0.8785, 0.8785, 0.8785, 0.85162, 0.8785, 0.85162, 0.83908, 0.88762, 0.83908, 0.88762, 0.83908, 0.88762, 0.73293, 0.75241, 0.73293, 0.75241, 0.73293, 0.75241, 0.73293, 0.75241, 0.87289, 0.83016, 0.88506, 0.93125, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.73133, 0.90518, 0.81921, 0.77618, 0.81921, 0.77618, 0.81921, 0.77618, 1, 1, 0.87356, 0.8785, 0.91075, 0.89608, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.76229, 0.90167, 0.59526, 0.91916, 1, 1, 0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.79468, 0.91926, 0.88175, 0.70823, 0.94903, 0.9121, 0.8785, 1, 1, 0.9121, 0.8785, 0.87802, 0.88656, 0.8785, 0.86943, 0.8801, 0.86943, 0.8801, 0.86943, 0.8801, 0.87402, 0.89291, 0.77958, 0.91343, 1, 1, 0.77958, 0.91343, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864, 0.7173, 0.70864, 0.7173, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.90399, 0.8785, 0.96017, 0.95794, 0.77892, 0.85162, 0.77892, 0.78257, 0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297, 0.56892, 0.83908, 0.88762, 0.77539, 0.8715, 0.87508, 0.89049, 1, 1, 0.81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, 0.70674, 0.98387, 0.94721, 1.33431, 1.45894, 0.95161, 1.06303, 0.83908, 0.80352, 0.57184, 0.6965, 0.56289, 0.82001, 0.56029, 0.81235, 1.02988, 0.83908, 0.7762, 0.68156, 0.80367, 0.73133, 0.78257, 0.87356, 0.86943, 0.95958, 0.75727, 0.89019, 1.04924, 0.9121, 0.7648, 0.86943, 0.87356, 0.79795, 0.78275, 0.81055, 0.77892, 0.9762, 0.82577, 0.99819, 0.84896, 0.95958, 0.77892, 0.96108, 1.01407, 0.89049, 1.02988, 0.94211, 0.96108, 0.8936, 0.84021, 0.87842, 0.96399, 0.79109, 0.89049, 1.00813, 1.02988, 0.86077, 0.87445, 0.92099, 0.84723, 0.86513, 0.8801, 0.75638, 0.85714, 0.78216, 0.79586, 0.87965, 0.94211, 0.97747, 0.78287, 0.97926, 0.84971, 1.02988, 0.94211, 0.8801, 0.94211, 0.84971, 0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90264, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90518, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90548, 1, 1, 1, 1, 1, 1, 0.96017, 0.95794, 0.96017, 0.95794, 0.96017, 0.95794, 0.77892, 0.85162, 1, 1, 0.89552, 0.90527, 1, 0.90363, 0.92794, 0.92794, 0.92794, 0.92794, 0.87012, 0.87012, 0.87012, 0.89552, 0.89552, 1.42259, 0.71143, 1.06152, 1, 1, 1.03372, 1.03372, 0.97171, 1.4956, 2.2807, 0.93835, 0.83406, 0.91133, 0.84107, 0.91133, 1, 1, 1, 0.72021, 1, 1.23108, 0.83489, 0.88525, 0.88525, 0.81499, 0.90527, 1.81055, 0.90527, 1.81055, 1.31006, 1.53711, 0.94434, 1.08696, 1, 0.95018, 0.77192, 0.85284, 0.90747, 1.17534, 0.69825, 0.9716, 1.37077, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.CalibriBoldFactors = CalibriBoldFactors; const CalibriBoldMetrics = { lineHeight: 1.2207, lineGap: 0.2207 }; exports.CalibriBoldMetrics = CalibriBoldMetrics; const CalibriBoldItalicFactors = [1.3877, 1, 1, 1, 0.97801, 0.92482, 0.89552, 0.91133, 0.81988, 0.97566, 0.98152, 0.93548, 0.93548, 1.2798, 0.85284, 0.92794, 1, 0.96134, 1.56239, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.82845, 0.82845, 0.85284, 0.85284, 0.85284, 0.75859, 0.92138, 0.83908, 0.7762, 0.71805, 0.87289, 0.73133, 0.7514, 0.81921, 0.87356, 0.95958, 0.59526, 0.75727, 0.69225, 1.04924, 0.90872, 0.85938, 0.79795, 0.87068, 0.77958, 0.69766, 0.81055, 0.90399, 0.88653, 0.96068, 0.82577, 0.77892, 0.78257, 0.97507, 1.529, 0.97507, 0.85284, 0.89552, 0.90176, 0.94908, 0.86411, 0.74012, 0.86411, 0.88323, 0.95015, 0.86411, 0.86331, 0.88401, 0.91916, 0.86304, 0.88401, 0.9039, 0.86331, 0.86331, 0.86411, 0.86411, 0.90464, 0.70852, 1.04106, 0.86331, 0.84372, 0.95794, 0.82616, 0.84548, 0.79492, 0.88331, 1.69808, 0.88331, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.7801, 0.89552, 1.24487, 1.13254, 1.19129, 0.96839, 0.85284, 0.68787, 0.70645, 0.85592, 0.90747, 1.01466, 1.0088, 0.90323, 1, 1.07463, 1, 0.91056, 0.75806, 1.19118, 0.96839, 0.78864, 0.82845, 0.84133, 0.75859, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.83908, 0.77539, 0.71805, 0.73133, 0.73133, 0.73133, 0.73133, 0.95958, 0.95958, 0.95958, 0.95958, 0.88506, 0.90872, 0.85938, 0.85938, 0.85938, 0.85938, 0.85938, 0.85284, 0.87068, 0.90399, 0.90399, 0.90399, 0.90399, 0.77892, 0.79795, 0.90807, 0.94908, 0.94908, 0.94908, 0.94908, 0.94908, 0.94908, 0.85887, 0.74012, 0.88323, 0.88323, 0.88323, 0.88323, 0.88401, 0.88401, 0.88401, 0.88401, 0.8785, 0.86331, 0.86331, 0.86331, 0.86331, 0.86331, 0.86331, 0.90747, 0.89049, 0.86331, 0.86331, 0.86331, 0.86331, 0.84548, 0.86411, 0.84548, 0.83908, 0.94908, 0.83908, 0.94908, 0.83908, 0.94908, 0.71805, 0.74012, 0.71805, 0.74012, 0.71805, 0.74012, 0.71805, 0.74012, 0.87289, 0.79538, 0.88506, 0.92726, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.73133, 0.88323, 0.81921, 0.86411, 0.81921, 0.86411, 0.81921, 0.86411, 1, 1, 0.87356, 0.86331, 0.91075, 0.8777, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.95958, 0.88401, 0.76467, 0.90167, 0.59526, 0.91916, 1, 1, 0.86304, 0.69225, 0.88401, 1, 1, 0.70424, 0.77312, 0.91926, 0.88175, 0.70823, 0.94903, 0.90872, 0.86331, 1, 1, 0.90872, 0.86331, 0.86906, 0.88116, 0.86331, 0.85938, 0.86331, 0.85938, 0.86331, 0.85938, 0.86331, 0.87402, 0.86549, 0.77958, 0.90464, 1, 1, 0.77958, 0.90464, 0.69766, 0.70852, 0.69766, 0.70852, 0.69766, 0.70852, 0.69766, 0.70852, 1, 1, 0.81055, 0.75841, 0.81055, 1.06452, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.90399, 0.86331, 0.96068, 0.95794, 0.77892, 0.84548, 0.77892, 0.78257, 0.79492, 0.78257, 0.79492, 0.78257, 0.79492, 0.9297, 0.56892, 0.83908, 0.94908, 0.77539, 0.85887, 0.87068, 0.89049, 1, 1, 0.81055, 1.04106, 1.20528, 1.20528, 1, 1.15543, 0.70088, 0.98387, 0.94721, 1.33431, 1.45894, 0.95161, 1.48387, 0.83908, 0.80352, 0.57118, 0.6965, 0.56347, 0.79179, 0.55853, 0.80346, 1.02988, 0.83908, 0.7762, 0.67174, 0.86036, 0.73133, 0.78257, 0.87356, 0.86441, 0.95958, 0.75727, 0.89019, 1.04924, 0.90872, 0.74889, 0.85938, 0.87891, 0.79795, 0.7957, 0.81055, 0.77892, 0.97447, 0.82577, 0.97466, 0.87179, 0.95958, 0.77892, 0.94252, 0.95612, 0.8753, 1.02988, 0.92733, 0.94252, 0.87411, 0.84021, 0.8728, 0.95612, 0.74081, 0.8753, 1.02189, 1.02988, 0.84814, 0.87445, 0.91822, 0.84723, 0.85668, 0.86331, 0.81344, 0.87581, 0.76422, 0.82046, 0.96057, 0.92733, 0.99375, 0.78022, 0.95452, 0.86015, 1.02988, 0.92733, 0.86331, 0.92733, 0.86015, 0.73133, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90631, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.88323, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.85174, 1, 1, 1, 1, 1, 1, 0.96068, 0.95794, 0.96068, 0.95794, 0.96068, 0.95794, 0.77892, 0.84548, 1, 1, 0.89552, 0.90527, 1, 0.90363, 0.92794, 0.92794, 0.92794, 0.89807, 0.87012, 0.87012, 0.87012, 0.89552, 0.89552, 1.42259, 0.71094, 1.06152, 1, 1, 1.03372, 1.03372, 0.97171, 1.4956, 2.2807, 0.92972, 0.83406, 0.91133, 0.83326, 0.91133, 1, 1, 1, 0.72021, 1, 1.23108, 0.83489, 0.88525, 0.88525, 0.81499, 0.90616, 1.81055, 0.90527, 1.81055, 1.3107, 1.53711, 0.94434, 1.08696, 1, 0.95018, 0.77192, 0.85284, 0.90747, 1.17534, 0.69825, 0.9716, 1.37077, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.08004, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90727, 0.90727, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.CalibriBoldItalicFactors = CalibriBoldItalicFactors; const CalibriBoldItalicMetrics = { lineHeight: 1.2207, lineGap: 0.2207 }; exports.CalibriBoldItalicMetrics = CalibriBoldItalicMetrics; const CalibriItalicFactors = [1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269, 1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861, 1.39543, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284, 0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.72346, 0.85193, 0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593, 1.02638, 0.89249, 0.84118, 0.77452, 0.85374, 0.75186, 0.67789, 0.79776, 0.88844, 0.85066, 0.94309, 0.77818, 0.7306, 0.76659, 1.10369, 1.38313, 1.10369, 1.06139, 0.89552, 0.8739, 0.9245, 0.9245, 0.83203, 0.9245, 0.85865, 1.09842, 0.9245, 0.9245, 1.03297, 1.07692, 0.90918, 1.03297, 0.94959, 0.9245, 0.92274, 0.9245, 0.9245, 1.02933, 0.77832, 1.20562, 0.9245, 0.8916, 0.98986, 0.86621, 0.89453, 0.79004, 0.94152, 1.77256, 0.94152, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.91729, 0.89552, 1.17889, 1.13254, 1.16359, 0.92098, 0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088, 1.0044, 0.87683, 1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098, 0.76288, 0.80504, 0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.76318, 0.72346, 0.73206, 0.73206, 0.73206, 0.73206, 0.90685, 0.90685, 0.90685, 0.90685, 0.86477, 0.89249, 0.84118, 0.84118, 0.84118, 0.84118, 0.84118, 0.85284, 0.84557, 0.88844, 0.88844, 0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.9245, 0.9245, 0.9245, 0.9245, 0.9245, 0.9245, 0.84843, 0.83203, 0.85865, 0.85865, 0.85865, 0.85865, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469, 0.9245, 0.92274, 0.92274, 0.92274, 0.92274, 0.92274, 0.90747, 0.86651, 0.9245, 0.9245, 0.9245, 0.9245, 0.89453, 0.9245, 0.89453, 0.8675, 0.9245, 0.8675, 0.9245, 0.8675, 0.9245, 0.72346, 0.83203, 0.72346, 0.83203, 0.72346, 0.83203, 0.72346, 0.83203, 0.85193, 0.8875, 0.86477, 0.99034, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.73206, 0.85865, 0.81105, 0.9245, 0.81105, 0.9245, 0.81105, 0.9245, 1, 1, 0.86275, 0.9245, 0.90872, 0.93591, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 1.03297, 0.90685, 0.82601, 0.77896, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918, 0.75593, 1.03297, 1, 1, 0.76032, 0.9375, 0.98156, 0.93407, 0.77261, 1.11429, 0.89249, 0.9245, 1, 1, 0.89249, 0.9245, 0.92534, 0.86698, 0.9245, 0.84118, 0.92274, 0.84118, 0.92274, 0.84118, 0.92274, 0.8667, 0.86291, 0.75186, 1.02933, 1, 1, 0.75186, 1.02933, 0.67789, 0.77832, 0.67789, 0.77832, 0.67789, 0.77832, 0.67789, 0.77832, 1, 1, 0.79776, 0.97655, 0.79776, 1.23023, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.88844, 0.9245, 0.94309, 0.98986, 0.7306, 0.89453, 0.7306, 0.76659, 0.79004, 0.76659, 0.79004, 0.76659, 0.79004, 1.09231, 0.54873, 0.8675, 0.9245, 0.76318, 0.84843, 0.84557, 0.86651, 1, 1, 0.79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, 0.67009, 0.96334, 0.93695, 1.35191, 1.40909, 0.95161, 1.48387, 0.8675, 0.90861, 0.6192, 0.7363, 0.64824, 0.82411, 0.56321, 0.85696, 1.23516, 0.8675, 0.81552, 0.7286, 0.84134, 0.73206, 0.76659, 0.86275, 0.84369, 0.90685, 0.77892, 0.85871, 1.02638, 0.89249, 0.75828, 0.84118, 0.85984, 0.77452, 0.76466, 0.79776, 0.7306, 0.90782, 0.77818, 0.903, 0.87291, 0.90685, 0.7306, 0.99058, 1.03667, 0.94635, 1.23516, 0.9849, 0.99058, 0.92393, 0.8916, 0.942, 1.03667, 0.75026, 0.94635, 1.0297, 1.23516, 0.90918, 0.94048, 0.98217, 0.89746, 0.84153, 0.92274, 0.82507, 0.88832, 0.84438, 0.88178, 1.03525, 0.9849, 1.00225, 0.78086, 0.97248, 0.89404, 1.23516, 0.9849, 0.92274, 0.9849, 0.89404, 0.73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89693, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.85865, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.90933, 1, 1, 1, 1, 1, 1, 0.94309, 0.98986, 0.94309, 0.98986, 0.94309, 0.98986, 0.7306, 0.89453, 1, 1, 0.89552, 0.90527, 1, 0.90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552, 0.89552, 1.42259, 0.68994, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, 0.97858, 0.82616, 0.91133, 0.83437, 0.91133, 1, 1, 1, 0.70508, 1, 1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90572, 1.81055, 0.90749, 1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1, 0.97094, 0.7589, 0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512, 0.90747, 0.90747, 0.85284, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.CalibriItalicFactors = CalibriItalicFactors; const CalibriItalicMetrics = { lineHeight: 1.2207, lineGap: 0.2207 }; exports.CalibriItalicMetrics = CalibriItalicMetrics; const CalibriRegularFactors = [1.3877, 1, 1, 1, 1.17223, 1.1293, 0.89552, 0.91133, 0.80395, 1.02269, 1.15601, 0.91056, 0.91056, 1.2798, 0.85284, 0.89807, 1, 0.90861, 1.39016, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.91133, 0.96309, 0.96309, 0.85284, 0.85284, 0.85284, 0.83319, 0.88071, 0.8675, 0.81552, 0.73834, 0.85193, 0.73206, 0.7522, 0.81105, 0.86275, 0.90685, 0.6377, 0.77892, 0.75593, 1.02638, 0.89385, 0.85122, 0.77452, 0.86503, 0.75186, 0.68887, 0.79776, 0.88844, 0.85066, 0.94258, 0.77818, 0.7306, 0.76659, 1.10369, 1.39016, 1.10369, 1.06139, 0.89552, 0.8739, 0.86128, 0.94469, 0.8457, 0.94469, 0.89464, 1.09842, 0.84636, 0.94469, 1.03297, 1.07692, 0.90918, 1.03297, 0.95897, 0.94469, 0.9482, 0.94469, 0.94469, 1.04692, 0.78223, 1.20562, 0.94469, 0.90332, 0.98986, 0.86621, 0.90527, 0.79004, 0.94152, 1.77256, 0.94152, 0.85284, 0.97801, 0.89552, 0.91133, 0.89552, 0.91133, 1.91729, 0.89552, 1.17889, 1.13254, 1.08707, 0.92098, 0.85284, 0.68787, 0.71353, 0.84737, 0.90747, 1.0088, 1.0044, 0.87683, 1, 1.09091, 1, 0.92229, 0.739, 1.15642, 0.92098, 0.76288, 0.80504, 0.80972, 0.75859, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.8675, 0.76318, 0.73834, 0.73206, 0.73206, 0.73206, 0.73206, 0.90685, 0.90685, 0.90685, 0.90685, 0.86477, 0.89385, 0.85122, 0.85122, 0.85122, 0.85122, 0.85122, 0.85284, 0.85311, 0.88844, 0.88844, 0.88844, 0.88844, 0.7306, 0.77452, 0.86331, 0.86128, 0.86128, 0.86128, 0.86128, 0.86128, 0.86128, 0.8693, 0.8457, 0.89464, 0.89464, 0.89464, 0.89464, 0.82601, 0.82601, 0.82601, 0.82601, 0.94469, 0.94469, 0.9482, 0.9482, 0.9482, 0.9482, 0.9482, 0.90747, 0.86651, 0.94469, 0.94469, 0.94469, 0.94469, 0.90527, 0.94469, 0.90527, 0.8675, 0.86128, 0.8675, 0.86128, 0.8675, 0.86128, 0.73834, 0.8457, 0.73834, 0.8457, 0.73834, 0.8457, 0.73834, 0.8457, 0.85193, 0.92454, 0.86477, 0.9921, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.73206, 0.89464, 0.81105, 0.84636, 0.81105, 0.84636, 0.81105, 0.84636, 1, 1, 0.86275, 0.94469, 0.90872, 0.95786, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 0.82601, 0.90685, 1.03297, 0.90685, 0.82601, 0.77741, 1.05611, 0.6377, 1.07692, 1, 1, 0.90918, 0.75593, 1.03297, 1, 1, 0.76032, 0.90452, 0.98156, 1.11842, 0.77261, 1.11429, 0.89385, 0.94469, 1, 1, 0.89385, 0.94469, 0.95877, 0.86901, 0.94469, 0.85122, 0.9482, 0.85122, 0.9482, 0.85122, 0.9482, 0.8667, 0.90016, 0.75186, 1.04692, 1, 1, 0.75186, 1.04692, 0.68887, 0.78223, 0.68887, 0.78223, 0.68887, 0.78223, 0.68887, 0.78223, 1, 1, 0.79776, 0.92188, 0.79776, 1.23023, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.88844, 0.94469, 0.94258, 0.98986, 0.7306, 0.90527, 0.7306, 0.76659, 0.79004, 0.76659, 0.79004, 0.76659, 0.79004, 1.09231, 0.54873, 0.8675, 0.86128, 0.76318, 0.8693, 0.85311, 0.86651, 1, 1, 0.79776, 1.20562, 1.18622, 1.18622, 1, 1.1437, 0.67742, 0.96334, 0.93695, 1.35191, 1.40909, 0.95161, 1.48387, 0.86686, 0.90861, 0.62267, 0.74359, 0.65649, 0.85498, 0.56963, 0.88254, 1.23516, 0.8675, 0.81552, 0.75443, 0.84503, 0.73206, 0.76659, 0.86275, 0.85122, 0.90685, 0.77892, 0.85746, 1.02638, 0.89385, 0.75657, 0.85122, 0.86275, 0.77452, 0.74171, 0.79776, 0.7306, 0.95165, 0.77818, 0.89772, 0.88831, 0.90685, 0.7306, 0.98142, 1.02191, 0.96576, 1.23516, 0.99018, 0.98142, 0.9236, 0.89258, 0.94035, 1.02191, 0.78848, 0.96576, 0.9561, 1.23516, 0.90918, 0.92578, 0.95424, 0.89746, 0.83969, 0.9482, 0.80113, 0.89442, 0.85208, 0.86155, 0.98022, 0.99018, 1.00452, 0.81209, 0.99247, 0.89181, 1.23516, 0.99018, 0.9482, 0.99018, 0.89181, 0.73206, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.88844, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89464, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.96766, 1, 1, 1, 1, 1, 1, 0.94258, 0.98986, 0.94258, 0.98986, 0.94258, 0.98986, 0.7306, 0.90527, 1, 1, 0.89552, 0.90527, 1, 0.90186, 1.12308, 1.12308, 1.12308, 1.12308, 1.2566, 1.2566, 1.2566, 0.89552, 0.89552, 1.42259, 0.69043, 1.03809, 1, 1, 1.0176, 1.0176, 1.11523, 1.4956, 2.01462, 0.99331, 0.82616, 0.91133, 0.84286, 0.91133, 1, 1, 1, 0.70508, 1, 1.23108, 0.79801, 0.84426, 0.84426, 0.774, 0.90527, 1.81055, 0.90527, 1.81055, 1.28809, 1.55469, 0.94434, 1.07806, 1, 0.97094, 0.7589, 0.85284, 0.90747, 1.19658, 0.69825, 0.97622, 1.33512, 0.90747, 0.90747, 0.85356, 0.90747, 0.90747, 1.44947, 0.85284, 0.8941, 0.8941, 0.70572, 0.8, 0.70572, 0.70572, 0.70572, 0.70572, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.99862, 0.99862, 1, 1, 1, 1, 1, 1.0336, 0.91027, 1, 1, 1, 0.99862, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05859, 1.05859, 1, 1, 1, 1.07185, 0.99413, 0.96334, 1.08065, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.CalibriRegularFactors = CalibriRegularFactors; const CalibriRegularMetrics = { lineHeight: 1.2207, lineGap: 0.2207 }; exports.CalibriRegularMetrics = CalibriRegularMetrics; /***/ }), /* 14 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.HelveticaRegularMetrics = exports.HelveticaRegularFactors = exports.HelveticaItalicMetrics = exports.HelveticaItalicFactors = exports.HelveticaBoldMetrics = exports.HelveticaBoldItalicMetrics = exports.HelveticaBoldItalicFactors = exports.HelveticaBoldFactors = void 0; const HelveticaBoldFactors = [0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982, 0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006, 0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973, 1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973, 1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973, 0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959, 1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 1.03374, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.00042, 0.99973, 0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.03828, 1.00026, 0.99999, 1.00026, 1.0006, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, 0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001, 0.99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973, 0.99977, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973, 1.00026, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00034, 0.99977, 1, 0.99997, 1.00026, 1.00078, 1.00036, 0.99973, 1.00013, 1.0006, 0.99977, 0.99977, 0.99988, 0.85148, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 0.99977, 1.00001, 0.99999, 0.99977, 1.00069, 1.00022, 0.99977, 1.00001, 0.99984, 1.00026, 1.00001, 1.00024, 1.00001, 0.9999, 1, 1.0006, 1.00001, 1.00041, 0.99962, 1.00026, 1.0006, 0.99995, 1.00041, 0.99942, 0.99973, 0.99927, 1.00082, 0.99902, 1.00026, 1.00087, 1.0006, 1.00069, 0.99973, 0.99867, 0.99973, 0.9993, 1.00026, 1.00049, 1.00056, 1, 0.99988, 0.99935, 0.99995, 0.99954, 1.00055, 0.99945, 1.00032, 1.0006, 0.99995, 1.00026, 0.99995, 1.00032, 1.00001, 1.00008, 0.99971, 1.00019, 0.9994, 1.00001, 1.0006, 1.00044, 0.99973, 1.00023, 1.00047, 1, 0.99942, 0.99561, 0.99989, 1.00035, 0.99977, 1.00035, 0.99977, 1.00019, 0.99944, 1.00001, 1.00021, 0.99926, 1.00035, 1.00035, 0.99942, 1.00048, 0.99999, 0.99977, 1.00022, 1.00035, 1.00001, 0.99977, 1.00026, 0.99989, 1.00057, 1.00001, 0.99936, 1.00052, 1.00012, 0.99996, 1.00043, 1, 1.00035, 0.9994, 0.99976, 1.00035, 0.99973, 1.00052, 1.00041, 1.00119, 1.00037, 0.99973, 1.00002, 0.99986, 1.00041, 1.00041, 0.99902, 0.9996, 1.00034, 0.99999, 1.00026, 0.99999, 1.00026, 0.99973, 1.00052, 0.99973, 1, 0.99973, 1.00041, 1.00075, 0.9994, 1.0003, 0.99999, 1, 1.00041, 0.99955, 1, 0.99915, 0.99973, 0.99973, 1.00026, 1.00119, 0.99955, 0.99973, 1.0006, 0.99911, 1.0006, 1.00026, 0.99972, 1.00026, 0.99902, 1.00041, 0.99973, 0.99999, 1, 1, 1.00038, 1.0005, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1, 1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 0.99971, 1.00047, 1.00023, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, 0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.HelveticaBoldFactors = HelveticaBoldFactors; const HelveticaBoldMetrics = { lineHeight: 1.2, lineGap: 0.2 }; exports.HelveticaBoldMetrics = HelveticaBoldMetrics; const HelveticaBoldItalicFactors = [0.76116, 1, 1, 1.0006, 0.99998, 0.99974, 0.99973, 0.99973, 0.99982, 0.99977, 1.00087, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.00003, 1.00003, 1.00003, 1.00026, 0.9999, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 0.99973, 0.99977, 1.00026, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 0.99998, 1.0006, 0.99998, 1.00003, 0.99973, 0.99998, 0.99973, 1.00026, 0.99973, 1.00026, 0.99973, 0.99998, 1.00026, 1.00026, 1.0006, 1.0006, 0.99973, 1.0006, 0.99982, 1.00026, 1.00026, 1.00026, 1.00026, 0.99959, 0.99973, 0.99998, 1.00026, 0.99973, 1.00022, 0.99973, 0.99973, 1, 0.99959, 1.00077, 0.99959, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.00077, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.99973, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 0.99977, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 1.06409, 1.00026, 1.00026, 1.00026, 1.00026, 1.00026, 0.99973, 1.00026, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 1.0044, 0.99977, 1.00026, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99971, 0.99973, 0.99973, 1.0006, 0.99977, 0.99973, 0.99973, 1.00026, 1.0006, 1.00026, 1.0006, 1.00026, 1.01011, 1.00026, 0.99999, 1.00026, 1.0006, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.9993, 0.9998, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1.00022, 1.00026, 1, 1.00016, 0.99977, 0.99959, 0.99977, 0.99959, 0.99977, 0.99959, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00026, 0.99998, 1.00026, 0.8121, 1.00026, 0.99998, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 0.99977, 1.00026, 1.00016, 1.00022, 1.00001, 0.99973, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 1.0006, 0.99973, 0.99977, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 0.99973, 1.00026, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99977, 1, 1, 1.00026, 0.99969, 0.99972, 0.99981, 0.9998, 1.0006, 0.99977, 0.99977, 1.00022, 0.91155, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 0.99977, 1.00001, 0.99999, 0.99977, 0.99966, 1.00022, 1.00032, 1.00001, 0.99944, 1.00026, 1.00001, 0.99968, 1.00001, 1.00047, 1, 1.0006, 1.00001, 0.99981, 1.00101, 1.00026, 1.0006, 0.99948, 0.99981, 1.00064, 0.99973, 0.99942, 1.00101, 1.00061, 1.00026, 1.00069, 1.0006, 1.00014, 0.99973, 1.01322, 0.99973, 1.00065, 1.00026, 1.00012, 0.99923, 1, 1.00064, 1.00076, 0.99948, 1.00055, 1.00063, 1.00007, 0.99943, 1.0006, 0.99948, 1.00026, 0.99948, 0.99943, 1.00001, 1.00001, 1.00029, 1.00038, 1.00035, 1.00001, 1.0006, 1.0006, 0.99973, 0.99978, 1.00001, 1.00057, 0.99989, 0.99967, 0.99964, 0.99967, 0.99977, 0.99999, 0.99977, 1.00038, 0.99977, 1.00001, 0.99973, 1.00066, 0.99967, 0.99967, 1.00041, 0.99998, 0.99999, 0.99977, 1.00022, 0.99967, 1.00001, 0.99977, 1.00026, 0.99964, 1.00031, 1.00001, 0.99999, 0.99999, 1, 1.00023, 1, 1, 0.99999, 1.00035, 1.00001, 0.99999, 0.99973, 0.99977, 0.99999, 1.00058, 0.99973, 0.99973, 0.99955, 0.9995, 1.00026, 1.00026, 1.00032, 0.99989, 1.00034, 0.99999, 1.00026, 1.00026, 1.00026, 0.99973, 0.45998, 0.99973, 1.00026, 0.99973, 1.00001, 0.99999, 0.99982, 0.99994, 0.99996, 1, 1.00042, 1.00044, 1.00029, 1.00023, 0.99973, 0.99973, 1.00026, 0.99949, 1.00002, 0.99973, 1.0006, 1.0006, 1.0006, 0.99975, 1.00026, 1.00026, 1.00032, 0.98685, 0.99973, 1.00026, 1, 1, 0.99966, 1.00044, 1.00016, 1.00022, 1.00016, 1.00022, 1.00016, 1.00022, 1.00001, 0.99973, 1, 1, 0.99973, 1, 1, 0.99955, 1.0006, 1.0006, 1.0006, 1.0006, 1, 1, 1, 0.99973, 0.99973, 0.99972, 1, 1, 1.00106, 0.99999, 0.99998, 0.99998, 0.99999, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1, 0.99973, 0.99971, 0.99978, 1, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00098, 1, 1, 1, 1.00049, 1, 1, 0.99972, 1, 1.20985, 1.39713, 1.00003, 1.00031, 1.00015, 1, 0.99561, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.99972, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.HelveticaBoldItalicFactors = HelveticaBoldItalicFactors; const HelveticaBoldItalicMetrics = { lineHeight: 1.35, lineGap: 0.2 }; exports.HelveticaBoldItalicMetrics = HelveticaBoldItalicMetrics; const HelveticaItalicFactors = [0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982, 1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1, 0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1, 0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1, 0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.0288, 0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 0.99946, 1.00034, 1, 0.99924, 1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.06311, 0.99973, 1.00024, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00041, 0.9998, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998, 0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.89547, 1.00026, 1.0006, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924, 0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 1.00001, 1, 1.00054, 0.99977, 1.00084, 1.00007, 0.99973, 1.00013, 0.99924, 1.00001, 1.00001, 0.99945, 0.91221, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 1.00001, 1.00001, 0.99999, 0.99977, 0.99933, 1.00022, 1.00054, 1.00001, 1.00065, 1.00026, 1.00001, 1.0001, 1.00001, 1.00052, 1, 1.0006, 1.00001, 0.99945, 0.99897, 0.99968, 0.99924, 1.00036, 0.99945, 0.99949, 1, 1.0006, 0.99897, 0.99918, 0.99968, 0.99911, 0.99924, 1, 0.99962, 1.01487, 1, 1.0005, 0.99973, 1.00012, 1.00043, 1, 0.99995, 0.99994, 1.00036, 0.99947, 1.00019, 1.00063, 1.00025, 0.99924, 1.00036, 0.99973, 1.00036, 1.00025, 1.00001, 1.00001, 1.00027, 1.0001, 1.00068, 1.00001, 1.0006, 1.0006, 1, 1.00008, 0.99957, 0.99972, 0.9994, 0.99954, 0.99975, 1.00051, 1.00001, 1.00019, 1.00001, 1.0001, 0.99986, 1.00001, 1.00001, 1.00038, 0.99954, 0.99954, 0.9994, 1.00066, 0.99999, 0.99977, 1.00022, 1.00054, 1.00001, 0.99977, 1.00026, 0.99975, 1.0001, 1.00001, 0.99993, 0.9995, 0.99955, 1.00016, 0.99978, 0.99974, 1.00019, 1.00022, 0.99955, 1.00053, 0.99973, 1.00089, 1.00005, 0.99967, 1.00048, 0.99973, 1.00002, 1.00034, 0.99973, 0.99973, 0.99964, 1.00006, 1.00066, 0.99947, 0.99973, 0.98894, 0.99973, 1, 0.44898, 1, 0.99946, 1, 1.00039, 1.00082, 0.99991, 0.99991, 0.99985, 1.00022, 1.00023, 1.00061, 1.00006, 0.99966, 0.99973, 0.99973, 0.99973, 1.00019, 1.0008, 1, 0.99924, 0.99924, 0.99924, 0.99983, 1.00044, 0.99973, 0.99964, 0.98332, 1, 0.99973, 1, 1, 0.99962, 0.99895, 1.00016, 0.99977, 1.00016, 0.99977, 1.00016, 0.99977, 1.00001, 1, 1, 1, 0.99973, 1, 1, 0.99955, 0.99924, 0.99924, 0.99924, 0.99924, 0.99998, 0.99998, 0.99998, 0.99973, 0.99973, 0.99972, 1, 1, 1.00267, 0.99999, 0.99998, 0.99998, 1, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 1.00423, 0.99925, 0.99999, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1.00049, 1, 1.00245, 1, 1, 1, 1, 0.96329, 1, 1.20985, 1.39713, 1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, 1.00003, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 0.99998, 0.99998, 0.99998, 0.99998, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.HelveticaItalicFactors = HelveticaItalicFactors; const HelveticaItalicMetrics = { lineHeight: 1.35, lineGap: 0.2 }; exports.HelveticaItalicMetrics = HelveticaItalicMetrics; const HelveticaRegularFactors = [0.76116, 1, 1, 1.0006, 1.0006, 1.00006, 0.99973, 0.99973, 0.99982, 1.00001, 1.00043, 0.99998, 0.99998, 0.99959, 1.00003, 1.0006, 0.99998, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1, 1.00003, 1.00003, 1.00003, 0.99973, 0.99987, 1.00001, 1.00001, 0.99977, 0.99977, 1.00001, 1.00026, 1.00022, 0.99977, 1.0006, 1, 1.00001, 0.99973, 0.99999, 0.99977, 1.00022, 1.00001, 1.00022, 0.99977, 1.00001, 1.00026, 0.99977, 1.00001, 1.00016, 1.00001, 1.00001, 1.00026, 1.0006, 1.0006, 1.0006, 0.99949, 0.99973, 0.99998, 0.99973, 0.99973, 1, 0.99973, 0.99973, 1.0006, 0.99973, 0.99973, 0.99924, 0.99924, 1, 0.99924, 0.99999, 0.99973, 0.99973, 0.99973, 0.99973, 0.99998, 1, 1.0006, 0.99973, 1, 0.99977, 1, 1, 1, 1.00005, 1.0009, 1.00005, 1.00003, 0.99998, 0.99973, 0.99973, 0.99973, 0.99973, 1.0009, 0.99973, 0.99998, 1.00025, 0.99968, 0.99973, 1.00003, 1.00025, 0.60299, 1.00024, 1.06409, 1, 1, 0.99998, 1, 0.9998, 1.0006, 0.99998, 1, 0.99936, 0.99973, 1.00002, 1.00002, 1.00002, 1.00026, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1.00001, 1, 0.99977, 1.00001, 1.00001, 1.00001, 1.00001, 1.0006, 1.0006, 1.0006, 1.0006, 0.99977, 0.99977, 1.00022, 1.00022, 1.00022, 1.00022, 1.00022, 1.00003, 1.00022, 0.99977, 0.99977, 0.99977, 0.99977, 1.00001, 1.00001, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99982, 1, 0.99973, 0.99973, 0.99973, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 0.99973, 1.06409, 1.00026, 0.99973, 0.99973, 0.99973, 0.99973, 1, 0.99973, 1, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1, 0.99977, 1.04596, 0.99977, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00001, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 1.0006, 0.99924, 1.0006, 1.0006, 1.00019, 1.00034, 1, 0.99924, 1.00001, 1, 1, 0.99973, 0.99924, 0.99973, 0.99924, 0.99973, 1.02572, 0.99973, 1.00005, 0.99973, 0.99924, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99999, 0.9998, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1.00022, 0.99973, 1, 1.00016, 0.99977, 0.99998, 0.99977, 0.99998, 0.99977, 0.99998, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00001, 1, 1.00026, 1.0006, 1.00026, 0.84533, 1.00026, 1.0006, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 0.99977, 0.99973, 1.00016, 0.99977, 1.00001, 1, 1.00001, 1.00026, 1, 1.00026, 1, 1.00026, 1, 0.99924, 0.99973, 1.00001, 0.99973, 1, 0.99982, 1.00022, 1.00026, 1.00001, 1, 1.00026, 1.0006, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99998, 0.99928, 1, 0.99977, 1.00013, 1.00055, 0.99947, 0.99945, 0.99941, 0.99924, 1.00001, 1.00001, 1.0004, 0.91621, 1.00001, 1.00026, 0.99977, 1.00022, 1.0006, 1.00001, 1.00005, 0.99999, 0.99977, 1.00015, 1.00022, 0.99977, 1.00001, 0.99973, 1.00026, 1.00001, 1.00019, 1.00001, 0.99946, 1, 1.0006, 1.00001, 0.99978, 1.00045, 0.99973, 0.99924, 1.00023, 0.99978, 0.99966, 1, 1.00065, 1.00045, 1.00019, 0.99973, 0.99973, 0.99924, 1, 1, 0.96499, 1, 1.00055, 0.99973, 1.00008, 1.00027, 1, 0.9997, 0.99995, 1.00023, 0.99933, 1.00019, 1.00015, 1.00031, 0.99924, 1.00023, 0.99973, 1.00023, 1.00031, 1.00001, 0.99928, 1.00029, 1.00092, 1.00035, 1.00001, 1.0006, 1.0006, 1, 0.99988, 0.99975, 1, 1.00082, 0.99561, 0.9996, 1.00035, 1.00001, 0.99962, 1.00001, 1.00092, 0.99964, 1.00001, 0.99963, 0.99999, 1.00035, 1.00035, 1.00082, 0.99962, 0.99999, 0.99977, 1.00022, 1.00035, 1.00001, 0.99977, 1.00026, 0.9996, 0.99967, 1.00001, 1.00034, 1.00074, 1.00054, 1.00053, 1.00063, 0.99971, 0.99962, 1.00035, 0.99975, 0.99977, 0.99973, 1.00043, 0.99953, 1.0007, 0.99915, 0.99973, 1.00008, 0.99892, 1.00073, 1.00073, 1.00114, 0.99915, 1.00073, 0.99955, 0.99973, 1.00092, 0.99973, 1, 0.99998, 1, 1.0003, 1, 1.00043, 1.00001, 0.99969, 1.0003, 1, 1.00035, 1.00001, 0.9995, 1, 1.00092, 0.99973, 0.99973, 0.99973, 1.0007, 0.9995, 1, 0.99924, 1.0006, 0.99924, 0.99972, 1.00062, 0.99973, 1.00114, 1.00073, 1, 0.99955, 1, 1, 1.00047, 0.99968, 1.00016, 0.99977, 1.00016, 0.99977, 1.00016, 0.99977, 1.00001, 1, 1, 1, 0.99973, 1, 1, 0.99955, 0.99924, 0.99924, 0.99924, 0.99924, 0.99998, 0.99998, 0.99998, 0.99973, 0.99973, 0.99972, 1, 1, 1.00267, 0.99999, 0.99998, 0.99998, 1, 0.99998, 1.66475, 1, 0.99973, 0.99973, 1.00023, 0.99973, 0.99971, 0.99925, 1.00023, 1, 0.99991, 0.99984, 1.00002, 1.00002, 1.00002, 1.00002, 1, 1, 1, 1, 1, 1, 1, 0.96329, 1, 1.20985, 1.39713, 1.00003, 0.8254, 1.00015, 1, 1.00035, 1.00027, 1.00031, 1.00031, 0.99915, 1.00031, 1.00031, 0.99999, 1.00003, 0.99999, 0.99999, 1.41144, 1.6, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.41144, 1.40579, 1.40579, 1.36625, 0.99999, 1, 0.99861, 0.99861, 1, 1.00026, 1.00026, 1.00026, 1.00026, 0.95317, 0.99999, 0.99999, 0.99999, 0.99999, 1.40483, 1, 0.99977, 1.00054, 1, 1, 0.99953, 0.99962, 1.00042, 0.9995, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.HelveticaRegularFactors = HelveticaRegularFactors; const HelveticaRegularMetrics = { lineHeight: 1.2, lineGap: 0.2 }; exports.HelveticaRegularMetrics = HelveticaRegularMetrics; /***/ }), /* 15 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.LiberationSansRegularWidths = exports.LiberationSansRegularMapping = exports.LiberationSansItalicWidths = exports.LiberationSansItalicMapping = exports.LiberationSansBoldWidths = exports.LiberationSansBoldMapping = exports.LiberationSansBoldItalicWidths = exports.LiberationSansBoldItalicMapping = void 0; const LiberationSansBoldWidths = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 719, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 785, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 385, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1000, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1000, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 465, 722, 333, 853, 906, 474, 825, 927, 838, 278, 722, 722, 601, 719, 667, 611, 722, 778, 278, 722, 667, 833, 722, 644, 778, 722, 667, 600, 611, 667, 821, 667, 809, 802, 278, 667, 615, 451, 611, 278, 582, 615, 610, 556, 606, 475, 460, 611, 541, 278, 558, 556, 612, 556, 445, 611, 766, 619, 520, 684, 446, 582, 715, 576, 753, 845, 278, 582, 611, 582, 845, 667, 669, 885, 567, 711, 667, 278, 276, 556, 1094, 1062, 875, 610, 722, 622, 719, 722, 719, 722, 567, 712, 667, 904, 626, 719, 719, 610, 702, 833, 722, 778, 719, 667, 722, 611, 622, 854, 667, 730, 703, 1005, 1019, 870, 979, 719, 711, 1031, 719, 556, 618, 615, 417, 635, 556, 709, 497, 615, 615, 500, 635, 740, 604, 611, 604, 611, 556, 490, 556, 875, 556, 615, 581, 833, 844, 729, 854, 615, 552, 854, 583, 556, 556, 611, 417, 552, 556, 278, 281, 278, 969, 906, 611, 500, 615, 556, 604, 778, 611, 487, 447, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1000, 1000, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1000, 1000, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1094, 556, 885, 489, 1115, 1000, 768, 600, 834, 834, 834, 834, 1000, 500, 1000, 500, 1000, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1000, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333]; exports.LiberationSansBoldWidths = LiberationSansBoldWidths; const LiberationSansBoldMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; exports.LiberationSansBoldMapping = LiberationSansBoldMapping; const LiberationSansBoldItalicWidths = [365, 0, 333, 278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584, 584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333, 584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889, 611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389, 584, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 556, 278, 333, 333, 365, 556, 834, 834, 834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278, 278, 278, 611, 611, 611, 611, 611, 611, 611, 549, 611, 611, 611, 611, 611, 556, 611, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 740, 722, 611, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 611, 778, 611, 778, 611, 778, 611, 722, 611, 722, 611, 278, 278, 278, 278, 278, 278, 278, 278, 278, 278, 782, 556, 556, 278, 722, 556, 556, 611, 278, 611, 278, 611, 396, 611, 479, 611, 278, 722, 611, 722, 611, 722, 611, 708, 723, 611, 778, 611, 778, 611, 778, 611, 1000, 944, 722, 389, 722, 389, 722, 389, 667, 556, 667, 556, 667, 556, 667, 556, 611, 333, 611, 479, 611, 333, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 722, 611, 944, 778, 667, 556, 667, 611, 500, 611, 500, 611, 500, 278, 556, 722, 556, 1000, 889, 778, 611, 667, 556, 611, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 722, 333, 854, 906, 473, 844, 930, 847, 278, 722, 722, 610, 671, 667, 611, 722, 778, 278, 722, 667, 833, 722, 657, 778, 718, 667, 590, 611, 667, 822, 667, 829, 781, 278, 667, 620, 479, 611, 278, 591, 620, 621, 556, 610, 479, 492, 611, 558, 278, 566, 556, 603, 556, 450, 611, 712, 605, 532, 664, 409, 591, 704, 578, 773, 834, 278, 591, 611, 591, 834, 667, 667, 886, 614, 719, 667, 278, 278, 556, 1094, 1042, 854, 622, 719, 677, 719, 722, 708, 722, 614, 722, 667, 927, 643, 719, 719, 615, 687, 833, 722, 778, 719, 667, 722, 611, 677, 781, 667, 729, 708, 979, 989, 854, 1000, 708, 719, 1042, 729, 556, 619, 604, 534, 618, 556, 736, 510, 611, 611, 507, 622, 740, 604, 611, 611, 611, 556, 889, 556, 885, 556, 646, 583, 889, 935, 707, 854, 594, 552, 865, 589, 556, 556, 611, 469, 563, 556, 278, 278, 278, 969, 906, 611, 507, 619, 556, 611, 778, 611, 575, 467, 944, 778, 944, 778, 944, 778, 667, 556, 333, 333, 556, 1000, 1000, 552, 278, 278, 278, 278, 500, 500, 500, 556, 556, 350, 1000, 1000, 240, 479, 333, 333, 604, 333, 167, 396, 556, 556, 1104, 556, 885, 516, 1146, 1000, 768, 600, 834, 834, 834, 834, 999, 500, 1000, 500, 1000, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 722, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1000, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 611, 611, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 333, 333, 333, 333, 333, 333, 333, 333]; exports.LiberationSansBoldItalicWidths = LiberationSansBoldItalicWidths; const LiberationSansBoldItalicMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; exports.LiberationSansBoldItalicMapping = LiberationSansBoldItalicMapping; const LiberationSansItalicWidths = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 625, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 733, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 281, 556, 400, 556, 222, 722, 556, 722, 556, 722, 556, 615, 723, 556, 778, 556, 778, 556, 778, 556, 1000, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 354, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1000, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 789, 846, 389, 794, 865, 775, 222, 667, 667, 570, 671, 667, 611, 722, 778, 278, 667, 667, 833, 722, 648, 778, 725, 667, 600, 611, 667, 837, 667, 831, 761, 278, 667, 570, 439, 555, 222, 550, 570, 571, 500, 556, 439, 463, 555, 542, 222, 500, 492, 548, 500, 447, 556, 670, 573, 486, 603, 374, 550, 652, 546, 728, 779, 222, 550, 556, 550, 779, 667, 667, 843, 544, 708, 667, 278, 278, 500, 1066, 982, 844, 589, 715, 639, 724, 667, 651, 667, 544, 704, 667, 917, 614, 715, 715, 589, 686, 833, 722, 778, 725, 667, 722, 611, 639, 795, 667, 727, 673, 920, 923, 805, 886, 651, 694, 1022, 682, 556, 562, 522, 493, 553, 556, 688, 465, 556, 556, 472, 564, 686, 550, 556, 556, 556, 500, 833, 500, 835, 500, 572, 518, 830, 851, 621, 736, 526, 492, 752, 534, 556, 556, 556, 378, 496, 500, 222, 222, 222, 910, 828, 556, 472, 565, 500, 556, 778, 556, 492, 339, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1000, 1000, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1000, 1000, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1083, 1000, 768, 600, 834, 834, 834, 834, 1000, 500, 998, 500, 1000, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 584, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1000, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285]; exports.LiberationSansItalicWidths = LiberationSansItalicWidths; const LiberationSansItalicMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; exports.LiberationSansItalicMapping = LiberationSansItalicMapping; const LiberationSansRegularWidths = [365, 0, 333, 278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333, 278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584, 584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833, 722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278, 469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833, 556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334, 584, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 737, 552, 400, 549, 333, 333, 333, 576, 537, 278, 333, 333, 365, 556, 834, 834, 834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278, 278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667, 667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278, 278, 278, 556, 556, 556, 556, 556, 556, 556, 549, 611, 556, 556, 556, 556, 500, 556, 500, 667, 556, 667, 556, 667, 556, 722, 500, 722, 500, 722, 500, 722, 500, 722, 615, 722, 556, 667, 556, 667, 556, 667, 556, 667, 556, 667, 556, 778, 556, 778, 556, 778, 556, 778, 556, 722, 556, 722, 556, 278, 278, 278, 278, 278, 278, 278, 222, 278, 278, 735, 444, 500, 222, 667, 500, 500, 556, 222, 556, 222, 556, 292, 556, 334, 556, 222, 722, 556, 722, 556, 722, 556, 604, 723, 556, 778, 556, 778, 556, 778, 556, 1000, 944, 722, 333, 722, 333, 722, 333, 667, 500, 667, 500, 667, 500, 667, 500, 611, 278, 611, 375, 611, 278, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 722, 556, 944, 722, 667, 500, 667, 611, 500, 611, 500, 611, 500, 222, 556, 667, 556, 1000, 889, 778, 611, 667, 500, 611, 278, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 333, 667, 278, 784, 838, 384, 774, 855, 752, 222, 667, 667, 551, 668, 667, 611, 722, 778, 278, 667, 668, 833, 722, 650, 778, 722, 667, 618, 611, 667, 798, 667, 835, 748, 278, 667, 578, 446, 556, 222, 547, 578, 575, 500, 557, 446, 441, 556, 556, 222, 500, 500, 576, 500, 448, 556, 690, 569, 482, 617, 395, 547, 648, 525, 713, 781, 222, 547, 556, 547, 781, 667, 667, 865, 542, 719, 667, 278, 278, 500, 1057, 1010, 854, 583, 722, 635, 719, 667, 656, 667, 542, 677, 667, 923, 604, 719, 719, 583, 656, 833, 722, 778, 719, 667, 722, 611, 635, 760, 667, 740, 667, 917, 938, 792, 885, 656, 719, 1010, 722, 556, 573, 531, 365, 583, 556, 669, 458, 559, 559, 438, 583, 688, 552, 556, 542, 556, 500, 458, 500, 823, 500, 573, 521, 802, 823, 625, 719, 521, 510, 750, 542, 556, 556, 556, 365, 510, 500, 222, 278, 222, 906, 812, 556, 438, 559, 500, 552, 778, 556, 489, 411, 944, 722, 944, 722, 944, 722, 667, 500, 333, 333, 556, 1000, 1000, 552, 222, 222, 222, 222, 333, 333, 333, 556, 556, 350, 1000, 1000, 188, 354, 333, 333, 500, 333, 167, 365, 556, 556, 1094, 556, 885, 323, 1073, 1000, 768, 600, 834, 834, 834, 834, 1000, 500, 1000, 500, 1000, 500, 500, 494, 612, 823, 713, 584, 549, 713, 979, 719, 274, 549, 549, 583, 549, 549, 604, 584, 604, 604, 708, 625, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 708, 729, 604, 604, 354, 354, 1000, 990, 990, 990, 990, 494, 604, 604, 604, 604, 354, 1021, 1052, 917, 750, 750, 531, 656, 594, 510, 500, 750, 750, 500, 500, 333, 333, 333, 333, 333, 333, 333, 333, 222, 222, 294, 294, 324, 324, 316, 328, 398, 285]; exports.LiberationSansRegularWidths = LiberationSansRegularWidths; const LiberationSansRegularMapping = [-1, -1, -1, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 402, 506, 507, 508, 509, 510, 511, 536, 537, 538, 539, 710, 711, 713, 728, 729, 730, 731, 732, 733, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1138, 1139, 1168, 1169, 7808, 7809, 7810, 7811, 7812, 7813, 7922, 7923, 8208, 8209, 8211, 8212, 8213, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8224, 8225, 8226, 8230, 8240, 8242, 8243, 8249, 8250, 8252, 8254, 8260, 8319, 8355, 8356, 8359, 8364, 8453, 8467, 8470, 8482, 8486, 8494, 8539, 8540, 8541, 8542, 8592, 8593, 8594, 8595, 8596, 8597, 8616, 8706, 8710, 8719, 8721, 8722, 8730, 8734, 8735, 8745, 8747, 8776, 8800, 8801, 8804, 8805, 8962, 8976, 8992, 8993, 9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9600, 9604, 9608, 9612, 9616, 9617, 9618, 9619, 9632, 9633, 9642, 9643, 9644, 9650, 9658, 9660, 9668, 9674, 9675, 9679, 9688, 9689, 9702, 9786, 9787, 9788, 9792, 9794, 9824, 9827, 9829, 9830, 9834, 9835, 9836, 61441, 61442, 61445, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]; exports.LiberationSansRegularMapping = LiberationSansRegularMapping; /***/ }), /* 16 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.MyriadProRegularMetrics = exports.MyriadProRegularFactors = exports.MyriadProItalicMetrics = exports.MyriadProItalicFactors = exports.MyriadProBoldMetrics = exports.MyriadProBoldItalicMetrics = exports.MyriadProBoldItalicFactors = exports.MyriadProBoldFactors = void 0; const MyriadProBoldFactors = [1.36898, 1, 1, 0.72706, 0.80479, 0.83734, 0.98894, 0.99793, 0.9897, 0.93884, 0.86209, 0.94292, 0.94292, 1.16661, 1.02058, 0.93582, 0.96694, 0.93582, 1.19137, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.99793, 0.78076, 0.78076, 1.02058, 1.02058, 1.02058, 0.72851, 0.78966, 0.90838, 0.83637, 0.82391, 0.96376, 0.80061, 0.86275, 0.8768, 0.95407, 1.0258, 0.73901, 0.85022, 0.83655, 1.0156, 0.95546, 0.92179, 0.87107, 0.92179, 0.82114, 0.8096, 0.89713, 0.94438, 0.95353, 0.94083, 0.91905, 0.90406, 0.9446, 0.94292, 1.18777, 0.94292, 1.02058, 0.89903, 0.90088, 0.94938, 0.97898, 0.81093, 0.97571, 0.94938, 1.024, 0.9577, 0.95933, 0.98621, 1.0474, 0.97455, 0.98981, 0.9672, 0.95933, 0.9446, 0.97898, 0.97407, 0.97646, 0.78036, 1.10208, 0.95442, 0.95298, 0.97579, 0.9332, 0.94039, 0.938, 0.80687, 1.01149, 0.80687, 1.02058, 0.80479, 0.99793, 0.99793, 0.99793, 0.99793, 1.01149, 1.00872, 0.90088, 0.91882, 1.0213, 0.8361, 1.02058, 0.62295, 0.54324, 0.89022, 1.08595, 1, 1, 0.90088, 1, 0.97455, 0.93582, 0.90088, 1, 1.05686, 0.8361, 0.99642, 0.99642, 0.99642, 0.72851, 0.90838, 0.90838, 0.90838, 0.90838, 0.90838, 0.90838, 0.868, 0.82391, 0.80061, 0.80061, 0.80061, 0.80061, 1.0258, 1.0258, 1.0258, 1.0258, 0.97484, 0.95546, 0.92179, 0.92179, 0.92179, 0.92179, 0.92179, 1.02058, 0.92179, 0.94438, 0.94438, 0.94438, 0.94438, 0.90406, 0.86958, 0.98225, 0.94938, 0.94938, 0.94938, 0.94938, 0.94938, 0.94938, 0.9031, 0.81093, 0.94938, 0.94938, 0.94938, 0.94938, 0.98621, 0.98621, 0.98621, 0.98621, 0.93969, 0.95933, 0.9446, 0.9446, 0.9446, 0.9446, 0.9446, 1.08595, 0.9446, 0.95442, 0.95442, 0.95442, 0.95442, 0.94039, 0.97898, 0.94039, 0.90838, 0.94938, 0.90838, 0.94938, 0.90838, 0.94938, 0.82391, 0.81093, 0.82391, 0.81093, 0.82391, 0.81093, 0.82391, 0.81093, 0.96376, 0.84313, 0.97484, 0.97571, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.80061, 0.94938, 0.8768, 0.9577, 0.8768, 0.9577, 0.8768, 0.9577, 1, 1, 0.95407, 0.95933, 0.97069, 0.95933, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 1.0258, 0.98621, 0.887, 1.01591, 0.73901, 1.0474, 1, 1, 0.97455, 0.83655, 0.98981, 1, 1, 0.83655, 0.73977, 0.83655, 0.73903, 0.84638, 1.033, 0.95546, 0.95933, 1, 1, 0.95546, 0.95933, 0.8271, 0.95417, 0.95933, 0.92179, 0.9446, 0.92179, 0.9446, 0.92179, 0.9446, 0.936, 0.91964, 0.82114, 0.97646, 1, 1, 0.82114, 0.97646, 0.8096, 0.78036, 0.8096, 0.78036, 1, 1, 0.8096, 0.78036, 1, 1, 0.89713, 0.77452, 0.89713, 1.10208, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94438, 0.95442, 0.94083, 0.97579, 0.90406, 0.94039, 0.90406, 0.9446, 0.938, 0.9446, 0.938, 0.9446, 0.938, 1, 0.99793, 0.90838, 0.94938, 0.868, 0.9031, 0.92179, 0.9446, 1, 1, 0.89713, 1.10208, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90989, 0.9358, 0.91945, 0.83181, 0.75261, 0.87992, 0.82976, 0.96034, 0.83689, 0.97268, 1.0078, 0.90838, 0.83637, 0.8019, 0.90157, 0.80061, 0.9446, 0.95407, 0.92436, 1.0258, 0.85022, 0.97153, 1.0156, 0.95546, 0.89192, 0.92179, 0.92361, 0.87107, 0.96318, 0.89713, 0.93704, 0.95638, 0.91905, 0.91709, 0.92796, 1.0258, 0.93704, 0.94836, 1.0373, 0.95933, 1.0078, 0.95871, 0.94836, 0.96174, 0.92601, 0.9498, 0.98607, 0.95776, 0.95933, 1.05453, 1.0078, 0.98275, 0.9314, 0.95617, 0.91701, 1.05993, 0.9446, 0.78367, 0.9553, 1, 0.86832, 1.0128, 0.95871, 0.99394, 0.87548, 0.96361, 0.86774, 1.0078, 0.95871, 0.9446, 0.95871, 0.86774, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.94083, 0.97579, 0.94083, 0.97579, 0.94083, 0.97579, 0.90406, 0.94039, 0.96694, 1, 0.89903, 1, 1, 1, 0.93582, 0.93582, 0.93582, 1, 0.908, 0.908, 0.918, 0.94219, 0.94219, 0.96544, 1, 1.285, 1, 1, 0.81079, 0.81079, 1, 1, 0.74854, 1, 1, 1, 1, 0.99793, 1, 1, 1, 0.65, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.17173, 1, 0.80535, 0.76169, 1.02058, 1.0732, 1.05486, 1, 1, 1.30692, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.16161, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.MyriadProBoldFactors = MyriadProBoldFactors; const MyriadProBoldMetrics = { lineHeight: 1.2, lineGap: 0.2 }; exports.MyriadProBoldMetrics = MyriadProBoldMetrics; const MyriadProBoldItalicFactors = [1.36898, 1, 1, 0.66227, 0.80779, 0.81625, 0.97276, 0.97276, 0.97733, 0.92222, 0.83266, 0.94292, 0.94292, 1.16148, 1.02058, 0.93582, 0.96694, 0.93582, 1.17337, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.97276, 0.78076, 0.78076, 1.02058, 1.02058, 1.02058, 0.71541, 0.76813, 0.85576, 0.80591, 0.80729, 0.94299, 0.77512, 0.83655, 0.86523, 0.92222, 0.98621, 0.71743, 0.81698, 0.79726, 0.98558, 0.92222, 0.90637, 0.83809, 0.90637, 0.80729, 0.76463, 0.86275, 0.90699, 0.91605, 0.9154, 0.85308, 0.85458, 0.90531, 0.94292, 1.21296, 0.94292, 1.02058, 0.89903, 1.18616, 0.99613, 0.91677, 0.78216, 0.91677, 0.90083, 0.98796, 0.9135, 0.92168, 0.95381, 0.98981, 0.95298, 0.95381, 0.93459, 0.92168, 0.91513, 0.92004, 0.91677, 0.95077, 0.748, 1.04502, 0.91677, 0.92061, 0.94236, 0.89544, 0.89364, 0.9, 0.80687, 0.8578, 0.80687, 1.02058, 0.80779, 0.97276, 0.97276, 0.97276, 0.97276, 0.8578, 0.99973, 1.18616, 0.91339, 1.08074, 0.82891, 1.02058, 0.55509, 0.71526, 0.89022, 1.08595, 1, 1, 1.18616, 1, 0.96736, 0.93582, 1.18616, 1, 1.04864, 0.82711, 0.99043, 0.99043, 0.99043, 0.71541, 0.85576, 0.85576, 0.85576, 0.85576, 0.85576, 0.85576, 0.845, 0.80729, 0.77512, 0.77512, 0.77512, 0.77512, 0.98621, 0.98621, 0.98621, 0.98621, 0.95961, 0.92222, 0.90637, 0.90637, 0.90637, 0.90637, 0.90637, 1.02058, 0.90251, 0.90699, 0.90699, 0.90699, 0.90699, 0.85458, 0.83659, 0.94951, 0.99613, 0.99613, 0.99613, 0.99613, 0.99613, 0.99613, 0.85811, 0.78216, 0.90083, 0.90083, 0.90083, 0.90083, 0.95381, 0.95381, 0.95381, 0.95381, 0.9135, 0.92168, 0.91513, 0.91513, 0.91513, 0.91513, 0.91513, 1.08595, 0.91677, 0.91677, 0.91677, 0.91677, 0.91677, 0.89364, 0.92332, 0.89364, 0.85576, 0.99613, 0.85576, 0.99613, 0.85576, 0.99613, 0.80729, 0.78216, 0.80729, 0.78216, 0.80729, 0.78216, 0.80729, 0.78216, 0.94299, 0.76783, 0.95961, 0.91677, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.77512, 0.90083, 0.86523, 0.9135, 0.86523, 0.9135, 0.86523, 0.9135, 1, 1, 0.92222, 0.92168, 0.92222, 0.92168, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.98621, 0.95381, 0.86036, 0.97096, 0.71743, 0.98981, 1, 1, 0.95298, 0.79726, 0.95381, 1, 1, 0.79726, 0.6894, 0.79726, 0.74321, 0.81691, 1.0006, 0.92222, 0.92168, 1, 1, 0.92222, 0.92168, 0.79464, 0.92098, 0.92168, 0.90637, 0.91513, 0.90637, 0.91513, 0.90637, 0.91513, 0.909, 0.87514, 0.80729, 0.95077, 1, 1, 0.80729, 0.95077, 0.76463, 0.748, 0.76463, 0.748, 1, 1, 0.76463, 0.748, 1, 1, 0.86275, 0.72651, 0.86275, 1.04502, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.90699, 0.91677, 0.9154, 0.94236, 0.85458, 0.89364, 0.85458, 0.90531, 0.9, 0.90531, 0.9, 0.90531, 0.9, 1, 0.97276, 0.85576, 0.99613, 0.845, 0.85811, 0.90251, 0.91677, 1, 1, 0.86275, 1.04502, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.18616, 1.00899, 1.30628, 0.85576, 0.80178, 0.66862, 0.7927, 0.69323, 0.88127, 0.72459, 0.89711, 0.95381, 0.85576, 0.80591, 0.7805, 0.94729, 0.77512, 0.90531, 0.92222, 0.90637, 0.98621, 0.81698, 0.92655, 0.98558, 0.92222, 0.85359, 0.90637, 0.90976, 0.83809, 0.94523, 0.86275, 0.83509, 0.93157, 0.85308, 0.83392, 0.92346, 0.98621, 0.83509, 0.92886, 0.91324, 0.92168, 0.95381, 0.90646, 0.92886, 0.90557, 0.86847, 0.90276, 0.91324, 0.86842, 0.92168, 0.99531, 0.95381, 0.9224, 0.85408, 0.92699, 0.86847, 1.0051, 0.91513, 0.80487, 0.93481, 1, 0.88159, 1.05214, 0.90646, 0.97355, 0.81539, 0.89398, 0.85923, 0.95381, 0.90646, 0.91513, 0.90646, 0.85923, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9154, 0.94236, 0.9154, 0.94236, 0.9154, 0.94236, 0.85458, 0.89364, 0.96694, 1, 0.89903, 1, 1, 1, 0.91782, 0.91782, 0.91782, 1, 0.896, 0.896, 0.896, 0.9332, 0.9332, 0.95973, 1, 1.26, 1, 1, 0.80479, 0.80178, 1, 1, 0.85633, 1, 1, 1, 1, 0.97276, 1, 1, 1, 0.698, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.14542, 1, 0.79199, 0.78694, 1.02058, 1.03493, 1.05486, 1, 1, 1.23026, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.20006, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.MyriadProBoldItalicFactors = MyriadProBoldItalicFactors; const MyriadProBoldItalicMetrics = { lineHeight: 1.2, lineGap: 0.2 }; exports.MyriadProBoldItalicMetrics = MyriadProBoldItalicMetrics; const MyriadProItalicFactors = [1.36898, 1, 1, 0.65507, 0.84943, 0.85639, 0.88465, 0.88465, 0.86936, 0.88307, 0.86948, 0.85283, 0.85283, 1.06383, 1.02058, 0.75945, 0.9219, 0.75945, 1.17337, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.88465, 0.75945, 0.75945, 1.02058, 1.02058, 1.02058, 0.69046, 0.70926, 0.85158, 0.77812, 0.76852, 0.89591, 0.70466, 0.76125, 0.80094, 0.86822, 0.83864, 0.728, 0.77212, 0.79475, 0.93637, 0.87514, 0.8588, 0.76013, 0.8588, 0.72421, 0.69866, 0.77598, 0.85991, 0.80811, 0.87832, 0.78112, 0.77512, 0.8562, 1.0222, 1.18417, 1.0222, 1.27014, 0.89903, 1.15012, 0.93859, 0.94399, 0.846, 0.94399, 0.81453, 1.0186, 0.94219, 0.96017, 1.03075, 1.02175, 0.912, 1.03075, 0.96998, 0.96017, 0.93859, 0.94399, 0.94399, 0.95493, 0.746, 1.12658, 0.94578, 0.91, 0.979, 0.882, 0.882, 0.83, 0.85034, 0.83537, 0.85034, 1.02058, 0.70869, 0.88465, 0.88465, 0.88465, 0.88465, 0.83537, 0.90083, 1.15012, 0.9161, 0.94565, 0.73541, 1.02058, 0.53609, 0.69353, 0.79519, 1.08595, 1, 1, 1.15012, 1, 0.91974, 0.75945, 1.15012, 1, 0.9446, 0.73361, 0.9005, 0.9005, 0.9005, 0.62864, 0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.85158, 0.773, 0.76852, 0.70466, 0.70466, 0.70466, 0.70466, 0.83864, 0.83864, 0.83864, 0.83864, 0.90561, 0.87514, 0.8588, 0.8588, 0.8588, 0.8588, 0.8588, 1.02058, 0.85751, 0.85991, 0.85991, 0.85991, 0.85991, 0.77512, 0.76013, 0.88075, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 0.8075, 0.846, 0.81453, 0.81453, 0.81453, 0.81453, 0.82424, 0.82424, 0.82424, 0.82424, 0.9278, 0.96017, 0.93859, 0.93859, 0.93859, 0.93859, 0.93859, 1.08595, 0.8562, 0.94578, 0.94578, 0.94578, 0.94578, 0.882, 0.94578, 0.882, 0.85158, 0.93859, 0.85158, 0.93859, 0.85158, 0.93859, 0.76852, 0.846, 0.76852, 0.846, 0.76852, 0.846, 0.76852, 0.846, 0.89591, 0.8544, 0.90561, 0.94399, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.70466, 0.81453, 0.80094, 0.94219, 0.80094, 0.94219, 0.80094, 0.94219, 1, 1, 0.86822, 0.96017, 0.86822, 0.96017, 0.83864, 0.82424, 0.83864, 0.82424, 0.83864, 0.82424, 0.83864, 1.03075, 0.83864, 0.82424, 0.81402, 1.02738, 0.728, 1.02175, 1, 1, 0.912, 0.79475, 1.03075, 1, 1, 0.79475, 0.83911, 0.79475, 0.66266, 0.80553, 1.06676, 0.87514, 0.96017, 1, 1, 0.87514, 0.96017, 0.86865, 0.87396, 0.96017, 0.8588, 0.93859, 0.8588, 0.93859, 0.8588, 0.93859, 0.867, 0.84759, 0.72421, 0.95493, 1, 1, 0.72421, 0.95493, 0.69866, 0.746, 0.69866, 0.746, 1, 1, 0.69866, 0.746, 1, 1, 0.77598, 0.88417, 0.77598, 1.12658, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.85991, 0.94578, 0.87832, 0.979, 0.77512, 0.882, 0.77512, 0.8562, 0.83, 0.8562, 0.83, 0.8562, 0.83, 1, 0.88465, 0.85158, 0.93859, 0.773, 0.8075, 0.85751, 0.8562, 1, 1, 0.77598, 1.12658, 1.15012, 1.15012, 1.15012, 1.15012, 1.15012, 1.15313, 1.15012, 1.15012, 1.15012, 1.08106, 1.03901, 0.85158, 0.77025, 0.62264, 0.7646, 0.65351, 0.86026, 0.69461, 0.89947, 1.03075, 0.85158, 0.77812, 0.76449, 0.88836, 0.70466, 0.8562, 0.86822, 0.8588, 0.83864, 0.77212, 0.85308, 0.93637, 0.87514, 0.82352, 0.8588, 0.85701, 0.76013, 0.89058, 0.77598, 0.8156, 0.82565, 0.78112, 0.77899, 0.89386, 0.83864, 0.8156, 0.9486, 0.92388, 0.96186, 1.03075, 0.91123, 0.9486, 0.93298, 0.878, 0.93942, 0.92388, 0.84596, 0.96186, 0.95119, 1.03075, 0.922, 0.88787, 0.95829, 0.88, 0.93559, 0.93859, 0.78815, 0.93758, 1, 0.89217, 1.03737, 0.91123, 0.93969, 0.77487, 0.85769, 0.86799, 1.03075, 0.91123, 0.93859, 0.91123, 0.86799, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.87832, 0.979, 0.87832, 0.979, 0.87832, 0.979, 0.77512, 0.882, 0.9219, 1, 0.89903, 1, 1, 1, 0.87321, 0.87321, 0.87321, 1, 1.027, 1.027, 1.027, 0.86847, 0.86847, 0.79121, 1, 1.124, 1, 1, 0.73572, 0.73572, 1, 1, 0.85034, 1, 1, 1, 1, 0.88465, 1, 1, 1, 0.669, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04828, 1, 0.74948, 0.75187, 1.02058, 0.98391, 1.02119, 1, 1, 1.06233, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05233, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.MyriadProItalicFactors = MyriadProItalicFactors; const MyriadProItalicMetrics = { lineHeight: 1.2, lineGap: 0.2 }; exports.MyriadProItalicMetrics = MyriadProItalicMetrics; const MyriadProRegularFactors = [1.36898, 1, 1, 0.76305, 0.82784, 0.94935, 0.89364, 0.92241, 0.89073, 0.90706, 0.98472, 0.85283, 0.85283, 1.0664, 1.02058, 0.74505, 0.9219, 0.74505, 1.23456, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.92241, 0.74505, 0.74505, 1.02058, 1.02058, 1.02058, 0.73002, 0.72601, 0.91755, 0.8126, 0.80314, 0.92222, 0.73764, 0.79726, 0.83051, 0.90284, 0.86023, 0.74, 0.8126, 0.84869, 0.96518, 0.91115, 0.8858, 0.79761, 0.8858, 0.74498, 0.73914, 0.81363, 0.89591, 0.83659, 0.89633, 0.85608, 0.8111, 0.90531, 1.0222, 1.22736, 1.0222, 1.27014, 0.89903, 0.90088, 0.86667, 1.0231, 0.896, 1.01411, 0.90083, 1.05099, 1.00512, 0.99793, 1.05326, 1.09377, 0.938, 1.06226, 1.00119, 0.99793, 0.98714, 1.0231, 1.01231, 0.98196, 0.792, 1.19137, 0.99074, 0.962, 1.01915, 0.926, 0.942, 0.856, 0.85034, 0.92006, 0.85034, 1.02058, 0.69067, 0.92241, 0.92241, 0.92241, 0.92241, 0.92006, 0.9332, 0.90088, 0.91882, 0.93484, 0.75339, 1.02058, 0.56866, 0.54324, 0.79519, 1.08595, 1, 1, 0.90088, 1, 0.95325, 0.74505, 0.90088, 1, 0.97198, 0.75339, 0.91009, 0.91009, 0.91009, 0.66466, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.91755, 0.788, 0.80314, 0.73764, 0.73764, 0.73764, 0.73764, 0.86023, 0.86023, 0.86023, 0.86023, 0.92915, 0.91115, 0.8858, 0.8858, 0.8858, 0.8858, 0.8858, 1.02058, 0.8858, 0.89591, 0.89591, 0.89591, 0.89591, 0.8111, 0.79611, 0.89713, 0.86667, 0.86667, 0.86667, 0.86667, 0.86667, 0.86667, 0.86936, 0.896, 0.90083, 0.90083, 0.90083, 0.90083, 0.84224, 0.84224, 0.84224, 0.84224, 0.97276, 0.99793, 0.98714, 0.98714, 0.98714, 0.98714, 0.98714, 1.08595, 0.89876, 0.99074, 0.99074, 0.99074, 0.99074, 0.942, 1.0231, 0.942, 0.91755, 0.86667, 0.91755, 0.86667, 0.91755, 0.86667, 0.80314, 0.896, 0.80314, 0.896, 0.80314, 0.896, 0.80314, 0.896, 0.92222, 0.93372, 0.92915, 1.01411, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.73764, 0.90083, 0.83051, 1.00512, 0.83051, 1.00512, 0.83051, 1.00512, 1, 1, 0.90284, 0.99793, 0.90976, 0.99793, 0.86023, 0.84224, 0.86023, 0.84224, 0.86023, 0.84224, 0.86023, 1.05326, 0.86023, 0.84224, 0.82873, 1.07469, 0.74, 1.09377, 1, 1, 0.938, 0.84869, 1.06226, 1, 1, 0.84869, 0.83704, 0.84869, 0.81441, 0.85588, 1.08927, 0.91115, 0.99793, 1, 1, 0.91115, 0.99793, 0.91887, 0.90991, 0.99793, 0.8858, 0.98714, 0.8858, 0.98714, 0.8858, 0.98714, 0.894, 0.91434, 0.74498, 0.98196, 1, 1, 0.74498, 0.98196, 0.73914, 0.792, 0.73914, 0.792, 1, 1, 0.73914, 0.792, 1, 1, 0.81363, 0.904, 0.81363, 1.19137, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89591, 0.99074, 0.89633, 1.01915, 0.8111, 0.942, 0.8111, 0.90531, 0.856, 0.90531, 0.856, 0.90531, 0.856, 1, 0.92241, 0.91755, 0.86667, 0.788, 0.86936, 0.8858, 0.89876, 1, 1, 0.81363, 1.19137, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90088, 0.90388, 1.03901, 0.92138, 0.78105, 0.7154, 0.86169, 0.80513, 0.94007, 0.82528, 0.98612, 1.06226, 0.91755, 0.8126, 0.81884, 0.92819, 0.73764, 0.90531, 0.90284, 0.8858, 0.86023, 0.8126, 0.91172, 0.96518, 0.91115, 0.83089, 0.8858, 0.87791, 0.79761, 0.89297, 0.81363, 0.88157, 0.89992, 0.85608, 0.81992, 0.94307, 0.86023, 0.88157, 0.95308, 0.98699, 0.99793, 1.06226, 0.95817, 0.95308, 0.97358, 0.928, 0.98088, 0.98699, 0.92761, 0.99793, 0.96017, 1.06226, 0.986, 0.944, 0.95978, 0.938, 0.96705, 0.98714, 0.80442, 0.98972, 1, 0.89762, 1.04552, 0.95817, 0.99007, 0.87064, 0.91879, 0.88888, 1.06226, 0.95817, 0.98714, 0.95817, 0.88888, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.89633, 1.01915, 0.89633, 1.01915, 0.89633, 1.01915, 0.8111, 0.942, 0.9219, 1, 0.89903, 1, 1, 1, 0.93173, 0.93173, 0.93173, 1, 1.06304, 1.06304, 1.06904, 0.89903, 0.89903, 0.80549, 1, 1.156, 1, 1, 0.76575, 0.76575, 1, 1, 0.72458, 1, 1, 1, 1, 0.92241, 1, 1, 1, 0.619, 1, 1.36145, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.07257, 1, 0.74705, 0.71119, 1.02058, 1.024, 1.02119, 1, 1, 1.1536, 1.08595, 1.08595, 1, 1.08595, 1.08595, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.05638, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.MyriadProRegularFactors = MyriadProRegularFactors; const MyriadProRegularMetrics = { lineHeight: 1.2, lineGap: 0.2 }; exports.MyriadProRegularMetrics = MyriadProRegularMetrics; /***/ }), /* 17 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.SegoeuiRegularMetrics = exports.SegoeuiRegularFactors = exports.SegoeuiItalicMetrics = exports.SegoeuiItalicFactors = exports.SegoeuiBoldMetrics = exports.SegoeuiBoldItalicMetrics = exports.SegoeuiBoldItalicFactors = exports.SegoeuiBoldFactors = void 0; const SegoeuiBoldFactors = [1.76738, 1, 1, 0.99297, 0.9824, 1.04016, 1.06497, 1.03424, 0.97529, 1.17647, 1.23203, 1.1085, 1.1085, 1.16939, 1.2107, 0.9754, 1.21408, 0.9754, 1.59578, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 1.03424, 0.81378, 0.81378, 1.2107, 1.2107, 1.2107, 0.71703, 0.97847, 0.97363, 0.88776, 0.8641, 1.02096, 0.79795, 0.85132, 0.914, 1.06085, 1.1406, 0.8007, 0.89858, 0.83693, 1.14889, 1.09398, 0.97489, 0.92094, 0.97489, 0.90399, 0.84041, 0.95923, 1.00135, 1, 1.06467, 0.98243, 0.90996, 0.99361, 1.1085, 1.56942, 1.1085, 1.2107, 0.74627, 0.94282, 0.96752, 1.01519, 0.86304, 1.01359, 0.97278, 1.15103, 1.01359, 0.98561, 1.02285, 1.02285, 1.00527, 1.02285, 1.0302, 0.99041, 1.0008, 1.01519, 1.01359, 1.02258, 0.79104, 1.16862, 0.99041, 0.97454, 1.02511, 0.99298, 0.96752, 0.95801, 0.94856, 1.16579, 0.94856, 1.2107, 0.9824, 1.03424, 1.03424, 1, 1.03424, 1.16579, 0.8727, 1.3871, 1.18622, 1.10818, 1.04478, 1.2107, 1.18622, 0.75155, 0.94994, 1.28826, 1.21408, 1.21408, 0.91056, 1, 0.91572, 0.9754, 0.64663, 1.18328, 1.24866, 1.04478, 1.14169, 1.15749, 1.17389, 0.71703, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.93506, 0.8641, 0.79795, 0.79795, 0.79795, 0.79795, 1.1406, 1.1406, 1.1406, 1.1406, 1.02096, 1.09398, 0.97426, 0.97426, 0.97426, 0.97426, 0.97426, 1.2107, 0.97489, 1.00135, 1.00135, 1.00135, 1.00135, 0.90996, 0.92094, 1.02798, 0.96752, 0.96752, 0.96752, 0.96752, 0.96752, 0.96752, 0.93136, 0.86304, 0.97278, 0.97278, 0.97278, 0.97278, 1.02285, 1.02285, 1.02285, 1.02285, 0.97122, 0.99041, 1, 1, 1, 1, 1, 1.28826, 1.0008, 0.99041, 0.99041, 0.99041, 0.99041, 0.96752, 1.01519, 0.96752, 0.97363, 0.96752, 0.97363, 0.96752, 0.97363, 0.96752, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641, 0.86304, 0.8641, 0.86304, 1.02096, 1.03057, 1.02096, 1.03517, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.79795, 0.97278, 0.914, 1.01359, 0.914, 1.01359, 0.914, 1.01359, 1, 1, 1.06085, 0.98561, 1.06085, 1.00879, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 1.1406, 1.02285, 0.97138, 1.08692, 0.8007, 1.02285, 1, 1, 1.00527, 0.83693, 1.02285, 1, 1, 0.83693, 0.9455, 0.83693, 0.90418, 0.83693, 1.13005, 1.09398, 0.99041, 1, 1, 1.09398, 0.99041, 0.96692, 1.09251, 0.99041, 0.97489, 1.0008, 0.97489, 1.0008, 0.97489, 1.0008, 0.93994, 0.97931, 0.90399, 1.02258, 1, 1, 0.90399, 1.02258, 0.84041, 0.79104, 0.84041, 0.79104, 0.84041, 0.79104, 0.84041, 0.79104, 1, 1, 0.95923, 1.07034, 0.95923, 1.16862, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.00135, 0.99041, 1.06467, 1.02511, 0.90996, 0.96752, 0.90996, 0.99361, 0.95801, 0.99361, 0.95801, 0.99361, 0.95801, 1.07733, 1.03424, 0.97363, 0.96752, 0.93506, 0.93136, 0.97489, 1.0008, 1, 1, 0.95923, 1.16862, 1.15103, 1.15103, 1.01173, 1.03959, 0.75953, 0.81378, 0.79912, 1.15103, 1.21994, 0.95161, 0.87815, 1.01149, 0.81525, 0.7676, 0.98167, 1.01134, 1.02546, 0.84097, 1.03089, 1.18102, 0.97363, 0.88776, 0.85134, 0.97826, 0.79795, 0.99361, 1.06085, 0.97489, 1.1406, 0.89858, 1.0388, 1.14889, 1.09398, 0.86039, 0.97489, 1.0595, 0.92094, 0.94793, 0.95923, 0.90996, 0.99346, 0.98243, 1.02112, 0.95493, 1.1406, 0.90996, 1.03574, 1.02597, 1.0008, 1.18102, 1.06628, 1.03574, 1.0192, 1.01932, 1.00886, 0.97531, 1.0106, 1.0008, 1.13189, 1.18102, 1.02277, 0.98683, 1.0016, 0.99561, 1.07237, 1.0008, 0.90434, 0.99921, 0.93803, 0.8965, 1.23085, 1.06628, 1.04983, 0.96268, 1.0499, 0.98439, 1.18102, 1.06628, 1.0008, 1.06628, 0.98439, 0.79795, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09466, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.97278, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.02065, 1, 1, 1, 1, 1, 1, 1.06467, 1.02511, 1.06467, 1.02511, 1.06467, 1.02511, 0.90996, 0.96752, 1, 1.21408, 0.89903, 1, 1, 0.75155, 1.04394, 1.04394, 1.04394, 1.04394, 0.98633, 0.98633, 0.98633, 0.73047, 0.73047, 1.20642, 0.91211, 1.25635, 1.222, 1.02956, 1.03372, 1.03372, 0.96039, 1.24633, 1, 1.12454, 0.93503, 1.03424, 1.19687, 1.03424, 1, 1, 1, 0.771, 1, 1, 1.15749, 1.15749, 1.15749, 1.10948, 0.86279, 0.94434, 0.86279, 0.94434, 0.86182, 1, 1, 1.16897, 1, 0.96085, 0.90137, 1.2107, 1.18416, 1.13973, 0.69825, 0.9716, 2.10339, 1.29004, 1.29004, 1.21172, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18874, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.09193, 1.09193, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.SegoeuiBoldFactors = SegoeuiBoldFactors; const SegoeuiBoldMetrics = { lineHeight: 1.33008, lineGap: 0 }; exports.SegoeuiBoldMetrics = SegoeuiBoldMetrics; const SegoeuiBoldItalicFactors = [1.76738, 1, 1, 0.98946, 1.03959, 1.04016, 1.02809, 1.036, 0.97639, 1.10953, 1.23203, 1.11144, 1.11144, 1.16939, 1.21237, 0.9754, 1.21261, 0.9754, 1.59754, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 0.81378, 0.81378, 1.21237, 1.21237, 1.21237, 0.73541, 0.97847, 0.97363, 0.89723, 0.87897, 1.0426, 0.79429, 0.85292, 0.91149, 1.05815, 1.1406, 0.79631, 0.90128, 0.83853, 1.04396, 1.10615, 0.97552, 0.94436, 0.97552, 0.88641, 0.80527, 0.96083, 1.00135, 1, 1.06777, 0.9817, 0.91142, 0.99361, 1.11144, 1.57293, 1.11144, 1.21237, 0.74627, 1.31818, 1.06585, 0.97042, 0.83055, 0.97042, 0.93503, 1.1261, 0.97042, 0.97922, 1.14236, 0.94552, 1.01054, 1.14236, 1.02471, 0.97922, 0.94165, 0.97042, 0.97042, 1.0276, 0.78929, 1.1261, 0.97922, 0.95874, 1.02197, 0.98507, 0.96752, 0.97168, 0.95107, 1.16579, 0.95107, 1.21237, 1.03959, 1.036, 1.036, 1, 1.036, 1.16579, 0.87357, 1.31818, 1.18754, 1.26781, 1.05356, 1.21237, 1.18622, 0.79487, 0.94994, 1.29004, 1.24047, 1.24047, 1.31818, 1, 0.91484, 0.9754, 1.31818, 1.1349, 1.24866, 1.05356, 1.13934, 1.15574, 1.17389, 0.73541, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.97363, 0.94385, 0.87897, 0.79429, 0.79429, 0.79429, 0.79429, 1.1406, 1.1406, 1.1406, 1.1406, 1.0426, 1.10615, 0.97552, 0.97552, 0.97552, 0.97552, 0.97552, 1.21237, 0.97552, 1.00135, 1.00135, 1.00135, 1.00135, 0.91142, 0.94436, 0.98721, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, 1.06585, 0.96705, 0.83055, 0.93503, 0.93503, 0.93503, 0.93503, 1.14236, 1.14236, 1.14236, 1.14236, 0.93125, 0.97922, 0.94165, 0.94165, 0.94165, 0.94165, 0.94165, 1.29004, 0.94165, 0.97922, 0.97922, 0.97922, 0.97922, 0.96752, 0.97042, 0.96752, 0.97363, 1.06585, 0.97363, 1.06585, 0.97363, 1.06585, 0.87897, 0.83055, 0.87897, 0.83055, 0.87897, 0.83055, 0.87897, 0.83055, 1.0426, 1.0033, 1.0426, 0.97042, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.79429, 0.93503, 0.91149, 0.97042, 0.91149, 0.97042, 0.91149, 0.97042, 1, 1, 1.05815, 0.97922, 1.05815, 0.97922, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 1.1406, 1.14236, 0.97441, 1.04302, 0.79631, 1.01582, 1, 1, 1.01054, 0.83853, 1.14236, 1, 1, 0.83853, 1.09125, 0.83853, 0.90418, 0.83853, 1.19508, 1.10615, 0.97922, 1, 1, 1.10615, 0.97922, 1.01034, 1.10466, 0.97922, 0.97552, 0.94165, 0.97552, 0.94165, 0.97552, 0.94165, 0.91602, 0.91981, 0.88641, 1.0276, 1, 1, 0.88641, 1.0276, 0.80527, 0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 0.80527, 0.78929, 1, 1, 0.96083, 1.05403, 0.95923, 1.16862, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.00135, 0.97922, 1.06777, 1.02197, 0.91142, 0.96752, 0.91142, 0.99361, 0.97168, 0.99361, 0.97168, 0.99361, 0.97168, 1.23199, 1.036, 0.97363, 1.06585, 0.94385, 0.96705, 0.97552, 0.94165, 1, 1, 0.96083, 1.1261, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 1.31818, 0.95161, 1.27126, 1.00811, 0.83284, 0.77702, 0.99137, 0.95253, 1.0347, 0.86142, 1.07205, 1.14236, 0.97363, 0.89723, 0.86869, 1.09818, 0.79429, 0.99361, 1.05815, 0.97552, 1.1406, 0.90128, 1.06662, 1.04396, 1.10615, 0.84918, 0.97552, 1.04694, 0.94436, 0.98015, 0.96083, 0.91142, 1.00356, 0.9817, 1.01945, 0.98999, 1.1406, 0.91142, 1.04961, 0.9898, 1.00639, 1.14236, 1.07514, 1.04961, 0.99607, 1.02897, 1.008, 0.9898, 0.95134, 1.00639, 1.11121, 1.14236, 1.00518, 0.97981, 1.02186, 1, 1.08578, 0.94165, 0.99314, 0.98387, 0.93028, 0.93377, 1.35125, 1.07514, 1.10687, 0.93491, 1.04232, 1.00351, 1.14236, 1.07514, 0.94165, 1.07514, 1.00351, 0.79429, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.09097, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.93503, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.96609, 1, 1, 1, 1, 1, 1, 1.06777, 1.02197, 1.06777, 1.02197, 1.06777, 1.02197, 0.91142, 0.96752, 1, 1.21261, 0.89903, 1, 1, 0.75155, 1.04745, 1.04745, 1.04745, 1.04394, 0.98633, 0.98633, 0.98633, 0.72959, 0.72959, 1.20502, 0.91406, 1.26514, 1.222, 1.02956, 1.03372, 1.03372, 0.96039, 1.24633, 1, 1.09125, 0.93327, 1.03336, 1.16541, 1.036, 1, 1, 1, 0.771, 1, 1, 1.15574, 1.15574, 1.15574, 1.15574, 0.86364, 0.94434, 0.86279, 0.94434, 0.86224, 1, 1, 1.16798, 1, 0.96085, 0.90068, 1.21237, 1.18416, 1.13904, 0.69825, 0.9716, 2.10339, 1.29004, 1.29004, 1.21339, 1.29004, 1.29004, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18775, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.13269, 1.13269, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.SegoeuiBoldItalicFactors = SegoeuiBoldItalicFactors; const SegoeuiBoldItalicMetrics = { lineHeight: 1.33008, lineGap: 0 }; exports.SegoeuiBoldItalicMetrics = SegoeuiBoldItalicMetrics; const SegoeuiItalicFactors = [1.76738, 1, 1, 0.98946, 1.14763, 1.05365, 1.06234, 0.96927, 0.92586, 1.15373, 1.18414, 0.91349, 0.91349, 1.07403, 1.17308, 0.78383, 1.20088, 0.78383, 1.42531, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78383, 0.78383, 1.17308, 1.17308, 1.17308, 0.77349, 0.94565, 0.94729, 0.85944, 0.88506, 0.9858, 0.74817, 0.80016, 0.88449, 0.98039, 0.95782, 0.69238, 0.89898, 0.83231, 0.98183, 1.03989, 0.96924, 0.86237, 0.96924, 0.80595, 0.74524, 0.86091, 0.95402, 0.94143, 0.98448, 0.8858, 0.83089, 0.93285, 1.0949, 1.39016, 1.0949, 1.45994, 0.74627, 1.04839, 0.97454, 0.97454, 0.87207, 0.97454, 0.87533, 1.06151, 0.97454, 1.00176, 1.16484, 1.08132, 0.98047, 1.16484, 1.02989, 1.01054, 0.96225, 0.97454, 0.97454, 1.06598, 0.79004, 1.16344, 1.00351, 0.94629, 0.9973, 0.91016, 0.96777, 0.9043, 0.91082, 0.92481, 0.91082, 1.17308, 0.95748, 0.96927, 0.96927, 1, 0.96927, 0.92481, 0.80597, 1.04839, 1.23393, 1.1781, 0.9245, 1.17308, 1.20808, 0.63218, 0.94261, 1.24822, 1.09971, 1.09971, 1.04839, 1, 0.85273, 0.78032, 1.04839, 1.09971, 1.22326, 0.9245, 1.09836, 1.13525, 1.15222, 0.70424, 0.94729, 0.94729, 0.94729, 0.94729, 0.94729, 0.94729, 0.85498, 0.88506, 0.74817, 0.74817, 0.74817, 0.74817, 0.95782, 0.95782, 0.95782, 0.95782, 0.9858, 1.03989, 0.96924, 0.96924, 0.96924, 0.96924, 0.96924, 1.17308, 0.96924, 0.95402, 0.95402, 0.95402, 0.95402, 0.83089, 0.86237, 0.88409, 0.97454, 0.97454, 0.97454, 0.97454, 0.97454, 0.97454, 0.92916, 0.87207, 0.87533, 0.87533, 0.87533, 0.87533, 0.93146, 0.93146, 0.93146, 0.93146, 0.93854, 1.01054, 0.96225, 0.96225, 0.96225, 0.96225, 0.96225, 1.24822, 0.8761, 1.00351, 1.00351, 1.00351, 1.00351, 0.96777, 0.97454, 0.96777, 0.94729, 0.97454, 0.94729, 0.97454, 0.94729, 0.97454, 0.88506, 0.87207, 0.88506, 0.87207, 0.88506, 0.87207, 0.88506, 0.87207, 0.9858, 0.95391, 0.9858, 0.97454, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.74817, 0.87533, 0.88449, 0.97454, 0.88449, 0.97454, 0.88449, 0.97454, 1, 1, 0.98039, 1.00176, 0.98039, 1.00176, 0.95782, 0.93146, 0.95782, 0.93146, 0.95782, 0.93146, 0.95782, 1.16484, 0.95782, 0.93146, 0.84421, 1.12761, 0.69238, 1.08132, 1, 1, 0.98047, 0.83231, 1.16484, 1, 1, 0.84723, 1.04861, 0.84723, 0.78755, 0.83231, 1.23736, 1.03989, 1.01054, 1, 1, 1.03989, 1.01054, 0.9857, 1.03849, 1.01054, 0.96924, 0.96225, 0.96924, 0.96225, 0.96924, 0.96225, 0.92383, 0.90171, 0.80595, 1.06598, 1, 1, 0.80595, 1.06598, 0.74524, 0.79004, 0.74524, 0.79004, 0.74524, 0.79004, 0.74524, 0.79004, 1, 1, 0.86091, 1.02759, 0.85771, 1.16344, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.95402, 1.00351, 0.98448, 0.9973, 0.83089, 0.96777, 0.83089, 0.93285, 0.9043, 0.93285, 0.9043, 0.93285, 0.9043, 1.31868, 0.96927, 0.94729, 0.97454, 0.85498, 0.92916, 0.96924, 0.8761, 1, 1, 0.86091, 1.16344, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 1.04839, 0.81965, 0.81965, 0.94729, 0.78032, 0.71022, 0.90883, 0.84171, 0.99877, 0.77596, 1.05734, 1.2, 0.94729, 0.85944, 0.82791, 0.9607, 0.74817, 0.93285, 0.98039, 0.96924, 0.95782, 0.89898, 0.98316, 0.98183, 1.03989, 0.78614, 0.96924, 0.97642, 0.86237, 0.86075, 0.86091, 0.83089, 0.90082, 0.8858, 0.97296, 1.01284, 0.95782, 0.83089, 1.0976, 1.04, 1.03342, 1.2, 1.0675, 1.0976, 0.98205, 1.03809, 1.05097, 1.04, 0.95364, 1.03342, 1.05401, 1.2, 1.02148, 1.0119, 1.04724, 1.0127, 1.02732, 0.96225, 0.8965, 0.97783, 0.93574, 0.94818, 1.30679, 1.0675, 1.11826, 0.99821, 1.0557, 1.0326, 1.2, 1.0675, 0.96225, 1.0675, 1.0326, 0.74817, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03754, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.87533, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.98705, 1, 1, 1, 1, 1, 1, 0.98448, 0.9973, 0.98448, 0.9973, 0.98448, 0.9973, 0.83089, 0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 0.94945, 0.94945, 0.94945, 0.94945, 1.12317, 1.12317, 1.12317, 0.67603, 0.67603, 1.15621, 0.73584, 1.21191, 1.22135, 1.06483, 0.94868, 0.94868, 0.95996, 1.24633, 1, 1.07497, 0.87709, 0.96927, 1.01473, 0.96927, 1, 1, 1, 0.77295, 1, 1, 1.09836, 1.09836, 1.09836, 1.01522, 0.86321, 0.94434, 0.8649, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578, 0.86438, 1.17308, 1.18416, 1.14589, 0.69825, 0.97622, 1.96791, 1.24822, 1.24822, 1.17308, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.17984, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10742, 1.10742, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.SegoeuiItalicFactors = SegoeuiItalicFactors; const SegoeuiItalicMetrics = { lineHeight: 1.33008, lineGap: 0 }; exports.SegoeuiItalicMetrics = SegoeuiItalicMetrics; const SegoeuiRegularFactors = [1.76738, 1, 1, 0.98594, 1.02285, 1.10454, 1.06234, 0.96927, 0.92037, 1.19985, 1.2046, 0.90616, 0.90616, 1.07152, 1.1714, 0.78032, 1.20088, 0.78032, 1.40246, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.96927, 0.78032, 0.78032, 1.1714, 1.1714, 1.1714, 0.80597, 0.94084, 0.96706, 0.85944, 0.85734, 0.97093, 0.75842, 0.79936, 0.88198, 0.9831, 0.95782, 0.71387, 0.86969, 0.84636, 1.07796, 1.03584, 0.96924, 0.83968, 0.96924, 0.82826, 0.79649, 0.85771, 0.95132, 0.93119, 0.98965, 0.88433, 0.8287, 0.93365, 1.08612, 1.3638, 1.08612, 1.45786, 0.74627, 0.80499, 0.91484, 1.05707, 0.92383, 1.05882, 0.9403, 1.12654, 1.05882, 1.01756, 1.09011, 1.09011, 0.99414, 1.09011, 1.034, 1.01756, 1.05356, 1.05707, 1.05882, 1.04399, 0.84863, 1.21968, 1.01756, 0.95801, 1.00068, 0.91797, 0.96777, 0.9043, 0.90351, 0.92105, 0.90351, 1.1714, 0.85337, 0.96927, 0.96927, 0.99912, 0.96927, 0.92105, 0.80597, 1.2434, 1.20808, 1.05937, 0.90957, 1.1714, 1.20808, 0.75155, 0.94261, 1.24644, 1.09971, 1.09971, 0.84751, 1, 0.85273, 0.78032, 0.61584, 1.05425, 1.17914, 0.90957, 1.08665, 1.11593, 1.14169, 0.73381, 0.96706, 0.96706, 0.96706, 0.96706, 0.96706, 0.96706, 0.86035, 0.85734, 0.75842, 0.75842, 0.75842, 0.75842, 0.95782, 0.95782, 0.95782, 0.95782, 0.97093, 1.03584, 0.96924, 0.96924, 0.96924, 0.96924, 0.96924, 1.1714, 0.96924, 0.95132, 0.95132, 0.95132, 0.95132, 0.8287, 0.83968, 0.89049, 0.91484, 0.91484, 0.91484, 0.91484, 0.91484, 0.91484, 0.93575, 0.92383, 0.9403, 0.9403, 0.9403, 0.9403, 0.8717, 0.8717, 0.8717, 0.8717, 1.00527, 1.01756, 1.05356, 1.05356, 1.05356, 1.05356, 1.05356, 1.24644, 0.95923, 1.01756, 1.01756, 1.01756, 1.01756, 0.96777, 1.05707, 0.96777, 0.96706, 0.91484, 0.96706, 0.91484, 0.96706, 0.91484, 0.85734, 0.92383, 0.85734, 0.92383, 0.85734, 0.92383, 0.85734, 0.92383, 0.97093, 1.0969, 0.97093, 1.05882, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.75842, 0.9403, 0.88198, 1.05882, 0.88198, 1.05882, 0.88198, 1.05882, 1, 1, 0.9831, 1.01756, 0.9831, 1.01756, 0.95782, 0.8717, 0.95782, 0.8717, 0.95782, 0.8717, 0.95782, 1.09011, 0.95782, 0.8717, 0.84784, 1.11551, 0.71387, 1.09011, 1, 1, 0.99414, 0.84636, 1.09011, 1, 1, 0.84636, 1.0536, 0.84636, 0.94298, 0.84636, 1.23297, 1.03584, 1.01756, 1, 1, 1.03584, 1.01756, 1.00323, 1.03444, 1.01756, 0.96924, 1.05356, 0.96924, 1.05356, 0.96924, 1.05356, 0.93066, 0.98293, 0.82826, 1.04399, 1, 1, 0.82826, 1.04399, 0.79649, 0.84863, 0.79649, 0.84863, 0.79649, 0.84863, 0.79649, 0.84863, 1, 1, 0.85771, 1.17318, 0.85771, 1.21968, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.95132, 1.01756, 0.98965, 1.00068, 0.8287, 0.96777, 0.8287, 0.93365, 0.9043, 0.93365, 0.9043, 0.93365, 0.9043, 1.08571, 0.96927, 0.96706, 0.91484, 0.86035, 0.93575, 0.96924, 0.95923, 1, 1, 0.85771, 1.21968, 1.11437, 1.11437, 0.93109, 0.91202, 0.60411, 0.84164, 0.55572, 1.01173, 0.97361, 0.81818, 0.81818, 0.96635, 0.78032, 0.72727, 0.92366, 0.98601, 1.03405, 0.77968, 1.09799, 1.2, 0.96706, 0.85944, 0.85638, 0.96491, 0.75842, 0.93365, 0.9831, 0.96924, 0.95782, 0.86969, 0.94152, 1.07796, 1.03584, 0.78437, 0.96924, 0.98715, 0.83968, 0.83491, 0.85771, 0.8287, 0.94492, 0.88433, 0.9287, 1.0098, 0.95782, 0.8287, 1.0625, 0.98248, 1.03424, 1.2, 1.01071, 1.0625, 0.95246, 1.03809, 1.04912, 0.98248, 1.00221, 1.03424, 1.05443, 1.2, 1.04785, 0.99609, 1.00169, 1.05176, 0.99346, 1.05356, 0.9087, 1.03004, 0.95542, 0.93117, 1.23362, 1.01071, 1.07831, 1.02512, 1.05205, 1.03502, 1.2, 1.01071, 1.05356, 1.01071, 1.03502, 0.75842, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.03719, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.9403, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.04021, 1, 1, 1, 1, 1, 1, 0.98965, 1.00068, 0.98965, 1.00068, 0.98965, 1.00068, 0.8287, 0.96777, 1, 1.20088, 0.89903, 1, 1, 0.75155, 1.03077, 1.03077, 1.03077, 1.03077, 1.13196, 1.13196, 1.13196, 0.67428, 0.67428, 1.16039, 0.73291, 1.20996, 1.22135, 1.06483, 0.94868, 0.94868, 0.95996, 1.24633, 1, 1.07497, 0.87796, 0.96927, 1.01518, 0.96927, 1, 1, 1, 0.77295, 1, 1, 1.10539, 1.10539, 1.11358, 1.06967, 0.86279, 0.94434, 0.86279, 0.94434, 0.86182, 1, 1, 1.083, 1, 0.91578, 0.86507, 1.1714, 1.18416, 1.14589, 0.69825, 0.97622, 1.9697, 1.24822, 1.24822, 1.17238, 1.24822, 1.24822, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1.42603, 1, 0.99862, 0.99862, 1, 0.87025, 0.87025, 0.87025, 0.87025, 1.18083, 1.42603, 1, 1.42603, 1.42603, 0.99862, 1, 1, 1, 1, 1, 1.2886, 1.04315, 1.15296, 1.34163, 1, 1, 1, 1.10938, 1.10938, 1, 1, 1, 1.05425, 1.09971, 1.09971, 1.09971, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]; exports.SegoeuiRegularFactors = SegoeuiRegularFactors; const SegoeuiRegularMetrics = { lineHeight: 1.33008, lineGap: 0 }; exports.SegoeuiRegularMetrics = SegoeuiRegularMetrics; /***/ }), /* 18 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.SEAC_ANALYSIS_ENABLED = exports.MacStandardGlyphOrdering = exports.FontFlags = void 0; exports.getFontType = getFontType; exports.normalizeFontName = normalizeFontName; exports.recoverGlyphName = recoverGlyphName; exports.type1FontGlyphMapping = type1FontGlyphMapping; var _util = __w_pdfjs_require__(2); var _encodings = __w_pdfjs_require__(19); var _glyphlist = __w_pdfjs_require__(20); var _unicode = __w_pdfjs_require__(21); const SEAC_ANALYSIS_ENABLED = true; exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED; const FontFlags = { FixedPitch: 1, Serif: 2, Symbolic: 4, Script: 8, Nonsymbolic: 32, Italic: 64, AllCap: 65536, SmallCap: 131072, ForceBold: 262144 }; exports.FontFlags = FontFlags; const MacStandardGlyphOrdering = [\".notdef\", \".null\", \"nonmarkingreturn\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"Adieresis\", \"Aring\", \"Ccedilla\", \"Eacute\", \"Ntilde\", \"Odieresis\", \"Udieresis\", \"aacute\", \"agrave\", \"acircumflex\", \"adieresis\", \"atilde\", \"aring\", \"ccedilla\", \"eacute\", \"egrave\", \"ecircumflex\", \"edieresis\", \"iacute\", \"igrave\", \"icircumflex\", \"idieresis\", \"ntilde\", \"oacute\", \"ograve\", \"ocircumflex\", \"odieresis\", \"otilde\", \"uacute\", \"ugrave\", \"ucircumflex\", \"udieresis\", \"dagger\", \"degree\", \"cent\", \"sterling\", \"section\", \"bullet\", \"paragraph\", \"germandbls\", \"registered\", \"copyright\", \"trademark\", \"acute\", \"dieresis\", \"notequal\", \"AE\", \"Oslash\", \"infinity\", \"plusminus\", \"lessequal\", \"greaterequal\", \"yen\", \"mu\", \"partialdiff\", \"summation\", \"product\", \"pi\", \"integral\", \"ordfeminine\", \"ordmasculine\", \"Omega\", \"ae\", \"oslash\", \"questiondown\", \"exclamdown\", \"logicalnot\", \"radical\", \"florin\", \"approxequal\", \"Delta\", \"guillemotleft\", \"guillemotright\", \"ellipsis\", \"nonbreakingspace\", \"Agrave\", \"Atilde\", \"Otilde\", \"OE\", \"oe\", \"endash\", \"emdash\", \"quotedblleft\", \"quotedblright\", \"quoteleft\", \"quoteright\", \"divide\", \"lozenge\", \"ydieresis\", \"Ydieresis\", \"fraction\", \"currency\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"daggerdbl\", \"periodcentered\", \"quotesinglbase\", \"quotedblbase\", \"perthousand\", \"Acircumflex\", \"Ecircumflex\", \"Aacute\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Oacute\", \"Ocircumflex\", \"apple\", \"Ograve\", \"Uacute\", \"Ucircumflex\", \"Ugrave\", \"dotlessi\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\", \"Lslash\", \"lslash\", \"Scaron\", \"scaron\", \"Zcaron\", \"zcaron\", \"brokenbar\", \"Eth\", \"eth\", \"Yacute\", \"yacute\", \"Thorn\", \"thorn\", \"minus\", \"multiply\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"onehalf\", \"onequarter\", \"threequarters\", \"franc\", \"Gbreve\", \"gbreve\", \"Idotaccent\", \"Scedilla\", \"scedilla\", \"Cacute\", \"cacute\", \"Ccaron\", \"ccaron\", \"dcroat\"]; exports.MacStandardGlyphOrdering = MacStandardGlyphOrdering; function getFontType(type, subtype, isStandardFont = false) { switch (type) { case \"Type1\": if (isStandardFont) { return _util.FontType.TYPE1STANDARD; } return subtype === \"Type1C\" ? _util.FontType.TYPE1C : _util.FontType.TYPE1; case \"CIDFontType0\": return subtype === \"CIDFontType0C\" ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0; case \"OpenType\": return _util.FontType.OPENTYPE; case \"TrueType\": return _util.FontType.TRUETYPE; case \"CIDFontType2\": return _util.FontType.CIDFONTTYPE2; case \"MMType1\": return _util.FontType.MMTYPE1; case \"Type0\": return _util.FontType.TYPE0; default: return _util.FontType.UNKNOWN; } } function recoverGlyphName(name, glyphsUnicodeMap) { if (glyphsUnicodeMap[name] !== undefined) { return name; } const unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap); if (unicode !== -1) { for (const key in glyphsUnicodeMap) { if (glyphsUnicodeMap[key] === unicode) { return key; } } } (0, _util.info)(\"Unable to recover a standard glyph name for: \" + name); return name; } function type1FontGlyphMapping(properties, builtInEncoding, glyphNames) { const charCodeToGlyphId = Object.create(null); let glyphId, charCode, baseEncoding; const isSymbolicFont = !!(properties.flags & FontFlags.Symbolic); if (properties.isInternalFont) { baseEncoding = builtInEncoding; for (charCode = 0; charCode < baseEncoding.length; charCode++) { glyphId = glyphNames.indexOf(baseEncoding[charCode]); if (glyphId >= 0) { charCodeToGlyphId[charCode] = glyphId; } else { charCodeToGlyphId[charCode] = 0; } } } else if (properties.baseEncodingName) { baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName); for (charCode = 0; charCode < baseEncoding.length; charCode++) { glyphId = glyphNames.indexOf(baseEncoding[charCode]); if (glyphId >= 0) { charCodeToGlyphId[charCode] = glyphId; } else { charCodeToGlyphId[charCode] = 0; } } } else if (isSymbolicFont) { for (charCode in builtInEncoding) { charCodeToGlyphId[charCode] = builtInEncoding[charCode]; } } else { baseEncoding = _encodings.StandardEncoding; for (charCode = 0; charCode < baseEncoding.length; charCode++) { glyphId = glyphNames.indexOf(baseEncoding[charCode]); if (glyphId >= 0) { charCodeToGlyphId[charCode] = glyphId; } else { charCodeToGlyphId[charCode] = 0; } } } const differences = properties.differences; let glyphsUnicodeMap; if (differences) { for (charCode in differences) { const glyphName = differences[charCode]; glyphId = glyphNames.indexOf(glyphName); if (glyphId === -1) { if (!glyphsUnicodeMap) { glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)(); } const standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap); if (standardGlyphName !== glyphName) { glyphId = glyphNames.indexOf(standardGlyphName); } } if (glyphId >= 0) { charCodeToGlyphId[charCode] = glyphId; } else { charCodeToGlyphId[charCode] = 0; } } } return charCodeToGlyphId; } function normalizeFontName(name) { return name.replace(/[,_]/g, \"-\").replace(/\\s/g, \"\"); } /***/ }), /* 19 */ /***/ ((__unused_webpack_module, exports) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ZapfDingbatsEncoding = exports.WinAnsiEncoding = exports.SymbolSetEncoding = exports.StandardEncoding = exports.MacRomanEncoding = exports.ExpertEncoding = void 0; exports.getEncoding = getEncoding; const ExpertEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"commasuperior\", \"threequartersemdash\", \"periodsuperior\", \"questionsmall\", \"\", \"asuperior\", \"bsuperior\", \"centsuperior\", \"dsuperior\", \"esuperior\", \"\", \"\", \"\", \"isuperior\", \"\", \"\", \"lsuperior\", \"msuperior\", \"nsuperior\", \"osuperior\", \"\", \"\", \"rsuperior\", \"ssuperior\", \"tsuperior\", \"\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"\", \"parenrightinferior\", \"Circumflexsmall\", \"hyphensuperior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdownsmall\", \"centoldstyle\", \"Lslashsmall\", \"\", \"\", \"Scaronsmall\", \"Zcaronsmall\", \"Dieresissmall\", \"Brevesmall\", \"Caronsmall\", \"\", \"Dotaccentsmall\", \"\", \"\", \"Macronsmall\", \"\", \"\", \"figuredash\", \"hypheninferior\", \"\", \"\", \"Ogoneksmall\", \"Ringsmall\", \"Cedillasmall\", \"\", \"\", \"\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondownsmall\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"\", \"\", \"zerosuperior\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"eightsuperior\", \"ninesuperior\", \"zeroinferior\", \"oneinferior\", \"twoinferior\", \"threeinferior\", \"fourinferior\", \"fiveinferior\", \"sixinferior\", \"seveninferior\", \"eightinferior\", \"nineinferior\", \"centinferior\", \"dollarinferior\", \"periodinferior\", \"commainferior\", \"Agravesmall\", \"Aacutesmall\", \"Acircumflexsmall\", \"Atildesmall\", \"Adieresissmall\", \"Aringsmall\", \"AEsmall\", \"Ccedillasmall\", \"Egravesmall\", \"Eacutesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Igravesmall\", \"Iacutesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ethsmall\", \"Ntildesmall\", \"Ogravesmall\", \"Oacutesmall\", \"Ocircumflexsmall\", \"Otildesmall\", \"Odieresissmall\", \"OEsmall\", \"Oslashsmall\", \"Ugravesmall\", \"Uacutesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"Yacutesmall\", \"Thornsmall\", \"Ydieresissmall\"]; exports.ExpertEncoding = ExpertEncoding; const MacExpertEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclamsmall\", \"Hungarumlautsmall\", \"centoldstyle\", \"dollaroldstyle\", \"dollarsuperior\", \"ampersandsmall\", \"Acutesmall\", \"parenleftsuperior\", \"parenrightsuperior\", \"twodotenleader\", \"onedotenleader\", \"comma\", \"hyphen\", \"period\", \"fraction\", \"zerooldstyle\", \"oneoldstyle\", \"twooldstyle\", \"threeoldstyle\", \"fouroldstyle\", \"fiveoldstyle\", \"sixoldstyle\", \"sevenoldstyle\", \"eightoldstyle\", \"nineoldstyle\", \"colon\", \"semicolon\", \"\", \"threequartersemdash\", \"\", \"questionsmall\", \"\", \"\", \"\", \"\", \"Ethsmall\", \"\", \"\", \"onequarter\", \"onehalf\", \"threequarters\", \"oneeighth\", \"threeeighths\", \"fiveeighths\", \"seveneighths\", \"onethird\", \"twothirds\", \"\", \"\", \"\", \"\", \"\", \"\", \"ff\", \"fi\", \"fl\", \"ffi\", \"ffl\", \"parenleftinferior\", \"\", \"parenrightinferior\", \"Circumflexsmall\", \"hypheninferior\", \"Gravesmall\", \"Asmall\", \"Bsmall\", \"Csmall\", \"Dsmall\", \"Esmall\", \"Fsmall\", \"Gsmall\", \"Hsmall\", \"Ismall\", \"Jsmall\", \"Ksmall\", \"Lsmall\", \"Msmall\", \"Nsmall\", \"Osmall\", \"Psmall\", \"Qsmall\", \"Rsmall\", \"Ssmall\", \"Tsmall\", \"Usmall\", \"Vsmall\", \"Wsmall\", \"Xsmall\", \"Ysmall\", \"Zsmall\", \"colonmonetary\", \"onefitted\", \"rupiah\", \"Tildesmall\", \"\", \"\", \"asuperior\", \"centsuperior\", \"\", \"\", \"\", \"\", \"Aacutesmall\", \"Agravesmall\", \"Acircumflexsmall\", \"Adieresissmall\", \"Atildesmall\", \"Aringsmall\", \"Ccedillasmall\", \"Eacutesmall\", \"Egravesmall\", \"Ecircumflexsmall\", \"Edieresissmall\", \"Iacutesmall\", \"Igravesmall\", \"Icircumflexsmall\", \"Idieresissmall\", \"Ntildesmall\", \"Oacutesmall\", \"Ogravesmall\", \"Ocircumflexsmall\", \"Odieresissmall\", \"Otildesmall\", \"Uacutesmall\", \"Ugravesmall\", \"Ucircumflexsmall\", \"Udieresissmall\", \"\", \"eightsuperior\", \"fourinferior\", \"threeinferior\", \"sixinferior\", \"eightinferior\", \"seveninferior\", \"Scaronsmall\", \"\", \"centinferior\", \"twoinferior\", \"\", \"Dieresissmall\", \"\", \"Caronsmall\", \"osuperior\", \"fiveinferior\", \"\", \"commainferior\", \"periodinferior\", \"Yacutesmall\", \"\", \"dollarinferior\", \"\", \"\", \"Thornsmall\", \"\", \"nineinferior\", \"zeroinferior\", \"Zcaronsmall\", \"AEsmall\", \"Oslashsmall\", \"questiondownsmall\", \"oneinferior\", \"Lslashsmall\", \"\", \"\", \"\", \"\", \"\", \"\", \"Cedillasmall\", \"\", \"\", \"\", \"\", \"\", \"OEsmall\", \"figuredash\", \"hyphensuperior\", \"\", \"\", \"\", \"\", \"exclamdownsmall\", \"\", \"Ydieresissmall\", \"\", \"onesuperior\", \"twosuperior\", \"threesuperior\", \"foursuperior\", \"fivesuperior\", \"sixsuperior\", \"sevensuperior\", \"ninesuperior\", \"zerosuperior\", \"\", \"esuperior\", \"rsuperior\", \"tsuperior\", \"\", \"\", \"isuperior\", \"ssuperior\", \"dsuperior\", \"\", \"\", \"\", \"\", \"\", \"lsuperior\", \"Ogoneksmall\", \"Brevesmall\", \"Macronsmall\", \"bsuperior\", \"nsuperior\", \"msuperior\", \"commasuperior\", \"periodsuperior\", \"Dotaccentsmall\", \"Ringsmall\", \"\", \"\", \"\", \"\"]; const MacRomanEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"\", \"Adieresis\", \"Aring\", \"Ccedilla\", \"Eacute\", \"Ntilde\", \"Odieresis\", \"Udieresis\", \"aacute\", \"agrave\", \"acircumflex\", \"adieresis\", \"atilde\", \"aring\", \"ccedilla\", \"eacute\", \"egrave\", \"ecircumflex\", \"edieresis\", \"iacute\", \"igrave\", \"icircumflex\", \"idieresis\", \"ntilde\", \"oacute\", \"ograve\", \"ocircumflex\", \"odieresis\", \"otilde\", \"uacute\", \"ugrave\", \"ucircumflex\", \"udieresis\", \"dagger\", \"degree\", \"cent\", \"sterling\", \"section\", \"bullet\", \"paragraph\", \"germandbls\", \"registered\", \"copyright\", \"trademark\", \"acute\", \"dieresis\", \"notequal\", \"AE\", \"Oslash\", \"infinity\", \"plusminus\", \"lessequal\", \"greaterequal\", \"yen\", \"mu\", \"partialdiff\", \"summation\", \"product\", \"pi\", \"integral\", \"ordfeminine\", \"ordmasculine\", \"Omega\", \"ae\", \"oslash\", \"questiondown\", \"exclamdown\", \"logicalnot\", \"radical\", \"florin\", \"approxequal\", \"Delta\", \"guillemotleft\", \"guillemotright\", \"ellipsis\", \"space\", \"Agrave\", \"Atilde\", \"Otilde\", \"OE\", \"oe\", \"endash\", \"emdash\", \"quotedblleft\", \"quotedblright\", \"quoteleft\", \"quoteright\", \"divide\", \"lozenge\", \"ydieresis\", \"Ydieresis\", \"fraction\", \"currency\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"daggerdbl\", \"periodcentered\", \"quotesinglbase\", \"quotedblbase\", \"perthousand\", \"Acircumflex\", \"Ecircumflex\", \"Aacute\", \"Edieresis\", \"Egrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Igrave\", \"Oacute\", \"Ocircumflex\", \"apple\", \"Ograve\", \"Uacute\", \"Ucircumflex\", \"Ugrave\", \"dotlessi\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"ring\", \"cedilla\", \"hungarumlaut\", \"ogonek\", \"caron\"]; exports.MacRomanEncoding = MacRomanEncoding; const StandardEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quoteright\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"quoteleft\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"exclamdown\", \"cent\", \"sterling\", \"fraction\", \"yen\", \"florin\", \"section\", \"currency\", \"quotesingle\", \"quotedblleft\", \"guillemotleft\", \"guilsinglleft\", \"guilsinglright\", \"fi\", \"fl\", \"\", \"endash\", \"dagger\", \"daggerdbl\", \"periodcentered\", \"\", \"paragraph\", \"bullet\", \"quotesinglbase\", \"quotedblbase\", \"quotedblright\", \"guillemotright\", \"ellipsis\", \"perthousand\", \"\", \"questiondown\", \"\", \"grave\", \"acute\", \"circumflex\", \"tilde\", \"macron\", \"breve\", \"dotaccent\", \"dieresis\", \"\", \"ring\", \"cedilla\", \"\", \"hungarumlaut\", \"ogonek\", \"caron\", \"emdash\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"AE\", \"\", \"ordfeminine\", \"\", \"\", \"\", \"\", \"Lslash\", \"Oslash\", \"OE\", \"ordmasculine\", \"\", \"\", \"\", \"\", \"\", \"ae\", \"\", \"\", \"\", \"dotlessi\", \"\", \"\", \"lslash\", \"oslash\", \"oe\", \"germandbls\", \"\", \"\", \"\", \"\"]; exports.StandardEncoding = StandardEncoding; const WinAnsiEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"quotedbl\", \"numbersign\", \"dollar\", \"percent\", \"ampersand\", \"quotesingle\", \"parenleft\", \"parenright\", \"asterisk\", \"plus\", \"comma\", \"hyphen\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"at\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"bracketleft\", \"backslash\", \"bracketright\", \"asciicircum\", \"underscore\", \"grave\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"braceleft\", \"bar\", \"braceright\", \"asciitilde\", \"bullet\", \"Euro\", \"bullet\", \"quotesinglbase\", \"florin\", \"quotedblbase\", \"ellipsis\", \"dagger\", \"daggerdbl\", \"circumflex\", \"perthousand\", \"Scaron\", \"guilsinglleft\", \"OE\", \"bullet\", \"Zcaron\", \"bullet\", \"bullet\", \"quoteleft\", \"quoteright\", \"quotedblleft\", \"quotedblright\", \"bullet\", \"endash\", \"emdash\", \"tilde\", \"trademark\", \"scaron\", \"guilsinglright\", \"oe\", \"bullet\", \"zcaron\", \"Ydieresis\", \"space\", \"exclamdown\", \"cent\", \"sterling\", \"currency\", \"yen\", \"brokenbar\", \"section\", \"dieresis\", \"copyright\", \"ordfeminine\", \"guillemotleft\", \"logicalnot\", \"hyphen\", \"registered\", \"macron\", \"degree\", \"plusminus\", \"twosuperior\", \"threesuperior\", \"acute\", \"mu\", \"paragraph\", \"periodcentered\", \"cedilla\", \"onesuperior\", \"ordmasculine\", \"guillemotright\", \"onequarter\", \"onehalf\", \"threequarters\", \"questiondown\", \"Agrave\", \"Aacute\", \"Acircumflex\", \"Atilde\", \"Adieresis\", \"Aring\", \"AE\", \"Ccedilla\", \"Egrave\", \"Eacute\", \"Ecircumflex\", \"Edieresis\", \"Igrave\", \"Iacute\", \"Icircumflex\", \"Idieresis\", \"Eth\", \"Ntilde\", \"Ograve\", \"Oacute\", \"Ocircumflex\", \"Otilde\", \"Odieresis\", \"multiply\", \"Oslash\", \"Ugrave\", \"Uacute\", \"Ucircumflex\", \"Udieresis\", \"Yacute\", \"Thorn\", \"germandbls\", \"agrave\", \"aacute\", \"acircumflex\", \"atilde\", \"adieresis\", \"aring\", \"ae\", \"ccedilla\", \"egrave\", \"eacute\", \"ecircumflex\", \"edieresis\", \"igrave\", \"iacute\", \"icircumflex\", \"idieresis\", \"eth\", \"ntilde\", \"ograve\", \"oacute\", \"ocircumflex\", \"otilde\", \"odieresis\", \"divide\", \"oslash\", \"ugrave\", \"uacute\", \"ucircumflex\", \"udieresis\", \"yacute\", \"thorn\", \"ydieresis\"]; exports.WinAnsiEncoding = WinAnsiEncoding; const SymbolSetEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"exclam\", \"universal\", \"numbersign\", \"existential\", \"percent\", \"ampersand\", \"suchthat\", \"parenleft\", \"parenright\", \"asteriskmath\", \"plus\", \"comma\", \"minus\", \"period\", \"slash\", \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"colon\", \"semicolon\", \"less\", \"equal\", \"greater\", \"question\", \"congruent\", \"Alpha\", \"Beta\", \"Chi\", \"Delta\", \"Epsilon\", \"Phi\", \"Gamma\", \"Eta\", \"Iota\", \"theta1\", \"Kappa\", \"Lambda\", \"Mu\", \"Nu\", \"Omicron\", \"Pi\", \"Theta\", \"Rho\", \"Sigma\", \"Tau\", \"Upsilon\", \"sigma1\", \"Omega\", \"Xi\", \"Psi\", \"Zeta\", \"bracketleft\", \"therefore\", \"bracketright\", \"perpendicular\", \"underscore\", \"radicalex\", \"alpha\", \"beta\", \"chi\", \"delta\", \"epsilon\", \"phi\", \"gamma\", \"eta\", \"iota\", \"phi1\", \"kappa\", \"lambda\", \"mu\", \"nu\", \"omicron\", \"pi\", \"theta\", \"rho\", \"sigma\", \"tau\", \"upsilon\", \"omega1\", \"omega\", \"xi\", \"psi\", \"zeta\", \"braceleft\", \"bar\", \"braceright\", \"similar\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"Euro\", \"Upsilon1\", \"minute\", \"lessequal\", \"fraction\", \"infinity\", \"florin\", \"club\", \"diamond\", \"heart\", \"spade\", \"arrowboth\", \"arrowleft\", \"arrowup\", \"arrowright\", \"arrowdown\", \"degree\", \"plusminus\", \"second\", \"greaterequal\", \"multiply\", \"proportional\", \"partialdiff\", \"bullet\", \"divide\", \"notequal\", \"equivalence\", \"approxequal\", \"ellipsis\", \"arrowvertex\", \"arrowhorizex\", \"carriagereturn\", \"aleph\", \"Ifraktur\", \"Rfraktur\", \"weierstrass\", \"circlemultiply\", \"circleplus\", \"emptyset\", \"intersection\", \"union\", \"propersuperset\", \"reflexsuperset\", \"notsubset\", \"propersubset\", \"reflexsubset\", \"element\", \"notelement\", \"angle\", \"gradient\", \"registerserif\", \"copyrightserif\", \"trademarkserif\", \"product\", \"radical\", \"dotmath\", \"logicalnot\", \"logicaland\", \"logicalor\", \"arrowdblboth\", \"arrowdblleft\", \"arrowdblup\", \"arrowdblright\", \"arrowdbldown\", \"lozenge\", \"angleleft\", \"registersans\", \"copyrightsans\", \"trademarksans\", \"summation\", \"parenlefttp\", \"parenleftex\", \"parenleftbt\", \"bracketlefttp\", \"bracketleftex\", \"bracketleftbt\", \"bracelefttp\", \"braceleftmid\", \"braceleftbt\", \"braceex\", \"\", \"angleright\", \"integral\", \"integraltp\", \"integralex\", \"integralbt\", \"parenrighttp\", \"parenrightex\", \"parenrightbt\", \"bracketrighttp\", \"bracketrightex\", \"bracketrightbt\", \"bracerighttp\", \"bracerightmid\", \"bracerightbt\", \"\"]; exports.SymbolSetEncoding = SymbolSetEncoding; const ZapfDingbatsEncoding = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"space\", \"a1\", \"a2\", \"a202\", \"a3\", \"a4\", \"a5\", \"a119\", \"a118\", \"a117\", \"a11\", \"a12\", \"a13\", \"a14\", \"a15\", \"a16\", \"a105\", \"a17\", \"a18\", \"a19\", \"a20\", \"a21\", \"a22\", \"a23\", \"a24\", \"a25\", \"a26\", \"a27\", \"a28\", \"a6\", \"a7\", \"a8\", \"a9\", \"a10\", \"a29\", \"a30\", \"a31\", \"a32\", \"a33\", \"a34\", \"a35\", \"a36\", \"a37\", \"a38\", \"a39\", \"a40\", \"a41\", \"a42\", \"a43\", \"a44\", \"a45\", \"a46\", \"a47\", \"a48\", \"a49\", \"a50\", \"a51\", \"a52\", \"a53\", \"a54\", \"a55\", \"a56\", \"a57\", \"a58\", \"a59\", \"a60\", \"a61\", \"a62\", \"a63\", \"a64\", \"a65\", \"a66\", \"a67\", \"a68\", \"a69\", \"a70\", \"a71\", \"a72\", \"a73\", \"a74\", \"a203\", \"a75\", \"a204\", \"a76\", \"a77\", \"a78\", \"a79\", \"a81\", \"a82\", \"a83\", \"a84\", \"a97\", \"a98\", \"a99\", \"a100\", \"\", \"a89\", \"a90\", \"a93\", \"a94\", \"a91\", \"a92\", \"a205\", \"a85\", \"a206\", \"a86\", \"a87\", \"a88\", \"a95\", \"a96\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"a101\", \"a102\", \"a103\", \"a104\", \"a106\", \"a107\", \"a108\", \"a112\", \"a111\", \"a110\", \"a109\", \"a120\", \"a121\", \"a122\", \"a123\", \"a124\", \"a125\", \"a126\", \"a127\", \"a128\", \"a129\", \"a130\", \"a131\", \"a132\", \"a133\", \"a134\", \"a135\", \"a136\", \"a137\", \"a138\", \"a139\", \"a140\", \"a141\", \"a142\", \"a143\", \"a144\", \"a145\", \"a146\", \"a147\", \"a148\", \"a149\", \"a150\", \"a151\", \"a152\", \"a153\", \"a154\", \"a155\", \"a156\", \"a157\", \"a158\", \"a159\", \"a160\", \"a161\", \"a163\", \"a164\", \"a196\", \"a165\", \"a192\", \"a166\", \"a167\", \"a168\", \"a169\", \"a170\", \"a171\", \"a172\", \"a173\", \"a162\", \"a174\", \"a175\", \"a176\", \"a177\", \"a178\", \"a179\", \"a193\", \"a180\", \"a199\", \"a181\", \"a200\", \"a182\", \"\", \"a201\", \"a183\", \"a184\", \"a197\", \"a185\", \"a194\", \"a198\", \"a186\", \"a195\", \"a187\", \"a188\", \"a189\", \"a190\", \"a191\", \"\"]; exports.ZapfDingbatsEncoding = ZapfDingbatsEncoding; function getEncoding(encodingName) { switch (encodingName) { case \"WinAnsiEncoding\": return WinAnsiEncoding; case \"StandardEncoding\": return StandardEncoding; case \"MacRomanEncoding\": return MacRomanEncoding; case \"SymbolSetEncoding\": return SymbolSetEncoding; case \"ZapfDingbatsEncoding\": return ZapfDingbatsEncoding; case \"ExpertEncoding\": return ExpertEncoding; case \"MacExpertEncoding\": return MacExpertEncoding; default: return null; } } /***/ }), /* 20 */ /***/ ((__unused_webpack_module, __webpack_exports__, __w_pdfjs_require__) => { __w_pdfjs_require__.r(__webpack_exports__); /* harmony export */ __w_pdfjs_require__.d(__webpack_exports__, { /* harmony export */ \"getDingbatsGlyphsUnicode\": () => (/* binding */ getDingbatsGlyphsUnicode), /* harmony export */ \"getGlyphsUnicode\": () => (/* binding */ getGlyphsUnicode) /* harmony export */ }); /* harmony import */ var _core_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __w_pdfjs_require__(8); const getGlyphsUnicode = (0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getArrayLookupTableFactory)(function () { return [ \"A\", 0x0041, \"AE\", 0x00c6, \"AEacute\", 0x01fc, \"AEmacron\", 0x01e2, \"AEsmall\", 0xf7e6, \"Aacute\", 0x00c1, \"Aacutesmall\", 0xf7e1, \"Abreve\", 0x0102, \"Abreveacute\", 0x1eae, \"Abrevecyrillic\", 0x04d0, \"Abrevedotbelow\", 0x1eb6, \"Abrevegrave\", 0x1eb0, \"Abrevehookabove\", 0x1eb2, \"Abrevetilde\", 0x1eb4, \"Acaron\", 0x01cd, \"Acircle\", 0x24b6, \"Acircumflex\", 0x00c2, \"Acircumflexacute\", 0x1ea4, \"Acircumflexdotbelow\", 0x1eac, \"Acircumflexgrave\", 0x1ea6, \"Acircumflexhookabove\", 0x1ea8, \"Acircumflexsmall\", 0xf7e2, \"Acircumflextilde\", 0x1eaa, \"Acute\", 0xf6c9, \"Acutesmall\", 0xf7b4, \"Acyrillic\", 0x0410, \"Adblgrave\", 0x0200, \"Adieresis\", 0x00c4, \"Adieresiscyrillic\", 0x04d2, \"Adieresismacron\", 0x01de, \"Adieresissmall\", 0xf7e4, \"Adotbelow\", 0x1ea0, \"Adotmacron\", 0x01e0, \"Agrave\", 0x00c0, \"Agravesmall\", 0xf7e0, \"Ahookabove\", 0x1ea2, \"Aiecyrillic\", 0x04d4, \"Ainvertedbreve\", 0x0202, \"Alpha\", 0x0391, \"Alphatonos\", 0x0386, \"Amacron\", 0x0100, \"Amonospace\", 0xff21, \"Aogonek\", 0x0104, \"Aring\", 0x00c5, \"Aringacute\", 0x01fa, \"Aringbelow\", 0x1e00, \"Aringsmall\", 0xf7e5, \"Asmall\", 0xf761, \"Atilde\", 0x00c3, \"Atildesmall\", 0xf7e3, \"Aybarmenian\", 0x0531, \"B\", 0x0042, \"Bcircle\", 0x24b7, \"Bdotaccent\", 0x1e02, \"Bdotbelow\", 0x1e04, \"Becyrillic\", 0x0411, \"Benarmenian\", 0x0532, \"Beta\", 0x0392, \"Bhook\", 0x0181, \"Blinebelow\", 0x1e06, \"Bmonospace\", 0xff22, \"Brevesmall\", 0xf6f4, \"Bsmall\", 0xf762, \"Btopbar\", 0x0182, \"C\", 0x0043, \"Caarmenian\", 0x053e, \"Cacute\", 0x0106, \"Caron\", 0xf6ca, \"Caronsmall\", 0xf6f5, \"Ccaron\", 0x010c, \"Ccedilla\", 0x00c7, \"Ccedillaacute\", 0x1e08, \"Ccedillasmall\", 0xf7e7, \"Ccircle\", 0x24b8, \"Ccircumflex\", 0x0108, \"Cdot\", 0x010a, \"Cdotaccent\", 0x010a, \"Cedillasmall\", 0xf7b8, \"Chaarmenian\", 0x0549, \"Cheabkhasiancyrillic\", 0x04bc, \"Checyrillic\", 0x0427, \"Chedescenderabkhasiancyrillic\", 0x04be, \"Chedescendercyrillic\", 0x04b6, \"Chedieresiscyrillic\", 0x04f4, \"Cheharmenian\", 0x0543, \"Chekhakassiancyrillic\", 0x04cb, \"Cheverticalstrokecyrillic\", 0x04b8, \"Chi\", 0x03a7, \"Chook\", 0x0187, \"Circumflexsmall\", 0xf6f6, \"Cmonospace\", 0xff23, \"Coarmenian\", 0x0551, \"Csmall\", 0xf763, \"D\", 0x0044, \"DZ\", 0x01f1, \"DZcaron\", 0x01c4, \"Daarmenian\", 0x0534, \"Dafrican\", 0x0189, \"Dcaron\", 0x010e, \"Dcedilla\", 0x1e10, \"Dcircle\", 0x24b9, \"Dcircumflexbelow\", 0x1e12, \"Dcroat\", 0x0110, \"Ddotaccent\", 0x1e0a, \"Ddotbelow\", 0x1e0c, \"Decyrillic\", 0x0414, \"Deicoptic\", 0x03ee, \"Delta\", 0x2206, \"Deltagreek\", 0x0394, \"Dhook\", 0x018a, \"Dieresis\", 0xf6cb, \"DieresisAcute\", 0xf6cc, \"DieresisGrave\", 0xf6cd, \"Dieresissmall\", 0xf7a8, \"Digammagreek\", 0x03dc, \"Djecyrillic\", 0x0402, \"Dlinebelow\", 0x1e0e, \"Dmonospace\", 0xff24, \"Dotaccentsmall\", 0xf6f7, \"Dslash\", 0x0110, \"Dsmall\", 0xf764, \"Dtopbar\", 0x018b, \"Dz\", 0x01f2, \"Dzcaron\", 0x01c5, \"Dzeabkhasiancyrillic\", 0x04e0, \"Dzecyrillic\", 0x0405, \"Dzhecyrillic\", 0x040f, \"E\", 0x0045, \"Eacute\", 0x00c9, \"Eacutesmall\", 0xf7e9, \"Ebreve\", 0x0114, \"Ecaron\", 0x011a, \"Ecedillabreve\", 0x1e1c, \"Echarmenian\", 0x0535, \"Ecircle\", 0x24ba, \"Ecircumflex\", 0x00ca, \"Ecircumflexacute\", 0x1ebe, \"Ecircumflexbelow\", 0x1e18, \"Ecircumflexdotbelow\", 0x1ec6, \"Ecircumflexgrave\", 0x1ec0, \"Ecircumflexhookabove\", 0x1ec2, \"Ecircumflexsmall\", 0xf7ea, \"Ecircumflextilde\", 0x1ec4, \"Ecyrillic\", 0x0404, \"Edblgrave\", 0x0204, \"Edieresis\", 0x00cb, \"Edieresissmall\", 0xf7eb, \"Edot\", 0x0116, \"Edotaccent\", 0x0116, \"Edotbelow\", 0x1eb8, \"Efcyrillic\", 0x0424, \"Egrave\", 0x00c8, \"Egravesmall\", 0xf7e8, \"Eharmenian\", 0x0537, \"Ehookabove\", 0x1eba, \"Eightroman\", 0x2167, \"Einvertedbreve\", 0x0206, \"Eiotifiedcyrillic\", 0x0464, \"Elcyrillic\", 0x041b, \"Elevenroman\", 0x216a, \"Emacron\", 0x0112, \"Emacronacute\", 0x1e16, \"Emacrongrave\", 0x1e14, \"Emcyrillic\", 0x041c, \"Emonospace\", 0xff25, \"Encyrillic\", 0x041d, \"Endescendercyrillic\", 0x04a2, \"Eng\", 0x014a, \"Enghecyrillic\", 0x04a4, \"Enhookcyrillic\", 0x04c7, \"Eogonek\", 0x0118, \"Eopen\", 0x0190, \"Epsilon\", 0x0395, \"Epsilontonos\", 0x0388, \"Ercyrillic\", 0x0420, \"Ereversed\", 0x018e, \"Ereversedcyrillic\", 0x042d, \"Escyrillic\", 0x0421, \"Esdescendercyrillic\", 0x04aa, \"Esh\", 0x01a9, \"Esmall\", 0xf765, \"Eta\", 0x0397, \"Etarmenian\", 0x0538, \"Etatonos\", 0x0389, \"Eth\", 0x00d0, \"Ethsmall\", 0xf7f0, \"Etilde\", 0x1ebc, \"Etildebelow\", 0x1e1a, \"Euro\", 0x20ac, \"Ezh\", 0x01b7, \"Ezhcaron\", 0x01ee, \"Ezhreversed\", 0x01b8, \"F\", 0x0046, \"Fcircle\", 0x24bb, \"Fdotaccent\", 0x1e1e, \"Feharmenian\", 0x0556, \"Feicoptic\", 0x03e4, \"Fhook\", 0x0191, \"Fitacyrillic\", 0x0472, \"Fiveroman\", 0x2164, \"Fmonospace\", 0xff26, \"Fourroman\", 0x2163, \"Fsmall\", 0xf766, \"G\", 0x0047, \"GBsquare\", 0x3387, \"Gacute\", 0x01f4, \"Gamma\", 0x0393, \"Gammaafrican\", 0x0194, \"Gangiacoptic\", 0x03ea, \"Gbreve\", 0x011e, \"Gcaron\", 0x01e6, \"Gcedilla\", 0x0122, \"Gcircle\", 0x24bc, \"Gcircumflex\", 0x011c, \"Gcommaaccent\", 0x0122, \"Gdot\", 0x0120, \"Gdotaccent\", 0x0120, \"Gecyrillic\", 0x0413, \"Ghadarmenian\", 0x0542, \"Ghemiddlehookcyrillic\", 0x0494, \"Ghestrokecyrillic\", 0x0492, \"Gheupturncyrillic\", 0x0490, \"Ghook\", 0x0193, \"Gimarmenian\", 0x0533, \"Gjecyrillic\", 0x0403, \"Gmacron\", 0x1e20, \"Gmonospace\", 0xff27, \"Grave\", 0xf6ce, \"Gravesmall\", 0xf760, \"Gsmall\", 0xf767, \"Gsmallhook\", 0x029b, \"Gstroke\", 0x01e4, \"H\", 0x0048, \"H18533\", 0x25cf, \"H18543\", 0x25aa, \"H18551\", 0x25ab, \"H22073\", 0x25a1, \"HPsquare\", 0x33cb, \"Haabkhasiancyrillic\", 0x04a8, \"Hadescendercyrillic\", 0x04b2, \"Hardsigncyrillic\", 0x042a, \"Hbar\", 0x0126, \"Hbrevebelow\", 0x1e2a, \"Hcedilla\", 0x1e28, \"Hcircle\", 0x24bd, \"Hcircumflex\", 0x0124, \"Hdieresis\", 0x1e26, \"Hdotaccent\", 0x1e22, \"Hdotbelow\", 0x1e24, \"Hmonospace\", 0xff28, \"Hoarmenian\", 0x0540, \"Horicoptic\", 0x03e8, \"Hsmall\", 0xf768, \"Hungarumlaut\", 0xf6cf, \"Hungarumlautsmall\", 0xf6f8, \"Hzsquare\", 0x3390, \"I\", 0x0049, \"IAcyrillic\", 0x042f, \"IJ\", 0x0132, \"IUcyrillic\", 0x042e, \"Iacute\", 0x00cd, \"Iacutesmall\", 0xf7ed, \"Ibreve\", 0x012c, \"Icaron\", 0x01cf, \"Icircle\", 0x24be, \"Icircumflex\", 0x00ce, \"Icircumflexsmall\", 0xf7ee, \"Icyrillic\", 0x0406, \"Idblgrave\", 0x0208, \"Idieresis\", 0x00cf, \"Idieresisacute\", 0x1e2e, \"Idieresiscyrillic\", 0x04e4, \"Idieresissmall\", 0xf7ef, \"Idot\", 0x0130, \"Idotaccent\", 0x0130, \"Idotbelow\", 0x1eca, \"Iebrevecyrillic\", 0x04d6, \"Iecyrillic\", 0x0415, \"Ifraktur\", 0x2111, \"Igrave\", 0x00cc, \"Igravesmall\", 0xf7ec, \"Ihookabove\", 0x1ec8, \"Iicyrillic\", 0x0418, \"Iinvertedbreve\", 0x020a, \"Iishortcyrillic\", 0x0419, \"Imacron\", 0x012a, \"Imacroncyrillic\", 0x04e2, \"Imonospace\", 0xff29, \"Iniarmenian\", 0x053b, \"Iocyrillic\", 0x0401, \"Iogonek\", 0x012e, \"Iota\", 0x0399, \"Iotaafrican\", 0x0196, \"Iotadieresis\", 0x03aa, \"Iotatonos\", 0x038a, \"Ismall\", 0xf769, \"Istroke\", 0x0197, \"Itilde\", 0x0128, \"Itildebelow\", 0x1e2c, \"Izhitsacyrillic\", 0x0474, \"Izhitsadblgravecyrillic\", 0x0476, \"J\", 0x004a, \"Jaarmenian\", 0x0541, \"Jcircle\", 0x24bf, \"Jcircumflex\", 0x0134, \"Jecyrillic\", 0x0408, \"Jheharmenian\", 0x054b, \"Jmonospace\", 0xff2a, \"Jsmall\", 0xf76a, \"K\", 0x004b, \"KBsquare\", 0x3385, \"KKsquare\", 0x33cd, \"Kabashkircyrillic\", 0x04a0, \"Kacute\", 0x1e30, \"Kacyrillic\", 0x041a, \"Kadescendercyrillic\", 0x049a, \"Kahookcyrillic\", 0x04c3, \"Kappa\", 0x039a, \"Kastrokecyrillic\", 0x049e, \"Kaverticalstrokecyrillic\", 0x049c, \"Kcaron\", 0x01e8, \"Kcedilla\", 0x0136, \"Kcircle\", 0x24c0, \"Kcommaaccent\", 0x0136, \"Kdotbelow\", 0x1e32, \"Keharmenian\", 0x0554, \"Kenarmenian\", 0x053f, \"Khacyrillic\", 0x0425, \"Kheicoptic\", 0x03e6, \"Khook\", 0x0198, \"Kjecyrillic\", 0x040c, \"Klinebelow\", 0x1e34, \"Kmonospace\", 0xff2b, \"Koppacyrillic\", 0x0480, \"Koppagreek\", 0x03de, \"Ksicyrillic\", 0x046e, \"Ksmall\", 0xf76b, \"L\", 0x004c, \"LJ\", 0x01c7, \"LL\", 0xf6bf, \"Lacute\", 0x0139, \"Lambda\", 0x039b, \"Lcaron\", 0x013d, \"Lcedilla\", 0x013b, \"Lcircle\", 0x24c1, \"Lcircumflexbelow\", 0x1e3c, \"Lcommaaccent\", 0x013b, \"Ldot\", 0x013f, \"Ldotaccent\", 0x013f, \"Ldotbelow\", 0x1e36, \"Ldotbelowmacron\", 0x1e38, \"Liwnarmenian\", 0x053c, \"Lj\", 0x01c8, \"Ljecyrillic\", 0x0409, \"Llinebelow\", 0x1e3a, \"Lmonospace\", 0xff2c, \"Lslash\", 0x0141, \"Lslashsmall\", 0xf6f9, \"Lsmall\", 0xf76c, \"M\", 0x004d, \"MBsquare\", 0x3386, \"Macron\", 0xf6d0, \"Macronsmall\", 0xf7af, \"Macute\", 0x1e3e, \"Mcircle\", 0x24c2, \"Mdotaccent\", 0x1e40, \"Mdotbelow\", 0x1e42, \"Menarmenian\", 0x0544, \"Mmonospace\", 0xff2d, \"Msmall\", 0xf76d, \"Mturned\", 0x019c, \"Mu\", 0x039c, \"N\", 0x004e, \"NJ\", 0x01ca, \"Nacute\", 0x0143, \"Ncaron\", 0x0147, \"Ncedilla\", 0x0145, \"Ncircle\", 0x24c3, \"Ncircumflexbelow\", 0x1e4a, \"Ncommaaccent\", 0x0145, \"Ndotaccent\", 0x1e44, \"Ndotbelow\", 0x1e46, \"Nhookleft\", 0x019d, \"Nineroman\", 0x2168, \"Nj\", 0x01cb, \"Njecyrillic\", 0x040a, \"Nlinebelow\", 0x1e48, \"Nmonospace\", 0xff2e, \"Nowarmenian\", 0x0546, \"Nsmall\", 0xf76e, \"Ntilde\", 0x00d1, \"Ntildesmall\", 0xf7f1, \"Nu\", 0x039d, \"O\", 0x004f, \"OE\", 0x0152, \"OEsmall\", 0xf6fa, \"Oacute\", 0x00d3, \"Oacutesmall\", 0xf7f3, \"Obarredcyrillic\", 0x04e8, \"Obarreddieresiscyrillic\", 0x04ea, \"Obreve\", 0x014e, \"Ocaron\", 0x01d1, \"Ocenteredtilde\", 0x019f, \"Ocircle\", 0x24c4, \"Ocircumflex\", 0x00d4, \"Ocircumflexacute\", 0x1ed0, \"Ocircumflexdotbelow\", 0x1ed8, \"Ocircumflexgrave\", 0x1ed2, \"Ocircumflexhookabove\", 0x1ed4, \"Ocircumflexsmall\", 0xf7f4, \"Ocircumflextilde\", 0x1ed6, \"Ocyrillic\", 0x041e, \"Odblacute\", 0x0150, \"Odblgrave\", 0x020c, \"Odieresis\", 0x00d6, \"Odieresiscyrillic\", 0x04e6, \"Odieresissmall\", 0xf7f6, \"Odotbelow\", 0x1ecc, \"Ogoneksmall\", 0xf6fb, \"Ograve\", 0x00d2, \"Ogravesmall\", 0xf7f2, \"Oharmenian\", 0x0555, \"Ohm\", 0x2126, \"Ohookabove\", 0x1ece, \"Ohorn\", 0x01a0, \"Ohornacute\", 0x1eda, \"Ohorndotbelow\", 0x1ee2, \"Ohorngrave\", 0x1edc, \"Ohornhookabove\", 0x1ede, \"Ohorntilde\", 0x1ee0, \"Ohungarumlaut\", 0x0150, \"Oi\", 0x01a2, \"Oinvertedbreve\", 0x020e, \"Omacron\", 0x014c, \"Omacronacute\", 0x1e52, \"Omacrongrave\", 0x1e50, \"Omega\", 0x2126, \"Omegacyrillic\", 0x0460, \"Omegagreek\", 0x03a9, \"Omegaroundcyrillic\", 0x047a, \"Omegatitlocyrillic\", 0x047c, \"Omegatonos\", 0x038f, \"Omicron\", 0x039f, \"Omicrontonos\", 0x038c, \"Omonospace\", 0xff2f, \"Oneroman\", 0x2160, \"Oogonek\", 0x01ea, \"Oogonekmacron\", 0x01ec, \"Oopen\", 0x0186, \"Oslash\", 0x00d8, \"Oslashacute\", 0x01fe, \"Oslashsmall\", 0xf7f8, \"Osmall\", 0xf76f, \"Ostrokeacute\", 0x01fe, \"Otcyrillic\", 0x047e, \"Otilde\", 0x00d5, \"Otildeacute\", 0x1e4c, \"Otildedieresis\", 0x1e4e, \"Otildesmall\", 0xf7f5, \"P\", 0x0050, \"Pacute\", 0x1e54, \"Pcircle\", 0x24c5, \"Pdotaccent\", 0x1e56, \"Pecyrillic\", 0x041f, \"Peharmenian\", 0x054a, \"Pemiddlehookcyrillic\", 0x04a6, \"Phi\", 0x03a6, \"Phook\", 0x01a4, \"Pi\", 0x03a0, \"Piwrarmenian\", 0x0553, \"Pmonospace\", 0xff30, \"Psi\", 0x03a8, \"Psicyrillic\", 0x0470, \"Psmall\", 0xf770, \"Q\", 0x0051, \"Qcircle\", 0x24c6, \"Qmonospace\", 0xff31, \"Qsmall\", 0xf771, \"R\", 0x0052, \"Raarmenian\", 0x054c, \"Racute\", 0x0154, \"Rcaron\", 0x0158, \"Rcedilla\", 0x0156, \"Rcircle\", 0x24c7, \"Rcommaaccent\", 0x0156, \"Rdblgrave\", 0x0210, \"Rdotaccent\", 0x1e58, \"Rdotbelow\", 0x1e5a, \"Rdotbelowmacron\", 0x1e5c, \"Reharmenian\", 0x0550, \"Rfraktur\", 0x211c, \"Rho\", 0x03a1, \"Ringsmall\", 0xf6fc, \"Rinvertedbreve\", 0x0212, \"Rlinebelow\", 0x1e5e, \"Rmonospace\", 0xff32, \"Rsmall\", 0xf772, \"Rsmallinverted\", 0x0281, \"Rsmallinvertedsuperior\", 0x02b6, \"S\", 0x0053, \"SF010000\", 0x250c, \"SF020000\", 0x2514, \"SF030000\", 0x2510, \"SF040000\", 0x2518, \"SF050000\", 0x253c, \"SF060000\", 0x252c, \"SF070000\", 0x2534, \"SF080000\", 0x251c, \"SF090000\", 0x2524, \"SF100000\", 0x2500, \"SF110000\", 0x2502, \"SF190000\", 0x2561, \"SF200000\", 0x2562, \"SF210000\", 0x2556, \"SF220000\", 0x2555, \"SF230000\", 0x2563, \"SF240000\", 0x2551, \"SF250000\", 0x2557, \"SF260000\", 0x255d, \"SF270000\", 0x255c, \"SF280000\", 0x255b, \"SF360000\", 0x255e, \"SF370000\", 0x255f, \"SF380000\", 0x255a, \"SF390000\", 0x2554, \"SF400000\", 0x2569, \"SF410000\", 0x2566, \"SF420000\", 0x2560, \"SF430000\", 0x2550, \"SF440000\", 0x256c, \"SF450000\", 0x2567, \"SF460000\", 0x2568, \"SF470000\", 0x2564, \"SF480000\", 0x2565, \"SF490000\", 0x2559, \"SF500000\", 0x2558, \"SF510000\", 0x2552, \"SF520000\", 0x2553, \"SF530000\", 0x256b, \"SF540000\", 0x256a, \"Sacute\", 0x015a, \"Sacutedotaccent\", 0x1e64, \"Sampigreek\", 0x03e0, \"Scaron\", 0x0160, \"Scarondotaccent\", 0x1e66, \"Scaronsmall\", 0xf6fd, \"Scedilla\", 0x015e, \"Schwa\", 0x018f, \"Schwacyrillic\", 0x04d8, \"Schwadieresiscyrillic\", 0x04da, \"Scircle\", 0x24c8, \"Scircumflex\", 0x015c, \"Scommaaccent\", 0x0218, \"Sdotaccent\", 0x1e60, \"Sdotbelow\", 0x1e62, \"Sdotbelowdotaccent\", 0x1e68, \"Seharmenian\", 0x054d, \"Sevenroman\", 0x2166, \"Shaarmenian\", 0x0547, \"Shacyrillic\", 0x0428, \"Shchacyrillic\", 0x0429, \"Sheicoptic\", 0x03e2, \"Shhacyrillic\", 0x04ba, \"Shimacoptic\", 0x03ec, \"Sigma\", 0x03a3, \"Sixroman\", 0x2165, \"Smonospace\", 0xff33, \"Softsigncyrillic\", 0x042c, \"Ssmall\", 0xf773, \"Stigmagreek\", 0x03da, \"T\", 0x0054, \"Tau\", 0x03a4, \"Tbar\", 0x0166, \"Tcaron\", 0x0164, \"Tcedilla\", 0x0162, \"Tcircle\", 0x24c9, \"Tcircumflexbelow\", 0x1e70, \"Tcommaaccent\", 0x0162, \"Tdotaccent\", 0x1e6a, \"Tdotbelow\", 0x1e6c, \"Tecyrillic\", 0x0422, \"Tedescendercyrillic\", 0x04ac, \"Tenroman\", 0x2169, \"Tetsecyrillic\", 0x04b4, \"Theta\", 0x0398, \"Thook\", 0x01ac, \"Thorn\", 0x00de, \"Thornsmall\", 0xf7fe, \"Threeroman\", 0x2162, \"Tildesmall\", 0xf6fe, \"Tiwnarmenian\", 0x054f, \"Tlinebelow\", 0x1e6e, \"Tmonospace\", 0xff34, \"Toarmenian\", 0x0539, \"Tonefive\", 0x01bc, \"Tonesix\", 0x0184, \"Tonetwo\", 0x01a7, \"Tretroflexhook\", 0x01ae, \"Tsecyrillic\", 0x0426, \"Tshecyrillic\", 0x040b, \"Tsmall\", 0xf774, \"Twelveroman\", 0x216b, \"Tworoman\", 0x2161, \"U\", 0x0055, \"Uacute\", 0x00da, \"Uacutesmall\", 0xf7fa, \"Ubreve\", 0x016c, \"Ucaron\", 0x01d3, \"Ucircle\", 0x24ca, \"Ucircumflex\", 0x00db, \"Ucircumflexbelow\", 0x1e76, \"Ucircumflexsmall\", 0xf7fb, \"Ucyrillic\", 0x0423, \"Udblacute\", 0x0170, \"Udblgrave\", 0x0214, \"Udieresis\", 0x00dc, \"Udieresisacute\", 0x01d7, \"Udieresisbelow\", 0x1e72, \"Udieresiscaron\", 0x01d9, \"Udieresiscyrillic\", 0x04f0, \"Udieresisgrave\", 0x01db, \"Udieresismacron\", 0x01d5, \"Udieresissmall\", 0xf7fc, \"Udotbelow\", 0x1ee4, \"Ugrave\", 0x00d9, \"Ugravesmall\", 0xf7f9, \"Uhookabove\", 0x1ee6, \"Uhorn\", 0x01af, \"Uhornacute\", 0x1ee8, \"Uhorndotbelow\", 0x1ef0, \"Uhorngrave\", 0x1eea, \"Uhornhookabove\", 0x1eec, \"Uhorntilde\", 0x1eee, \"Uhungarumlaut\", 0x0170, \"Uhungarumlautcyrillic\", 0x04f2, \"Uinvertedbreve\", 0x0216, \"Ukcyrillic\", 0x0478, \"Umacron\", 0x016a, \"Umacroncyrillic\", 0x04ee, \"Umacrondieresis\", 0x1e7a, \"Umonospace\", 0xff35, \"Uogonek\", 0x0172, \"Upsilon\", 0x03a5, \"Upsilon1\", 0x03d2, \"Upsilonacutehooksymbolgreek\", 0x03d3, \"Upsilonafrican\", 0x01b1, \"Upsilondieresis\", 0x03ab, \"Upsilondieresishooksymbolgreek\", 0x03d4, \"Upsilonhooksymbol\", 0x03d2, \"Upsilontonos\", 0x038e, \"Uring\", 0x016e, \"Ushortcyrillic\", 0x040e, \"Usmall\", 0xf775, \"Ustraightcyrillic\", 0x04ae, \"Ustraightstrokecyrillic\", 0x04b0, \"Utilde\", 0x0168, \"Utildeacute\", 0x1e78, \"Utildebelow\", 0x1e74, \"V\", 0x0056, \"Vcircle\", 0x24cb, \"Vdotbelow\", 0x1e7e, \"Vecyrillic\", 0x0412, \"Vewarmenian\", 0x054e, \"Vhook\", 0x01b2, \"Vmonospace\", 0xff36, \"Voarmenian\", 0x0548, \"Vsmall\", 0xf776, \"Vtilde\", 0x1e7c, \"W\", 0x0057, \"Wacute\", 0x1e82, \"Wcircle\", 0x24cc, \"Wcircumflex\", 0x0174, \"Wdieresis\", 0x1e84, \"Wdotaccent\", 0x1e86, \"Wdotbelow\", 0x1e88, \"Wgrave\", 0x1e80, \"Wmonospace\", 0xff37, \"Wsmall\", 0xf777, \"X\", 0x0058, \"Xcircle\", 0x24cd, \"Xdieresis\", 0x1e8c, \"Xdotaccent\", 0x1e8a, \"Xeharmenian\", 0x053d, \"Xi\", 0x039e, \"Xmonospace\", 0xff38, \"Xsmall\", 0xf778, \"Y\", 0x0059, \"Yacute\", 0x00dd, \"Yacutesmall\", 0xf7fd, \"Yatcyrillic\", 0x0462, \"Ycircle\", 0x24ce, \"Ycircumflex\", 0x0176, \"Ydieresis\", 0x0178, \"Ydieresissmall\", 0xf7ff, \"Ydotaccent\", 0x1e8e, \"Ydotbelow\", 0x1ef4, \"Yericyrillic\", 0x042b, \"Yerudieresiscyrillic\", 0x04f8, \"Ygrave\", 0x1ef2, \"Yhook\", 0x01b3, \"Yhookabove\", 0x1ef6, \"Yiarmenian\", 0x0545, \"Yicyrillic\", 0x0407, \"Yiwnarmenian\", 0x0552, \"Ymonospace\", 0xff39, \"Ysmall\", 0xf779, \"Ytilde\", 0x1ef8, \"Yusbigcyrillic\", 0x046a, \"Yusbigiotifiedcyrillic\", 0x046c, \"Yuslittlecyrillic\", 0x0466, \"Yuslittleiotifiedcyrillic\", 0x0468, \"Z\", 0x005a, \"Zaarmenian\", 0x0536, \"Zacute\", 0x0179, \"Zcaron\", 0x017d, \"Zcaronsmall\", 0xf6ff, \"Zcircle\", 0x24cf, \"Zcircumflex\", 0x1e90, \"Zdot\", 0x017b, \"Zdotaccent\", 0x017b, \"Zdotbelow\", 0x1e92, \"Zecyrillic\", 0x0417, \"Zedescendercyrillic\", 0x0498, \"Zedieresiscyrillic\", 0x04de, \"Zeta\", 0x0396, \"Zhearmenian\", 0x053a, \"Zhebrevecyrillic\", 0x04c1, \"Zhecyrillic\", 0x0416, \"Zhedescendercyrillic\", 0x0496, \"Zhedieresiscyrillic\", 0x04dc, \"Zlinebelow\", 0x1e94, \"Zmonospace\", 0xff3a, \"Zsmall\", 0xf77a, \"Zstroke\", 0x01b5, \"a\", 0x0061, \"aabengali\", 0x0986, \"aacute\", 0x00e1, \"aadeva\", 0x0906, \"aagujarati\", 0x0a86, \"aagurmukhi\", 0x0a06, \"aamatragurmukhi\", 0x0a3e, \"aarusquare\", 0x3303, \"aavowelsignbengali\", 0x09be, \"aavowelsigndeva\", 0x093e, \"aavowelsigngujarati\", 0x0abe, \"abbreviationmarkarmenian\", 0x055f, \"abbreviationsigndeva\", 0x0970, \"abengali\", 0x0985, \"abopomofo\", 0x311a, \"abreve\", 0x0103, \"abreveacute\", 0x1eaf, \"abrevecyrillic\", 0x04d1, \"abrevedotbelow\", 0x1eb7, \"abrevegrave\", 0x1eb1, \"abrevehookabove\", 0x1eb3, \"abrevetilde\", 0x1eb5, \"acaron\", 0x01ce, \"acircle\", 0x24d0, \"acircumflex\", 0x00e2, \"acircumflexacute\", 0x1ea5, \"acircumflexdotbelow\", 0x1ead, \"acircumflexgrave\", 0x1ea7, \"acircumflexhookabove\", 0x1ea9, \"acircumflextilde\", 0x1eab, \"acute\", 0x00b4, \"acutebelowcmb\", 0x0317, \"acutecmb\", 0x0301, \"acutecomb\", 0x0301, \"acutedeva\", 0x0954, \"acutelowmod\", 0x02cf, \"acutetonecmb\", 0x0341, \"acyrillic\", 0x0430, \"adblgrave\", 0x0201, \"addakgurmukhi\", 0x0a71, \"adeva\", 0x0905, \"adieresis\", 0x00e4, \"adieresiscyrillic\", 0x04d3, \"adieresismacron\", 0x01df, \"adotbelow\", 0x1ea1, \"adotmacron\", 0x01e1, \"ae\", 0x00e6, \"aeacute\", 0x01fd, \"aekorean\", 0x3150, \"aemacron\", 0x01e3, \"afii00208\", 0x2015, \"afii08941\", 0x20a4, \"afii10017\", 0x0410, \"afii10018\", 0x0411, \"afii10019\", 0x0412, \"afii10020\", 0x0413, \"afii10021\", 0x0414, \"afii10022\", 0x0415, \"afii10023\", 0x0401, \"afii10024\", 0x0416, \"afii10025\", 0x0417, \"afii10026\", 0x0418, \"afii10027\", 0x0419, \"afii10028\", 0x041a, \"afii10029\", 0x041b, \"afii10030\", 0x041c, \"afii10031\", 0x041d, \"afii10032\", 0x041e, \"afii10033\", 0x041f, \"afii10034\", 0x0420, \"afii10035\", 0x0421, \"afii10036\", 0x0422, \"afii10037\", 0x0423, \"afii10038\", 0x0424, \"afii10039\", 0x0425, \"afii10040\", 0x0426, \"afii10041\", 0x0427, \"afii10042\", 0x0428, \"afii10043\", 0x0429, \"afii10044\", 0x042a, \"afii10045\", 0x042b, \"afii10046\", 0x042c, \"afii10047\", 0x042d, \"afii10048\", 0x042e, \"afii10049\", 0x042f, \"afii10050\", 0x0490, \"afii10051\", 0x0402, \"afii10052\", 0x0403, \"afii10053\", 0x0404, \"afii10054\", 0x0405, \"afii10055\", 0x0406, \"afii10056\", 0x0407, \"afii10057\", 0x0408, \"afii10058\", 0x0409, \"afii10059\", 0x040a, \"afii10060\", 0x040b, \"afii10061\", 0x040c, \"afii10062\", 0x040e, \"afii10063\", 0xf6c4, \"afii10064\", 0xf6c5, \"afii10065\", 0x0430, \"afii10066\", 0x0431, \"afii10067\", 0x0432, \"afii10068\", 0x0433, \"afii10069\", 0x0434, \"afii10070\", 0x0435, \"afii10071\", 0x0451, \"afii10072\", 0x0436, \"afii10073\", 0x0437, \"afii10074\", 0x0438, \"afii10075\", 0x0439, \"afii10076\", 0x043a, \"afii10077\", 0x043b, \"afii10078\", 0x043c, \"afii10079\", 0x043d, \"afii10080\", 0x043e, \"afii10081\", 0x043f, \"afii10082\", 0x0440, \"afii10083\", 0x0441, \"afii10084\", 0x0442, \"afii10085\", 0x0443, \"afii10086\", 0x0444, \"afii10087\", 0x0445, \"afii10088\", 0x0446, \"afii10089\", 0x0447, \"afii10090\", 0x0448, \"afii10091\", 0x0449, \"afii10092\", 0x044a, \"afii10093\", 0x044b, \"afii10094\", 0x044c, \"afii10095\", 0x044d, \"afii10096\", 0x044e, \"afii10097\", 0x044f, \"afii10098\", 0x0491, \"afii10099\", 0x0452, \"afii10100\", 0x0453, \"afii10101\", 0x0454, \"afii10102\", 0x0455, \"afii10103\", 0x0456, \"afii10104\", 0x0457, \"afii10105\", 0x0458, \"afii10106\", 0x0459, \"afii10107\", 0x045a, \"afii10108\", 0x045b, \"afii10109\", 0x045c, \"afii10110\", 0x045e, \"afii10145\", 0x040f, \"afii10146\", 0x0462, \"afii10147\", 0x0472, \"afii10148\", 0x0474, \"afii10192\", 0xf6c6, \"afii10193\", 0x045f, \"afii10194\", 0x0463, \"afii10195\", 0x0473, \"afii10196\", 0x0475, \"afii10831\", 0xf6c7, \"afii10832\", 0xf6c8, \"afii10846\", 0x04d9, \"afii299\", 0x200e, \"afii300\", 0x200f, \"afii301\", 0x200d, \"afii57381\", 0x066a, \"afii57388\", 0x060c, \"afii57392\", 0x0660, \"afii57393\", 0x0661, \"afii57394\", 0x0662, \"afii57395\", 0x0663, \"afii57396\", 0x0664, \"afii57397\", 0x0665, \"afii57398\", 0x0666, \"afii57399\", 0x0667, \"afii57400\", 0x0668, \"afii57401\", 0x0669, \"afii57403\", 0x061b, \"afii57407\", 0x061f, \"afii57409\", 0x0621, \"afii57410\", 0x0622, \"afii57411\", 0x0623, \"afii57412\", 0x0624, \"afii57413\", 0x0625, \"afii57414\", 0x0626, \"afii57415\", 0x0627, \"afii57416\", 0x0628, \"afii57417\", 0x0629, \"afii57418\", 0x062a, \"afii57419\", 0x062b, \"afii57420\", 0x062c, \"afii57421\", 0x062d, \"afii57422\", 0x062e, \"afii57423\", 0x062f, \"afii57424\", 0x0630, \"afii57425\", 0x0631, \"afii57426\", 0x0632, \"afii57427\", 0x0633, \"afii57428\", 0x0634, \"afii57429\", 0x0635, \"afii57430\", 0x0636, \"afii57431\", 0x0637, \"afii57432\", 0x0638, \"afii57433\", 0x0639, \"afii57434\", 0x063a, \"afii57440\", 0x0640, \"afii57441\", 0x0641, \"afii57442\", 0x0642, \"afii57443\", 0x0643, \"afii57444\", 0x0644, \"afii57445\", 0x0645, \"afii57446\", 0x0646, \"afii57448\", 0x0648, \"afii57449\", 0x0649, \"afii57450\", 0x064a, \"afii57451\", 0x064b, \"afii57452\", 0x064c, \"afii57453\", 0x064d, \"afii57454\", 0x064e, \"afii57455\", 0x064f, \"afii57456\", 0x0650, \"afii57457\", 0x0651, \"afii57458\", 0x0652, \"afii57470\", 0x0647, \"afii57505\", 0x06a4, \"afii57506\", 0x067e, \"afii57507\", 0x0686, \"afii57508\", 0x0698, \"afii57509\", 0x06af, \"afii57511\", 0x0679, \"afii57512\", 0x0688, \"afii57513\", 0x0691, \"afii57514\", 0x06ba, \"afii57519\", 0x06d2, \"afii57534\", 0x06d5, \"afii57636\", 0x20aa, \"afii57645\", 0x05be, \"afii57658\", 0x05c3, \"afii57664\", 0x05d0, \"afii57665\", 0x05d1, \"afii57666\", 0x05d2, \"afii57667\", 0x05d3, \"afii57668\", 0x05d4, \"afii57669\", 0x05d5, \"afii57670\", 0x05d6, \"afii57671\", 0x05d7, \"afii57672\", 0x05d8, \"afii57673\", 0x05d9, \"afii57674\", 0x05da, \"afii57675\", 0x05db, \"afii57676\", 0x05dc, \"afii57677\", 0x05dd, \"afii57678\", 0x05de, \"afii57679\", 0x05df, \"afii57680\", 0x05e0, \"afii57681\", 0x05e1, \"afii57682\", 0x05e2, \"afii57683\", 0x05e3, \"afii57684\", 0x05e4, \"afii57685\", 0x05e5, \"afii57686\", 0x05e6, \"afii57687\", 0x05e7, \"afii57688\", 0x05e8, \"afii57689\", 0x05e9, \"afii57690\", 0x05ea, \"afii57694\", 0xfb2a, \"afii57695\", 0xfb2b, \"afii57700\", 0xfb4b, \"afii57705\", 0xfb1f, \"afii57716\", 0x05f0, \"afii57717\", 0x05f1, \"afii57718\", 0x05f2, \"afii57723\", 0xfb35, \"afii57793\", 0x05b4, \"afii57794\", 0x05b5, \"afii57795\", 0x05b6, \"afii57796\", 0x05bb, \"afii57797\", 0x05b8, \"afii57798\", 0x05b7, \"afii57799\", 0x05b0, \"afii57800\", 0x05b2, \"afii57801\", 0x05b1, \"afii57802\", 0x05b3, \"afii57803\", 0x05c2, \"afii57804\", 0x05c1, \"afii57806\", 0x05b9, \"afii57807\", 0x05bc, \"afii57839\", 0x05bd, \"afii57841\", 0x05bf, \"afii57842\", 0x05c0, \"afii57929\", 0x02bc, \"afii61248\", 0x2105, \"afii61289\", 0x2113, \"afii61352\", 0x2116, \"afii61573\", 0x202c, \"afii61574\", 0x202d, \"afii61575\", 0x202e, \"afii61664\", 0x200c, \"afii63167\", 0x066d, \"afii64937\", 0x02bd, \"agrave\", 0x00e0, \"agujarati\", 0x0a85, \"agurmukhi\", 0x0a05, \"ahiragana\", 0x3042, \"ahookabove\", 0x1ea3, \"aibengali\", 0x0990, \"aibopomofo\", 0x311e, \"aideva\", 0x0910, \"aiecyrillic\", 0x04d5, \"aigujarati\", 0x0a90, \"aigurmukhi\", 0x0a10, \"aimatragurmukhi\", 0x0a48, \"ainarabic\", 0x0639, \"ainfinalarabic\", 0xfeca, \"aininitialarabic\", 0xfecb, \"ainmedialarabic\", 0xfecc, \"ainvertedbreve\", 0x0203, \"aivowelsignbengali\", 0x09c8, \"aivowelsigndeva\", 0x0948, \"aivowelsigngujarati\", 0x0ac8, \"akatakana\", 0x30a2, \"akatakanahalfwidth\", 0xff71, \"akorean\", 0x314f, \"alef\", 0x05d0, \"alefarabic\", 0x0627, \"alefdageshhebrew\", 0xfb30, \"aleffinalarabic\", 0xfe8e, \"alefhamzaabovearabic\", 0x0623, \"alefhamzaabovefinalarabic\", 0xfe84, \"alefhamzabelowarabic\", 0x0625, \"alefhamzabelowfinalarabic\", 0xfe88, \"alefhebrew\", 0x05d0, \"aleflamedhebrew\", 0xfb4f, \"alefmaddaabovearabic\", 0x0622, \"alefmaddaabovefinalarabic\", 0xfe82, \"alefmaksuraarabic\", 0x0649, \"alefmaksurafinalarabic\", 0xfef0, \"alefmaksurainitialarabic\", 0xfef3, \"alefmaksuramedialarabic\", 0xfef4, \"alefpatahhebrew\", 0xfb2e, \"alefqamatshebrew\", 0xfb2f, \"aleph\", 0x2135, \"allequal\", 0x224c, \"alpha\", 0x03b1, \"alphatonos\", 0x03ac, \"amacron\", 0x0101, \"amonospace\", 0xff41, \"ampersand\", 0x0026, \"ampersandmonospace\", 0xff06, \"ampersandsmall\", 0xf726, \"amsquare\", 0x33c2, \"anbopomofo\", 0x3122, \"angbopomofo\", 0x3124, \"angbracketleft\", 0x3008, \"angbracketright\", 0x3009, \"angkhankhuthai\", 0x0e5a, \"angle\", 0x2220, \"anglebracketleft\", 0x3008, \"anglebracketleftvertical\", 0xfe3f, \"anglebracketright\", 0x3009, \"anglebracketrightvertical\", 0xfe40, \"angleleft\", 0x2329, \"angleright\", 0x232a, \"angstrom\", 0x212b, \"anoteleia\", 0x0387, \"anudattadeva\", 0x0952, \"anusvarabengali\", 0x0982, \"anusvaradeva\", 0x0902, \"anusvaragujarati\", 0x0a82, \"aogonek\", 0x0105, \"apaatosquare\", 0x3300, \"aparen\", 0x249c, \"apostrophearmenian\", 0x055a, \"apostrophemod\", 0x02bc, \"apple\", 0xf8ff, \"approaches\", 0x2250, \"approxequal\", 0x2248, \"approxequalorimage\", 0x2252, \"approximatelyequal\", 0x2245, \"araeaekorean\", 0x318e, \"araeakorean\", 0x318d, \"arc\", 0x2312, \"arighthalfring\", 0x1e9a, \"aring\", 0x00e5, \"aringacute\", 0x01fb, \"aringbelow\", 0x1e01, \"arrowboth\", 0x2194, \"arrowdashdown\", 0x21e3, \"arrowdashleft\", 0x21e0, \"arrowdashright\", 0x21e2, \"arrowdashup\", 0x21e1, \"arrowdblboth\", 0x21d4, \"arrowdbldown\", 0x21d3, \"arrowdblleft\", 0x21d0, \"arrowdblright\", 0x21d2, \"arrowdblup\", 0x21d1, \"arrowdown\", 0x2193, \"arrowdownleft\", 0x2199, \"arrowdownright\", 0x2198, \"arrowdownwhite\", 0x21e9, \"arrowheaddownmod\", 0x02c5, \"arrowheadleftmod\", 0x02c2, \"arrowheadrightmod\", 0x02c3, \"arrowheadupmod\", 0x02c4, \"arrowhorizex\", 0xf8e7, \"arrowleft\", 0x2190, \"arrowleftdbl\", 0x21d0, \"arrowleftdblstroke\", 0x21cd, \"arrowleftoverright\", 0x21c6, \"arrowleftwhite\", 0x21e6, \"arrowright\", 0x2192, \"arrowrightdblstroke\", 0x21cf, \"arrowrightheavy\", 0x279e, \"arrowrightoverleft\", 0x21c4, \"arrowrightwhite\", 0x21e8, \"arrowtableft\", 0x21e4, \"arrowtabright\", 0x21e5, \"arrowup\", 0x2191, \"arrowupdn\", 0x2195, \"arrowupdnbse\", 0x21a8, \"arrowupdownbase\", 0x21a8, \"arrowupleft\", 0x2196, \"arrowupleftofdown\", 0x21c5, \"arrowupright\", 0x2197, \"arrowupwhite\", 0x21e7, \"arrowvertex\", 0xf8e6, \"asciicircum\", 0x005e, \"asciicircummonospace\", 0xff3e, \"asciitilde\", 0x007e, \"asciitildemonospace\", 0xff5e, \"ascript\", 0x0251, \"ascriptturned\", 0x0252, \"asmallhiragana\", 0x3041, \"asmallkatakana\", 0x30a1, \"asmallkatakanahalfwidth\", 0xff67, \"asterisk\", 0x002a, \"asteriskaltonearabic\", 0x066d, \"asteriskarabic\", 0x066d, \"asteriskmath\", 0x2217, \"asteriskmonospace\", 0xff0a, \"asterisksmall\", 0xfe61, \"asterism\", 0x2042, \"asuperior\", 0xf6e9, \"asymptoticallyequal\", 0x2243, \"at\", 0x0040, \"atilde\", 0x00e3, \"atmonospace\", 0xff20, \"atsmall\", 0xfe6b, \"aturned\", 0x0250, \"aubengali\", 0x0994, \"aubopomofo\", 0x3120, \"audeva\", 0x0914, \"augujarati\", 0x0a94, \"augurmukhi\", 0x0a14, \"aulengthmarkbengali\", 0x09d7, \"aumatragurmukhi\", 0x0a4c, \"auvowelsignbengali\", 0x09cc, \"auvowelsigndeva\", 0x094c, \"auvowelsigngujarati\", 0x0acc, \"avagrahadeva\", 0x093d, \"aybarmenian\", 0x0561, \"ayin\", 0x05e2, \"ayinaltonehebrew\", 0xfb20, \"ayinhebrew\", 0x05e2, \"b\", 0x0062, \"babengali\", 0x09ac, \"backslash\", 0x005c, \"backslashmonospace\", 0xff3c, \"badeva\", 0x092c, \"bagujarati\", 0x0aac, \"bagurmukhi\", 0x0a2c, \"bahiragana\", 0x3070, \"bahtthai\", 0x0e3f, \"bakatakana\", 0x30d0, \"bar\", 0x007c, \"barmonospace\", 0xff5c, \"bbopomofo\", 0x3105, \"bcircle\", 0x24d1, \"bdotaccent\", 0x1e03, \"bdotbelow\", 0x1e05, \"beamedsixteenthnotes\", 0x266c, \"because\", 0x2235, \"becyrillic\", 0x0431, \"beharabic\", 0x0628, \"behfinalarabic\", 0xfe90, \"behinitialarabic\", 0xfe91, \"behiragana\", 0x3079, \"behmedialarabic\", 0xfe92, \"behmeeminitialarabic\", 0xfc9f, \"behmeemisolatedarabic\", 0xfc08, \"behnoonfinalarabic\", 0xfc6d, \"bekatakana\", 0x30d9, \"benarmenian\", 0x0562, \"bet\", 0x05d1, \"beta\", 0x03b2, \"betasymbolgreek\", 0x03d0, \"betdagesh\", 0xfb31, \"betdageshhebrew\", 0xfb31, \"bethebrew\", 0x05d1, \"betrafehebrew\", 0xfb4c, \"bhabengali\", 0x09ad, \"bhadeva\", 0x092d, \"bhagujarati\", 0x0aad, \"bhagurmukhi\", 0x0a2d, \"bhook\", 0x0253, \"bihiragana\", 0x3073, \"bikatakana\", 0x30d3, \"bilabialclick\", 0x0298, \"bindigurmukhi\", 0x0a02, \"birusquare\", 0x3331, \"blackcircle\", 0x25cf, \"blackdiamond\", 0x25c6, \"blackdownpointingtriangle\", 0x25bc, \"blackleftpointingpointer\", 0x25c4, \"blackleftpointingtriangle\", 0x25c0, \"blacklenticularbracketleft\", 0x3010, \"blacklenticularbracketleftvertical\", 0xfe3b, \"blacklenticularbracketright\", 0x3011, \"blacklenticularbracketrightvertical\", 0xfe3c, \"blacklowerlefttriangle\", 0x25e3, \"blacklowerrighttriangle\", 0x25e2, \"blackrectangle\", 0x25ac, \"blackrightpointingpointer\", 0x25ba, \"blackrightpointingtriangle\", 0x25b6, \"blacksmallsquare\", 0x25aa, \"blacksmilingface\", 0x263b, \"blacksquare\", 0x25a0, \"blackstar\", 0x2605, \"blackupperlefttriangle\", 0x25e4, \"blackupperrighttriangle\", 0x25e5, \"blackuppointingsmalltriangle\", 0x25b4, \"blackuppointingtriangle\", 0x25b2, \"blank\", 0x2423, \"blinebelow\", 0x1e07, \"block\", 0x2588, \"bmonospace\", 0xff42, \"bobaimaithai\", 0x0e1a, \"bohiragana\", 0x307c, \"bokatakana\", 0x30dc, \"bparen\", 0x249d, \"bqsquare\", 0x33c3, \"braceex\", 0xf8f4, \"braceleft\", 0x007b, \"braceleftbt\", 0xf8f3, \"braceleftmid\", 0xf8f2, \"braceleftmonospace\", 0xff5b, \"braceleftsmall\", 0xfe5b, \"bracelefttp\", 0xf8f1, \"braceleftvertical\", 0xfe37, \"braceright\", 0x007d, \"bracerightbt\", 0xf8fe, \"bracerightmid\", 0xf8fd, \"bracerightmonospace\", 0xff5d, \"bracerightsmall\", 0xfe5c, \"bracerighttp\", 0xf8fc, \"bracerightvertical\", 0xfe38, \"bracketleft\", 0x005b, \"bracketleftbt\", 0xf8f0, \"bracketleftex\", 0xf8ef, \"bracketleftmonospace\", 0xff3b, \"bracketlefttp\", 0xf8ee, \"bracketright\", 0x005d, \"bracketrightbt\", 0xf8fb, \"bracketrightex\", 0xf8fa, \"bracketrightmonospace\", 0xff3d, \"bracketrighttp\", 0xf8f9, \"breve\", 0x02d8, \"brevebelowcmb\", 0x032e, \"brevecmb\", 0x0306, \"breveinvertedbelowcmb\", 0x032f, \"breveinvertedcmb\", 0x0311, \"breveinverteddoublecmb\", 0x0361, \"bridgebelowcmb\", 0x032a, \"bridgeinvertedbelowcmb\", 0x033a, \"brokenbar\", 0x00a6, \"bstroke\", 0x0180, \"bsuperior\", 0xf6ea, \"btopbar\", 0x0183, \"buhiragana\", 0x3076, \"bukatakana\", 0x30d6, \"bullet\", 0x2022, \"bulletinverse\", 0x25d8, \"bulletoperator\", 0x2219, \"bullseye\", 0x25ce, \"c\", 0x0063, \"caarmenian\", 0x056e, \"cabengali\", 0x099a, \"cacute\", 0x0107, \"cadeva\", 0x091a, \"cagujarati\", 0x0a9a, \"cagurmukhi\", 0x0a1a, \"calsquare\", 0x3388, \"candrabindubengali\", 0x0981, \"candrabinducmb\", 0x0310, \"candrabindudeva\", 0x0901, \"candrabindugujarati\", 0x0a81, \"capslock\", 0x21ea, \"careof\", 0x2105, \"caron\", 0x02c7, \"caronbelowcmb\", 0x032c, \"caroncmb\", 0x030c, \"carriagereturn\", 0x21b5, \"cbopomofo\", 0x3118, \"ccaron\", 0x010d, \"ccedilla\", 0x00e7, \"ccedillaacute\", 0x1e09, \"ccircle\", 0x24d2, \"ccircumflex\", 0x0109, \"ccurl\", 0x0255, \"cdot\", 0x010b, \"cdotaccent\", 0x010b, \"cdsquare\", 0x33c5, \"cedilla\", 0x00b8, \"cedillacmb\", 0x0327, \"cent\", 0x00a2, \"centigrade\", 0x2103, \"centinferior\", 0xf6df, \"centmonospace\", 0xffe0, \"centoldstyle\", 0xf7a2, \"centsuperior\", 0xf6e0, \"chaarmenian\", 0x0579, \"chabengali\", 0x099b, \"chadeva\", 0x091b, \"chagujarati\", 0x0a9b, \"chagurmukhi\", 0x0a1b, \"chbopomofo\", 0x3114, \"cheabkhasiancyrillic\", 0x04bd, \"checkmark\", 0x2713, \"checyrillic\", 0x0447, \"chedescenderabkhasiancyrillic\", 0x04bf, \"chedescendercyrillic\", 0x04b7, \"chedieresiscyrillic\", 0x04f5, \"cheharmenian\", 0x0573, \"chekhakassiancyrillic\", 0x04cc, \"cheverticalstrokecyrillic\", 0x04b9, \"chi\", 0x03c7, \"chieuchacirclekorean\", 0x3277, \"chieuchaparenkorean\", 0x3217, \"chieuchcirclekorean\", 0x3269, \"chieuchkorean\", 0x314a, \"chieuchparenkorean\", 0x3209, \"chochangthai\", 0x0e0a, \"chochanthai\", 0x0e08, \"chochingthai\", 0x0e09, \"chochoethai\", 0x0e0c, \"chook\", 0x0188, \"cieucacirclekorean\", 0x3276, \"cieucaparenkorean\", 0x3216, \"cieuccirclekorean\", 0x3268, \"cieuckorean\", 0x3148, \"cieucparenkorean\", 0x3208, \"cieucuparenkorean\", 0x321c, \"circle\", 0x25cb, \"circlecopyrt\", 0x00a9, \"circlemultiply\", 0x2297, \"circleot\", 0x2299, \"circleplus\", 0x2295, \"circlepostalmark\", 0x3036, \"circlewithlefthalfblack\", 0x25d0, \"circlewithrighthalfblack\", 0x25d1, \"circumflex\", 0x02c6, \"circumflexbelowcmb\", 0x032d, \"circumflexcmb\", 0x0302, \"clear\", 0x2327, \"clickalveolar\", 0x01c2, \"clickdental\", 0x01c0, \"clicklateral\", 0x01c1, \"clickretroflex\", 0x01c3, \"club\", 0x2663, \"clubsuitblack\", 0x2663, \"clubsuitwhite\", 0x2667, \"cmcubedsquare\", 0x33a4, \"cmonospace\", 0xff43, \"cmsquaredsquare\", 0x33a0, \"coarmenian\", 0x0581, \"colon\", 0x003a, \"colonmonetary\", 0x20a1, \"colonmonospace\", 0xff1a, \"colonsign\", 0x20a1, \"colonsmall\", 0xfe55, \"colontriangularhalfmod\", 0x02d1, \"colontriangularmod\", 0x02d0, \"comma\", 0x002c, \"commaabovecmb\", 0x0313, \"commaaboverightcmb\", 0x0315, \"commaaccent\", 0xf6c3, \"commaarabic\", 0x060c, \"commaarmenian\", 0x055d, \"commainferior\", 0xf6e1, \"commamonospace\", 0xff0c, \"commareversedabovecmb\", 0x0314, \"commareversedmod\", 0x02bd, \"commasmall\", 0xfe50, \"commasuperior\", 0xf6e2, \"commaturnedabovecmb\", 0x0312, \"commaturnedmod\", 0x02bb, \"compass\", 0x263c, \"congruent\", 0x2245, \"contourintegral\", 0x222e, \"control\", 0x2303, \"controlACK\", 0x0006, \"controlBEL\", 0x0007, \"controlBS\", 0x0008, \"controlCAN\", 0x0018, \"controlCR\", 0x000d, \"controlDC1\", 0x0011, \"controlDC2\", 0x0012, \"controlDC3\", 0x0013, \"controlDC4\", 0x0014, \"controlDEL\", 0x007f, \"controlDLE\", 0x0010, \"controlEM\", 0x0019, \"controlENQ\", 0x0005, \"controlEOT\", 0x0004, \"controlESC\", 0x001b, \"controlETB\", 0x0017, \"controlETX\", 0x0003, \"controlFF\", 0x000c, \"controlFS\", 0x001c, \"controlGS\", 0x001d, \"controlHT\", 0x0009, \"controlLF\", 0x000a, \"controlNAK\", 0x0015, \"controlNULL\", 0x0000, \"controlRS\", 0x001e, \"controlSI\", 0x000f, \"controlSO\", 0x000e, \"controlSOT\", 0x0002, \"controlSTX\", 0x0001, \"controlSUB\", 0x001a, \"controlSYN\", 0x0016, \"controlUS\", 0x001f, \"controlVT\", 0x000b, \"copyright\", 0x00a9, \"copyrightsans\", 0xf8e9, \"copyrightserif\", 0xf6d9, \"cornerbracketleft\", 0x300c, \"cornerbracketlefthalfwidth\", 0xff62, \"cornerbracketleftvertical\", 0xfe41, \"cornerbracketright\", 0x300d, \"cornerbracketrighthalfwidth\", 0xff63, \"cornerbracketrightvertical\", 0xfe42, \"corporationsquare\", 0x337f, \"cosquare\", 0x33c7, \"coverkgsquare\", 0x33c6, \"cparen\", 0x249e, \"cruzeiro\", 0x20a2, \"cstretched\", 0x0297, \"curlyand\", 0x22cf, \"curlyor\", 0x22ce, \"currency\", 0x00a4, \"cyrBreve\", 0xf6d1, \"cyrFlex\", 0xf6d2, \"cyrbreve\", 0xf6d4, \"cyrflex\", 0xf6d5, \"d\", 0x0064, \"daarmenian\", 0x0564, \"dabengali\", 0x09a6, \"dadarabic\", 0x0636, \"dadeva\", 0x0926, \"dadfinalarabic\", 0xfebe, \"dadinitialarabic\", 0xfebf, \"dadmedialarabic\", 0xfec0, \"dagesh\", 0x05bc, \"dageshhebrew\", 0x05bc, \"dagger\", 0x2020, \"daggerdbl\", 0x2021, \"dagujarati\", 0x0aa6, \"dagurmukhi\", 0x0a26, \"dahiragana\", 0x3060, \"dakatakana\", 0x30c0, \"dalarabic\", 0x062f, \"dalet\", 0x05d3, \"daletdagesh\", 0xfb33, \"daletdageshhebrew\", 0xfb33, \"dalethebrew\", 0x05d3, \"dalfinalarabic\", 0xfeaa, \"dammaarabic\", 0x064f, \"dammalowarabic\", 0x064f, \"dammatanaltonearabic\", 0x064c, \"dammatanarabic\", 0x064c, \"danda\", 0x0964, \"dargahebrew\", 0x05a7, \"dargalefthebrew\", 0x05a7, \"dasiapneumatacyrilliccmb\", 0x0485, \"dblGrave\", 0xf6d3, \"dblanglebracketleft\", 0x300a, \"dblanglebracketleftvertical\", 0xfe3d, \"dblanglebracketright\", 0x300b, \"dblanglebracketrightvertical\", 0xfe3e, \"dblarchinvertedbelowcmb\", 0x032b, \"dblarrowleft\", 0x21d4, \"dblarrowright\", 0x21d2, \"dbldanda\", 0x0965, \"dblgrave\", 0xf6d6, \"dblgravecmb\", 0x030f, \"dblintegral\", 0x222c, \"dbllowline\", 0x2017, \"dbllowlinecmb\", 0x0333, \"dbloverlinecmb\", 0x033f, \"dblprimemod\", 0x02ba, \"dblverticalbar\", 0x2016, \"dblverticallineabovecmb\", 0x030e, \"dbopomofo\", 0x3109, \"dbsquare\", 0x33c8, \"dcaron\", 0x010f, \"dcedilla\", 0x1e11, \"dcircle\", 0x24d3, \"dcircumflexbelow\", 0x1e13, \"dcroat\", 0x0111, \"ddabengali\", 0x09a1, \"ddadeva\", 0x0921, \"ddagujarati\", 0x0aa1, \"ddagurmukhi\", 0x0a21, \"ddalarabic\", 0x0688, \"ddalfinalarabic\", 0xfb89, \"dddhadeva\", 0x095c, \"ddhabengali\", 0x09a2, \"ddhadeva\", 0x0922, \"ddhagujarati\", 0x0aa2, \"ddhagurmukhi\", 0x0a22, \"ddotaccent\", 0x1e0b, \"ddotbelow\", 0x1e0d, \"decimalseparatorarabic\", 0x066b, \"decimalseparatorpersian\", 0x066b, \"decyrillic\", 0x0434, \"degree\", 0x00b0, \"dehihebrew\", 0x05ad, \"dehiragana\", 0x3067, \"deicoptic\", 0x03ef, \"dekatakana\", 0x30c7, \"deleteleft\", 0x232b, \"deleteright\", 0x2326, \"delta\", 0x03b4, \"deltaturned\", 0x018d, \"denominatorminusonenumeratorbengali\", 0x09f8, \"dezh\", 0x02a4, \"dhabengali\", 0x09a7, \"dhadeva\", 0x0927, \"dhagujarati\", 0x0aa7, \"dhagurmukhi\", 0x0a27, \"dhook\", 0x0257, \"dialytikatonos\", 0x0385, \"dialytikatonoscmb\", 0x0344, \"diamond\", 0x2666, \"diamondsuitwhite\", 0x2662, \"dieresis\", 0x00a8, \"dieresisacute\", 0xf6d7, \"dieresisbelowcmb\", 0x0324, \"dieresiscmb\", 0x0308, \"dieresisgrave\", 0xf6d8, \"dieresistonos\", 0x0385, \"dihiragana\", 0x3062, \"dikatakana\", 0x30c2, \"dittomark\", 0x3003, \"divide\", 0x00f7, \"divides\", 0x2223, \"divisionslash\", 0x2215, \"djecyrillic\", 0x0452, \"dkshade\", 0x2593, \"dlinebelow\", 0x1e0f, \"dlsquare\", 0x3397, \"dmacron\", 0x0111, \"dmonospace\", 0xff44, \"dnblock\", 0x2584, \"dochadathai\", 0x0e0e, \"dodekthai\", 0x0e14, \"dohiragana\", 0x3069, \"dokatakana\", 0x30c9, \"dollar\", 0x0024, \"dollarinferior\", 0xf6e3, \"dollarmonospace\", 0xff04, \"dollaroldstyle\", 0xf724, \"dollarsmall\", 0xfe69, \"dollarsuperior\", 0xf6e4, \"dong\", 0x20ab, \"dorusquare\", 0x3326, \"dotaccent\", 0x02d9, \"dotaccentcmb\", 0x0307, \"dotbelowcmb\", 0x0323, \"dotbelowcomb\", 0x0323, \"dotkatakana\", 0x30fb, \"dotlessi\", 0x0131, \"dotlessj\", 0xf6be, \"dotlessjstrokehook\", 0x0284, \"dotmath\", 0x22c5, \"dottedcircle\", 0x25cc, \"doubleyodpatah\", 0xfb1f, \"doubleyodpatahhebrew\", 0xfb1f, \"downtackbelowcmb\", 0x031e, \"downtackmod\", 0x02d5, \"dparen\", 0x249f, \"dsuperior\", 0xf6eb, \"dtail\", 0x0256, \"dtopbar\", 0x018c, \"duhiragana\", 0x3065, \"dukatakana\", 0x30c5, \"dz\", 0x01f3, \"dzaltone\", 0x02a3, \"dzcaron\", 0x01c6, \"dzcurl\", 0x02a5, \"dzeabkhasiancyrillic\", 0x04e1, \"dzecyrillic\", 0x0455, \"dzhecyrillic\", 0x045f, \"e\", 0x0065, \"eacute\", 0x00e9, \"earth\", 0x2641, \"ebengali\", 0x098f, \"ebopomofo\", 0x311c, \"ebreve\", 0x0115, \"ecandradeva\", 0x090d, \"ecandragujarati\", 0x0a8d, \"ecandravowelsigndeva\", 0x0945, \"ecandravowelsigngujarati\", 0x0ac5, \"ecaron\", 0x011b, \"ecedillabreve\", 0x1e1d, \"echarmenian\", 0x0565, \"echyiwnarmenian\", 0x0587, \"ecircle\", 0x24d4, \"ecircumflex\", 0x00ea, \"ecircumflexacute\", 0x1ebf, \"ecircumflexbelow\", 0x1e19, \"ecircumflexdotbelow\", 0x1ec7, \"ecircumflexgrave\", 0x1ec1, \"ecircumflexhookabove\", 0x1ec3, \"ecircumflextilde\", 0x1ec5, \"ecyrillic\", 0x0454, \"edblgrave\", 0x0205, \"edeva\", 0x090f, \"edieresis\", 0x00eb, \"edot\", 0x0117, \"edotaccent\", 0x0117, \"edotbelow\", 0x1eb9, \"eegurmukhi\", 0x0a0f, \"eematragurmukhi\", 0x0a47, \"efcyrillic\", 0x0444, \"egrave\", 0x00e8, \"egujarati\", 0x0a8f, \"eharmenian\", 0x0567, \"ehbopomofo\", 0x311d, \"ehiragana\", 0x3048, \"ehookabove\", 0x1ebb, \"eibopomofo\", 0x311f, \"eight\", 0x0038, \"eightarabic\", 0x0668, \"eightbengali\", 0x09ee, \"eightcircle\", 0x2467, \"eightcircleinversesansserif\", 0x2791, \"eightdeva\", 0x096e, \"eighteencircle\", 0x2471, \"eighteenparen\", 0x2485, \"eighteenperiod\", 0x2499, \"eightgujarati\", 0x0aee, \"eightgurmukhi\", 0x0a6e, \"eighthackarabic\", 0x0668, \"eighthangzhou\", 0x3028, \"eighthnotebeamed\", 0x266b, \"eightideographicparen\", 0x3227, \"eightinferior\", 0x2088, \"eightmonospace\", 0xff18, \"eightoldstyle\", 0xf738, \"eightparen\", 0x247b, \"eightperiod\", 0x248f, \"eightpersian\", 0x06f8, \"eightroman\", 0x2177, \"eightsuperior\", 0x2078, \"eightthai\", 0x0e58, \"einvertedbreve\", 0x0207, \"eiotifiedcyrillic\", 0x0465, \"ekatakana\", 0x30a8, \"ekatakanahalfwidth\", 0xff74, \"ekonkargurmukhi\", 0x0a74, \"ekorean\", 0x3154, \"elcyrillic\", 0x043b, \"element\", 0x2208, \"elevencircle\", 0x246a, \"elevenparen\", 0x247e, \"elevenperiod\", 0x2492, \"elevenroman\", 0x217a, \"ellipsis\", 0x2026, \"ellipsisvertical\", 0x22ee, \"emacron\", 0x0113, \"emacronacute\", 0x1e17, \"emacrongrave\", 0x1e15, \"emcyrillic\", 0x043c, \"emdash\", 0x2014, \"emdashvertical\", 0xfe31, \"emonospace\", 0xff45, \"emphasismarkarmenian\", 0x055b, \"emptyset\", 0x2205, \"enbopomofo\", 0x3123, \"encyrillic\", 0x043d, \"endash\", 0x2013, \"endashvertical\", 0xfe32, \"endescendercyrillic\", 0x04a3, \"eng\", 0x014b, \"engbopomofo\", 0x3125, \"enghecyrillic\", 0x04a5, \"enhookcyrillic\", 0x04c8, \"enspace\", 0x2002, \"eogonek\", 0x0119, \"eokorean\", 0x3153, \"eopen\", 0x025b, \"eopenclosed\", 0x029a, \"eopenreversed\", 0x025c, \"eopenreversedclosed\", 0x025e, \"eopenreversedhook\", 0x025d, \"eparen\", 0x24a0, \"epsilon\", 0x03b5, \"epsilontonos\", 0x03ad, \"equal\", 0x003d, \"equalmonospace\", 0xff1d, \"equalsmall\", 0xfe66, \"equalsuperior\", 0x207c, \"equivalence\", 0x2261, \"erbopomofo\", 0x3126, \"ercyrillic\", 0x0440, \"ereversed\", 0x0258, \"ereversedcyrillic\", 0x044d, \"escyrillic\", 0x0441, \"esdescendercyrillic\", 0x04ab, \"esh\", 0x0283, \"eshcurl\", 0x0286, \"eshortdeva\", 0x090e, \"eshortvowelsigndeva\", 0x0946, \"eshreversedloop\", 0x01aa, \"eshsquatreversed\", 0x0285, \"esmallhiragana\", 0x3047, \"esmallkatakana\", 0x30a7, \"esmallkatakanahalfwidth\", 0xff6a, \"estimated\", 0x212e, \"esuperior\", 0xf6ec, \"eta\", 0x03b7, \"etarmenian\", 0x0568, \"etatonos\", 0x03ae, \"eth\", 0x00f0, \"etilde\", 0x1ebd, \"etildebelow\", 0x1e1b, \"etnahtafoukhhebrew\", 0x0591, \"etnahtafoukhlefthebrew\", 0x0591, \"etnahtahebrew\", 0x0591, \"etnahtalefthebrew\", 0x0591, \"eturned\", 0x01dd, \"eukorean\", 0x3161, \"euro\", 0x20ac, \"evowelsignbengali\", 0x09c7, \"evowelsigndeva\", 0x0947, \"evowelsigngujarati\", 0x0ac7, \"exclam\", 0x0021, \"exclamarmenian\", 0x055c, \"exclamdbl\", 0x203c, \"exclamdown\", 0x00a1, \"exclamdownsmall\", 0xf7a1, \"exclammonospace\", 0xff01, \"exclamsmall\", 0xf721, \"existential\", 0x2203, \"ezh\", 0x0292, \"ezhcaron\", 0x01ef, \"ezhcurl\", 0x0293, \"ezhreversed\", 0x01b9, \"ezhtail\", 0x01ba, \"f\", 0x0066, \"fadeva\", 0x095e, \"fagurmukhi\", 0x0a5e, \"fahrenheit\", 0x2109, \"fathaarabic\", 0x064e, \"fathalowarabic\", 0x064e, \"fathatanarabic\", 0x064b, \"fbopomofo\", 0x3108, \"fcircle\", 0x24d5, \"fdotaccent\", 0x1e1f, \"feharabic\", 0x0641, \"feharmenian\", 0x0586, \"fehfinalarabic\", 0xfed2, \"fehinitialarabic\", 0xfed3, \"fehmedialarabic\", 0xfed4, \"feicoptic\", 0x03e5, \"female\", 0x2640, \"ff\", 0xfb00, \"f_f\", 0xfb00, \"ffi\", 0xfb03, \"ffl\", 0xfb04, \"fi\", 0xfb01, \"fifteencircle\", 0x246e, \"fifteenparen\", 0x2482, \"fifteenperiod\", 0x2496, \"figuredash\", 0x2012, \"filledbox\", 0x25a0, \"filledrect\", 0x25ac, \"finalkaf\", 0x05da, \"finalkafdagesh\", 0xfb3a, \"finalkafdageshhebrew\", 0xfb3a, \"finalkafhebrew\", 0x05da, \"finalmem\", 0x05dd, \"finalmemhebrew\", 0x05dd, \"finalnun\", 0x05df, \"finalnunhebrew\", 0x05df, \"finalpe\", 0x05e3, \"finalpehebrew\", 0x05e3, \"finaltsadi\", 0x05e5, \"finaltsadihebrew\", 0x05e5, \"firsttonechinese\", 0x02c9, \"fisheye\", 0x25c9, \"fitacyrillic\", 0x0473, \"five\", 0x0035, \"fivearabic\", 0x0665, \"fivebengali\", 0x09eb, \"fivecircle\", 0x2464, \"fivecircleinversesansserif\", 0x278e, \"fivedeva\", 0x096b, \"fiveeighths\", 0x215d, \"fivegujarati\", 0x0aeb, \"fivegurmukhi\", 0x0a6b, \"fivehackarabic\", 0x0665, \"fivehangzhou\", 0x3025, \"fiveideographicparen\", 0x3224, \"fiveinferior\", 0x2085, \"fivemonospace\", 0xff15, \"fiveoldstyle\", 0xf735, \"fiveparen\", 0x2478, \"fiveperiod\", 0x248c, \"fivepersian\", 0x06f5, \"fiveroman\", 0x2174, \"fivesuperior\", 0x2075, \"fivethai\", 0x0e55, \"fl\", 0xfb02, \"florin\", 0x0192, \"fmonospace\", 0xff46, \"fmsquare\", 0x3399, \"fofanthai\", 0x0e1f, \"fofathai\", 0x0e1d, \"fongmanthai\", 0x0e4f, \"forall\", 0x2200, \"four\", 0x0034, \"fourarabic\", 0x0664, \"fourbengali\", 0x09ea, \"fourcircle\", 0x2463, \"fourcircleinversesansserif\", 0x278d, \"fourdeva\", 0x096a, \"fourgujarati\", 0x0aea, \"fourgurmukhi\", 0x0a6a, \"fourhackarabic\", 0x0664, \"fourhangzhou\", 0x3024, \"fourideographicparen\", 0x3223, \"fourinferior\", 0x2084, \"fourmonospace\", 0xff14, \"fournumeratorbengali\", 0x09f7, \"fouroldstyle\", 0xf734, \"fourparen\", 0x2477, \"fourperiod\", 0x248b, \"fourpersian\", 0x06f4, \"fourroman\", 0x2173, \"foursuperior\", 0x2074, \"fourteencircle\", 0x246d, \"fourteenparen\", 0x2481, \"fourteenperiod\", 0x2495, \"fourthai\", 0x0e54, \"fourthtonechinese\", 0x02cb, \"fparen\", 0x24a1, \"fraction\", 0x2044, \"franc\", 0x20a3, \"g\", 0x0067, \"gabengali\", 0x0997, \"gacute\", 0x01f5, \"gadeva\", 0x0917, \"gafarabic\", 0x06af, \"gaffinalarabic\", 0xfb93, \"gafinitialarabic\", 0xfb94, \"gafmedialarabic\", 0xfb95, \"gagujarati\", 0x0a97, \"gagurmukhi\", 0x0a17, \"gahiragana\", 0x304c, \"gakatakana\", 0x30ac, \"gamma\", 0x03b3, \"gammalatinsmall\", 0x0263, \"gammasuperior\", 0x02e0, \"gangiacoptic\", 0x03eb, \"gbopomofo\", 0x310d, \"gbreve\", 0x011f, \"gcaron\", 0x01e7, \"gcedilla\", 0x0123, \"gcircle\", 0x24d6, \"gcircumflex\", 0x011d, \"gcommaaccent\", 0x0123, \"gdot\", 0x0121, \"gdotaccent\", 0x0121, \"gecyrillic\", 0x0433, \"gehiragana\", 0x3052, \"gekatakana\", 0x30b2, \"geometricallyequal\", 0x2251, \"gereshaccenthebrew\", 0x059c, \"gereshhebrew\", 0x05f3, \"gereshmuqdamhebrew\", 0x059d, \"germandbls\", 0x00df, \"gershayimaccenthebrew\", 0x059e, \"gershayimhebrew\", 0x05f4, \"getamark\", 0x3013, \"ghabengali\", 0x0998, \"ghadarmenian\", 0x0572, \"ghadeva\", 0x0918, \"ghagujarati\", 0x0a98, \"ghagurmukhi\", 0x0a18, \"ghainarabic\", 0x063a, \"ghainfinalarabic\", 0xfece, \"ghaininitialarabic\", 0xfecf, \"ghainmedialarabic\", 0xfed0, \"ghemiddlehookcyrillic\", 0x0495, \"ghestrokecyrillic\", 0x0493, \"gheupturncyrillic\", 0x0491, \"ghhadeva\", 0x095a, \"ghhagurmukhi\", 0x0a5a, \"ghook\", 0x0260, \"ghzsquare\", 0x3393, \"gihiragana\", 0x304e, \"gikatakana\", 0x30ae, \"gimarmenian\", 0x0563, \"gimel\", 0x05d2, \"gimeldagesh\", 0xfb32, \"gimeldageshhebrew\", 0xfb32, \"gimelhebrew\", 0x05d2, \"gjecyrillic\", 0x0453, \"glottalinvertedstroke\", 0x01be, \"glottalstop\", 0x0294, \"glottalstopinverted\", 0x0296, \"glottalstopmod\", 0x02c0, \"glottalstopreversed\", 0x0295, \"glottalstopreversedmod\", 0x02c1, \"glottalstopreversedsuperior\", 0x02e4, \"glottalstopstroke\", 0x02a1, \"glottalstopstrokereversed\", 0x02a2, \"gmacron\", 0x1e21, \"gmonospace\", 0xff47, \"gohiragana\", 0x3054, \"gokatakana\", 0x30b4, \"gparen\", 0x24a2, \"gpasquare\", 0x33ac, \"gradient\", 0x2207, \"grave\", 0x0060, \"gravebelowcmb\", 0x0316, \"gravecmb\", 0x0300, \"gravecomb\", 0x0300, \"gravedeva\", 0x0953, \"gravelowmod\", 0x02ce, \"gravemonospace\", 0xff40, \"gravetonecmb\", 0x0340, \"greater\", 0x003e, \"greaterequal\", 0x2265, \"greaterequalorless\", 0x22db, \"greatermonospace\", 0xff1e, \"greaterorequivalent\", 0x2273, \"greaterorless\", 0x2277, \"greateroverequal\", 0x2267, \"greatersmall\", 0xfe65, \"gscript\", 0x0261, \"gstroke\", 0x01e5, \"guhiragana\", 0x3050, \"guillemotleft\", 0x00ab, \"guillemotright\", 0x00bb, \"guilsinglleft\", 0x2039, \"guilsinglright\", 0x203a, \"gukatakana\", 0x30b0, \"guramusquare\", 0x3318, \"gysquare\", 0x33c9, \"h\", 0x0068, \"haabkhasiancyrillic\", 0x04a9, \"haaltonearabic\", 0x06c1, \"habengali\", 0x09b9, \"hadescendercyrillic\", 0x04b3, \"hadeva\", 0x0939, \"hagujarati\", 0x0ab9, \"hagurmukhi\", 0x0a39, \"haharabic\", 0x062d, \"hahfinalarabic\", 0xfea2, \"hahinitialarabic\", 0xfea3, \"hahiragana\", 0x306f, \"hahmedialarabic\", 0xfea4, \"haitusquare\", 0x332a, \"hakatakana\", 0x30cf, \"hakatakanahalfwidth\", 0xff8a, \"halantgurmukhi\", 0x0a4d, \"hamzaarabic\", 0x0621, \"hamzalowarabic\", 0x0621, \"hangulfiller\", 0x3164, \"hardsigncyrillic\", 0x044a, \"harpoonleftbarbup\", 0x21bc, \"harpoonrightbarbup\", 0x21c0, \"hasquare\", 0x33ca, \"hatafpatah\", 0x05b2, \"hatafpatah16\", 0x05b2, \"hatafpatah23\", 0x05b2, \"hatafpatah2f\", 0x05b2, \"hatafpatahhebrew\", 0x05b2, \"hatafpatahnarrowhebrew\", 0x05b2, \"hatafpatahquarterhebrew\", 0x05b2, \"hatafpatahwidehebrew\", 0x05b2, \"hatafqamats\", 0x05b3, \"hatafqamats1b\", 0x05b3, \"hatafqamats28\", 0x05b3, \"hatafqamats34\", 0x05b3, \"hatafqamatshebrew\", 0x05b3, \"hatafqamatsnarrowhebrew\", 0x05b3, \"hatafqamatsquarterhebrew\", 0x05b3, \"hatafqamatswidehebrew\", 0x05b3, \"hatafsegol\", 0x05b1, \"hatafsegol17\", 0x05b1, \"hatafsegol24\", 0x05b1, \"hatafsegol30\", 0x05b1, \"hatafsegolhebrew\", 0x05b1, \"hatafsegolnarrowhebrew\", 0x05b1, \"hatafsegolquarterhebrew\", 0x05b1, \"hatafsegolwidehebrew\", 0x05b1, \"hbar\", 0x0127, \"hbopomofo\", 0x310f, \"hbrevebelow\", 0x1e2b, \"hcedilla\", 0x1e29, \"hcircle\", 0x24d7, \"hcircumflex\", 0x0125, \"hdieresis\", 0x1e27, \"hdotaccent\", 0x1e23, \"hdotbelow\", 0x1e25, \"he\", 0x05d4, \"heart\", 0x2665, \"heartsuitblack\", 0x2665, \"heartsuitwhite\", 0x2661, \"hedagesh\", 0xfb34, \"hedageshhebrew\", 0xfb34, \"hehaltonearabic\", 0x06c1, \"heharabic\", 0x0647, \"hehebrew\", 0x05d4, \"hehfinalaltonearabic\", 0xfba7, \"hehfinalalttwoarabic\", 0xfeea, \"hehfinalarabic\", 0xfeea, \"hehhamzaabovefinalarabic\", 0xfba5, \"hehhamzaaboveisolatedarabic\", 0xfba4, \"hehinitialaltonearabic\", 0xfba8, \"hehinitialarabic\", 0xfeeb, \"hehiragana\", 0x3078, \"hehmedialaltonearabic\", 0xfba9, \"hehmedialarabic\", 0xfeec, \"heiseierasquare\", 0x337b, \"hekatakana\", 0x30d8, \"hekatakanahalfwidth\", 0xff8d, \"hekutaarusquare\", 0x3336, \"henghook\", 0x0267, \"herutusquare\", 0x3339, \"het\", 0x05d7, \"hethebrew\", 0x05d7, \"hhook\", 0x0266, \"hhooksuperior\", 0x02b1, \"hieuhacirclekorean\", 0x327b, \"hieuhaparenkorean\", 0x321b, \"hieuhcirclekorean\", 0x326d, \"hieuhkorean\", 0x314e, \"hieuhparenkorean\", 0x320d, \"hihiragana\", 0x3072, \"hikatakana\", 0x30d2, \"hikatakanahalfwidth\", 0xff8b, \"hiriq\", 0x05b4, \"hiriq14\", 0x05b4, \"hiriq21\", 0x05b4, \"hiriq2d\", 0x05b4, \"hiriqhebrew\", 0x05b4, \"hiriqnarrowhebrew\", 0x05b4, \"hiriqquarterhebrew\", 0x05b4, \"hiriqwidehebrew\", 0x05b4, \"hlinebelow\", 0x1e96, \"hmonospace\", 0xff48, \"hoarmenian\", 0x0570, \"hohipthai\", 0x0e2b, \"hohiragana\", 0x307b, \"hokatakana\", 0x30db, \"hokatakanahalfwidth\", 0xff8e, \"holam\", 0x05b9, \"holam19\", 0x05b9, \"holam26\", 0x05b9, \"holam32\", 0x05b9, \"holamhebrew\", 0x05b9, \"holamnarrowhebrew\", 0x05b9, \"holamquarterhebrew\", 0x05b9, \"holamwidehebrew\", 0x05b9, \"honokhukthai\", 0x0e2e, \"hookabovecomb\", 0x0309, \"hookcmb\", 0x0309, \"hookpalatalizedbelowcmb\", 0x0321, \"hookretroflexbelowcmb\", 0x0322, \"hoonsquare\", 0x3342, \"horicoptic\", 0x03e9, \"horizontalbar\", 0x2015, \"horncmb\", 0x031b, \"hotsprings\", 0x2668, \"house\", 0x2302, \"hparen\", 0x24a3, \"hsuperior\", 0x02b0, \"hturned\", 0x0265, \"huhiragana\", 0x3075, \"huiitosquare\", 0x3333, \"hukatakana\", 0x30d5, \"hukatakanahalfwidth\", 0xff8c, \"hungarumlaut\", 0x02dd, \"hungarumlautcmb\", 0x030b, \"hv\", 0x0195, \"hyphen\", 0x002d, \"hypheninferior\", 0xf6e5, \"hyphenmonospace\", 0xff0d, \"hyphensmall\", 0xfe63, \"hyphensuperior\", 0xf6e6, \"hyphentwo\", 0x2010, \"i\", 0x0069, \"iacute\", 0x00ed, \"iacyrillic\", 0x044f, \"ibengali\", 0x0987, \"ibopomofo\", 0x3127, \"ibreve\", 0x012d, \"icaron\", 0x01d0, \"icircle\", 0x24d8, \"icircumflex\", 0x00ee, \"icyrillic\", 0x0456, \"idblgrave\", 0x0209, \"ideographearthcircle\", 0x328f, \"ideographfirecircle\", 0x328b, \"ideographicallianceparen\", 0x323f, \"ideographiccallparen\", 0x323a, \"ideographiccentrecircle\", 0x32a5, \"ideographicclose\", 0x3006, \"ideographiccomma\", 0x3001, \"ideographiccommaleft\", 0xff64, \"ideographiccongratulationparen\", 0x3237, \"ideographiccorrectcircle\", 0x32a3, \"ideographicearthparen\", 0x322f, \"ideographicenterpriseparen\", 0x323d, \"ideographicexcellentcircle\", 0x329d, \"ideographicfestivalparen\", 0x3240, \"ideographicfinancialcircle\", 0x3296, \"ideographicfinancialparen\", 0x3236, \"ideographicfireparen\", 0x322b, \"ideographichaveparen\", 0x3232, \"ideographichighcircle\", 0x32a4, \"ideographiciterationmark\", 0x3005, \"ideographiclaborcircle\", 0x3298, \"ideographiclaborparen\", 0x3238, \"ideographicleftcircle\", 0x32a7, \"ideographiclowcircle\", 0x32a6, \"ideographicmedicinecircle\", 0x32a9, \"ideographicmetalparen\", 0x322e, \"ideographicmoonparen\", 0x322a, \"ideographicnameparen\", 0x3234, \"ideographicperiod\", 0x3002, \"ideographicprintcircle\", 0x329e, \"ideographicreachparen\", 0x3243, \"ideographicrepresentparen\", 0x3239, \"ideographicresourceparen\", 0x323e, \"ideographicrightcircle\", 0x32a8, \"ideographicsecretcircle\", 0x3299, \"ideographicselfparen\", 0x3242, \"ideographicsocietyparen\", 0x3233, \"ideographicspace\", 0x3000, \"ideographicspecialparen\", 0x3235, \"ideographicstockparen\", 0x3231, \"ideographicstudyparen\", 0x323b, \"ideographicsunparen\", 0x3230, \"ideographicsuperviseparen\", 0x323c, \"ideographicwaterparen\", 0x322c, \"ideographicwoodparen\", 0x322d, \"ideographiczero\", 0x3007, \"ideographmetalcircle\", 0x328e, \"ideographmooncircle\", 0x328a, \"ideographnamecircle\", 0x3294, \"ideographsuncircle\", 0x3290, \"ideographwatercircle\", 0x328c, \"ideographwoodcircle\", 0x328d, \"ideva\", 0x0907, \"idieresis\", 0x00ef, \"idieresisacute\", 0x1e2f, \"idieresiscyrillic\", 0x04e5, \"idotbelow\", 0x1ecb, \"iebrevecyrillic\", 0x04d7, \"iecyrillic\", 0x0435, \"ieungacirclekorean\", 0x3275, \"ieungaparenkorean\", 0x3215, \"ieungcirclekorean\", 0x3267, \"ieungkorean\", 0x3147, \"ieungparenkorean\", 0x3207, \"igrave\", 0x00ec, \"igujarati\", 0x0a87, \"igurmukhi\", 0x0a07, \"ihiragana\", 0x3044, \"ihookabove\", 0x1ec9, \"iibengali\", 0x0988, \"iicyrillic\", 0x0438, \"iideva\", 0x0908, \"iigujarati\", 0x0a88, \"iigurmukhi\", 0x0a08, \"iimatragurmukhi\", 0x0a40, \"iinvertedbreve\", 0x020b, \"iishortcyrillic\", 0x0439, \"iivowelsignbengali\", 0x09c0, \"iivowelsigndeva\", 0x0940, \"iivowelsigngujarati\", 0x0ac0, \"ij\", 0x0133, \"ikatakana\", 0x30a4, \"ikatakanahalfwidth\", 0xff72, \"ikorean\", 0x3163, \"ilde\", 0x02dc, \"iluyhebrew\", 0x05ac, \"imacron\", 0x012b, \"imacroncyrillic\", 0x04e3, \"imageorapproximatelyequal\", 0x2253, \"imatragurmukhi\", 0x0a3f, \"imonospace\", 0xff49, \"increment\", 0x2206, \"infinity\", 0x221e, \"iniarmenian\", 0x056b, \"integral\", 0x222b, \"integralbottom\", 0x2321, \"integralbt\", 0x2321, \"integralex\", 0xf8f5, \"integraltop\", 0x2320, \"integraltp\", 0x2320, \"intersection\", 0x2229, \"intisquare\", 0x3305, \"invbullet\", 0x25d8, \"invcircle\", 0x25d9, \"invsmileface\", 0x263b, \"iocyrillic\", 0x0451, \"iogonek\", 0x012f, \"iota\", 0x03b9, \"iotadieresis\", 0x03ca, \"iotadieresistonos\", 0x0390, \"iotalatin\", 0x0269, \"iotatonos\", 0x03af, \"iparen\", 0x24a4, \"irigurmukhi\", 0x0a72, \"ismallhiragana\", 0x3043, \"ismallkatakana\", 0x30a3, \"ismallkatakanahalfwidth\", 0xff68, \"issharbengali\", 0x09fa, \"istroke\", 0x0268, \"isuperior\", 0xf6ed, \"iterationhiragana\", 0x309d, \"iterationkatakana\", 0x30fd, \"itilde\", 0x0129, \"itildebelow\", 0x1e2d, \"iubopomofo\", 0x3129, \"iucyrillic\", 0x044e, \"ivowelsignbengali\", 0x09bf, \"ivowelsigndeva\", 0x093f, \"ivowelsigngujarati\", 0x0abf, \"izhitsacyrillic\", 0x0475, \"izhitsadblgravecyrillic\", 0x0477, \"j\", 0x006a, \"jaarmenian\", 0x0571, \"jabengali\", 0x099c, \"jadeva\", 0x091c, \"jagujarati\", 0x0a9c, \"jagurmukhi\", 0x0a1c, \"jbopomofo\", 0x3110, \"jcaron\", 0x01f0, \"jcircle\", 0x24d9, \"jcircumflex\", 0x0135, \"jcrossedtail\", 0x029d, \"jdotlessstroke\", 0x025f, \"jecyrillic\", 0x0458, \"jeemarabic\", 0x062c, \"jeemfinalarabic\", 0xfe9e, \"jeeminitialarabic\", 0xfe9f, \"jeemmedialarabic\", 0xfea0, \"jeharabic\", 0x0698, \"jehfinalarabic\", 0xfb8b, \"jhabengali\", 0x099d, \"jhadeva\", 0x091d, \"jhagujarati\", 0x0a9d, \"jhagurmukhi\", 0x0a1d, \"jheharmenian\", 0x057b, \"jis\", 0x3004, \"jmonospace\", 0xff4a, \"jparen\", 0x24a5, \"jsuperior\", 0x02b2, \"k\", 0x006b, \"kabashkircyrillic\", 0x04a1, \"kabengali\", 0x0995, \"kacute\", 0x1e31, \"kacyrillic\", 0x043a, \"kadescendercyrillic\", 0x049b, \"kadeva\", 0x0915, \"kaf\", 0x05db, \"kafarabic\", 0x0643, \"kafdagesh\", 0xfb3b, \"kafdageshhebrew\", 0xfb3b, \"kaffinalarabic\", 0xfeda, \"kafhebrew\", 0x05db, \"kafinitialarabic\", 0xfedb, \"kafmedialarabic\", 0xfedc, \"kafrafehebrew\", 0xfb4d, \"kagujarati\", 0x0a95, \"kagurmukhi\", 0x0a15, \"kahiragana\", 0x304b, \"kahookcyrillic\", 0x04c4, \"kakatakana\", 0x30ab, \"kakatakanahalfwidth\", 0xff76, \"kappa\", 0x03ba, \"kappasymbolgreek\", 0x03f0, \"kapyeounmieumkorean\", 0x3171, \"kapyeounphieuphkorean\", 0x3184, \"kapyeounpieupkorean\", 0x3178, \"kapyeounssangpieupkorean\", 0x3179, \"karoriisquare\", 0x330d, \"kashidaautoarabic\", 0x0640, \"kashidaautonosidebearingarabic\", 0x0640, \"kasmallkatakana\", 0x30f5, \"kasquare\", 0x3384, \"kasraarabic\", 0x0650, \"kasratanarabic\", 0x064d, \"kastrokecyrillic\", 0x049f, \"katahiraprolongmarkhalfwidth\", 0xff70, \"kaverticalstrokecyrillic\", 0x049d, \"kbopomofo\", 0x310e, \"kcalsquare\", 0x3389, \"kcaron\", 0x01e9, \"kcedilla\", 0x0137, \"kcircle\", 0x24da, \"kcommaaccent\", 0x0137, \"kdotbelow\", 0x1e33, \"keharmenian\", 0x0584, \"kehiragana\", 0x3051, \"kekatakana\", 0x30b1, \"kekatakanahalfwidth\", 0xff79, \"kenarmenian\", 0x056f, \"kesmallkatakana\", 0x30f6, \"kgreenlandic\", 0x0138, \"khabengali\", 0x0996, \"khacyrillic\", 0x0445, \"khadeva\", 0x0916, \"khagujarati\", 0x0a96, \"khagurmukhi\", 0x0a16, \"khaharabic\", 0x062e, \"khahfinalarabic\", 0xfea6, \"khahinitialarabic\", 0xfea7, \"khahmedialarabic\", 0xfea8, \"kheicoptic\", 0x03e7, \"khhadeva\", 0x0959, \"khhagurmukhi\", 0x0a59, \"khieukhacirclekorean\", 0x3278, \"khieukhaparenkorean\", 0x3218, \"khieukhcirclekorean\", 0x326a, \"khieukhkorean\", 0x314b, \"khieukhparenkorean\", 0x320a, \"khokhaithai\", 0x0e02, \"khokhonthai\", 0x0e05, \"khokhuatthai\", 0x0e03, \"khokhwaithai\", 0x0e04, \"khomutthai\", 0x0e5b, \"khook\", 0x0199, \"khorakhangthai\", 0x0e06, \"khzsquare\", 0x3391, \"kihiragana\", 0x304d, \"kikatakana\", 0x30ad, \"kikatakanahalfwidth\", 0xff77, \"kiroguramusquare\", 0x3315, \"kiromeetorusquare\", 0x3316, \"kirosquare\", 0x3314, \"kiyeokacirclekorean\", 0x326e, \"kiyeokaparenkorean\", 0x320e, \"kiyeokcirclekorean\", 0x3260, \"kiyeokkorean\", 0x3131, \"kiyeokparenkorean\", 0x3200, \"kiyeoksioskorean\", 0x3133, \"kjecyrillic\", 0x045c, \"klinebelow\", 0x1e35, \"klsquare\", 0x3398, \"kmcubedsquare\", 0x33a6, \"kmonospace\", 0xff4b, \"kmsquaredsquare\", 0x33a2, \"kohiragana\", 0x3053, \"kohmsquare\", 0x33c0, \"kokaithai\", 0x0e01, \"kokatakana\", 0x30b3, \"kokatakanahalfwidth\", 0xff7a, \"kooposquare\", 0x331e, \"koppacyrillic\", 0x0481, \"koreanstandardsymbol\", 0x327f, \"koroniscmb\", 0x0343, \"kparen\", 0x24a6, \"kpasquare\", 0x33aa, \"ksicyrillic\", 0x046f, \"ktsquare\", 0x33cf, \"kturned\", 0x029e, \"kuhiragana\", 0x304f, \"kukatakana\", 0x30af, \"kukatakanahalfwidth\", 0xff78, \"kvsquare\", 0x33b8, \"kwsquare\", 0x33be, \"l\", 0x006c, \"labengali\", 0x09b2, \"lacute\", 0x013a, \"ladeva\", 0x0932, \"lagujarati\", 0x0ab2, \"lagurmukhi\", 0x0a32, \"lakkhangyaothai\", 0x0e45, \"lamaleffinalarabic\", 0xfefc, \"lamalefhamzaabovefinalarabic\", 0xfef8, \"lamalefhamzaaboveisolatedarabic\", 0xfef7, \"lamalefhamzabelowfinalarabic\", 0xfefa, \"lamalefhamzabelowisolatedarabic\", 0xfef9, \"lamalefisolatedarabic\", 0xfefb, \"lamalefmaddaabovefinalarabic\", 0xfef6, \"lamalefmaddaaboveisolatedarabic\", 0xfef5, \"lamarabic\", 0x0644, \"lambda\", 0x03bb, \"lambdastroke\", 0x019b, \"lamed\", 0x05dc, \"lameddagesh\", 0xfb3c, \"lameddageshhebrew\", 0xfb3c, \"lamedhebrew\", 0x05dc, \"lamfinalarabic\", 0xfede, \"lamhahinitialarabic\", 0xfcca, \"laminitialarabic\", 0xfedf, \"lamjeeminitialarabic\", 0xfcc9, \"lamkhahinitialarabic\", 0xfccb, \"lamlamhehisolatedarabic\", 0xfdf2, \"lammedialarabic\", 0xfee0, \"lammeemhahinitialarabic\", 0xfd88, \"lammeeminitialarabic\", 0xfccc, \"largecircle\", 0x25ef, \"lbar\", 0x019a, \"lbelt\", 0x026c, \"lbopomofo\", 0x310c, \"lcaron\", 0x013e, \"lcedilla\", 0x013c, \"lcircle\", 0x24db, \"lcircumflexbelow\", 0x1e3d, \"lcommaaccent\", 0x013c, \"ldot\", 0x0140, \"ldotaccent\", 0x0140, \"ldotbelow\", 0x1e37, \"ldotbelowmacron\", 0x1e39, \"leftangleabovecmb\", 0x031a, \"lefttackbelowcmb\", 0x0318, \"less\", 0x003c, \"lessequal\", 0x2264, \"lessequalorgreater\", 0x22da, \"lessmonospace\", 0xff1c, \"lessorequivalent\", 0x2272, \"lessorgreater\", 0x2276, \"lessoverequal\", 0x2266, \"lesssmall\", 0xfe64, \"lezh\", 0x026e, \"lfblock\", 0x258c, \"lhookretroflex\", 0x026d, \"lira\", 0x20a4, \"liwnarmenian\", 0x056c, \"lj\", 0x01c9, \"ljecyrillic\", 0x0459, \"ll\", 0xf6c0, \"lladeva\", 0x0933, \"llagujarati\", 0x0ab3, \"llinebelow\", 0x1e3b, \"llladeva\", 0x0934, \"llvocalicbengali\", 0x09e1, \"llvocalicdeva\", 0x0961, \"llvocalicvowelsignbengali\", 0x09e3, \"llvocalicvowelsigndeva\", 0x0963, \"lmiddletilde\", 0x026b, \"lmonospace\", 0xff4c, \"lmsquare\", 0x33d0, \"lochulathai\", 0x0e2c, \"logicaland\", 0x2227, \"logicalnot\", 0x00ac, \"logicalnotreversed\", 0x2310, \"logicalor\", 0x2228, \"lolingthai\", 0x0e25, \"longs\", 0x017f, \"lowlinecenterline\", 0xfe4e, \"lowlinecmb\", 0x0332, \"lowlinedashed\", 0xfe4d, \"lozenge\", 0x25ca, \"lparen\", 0x24a7, \"lslash\", 0x0142, \"lsquare\", 0x2113, \"lsuperior\", 0xf6ee, \"ltshade\", 0x2591, \"luthai\", 0x0e26, \"lvocalicbengali\", 0x098c, \"lvocalicdeva\", 0x090c, \"lvocalicvowelsignbengali\", 0x09e2, \"lvocalicvowelsigndeva\", 0x0962, \"lxsquare\", 0x33d3, \"m\", 0x006d, \"mabengali\", 0x09ae, \"macron\", 0x00af, \"macronbelowcmb\", 0x0331, \"macroncmb\", 0x0304, \"macronlowmod\", 0x02cd, \"macronmonospace\", 0xffe3, \"macute\", 0x1e3f, \"madeva\", 0x092e, \"magujarati\", 0x0aae, \"magurmukhi\", 0x0a2e, \"mahapakhhebrew\", 0x05a4, \"mahapakhlefthebrew\", 0x05a4, \"mahiragana\", 0x307e, \"maichattawalowleftthai\", 0xf895, \"maichattawalowrightthai\", 0xf894, \"maichattawathai\", 0x0e4b, \"maichattawaupperleftthai\", 0xf893, \"maieklowleftthai\", 0xf88c, \"maieklowrightthai\", 0xf88b, \"maiekthai\", 0x0e48, \"maiekupperleftthai\", 0xf88a, \"maihanakatleftthai\", 0xf884, \"maihanakatthai\", 0x0e31, \"maitaikhuleftthai\", 0xf889, \"maitaikhuthai\", 0x0e47, \"maitholowleftthai\", 0xf88f, \"maitholowrightthai\", 0xf88e, \"maithothai\", 0x0e49, \"maithoupperleftthai\", 0xf88d, \"maitrilowleftthai\", 0xf892, \"maitrilowrightthai\", 0xf891, \"maitrithai\", 0x0e4a, \"maitriupperleftthai\", 0xf890, \"maiyamokthai\", 0x0e46, \"makatakana\", 0x30de, \"makatakanahalfwidth\", 0xff8f, \"male\", 0x2642, \"mansyonsquare\", 0x3347, \"maqafhebrew\", 0x05be, \"mars\", 0x2642, \"masoracirclehebrew\", 0x05af, \"masquare\", 0x3383, \"mbopomofo\", 0x3107, \"mbsquare\", 0x33d4, \"mcircle\", 0x24dc, \"mcubedsquare\", 0x33a5, \"mdotaccent\", 0x1e41, \"mdotbelow\", 0x1e43, \"meemarabic\", 0x0645, \"meemfinalarabic\", 0xfee2, \"meeminitialarabic\", 0xfee3, \"meemmedialarabic\", 0xfee4, \"meemmeeminitialarabic\", 0xfcd1, \"meemmeemisolatedarabic\", 0xfc48, \"meetorusquare\", 0x334d, \"mehiragana\", 0x3081, \"meizierasquare\", 0x337e, \"mekatakana\", 0x30e1, \"mekatakanahalfwidth\", 0xff92, \"mem\", 0x05de, \"memdagesh\", 0xfb3e, \"memdageshhebrew\", 0xfb3e, \"memhebrew\", 0x05de, \"menarmenian\", 0x0574, \"merkhahebrew\", 0x05a5, \"merkhakefulahebrew\", 0x05a6, \"merkhakefulalefthebrew\", 0x05a6, \"merkhalefthebrew\", 0x05a5, \"mhook\", 0x0271, \"mhzsquare\", 0x3392, \"middledotkatakanahalfwidth\", 0xff65, \"middot\", 0x00b7, \"mieumacirclekorean\", 0x3272, \"mieumaparenkorean\", 0x3212, \"mieumcirclekorean\", 0x3264, \"mieumkorean\", 0x3141, \"mieumpansioskorean\", 0x3170, \"mieumparenkorean\", 0x3204, \"mieumpieupkorean\", 0x316e, \"mieumsioskorean\", 0x316f, \"mihiragana\", 0x307f, \"mikatakana\", 0x30df, \"mikatakanahalfwidth\", 0xff90, \"minus\", 0x2212, \"minusbelowcmb\", 0x0320, \"minuscircle\", 0x2296, \"minusmod\", 0x02d7, \"minusplus\", 0x2213, \"minute\", 0x2032, \"miribaarusquare\", 0x334a, \"mirisquare\", 0x3349, \"mlonglegturned\", 0x0270, \"mlsquare\", 0x3396, \"mmcubedsquare\", 0x33a3, \"mmonospace\", 0xff4d, \"mmsquaredsquare\", 0x339f, \"mohiragana\", 0x3082, \"mohmsquare\", 0x33c1, \"mokatakana\", 0x30e2, \"mokatakanahalfwidth\", 0xff93, \"molsquare\", 0x33d6, \"momathai\", 0x0e21, \"moverssquare\", 0x33a7, \"moverssquaredsquare\", 0x33a8, \"mparen\", 0x24a8, \"mpasquare\", 0x33ab, \"mssquare\", 0x33b3, \"msuperior\", 0xf6ef, \"mturned\", 0x026f, \"mu\", 0x00b5, \"mu1\", 0x00b5, \"muasquare\", 0x3382, \"muchgreater\", 0x226b, \"muchless\", 0x226a, \"mufsquare\", 0x338c, \"mugreek\", 0x03bc, \"mugsquare\", 0x338d, \"muhiragana\", 0x3080, \"mukatakana\", 0x30e0, \"mukatakanahalfwidth\", 0xff91, \"mulsquare\", 0x3395, \"multiply\", 0x00d7, \"mumsquare\", 0x339b, \"munahhebrew\", 0x05a3, \"munahlefthebrew\", 0x05a3, \"musicalnote\", 0x266a, \"musicalnotedbl\", 0x266b, \"musicflatsign\", 0x266d, \"musicsharpsign\", 0x266f, \"mussquare\", 0x33b2, \"muvsquare\", 0x33b6, \"muwsquare\", 0x33bc, \"mvmegasquare\", 0x33b9, \"mvsquare\", 0x33b7, \"mwmegasquare\", 0x33bf, \"mwsquare\", 0x33bd, \"n\", 0x006e, \"nabengali\", 0x09a8, \"nabla\", 0x2207, \"nacute\", 0x0144, \"nadeva\", 0x0928, \"nagujarati\", 0x0aa8, \"nagurmukhi\", 0x0a28, \"nahiragana\", 0x306a, \"nakatakana\", 0x30ca, \"nakatakanahalfwidth\", 0xff85, \"napostrophe\", 0x0149, \"nasquare\", 0x3381, \"nbopomofo\", 0x310b, \"nbspace\", 0x00a0, \"ncaron\", 0x0148, \"ncedilla\", 0x0146, \"ncircle\", 0x24dd, \"ncircumflexbelow\", 0x1e4b, \"ncommaaccent\", 0x0146, \"ndotaccent\", 0x1e45, \"ndotbelow\", 0x1e47, \"nehiragana\", 0x306d, \"nekatakana\", 0x30cd, \"nekatakanahalfwidth\", 0xff88, \"newsheqelsign\", 0x20aa, \"nfsquare\", 0x338b, \"ngabengali\", 0x0999, \"ngadeva\", 0x0919, \"ngagujarati\", 0x0a99, \"ngagurmukhi\", 0x0a19, \"ngonguthai\", 0x0e07, \"nhiragana\", 0x3093, \"nhookleft\", 0x0272, \"nhookretroflex\", 0x0273, \"nieunacirclekorean\", 0x326f, \"nieunaparenkorean\", 0x320f, \"nieuncieuckorean\", 0x3135, \"nieuncirclekorean\", 0x3261, \"nieunhieuhkorean\", 0x3136, \"nieunkorean\", 0x3134, \"nieunpansioskorean\", 0x3168, \"nieunparenkorean\", 0x3201, \"nieunsioskorean\", 0x3167, \"nieuntikeutkorean\", 0x3166, \"nihiragana\", 0x306b, \"nikatakana\", 0x30cb, \"nikatakanahalfwidth\", 0xff86, \"nikhahitleftthai\", 0xf899, \"nikhahitthai\", 0x0e4d, \"nine\", 0x0039, \"ninearabic\", 0x0669, \"ninebengali\", 0x09ef, \"ninecircle\", 0x2468, \"ninecircleinversesansserif\", 0x2792, \"ninedeva\", 0x096f, \"ninegujarati\", 0x0aef, \"ninegurmukhi\", 0x0a6f, \"ninehackarabic\", 0x0669, \"ninehangzhou\", 0x3029, \"nineideographicparen\", 0x3228, \"nineinferior\", 0x2089, \"ninemonospace\", 0xff19, \"nineoldstyle\", 0xf739, \"nineparen\", 0x247c, \"nineperiod\", 0x2490, \"ninepersian\", 0x06f9, \"nineroman\", 0x2178, \"ninesuperior\", 0x2079, \"nineteencircle\", 0x2472, \"nineteenparen\", 0x2486, \"nineteenperiod\", 0x249a, \"ninethai\", 0x0e59, \"nj\", 0x01cc, \"njecyrillic\", 0x045a, \"nkatakana\", 0x30f3, \"nkatakanahalfwidth\", 0xff9d, \"nlegrightlong\", 0x019e, \"nlinebelow\", 0x1e49, \"nmonospace\", 0xff4e, \"nmsquare\", 0x339a, \"nnabengali\", 0x09a3, \"nnadeva\", 0x0923, \"nnagujarati\", 0x0aa3, \"nnagurmukhi\", 0x0a23, \"nnnadeva\", 0x0929, \"nohiragana\", 0x306e, \"nokatakana\", 0x30ce, \"nokatakanahalfwidth\", 0xff89, \"nonbreakingspace\", 0x00a0, \"nonenthai\", 0x0e13, \"nonuthai\", 0x0e19, \"noonarabic\", 0x0646, \"noonfinalarabic\", 0xfee6, \"noonghunnaarabic\", 0x06ba, \"noonghunnafinalarabic\", 0xfb9f, \"nooninitialarabic\", 0xfee7, \"noonjeeminitialarabic\", 0xfcd2, \"noonjeemisolatedarabic\", 0xfc4b, \"noonmedialarabic\", 0xfee8, \"noonmeeminitialarabic\", 0xfcd5, \"noonmeemisolatedarabic\", 0xfc4e, \"noonnoonfinalarabic\", 0xfc8d, \"notcontains\", 0x220c, \"notelement\", 0x2209, \"notelementof\", 0x2209, \"notequal\", 0x2260, \"notgreater\", 0x226f, \"notgreaternorequal\", 0x2271, \"notgreaternorless\", 0x2279, \"notidentical\", 0x2262, \"notless\", 0x226e, \"notlessnorequal\", 0x2270, \"notparallel\", 0x2226, \"notprecedes\", 0x2280, \"notsubset\", 0x2284, \"notsucceeds\", 0x2281, \"notsuperset\", 0x2285, \"nowarmenian\", 0x0576, \"nparen\", 0x24a9, \"nssquare\", 0x33b1, \"nsuperior\", 0x207f, \"ntilde\", 0x00f1, \"nu\", 0x03bd, \"nuhiragana\", 0x306c, \"nukatakana\", 0x30cc, \"nukatakanahalfwidth\", 0xff87, \"nuktabengali\", 0x09bc, \"nuktadeva\", 0x093c, \"nuktagujarati\", 0x0abc, \"nuktagurmukhi\", 0x0a3c, \"numbersign\", 0x0023, \"numbersignmonospace\", 0xff03, \"numbersignsmall\", 0xfe5f, \"numeralsigngreek\", 0x0374, \"numeralsignlowergreek\", 0x0375, \"numero\", 0x2116, \"nun\", 0x05e0, \"nundagesh\", 0xfb40, \"nundageshhebrew\", 0xfb40, \"nunhebrew\", 0x05e0, \"nvsquare\", 0x33b5, \"nwsquare\", 0x33bb, \"nyabengali\", 0x099e, \"nyadeva\", 0x091e, \"nyagujarati\", 0x0a9e, \"nyagurmukhi\", 0x0a1e, \"o\", 0x006f, \"oacute\", 0x00f3, \"oangthai\", 0x0e2d, \"obarred\", 0x0275, \"obarredcyrillic\", 0x04e9, \"obarreddieresiscyrillic\", 0x04eb, \"obengali\", 0x0993, \"obopomofo\", 0x311b, \"obreve\", 0x014f, \"ocandradeva\", 0x0911, \"ocandragujarati\", 0x0a91, \"ocandravowelsigndeva\", 0x0949, \"ocandravowelsigngujarati\", 0x0ac9, \"ocaron\", 0x01d2, \"ocircle\", 0x24de, \"ocircumflex\", 0x00f4, \"ocircumflexacute\", 0x1ed1, \"ocircumflexdotbelow\", 0x1ed9, \"ocircumflexgrave\", 0x1ed3, \"ocircumflexhookabove\", 0x1ed5, \"ocircumflextilde\", 0x1ed7, \"ocyrillic\", 0x043e, \"odblacute\", 0x0151, \"odblgrave\", 0x020d, \"odeva\", 0x0913, \"odieresis\", 0x00f6, \"odieresiscyrillic\", 0x04e7, \"odotbelow\", 0x1ecd, \"oe\", 0x0153, \"oekorean\", 0x315a, \"ogonek\", 0x02db, \"ogonekcmb\", 0x0328, \"ograve\", 0x00f2, \"ogujarati\", 0x0a93, \"oharmenian\", 0x0585, \"ohiragana\", 0x304a, \"ohookabove\", 0x1ecf, \"ohorn\", 0x01a1, \"ohornacute\", 0x1edb, \"ohorndotbelow\", 0x1ee3, \"ohorngrave\", 0x1edd, \"ohornhookabove\", 0x1edf, \"ohorntilde\", 0x1ee1, \"ohungarumlaut\", 0x0151, \"oi\", 0x01a3, \"oinvertedbreve\", 0x020f, \"okatakana\", 0x30aa, \"okatakanahalfwidth\", 0xff75, \"okorean\", 0x3157, \"olehebrew\", 0x05ab, \"omacron\", 0x014d, \"omacronacute\", 0x1e53, \"omacrongrave\", 0x1e51, \"omdeva\", 0x0950, \"omega\", 0x03c9, \"omega1\", 0x03d6, \"omegacyrillic\", 0x0461, \"omegalatinclosed\", 0x0277, \"omegaroundcyrillic\", 0x047b, \"omegatitlocyrillic\", 0x047d, \"omegatonos\", 0x03ce, \"omgujarati\", 0x0ad0, \"omicron\", 0x03bf, \"omicrontonos\", 0x03cc, \"omonospace\", 0xff4f, \"one\", 0x0031, \"onearabic\", 0x0661, \"onebengali\", 0x09e7, \"onecircle\", 0x2460, \"onecircleinversesansserif\", 0x278a, \"onedeva\", 0x0967, \"onedotenleader\", 0x2024, \"oneeighth\", 0x215b, \"onefitted\", 0xf6dc, \"onegujarati\", 0x0ae7, \"onegurmukhi\", 0x0a67, \"onehackarabic\", 0x0661, \"onehalf\", 0x00bd, \"onehangzhou\", 0x3021, \"oneideographicparen\", 0x3220, \"oneinferior\", 0x2081, \"onemonospace\", 0xff11, \"onenumeratorbengali\", 0x09f4, \"oneoldstyle\", 0xf731, \"oneparen\", 0x2474, \"oneperiod\", 0x2488, \"onepersian\", 0x06f1, \"onequarter\", 0x00bc, \"oneroman\", 0x2170, \"onesuperior\", 0x00b9, \"onethai\", 0x0e51, \"onethird\", 0x2153, \"oogonek\", 0x01eb, \"oogonekmacron\", 0x01ed, \"oogurmukhi\", 0x0a13, \"oomatragurmukhi\", 0x0a4b, \"oopen\", 0x0254, \"oparen\", 0x24aa, \"openbullet\", 0x25e6, \"option\", 0x2325, \"ordfeminine\", 0x00aa, \"ordmasculine\", 0x00ba, \"orthogonal\", 0x221f, \"oshortdeva\", 0x0912, \"oshortvowelsigndeva\", 0x094a, \"oslash\", 0x00f8, \"oslashacute\", 0x01ff, \"osmallhiragana\", 0x3049, \"osmallkatakana\", 0x30a9, \"osmallkatakanahalfwidth\", 0xff6b, \"ostrokeacute\", 0x01ff, \"osuperior\", 0xf6f0, \"otcyrillic\", 0x047f, \"otilde\", 0x00f5, \"otildeacute\", 0x1e4d, \"otildedieresis\", 0x1e4f, \"oubopomofo\", 0x3121, \"overline\", 0x203e, \"overlinecenterline\", 0xfe4a, \"overlinecmb\", 0x0305, \"overlinedashed\", 0xfe49, \"overlinedblwavy\", 0xfe4c, \"overlinewavy\", 0xfe4b, \"overscore\", 0x00af, \"ovowelsignbengali\", 0x09cb, \"ovowelsigndeva\", 0x094b, \"ovowelsigngujarati\", 0x0acb, \"p\", 0x0070, \"paampssquare\", 0x3380, \"paasentosquare\", 0x332b, \"pabengali\", 0x09aa, \"pacute\", 0x1e55, \"padeva\", 0x092a, \"pagedown\", 0x21df, \"pageup\", 0x21de, \"pagujarati\", 0x0aaa, \"pagurmukhi\", 0x0a2a, \"pahiragana\", 0x3071, \"paiyannoithai\", 0x0e2f, \"pakatakana\", 0x30d1, \"palatalizationcyrilliccmb\", 0x0484, \"palochkacyrillic\", 0x04c0, \"pansioskorean\", 0x317f, \"paragraph\", 0x00b6, \"parallel\", 0x2225, \"parenleft\", 0x0028, \"parenleftaltonearabic\", 0xfd3e, \"parenleftbt\", 0xf8ed, \"parenleftex\", 0xf8ec, \"parenleftinferior\", 0x208d, \"parenleftmonospace\", 0xff08, \"parenleftsmall\", 0xfe59, \"parenleftsuperior\", 0x207d, \"parenlefttp\", 0xf8eb, \"parenleftvertical\", 0xfe35, \"parenright\", 0x0029, \"parenrightaltonearabic\", 0xfd3f, \"parenrightbt\", 0xf8f8, \"parenrightex\", 0xf8f7, \"parenrightinferior\", 0x208e, \"parenrightmonospace\", 0xff09, \"parenrightsmall\", 0xfe5a, \"parenrightsuperior\", 0x207e, \"parenrighttp\", 0xf8f6, \"parenrightvertical\", 0xfe36, \"partialdiff\", 0x2202, \"paseqhebrew\", 0x05c0, \"pashtahebrew\", 0x0599, \"pasquare\", 0x33a9, \"patah\", 0x05b7, \"patah11\", 0x05b7, \"patah1d\", 0x05b7, \"patah2a\", 0x05b7, \"patahhebrew\", 0x05b7, \"patahnarrowhebrew\", 0x05b7, \"patahquarterhebrew\", 0x05b7, \"patahwidehebrew\", 0x05b7, \"pazerhebrew\", 0x05a1, \"pbopomofo\", 0x3106, \"pcircle\", 0x24df, \"pdotaccent\", 0x1e57, \"pe\", 0x05e4, \"pecyrillic\", 0x043f, \"pedagesh\", 0xfb44, \"pedageshhebrew\", 0xfb44, \"peezisquare\", 0x333b, \"pefinaldageshhebrew\", 0xfb43, \"peharabic\", 0x067e, \"peharmenian\", 0x057a, \"pehebrew\", 0x05e4, \"pehfinalarabic\", 0xfb57, \"pehinitialarabic\", 0xfb58, \"pehiragana\", 0x307a, \"pehmedialarabic\", 0xfb59, \"pekatakana\", 0x30da, \"pemiddlehookcyrillic\", 0x04a7, \"perafehebrew\", 0xfb4e, \"percent\", 0x0025, \"percentarabic\", 0x066a, \"percentmonospace\", 0xff05, \"percentsmall\", 0xfe6a, \"period\", 0x002e, \"periodarmenian\", 0x0589, \"periodcentered\", 0x00b7, \"periodhalfwidth\", 0xff61, \"periodinferior\", 0xf6e7, \"periodmonospace\", 0xff0e, \"periodsmall\", 0xfe52, \"periodsuperior\", 0xf6e8, \"perispomenigreekcmb\", 0x0342, \"perpendicular\", 0x22a5, \"perthousand\", 0x2030, \"peseta\", 0x20a7, \"pfsquare\", 0x338a, \"phabengali\", 0x09ab, \"phadeva\", 0x092b, \"phagujarati\", 0x0aab, \"phagurmukhi\", 0x0a2b, \"phi\", 0x03c6, \"phi1\", 0x03d5, \"phieuphacirclekorean\", 0x327a, \"phieuphaparenkorean\", 0x321a, \"phieuphcirclekorean\", 0x326c, \"phieuphkorean\", 0x314d, \"phieuphparenkorean\", 0x320c, \"philatin\", 0x0278, \"phinthuthai\", 0x0e3a, \"phisymbolgreek\", 0x03d5, \"phook\", 0x01a5, \"phophanthai\", 0x0e1e, \"phophungthai\", 0x0e1c, \"phosamphaothai\", 0x0e20, \"pi\", 0x03c0, \"pieupacirclekorean\", 0x3273, \"pieupaparenkorean\", 0x3213, \"pieupcieuckorean\", 0x3176, \"pieupcirclekorean\", 0x3265, \"pieupkiyeokkorean\", 0x3172, \"pieupkorean\", 0x3142, \"pieupparenkorean\", 0x3205, \"pieupsioskiyeokkorean\", 0x3174, \"pieupsioskorean\", 0x3144, \"pieupsiostikeutkorean\", 0x3175, \"pieupthieuthkorean\", 0x3177, \"pieuptikeutkorean\", 0x3173, \"pihiragana\", 0x3074, \"pikatakana\", 0x30d4, \"pisymbolgreek\", 0x03d6, \"piwrarmenian\", 0x0583, \"plus\", 0x002b, \"plusbelowcmb\", 0x031f, \"pluscircle\", 0x2295, \"plusminus\", 0x00b1, \"plusmod\", 0x02d6, \"plusmonospace\", 0xff0b, \"plussmall\", 0xfe62, \"plussuperior\", 0x207a, \"pmonospace\", 0xff50, \"pmsquare\", 0x33d8, \"pohiragana\", 0x307d, \"pointingindexdownwhite\", 0x261f, \"pointingindexleftwhite\", 0x261c, \"pointingindexrightwhite\", 0x261e, \"pointingindexupwhite\", 0x261d, \"pokatakana\", 0x30dd, \"poplathai\", 0x0e1b, \"postalmark\", 0x3012, \"postalmarkface\", 0x3020, \"pparen\", 0x24ab, \"precedes\", 0x227a, \"prescription\", 0x211e, \"primemod\", 0x02b9, \"primereversed\", 0x2035, \"product\", 0x220f, \"projective\", 0x2305, \"prolongedkana\", 0x30fc, \"propellor\", 0x2318, \"propersubset\", 0x2282, \"propersuperset\", 0x2283, \"proportion\", 0x2237, \"proportional\", 0x221d, \"psi\", 0x03c8, \"psicyrillic\", 0x0471, \"psilipneumatacyrilliccmb\", 0x0486, \"pssquare\", 0x33b0, \"puhiragana\", 0x3077, \"pukatakana\", 0x30d7, \"pvsquare\", 0x33b4, \"pwsquare\", 0x33ba, \"q\", 0x0071, \"qadeva\", 0x0958, \"qadmahebrew\", 0x05a8, \"qafarabic\", 0x0642, \"qaffinalarabic\", 0xfed6, \"qafinitialarabic\", 0xfed7, \"qafmedialarabic\", 0xfed8, \"qamats\", 0x05b8, \"qamats10\", 0x05b8, \"qamats1a\", 0x05b8, \"qamats1c\", 0x05b8, \"qamats27\", 0x05b8, \"qamats29\", 0x05b8, \"qamats33\", 0x05b8, \"qamatsde\", 0x05b8, \"qamatshebrew\", 0x05b8, \"qamatsnarrowhebrew\", 0x05b8, \"qamatsqatanhebrew\", 0x05b8, \"qamatsqatannarrowhebrew\", 0x05b8, \"qamatsqatanquarterhebrew\", 0x05b8, \"qamatsqatanwidehebrew\", 0x05b8, \"qamatsquarterhebrew\", 0x05b8, \"qamatswidehebrew\", 0x05b8, \"qarneyparahebrew\", 0x059f, \"qbopomofo\", 0x3111, \"qcircle\", 0x24e0, \"qhook\", 0x02a0, \"qmonospace\", 0xff51, \"qof\", 0x05e7, \"qofdagesh\", 0xfb47, \"qofdageshhebrew\", 0xfb47, \"qofhebrew\", 0x05e7, \"qparen\", 0x24ac, \"quarternote\", 0x2669, \"qubuts\", 0x05bb, \"qubuts18\", 0x05bb, \"qubuts25\", 0x05bb, \"qubuts31\", 0x05bb, \"qubutshebrew\", 0x05bb, \"qubutsnarrowhebrew\", 0x05bb, \"qubutsquarterhebrew\", 0x05bb, \"qubutswidehebrew\", 0x05bb, \"question\", 0x003f, \"questionarabic\", 0x061f, \"questionarmenian\", 0x055e, \"questiondown\", 0x00bf, \"questiondownsmall\", 0xf7bf, \"questiongreek\", 0x037e, \"questionmonospace\", 0xff1f, \"questionsmall\", 0xf73f, \"quotedbl\", 0x0022, \"quotedblbase\", 0x201e, \"quotedblleft\", 0x201c, \"quotedblmonospace\", 0xff02, \"quotedblprime\", 0x301e, \"quotedblprimereversed\", 0x301d, \"quotedblright\", 0x201d, \"quoteleft\", 0x2018, \"quoteleftreversed\", 0x201b, \"quotereversed\", 0x201b, \"quoteright\", 0x2019, \"quoterightn\", 0x0149, \"quotesinglbase\", 0x201a, \"quotesingle\", 0x0027, \"quotesinglemonospace\", 0xff07, \"r\", 0x0072, \"raarmenian\", 0x057c, \"rabengali\", 0x09b0, \"racute\", 0x0155, \"radeva\", 0x0930, \"radical\", 0x221a, \"radicalex\", 0xf8e5, \"radoverssquare\", 0x33ae, \"radoverssquaredsquare\", 0x33af, \"radsquare\", 0x33ad, \"rafe\", 0x05bf, \"rafehebrew\", 0x05bf, \"ragujarati\", 0x0ab0, \"ragurmukhi\", 0x0a30, \"rahiragana\", 0x3089, \"rakatakana\", 0x30e9, \"rakatakanahalfwidth\", 0xff97, \"ralowerdiagonalbengali\", 0x09f1, \"ramiddlediagonalbengali\", 0x09f0, \"ramshorn\", 0x0264, \"ratio\", 0x2236, \"rbopomofo\", 0x3116, \"rcaron\", 0x0159, \"rcedilla\", 0x0157, \"rcircle\", 0x24e1, \"rcommaaccent\", 0x0157, \"rdblgrave\", 0x0211, \"rdotaccent\", 0x1e59, \"rdotbelow\", 0x1e5b, \"rdotbelowmacron\", 0x1e5d, \"referencemark\", 0x203b, \"reflexsubset\", 0x2286, \"reflexsuperset\", 0x2287, \"registered\", 0x00ae, \"registersans\", 0xf8e8, \"registerserif\", 0xf6da, \"reharabic\", 0x0631, \"reharmenian\", 0x0580, \"rehfinalarabic\", 0xfeae, \"rehiragana\", 0x308c, \"rekatakana\", 0x30ec, \"rekatakanahalfwidth\", 0xff9a, \"resh\", 0x05e8, \"reshdageshhebrew\", 0xfb48, \"reshhebrew\", 0x05e8, \"reversedtilde\", 0x223d, \"reviahebrew\", 0x0597, \"reviamugrashhebrew\", 0x0597, \"revlogicalnot\", 0x2310, \"rfishhook\", 0x027e, \"rfishhookreversed\", 0x027f, \"rhabengali\", 0x09dd, \"rhadeva\", 0x095d, \"rho\", 0x03c1, \"rhook\", 0x027d, \"rhookturned\", 0x027b, \"rhookturnedsuperior\", 0x02b5, \"rhosymbolgreek\", 0x03f1, \"rhotichookmod\", 0x02de, \"rieulacirclekorean\", 0x3271, \"rieulaparenkorean\", 0x3211, \"rieulcirclekorean\", 0x3263, \"rieulhieuhkorean\", 0x3140, \"rieulkiyeokkorean\", 0x313a, \"rieulkiyeoksioskorean\", 0x3169, \"rieulkorean\", 0x3139, \"rieulmieumkorean\", 0x313b, \"rieulpansioskorean\", 0x316c, \"rieulparenkorean\", 0x3203, \"rieulphieuphkorean\", 0x313f, \"rieulpieupkorean\", 0x313c, \"rieulpieupsioskorean\", 0x316b, \"rieulsioskorean\", 0x313d, \"rieulthieuthkorean\", 0x313e, \"rieultikeutkorean\", 0x316a, \"rieulyeorinhieuhkorean\", 0x316d, \"rightangle\", 0x221f, \"righttackbelowcmb\", 0x0319, \"righttriangle\", 0x22bf, \"rihiragana\", 0x308a, \"rikatakana\", 0x30ea, \"rikatakanahalfwidth\", 0xff98, \"ring\", 0x02da, \"ringbelowcmb\", 0x0325, \"ringcmb\", 0x030a, \"ringhalfleft\", 0x02bf, \"ringhalfleftarmenian\", 0x0559, \"ringhalfleftbelowcmb\", 0x031c, \"ringhalfleftcentered\", 0x02d3, \"ringhalfright\", 0x02be, \"ringhalfrightbelowcmb\", 0x0339, \"ringhalfrightcentered\", 0x02d2, \"rinvertedbreve\", 0x0213, \"rittorusquare\", 0x3351, \"rlinebelow\", 0x1e5f, \"rlongleg\", 0x027c, \"rlonglegturned\", 0x027a, \"rmonospace\", 0xff52, \"rohiragana\", 0x308d, \"rokatakana\", 0x30ed, \"rokatakanahalfwidth\", 0xff9b, \"roruathai\", 0x0e23, \"rparen\", 0x24ad, \"rrabengali\", 0x09dc, \"rradeva\", 0x0931, \"rragurmukhi\", 0x0a5c, \"rreharabic\", 0x0691, \"rrehfinalarabic\", 0xfb8d, \"rrvocalicbengali\", 0x09e0, \"rrvocalicdeva\", 0x0960, \"rrvocalicgujarati\", 0x0ae0, \"rrvocalicvowelsignbengali\", 0x09c4, \"rrvocalicvowelsigndeva\", 0x0944, \"rrvocalicvowelsigngujarati\", 0x0ac4, \"rsuperior\", 0xf6f1, \"rtblock\", 0x2590, \"rturned\", 0x0279, \"rturnedsuperior\", 0x02b4, \"ruhiragana\", 0x308b, \"rukatakana\", 0x30eb, \"rukatakanahalfwidth\", 0xff99, \"rupeemarkbengali\", 0x09f2, \"rupeesignbengali\", 0x09f3, \"rupiah\", 0xf6dd, \"ruthai\", 0x0e24, \"rvocalicbengali\", 0x098b, \"rvocalicdeva\", 0x090b, \"rvocalicgujarati\", 0x0a8b, \"rvocalicvowelsignbengali\", 0x09c3, \"rvocalicvowelsigndeva\", 0x0943, \"rvocalicvowelsigngujarati\", 0x0ac3, \"s\", 0x0073, \"sabengali\", 0x09b8, \"sacute\", 0x015b, \"sacutedotaccent\", 0x1e65, \"sadarabic\", 0x0635, \"sadeva\", 0x0938, \"sadfinalarabic\", 0xfeba, \"sadinitialarabic\", 0xfebb, \"sadmedialarabic\", 0xfebc, \"sagujarati\", 0x0ab8, \"sagurmukhi\", 0x0a38, \"sahiragana\", 0x3055, \"sakatakana\", 0x30b5, \"sakatakanahalfwidth\", 0xff7b, \"sallallahoualayhewasallamarabic\", 0xfdfa, \"samekh\", 0x05e1, \"samekhdagesh\", 0xfb41, \"samekhdageshhebrew\", 0xfb41, \"samekhhebrew\", 0x05e1, \"saraaathai\", 0x0e32, \"saraaethai\", 0x0e41, \"saraaimaimalaithai\", 0x0e44, \"saraaimaimuanthai\", 0x0e43, \"saraamthai\", 0x0e33, \"saraathai\", 0x0e30, \"saraethai\", 0x0e40, \"saraiileftthai\", 0xf886, \"saraiithai\", 0x0e35, \"saraileftthai\", 0xf885, \"saraithai\", 0x0e34, \"saraothai\", 0x0e42, \"saraueeleftthai\", 0xf888, \"saraueethai\", 0x0e37, \"saraueleftthai\", 0xf887, \"sarauethai\", 0x0e36, \"sarauthai\", 0x0e38, \"sarauuthai\", 0x0e39, \"sbopomofo\", 0x3119, \"scaron\", 0x0161, \"scarondotaccent\", 0x1e67, \"scedilla\", 0x015f, \"schwa\", 0x0259, \"schwacyrillic\", 0x04d9, \"schwadieresiscyrillic\", 0x04db, \"schwahook\", 0x025a, \"scircle\", 0x24e2, \"scircumflex\", 0x015d, \"scommaaccent\", 0x0219, \"sdotaccent\", 0x1e61, \"sdotbelow\", 0x1e63, \"sdotbelowdotaccent\", 0x1e69, \"seagullbelowcmb\", 0x033c, \"second\", 0x2033, \"secondtonechinese\", 0x02ca, \"section\", 0x00a7, \"seenarabic\", 0x0633, \"seenfinalarabic\", 0xfeb2, \"seeninitialarabic\", 0xfeb3, \"seenmedialarabic\", 0xfeb4, \"segol\", 0x05b6, \"segol13\", 0x05b6, \"segol1f\", 0x05b6, \"segol2c\", 0x05b6, \"segolhebrew\", 0x05b6, \"segolnarrowhebrew\", 0x05b6, \"segolquarterhebrew\", 0x05b6, \"segoltahebrew\", 0x0592, \"segolwidehebrew\", 0x05b6, \"seharmenian\", 0x057d, \"sehiragana\", 0x305b, \"sekatakana\", 0x30bb, \"sekatakanahalfwidth\", 0xff7e, \"semicolon\", 0x003b, \"semicolonarabic\", 0x061b, \"semicolonmonospace\", 0xff1b, \"semicolonsmall\", 0xfe54, \"semivoicedmarkkana\", 0x309c, \"semivoicedmarkkanahalfwidth\", 0xff9f, \"sentisquare\", 0x3322, \"sentosquare\", 0x3323, \"seven\", 0x0037, \"sevenarabic\", 0x0667, \"sevenbengali\", 0x09ed, \"sevencircle\", 0x2466, \"sevencircleinversesansserif\", 0x2790, \"sevendeva\", 0x096d, \"seveneighths\", 0x215e, \"sevengujarati\", 0x0aed, \"sevengurmukhi\", 0x0a6d, \"sevenhackarabic\", 0x0667, \"sevenhangzhou\", 0x3027, \"sevenideographicparen\", 0x3226, \"seveninferior\", 0x2087, \"sevenmonospace\", 0xff17, \"sevenoldstyle\", 0xf737, \"sevenparen\", 0x247a, \"sevenperiod\", 0x248e, \"sevenpersian\", 0x06f7, \"sevenroman\", 0x2176, \"sevensuperior\", 0x2077, \"seventeencircle\", 0x2470, \"seventeenparen\", 0x2484, \"seventeenperiod\", 0x2498, \"seventhai\", 0x0e57, \"sfthyphen\", 0x00ad, \"shaarmenian\", 0x0577, \"shabengali\", 0x09b6, \"shacyrillic\", 0x0448, \"shaddaarabic\", 0x0651, \"shaddadammaarabic\", 0xfc61, \"shaddadammatanarabic\", 0xfc5e, \"shaddafathaarabic\", 0xfc60, \"shaddakasraarabic\", 0xfc62, \"shaddakasratanarabic\", 0xfc5f, \"shade\", 0x2592, \"shadedark\", 0x2593, \"shadelight\", 0x2591, \"shademedium\", 0x2592, \"shadeva\", 0x0936, \"shagujarati\", 0x0ab6, \"shagurmukhi\", 0x0a36, \"shalshelethebrew\", 0x0593, \"shbopomofo\", 0x3115, \"shchacyrillic\", 0x0449, \"sheenarabic\", 0x0634, \"sheenfinalarabic\", 0xfeb6, \"sheeninitialarabic\", 0xfeb7, \"sheenmedialarabic\", 0xfeb8, \"sheicoptic\", 0x03e3, \"sheqel\", 0x20aa, \"sheqelhebrew\", 0x20aa, \"sheva\", 0x05b0, \"sheva115\", 0x05b0, \"sheva15\", 0x05b0, \"sheva22\", 0x05b0, \"sheva2e\", 0x05b0, \"shevahebrew\", 0x05b0, \"shevanarrowhebrew\", 0x05b0, \"shevaquarterhebrew\", 0x05b0, \"shevawidehebrew\", 0x05b0, \"shhacyrillic\", 0x04bb, \"shimacoptic\", 0x03ed, \"shin\", 0x05e9, \"shindagesh\", 0xfb49, \"shindageshhebrew\", 0xfb49, \"shindageshshindot\", 0xfb2c, \"shindageshshindothebrew\", 0xfb2c, \"shindageshsindot\", 0xfb2d, \"shindageshsindothebrew\", 0xfb2d, \"shindothebrew\", 0x05c1, \"shinhebrew\", 0x05e9, \"shinshindot\", 0xfb2a, \"shinshindothebrew\", 0xfb2a, \"shinsindot\", 0xfb2b, \"shinsindothebrew\", 0xfb2b, \"shook\", 0x0282, \"sigma\", 0x03c3, \"sigma1\", 0x03c2, \"sigmafinal\", 0x03c2, \"sigmalunatesymbolgreek\", 0x03f2, \"sihiragana\", 0x3057, \"sikatakana\", 0x30b7, \"sikatakanahalfwidth\", 0xff7c, \"siluqhebrew\", 0x05bd, \"siluqlefthebrew\", 0x05bd, \"similar\", 0x223c, \"sindothebrew\", 0x05c2, \"siosacirclekorean\", 0x3274, \"siosaparenkorean\", 0x3214, \"sioscieuckorean\", 0x317e, \"sioscirclekorean\", 0x3266, \"sioskiyeokkorean\", 0x317a, \"sioskorean\", 0x3145, \"siosnieunkorean\", 0x317b, \"siosparenkorean\", 0x3206, \"siospieupkorean\", 0x317d, \"siostikeutkorean\", 0x317c, \"six\", 0x0036, \"sixarabic\", 0x0666, \"sixbengali\", 0x09ec, \"sixcircle\", 0x2465, \"sixcircleinversesansserif\", 0x278f, \"sixdeva\", 0x096c, \"sixgujarati\", 0x0aec, \"sixgurmukhi\", 0x0a6c, \"sixhackarabic\", 0x0666, \"sixhangzhou\", 0x3026, \"sixideographicparen\", 0x3225, \"sixinferior\", 0x2086, \"sixmonospace\", 0xff16, \"sixoldstyle\", 0xf736, \"sixparen\", 0x2479, \"sixperiod\", 0x248d, \"sixpersian\", 0x06f6, \"sixroman\", 0x2175, \"sixsuperior\", 0x2076, \"sixteencircle\", 0x246f, \"sixteencurrencydenominatorbengali\", 0x09f9, \"sixteenparen\", 0x2483, \"sixteenperiod\", 0x2497, \"sixthai\", 0x0e56, \"slash\", 0x002f, \"slashmonospace\", 0xff0f, \"slong\", 0x017f, \"slongdotaccent\", 0x1e9b, \"smileface\", 0x263a, \"smonospace\", 0xff53, \"sofpasuqhebrew\", 0x05c3, \"softhyphen\", 0x00ad, \"softsigncyrillic\", 0x044c, \"sohiragana\", 0x305d, \"sokatakana\", 0x30bd, \"sokatakanahalfwidth\", 0xff7f, \"soliduslongoverlaycmb\", 0x0338, \"solidusshortoverlaycmb\", 0x0337, \"sorusithai\", 0x0e29, \"sosalathai\", 0x0e28, \"sosothai\", 0x0e0b, \"sosuathai\", 0x0e2a, \"space\", 0x0020, \"spacehackarabic\", 0x0020, \"spade\", 0x2660, \"spadesuitblack\", 0x2660, \"spadesuitwhite\", 0x2664, \"sparen\", 0x24ae, \"squarebelowcmb\", 0x033b, \"squarecc\", 0x33c4, \"squarecm\", 0x339d, \"squarediagonalcrosshatchfill\", 0x25a9, \"squarehorizontalfill\", 0x25a4, \"squarekg\", 0x338f, \"squarekm\", 0x339e, \"squarekmcapital\", 0x33ce, \"squareln\", 0x33d1, \"squarelog\", 0x33d2, \"squaremg\", 0x338e, \"squaremil\", 0x33d5, \"squaremm\", 0x339c, \"squaremsquared\", 0x33a1, \"squareorthogonalcrosshatchfill\", 0x25a6, \"squareupperlefttolowerrightfill\", 0x25a7, \"squareupperrighttolowerleftfill\", 0x25a8, \"squareverticalfill\", 0x25a5, \"squarewhitewithsmallblack\", 0x25a3, \"srsquare\", 0x33db, \"ssabengali\", 0x09b7, \"ssadeva\", 0x0937, \"ssagujarati\", 0x0ab7, \"ssangcieuckorean\", 0x3149, \"ssanghieuhkorean\", 0x3185, \"ssangieungkorean\", 0x3180, \"ssangkiyeokkorean\", 0x3132, \"ssangnieunkorean\", 0x3165, \"ssangpieupkorean\", 0x3143, \"ssangsioskorean\", 0x3146, \"ssangtikeutkorean\", 0x3138, \"ssuperior\", 0xf6f2, \"sterling\", 0x00a3, \"sterlingmonospace\", 0xffe1, \"strokelongoverlaycmb\", 0x0336, \"strokeshortoverlaycmb\", 0x0335, \"subset\", 0x2282, \"subsetnotequal\", 0x228a, \"subsetorequal\", 0x2286, \"succeeds\", 0x227b, \"suchthat\", 0x220b, \"suhiragana\", 0x3059, \"sukatakana\", 0x30b9, \"sukatakanahalfwidth\", 0xff7d, \"sukunarabic\", 0x0652, \"summation\", 0x2211, \"sun\", 0x263c, \"superset\", 0x2283, \"supersetnotequal\", 0x228b, \"supersetorequal\", 0x2287, \"svsquare\", 0x33dc, \"syouwaerasquare\", 0x337c, \"t\", 0x0074, \"tabengali\", 0x09a4, \"tackdown\", 0x22a4, \"tackleft\", 0x22a3, \"tadeva\", 0x0924, \"tagujarati\", 0x0aa4, \"tagurmukhi\", 0x0a24, \"taharabic\", 0x0637, \"tahfinalarabic\", 0xfec2, \"tahinitialarabic\", 0xfec3, \"tahiragana\", 0x305f, \"tahmedialarabic\", 0xfec4, \"taisyouerasquare\", 0x337d, \"takatakana\", 0x30bf, \"takatakanahalfwidth\", 0xff80, \"tatweelarabic\", 0x0640, \"tau\", 0x03c4, \"tav\", 0x05ea, \"tavdages\", 0xfb4a, \"tavdagesh\", 0xfb4a, \"tavdageshhebrew\", 0xfb4a, \"tavhebrew\", 0x05ea, \"tbar\", 0x0167, \"tbopomofo\", 0x310a, \"tcaron\", 0x0165, \"tccurl\", 0x02a8, \"tcedilla\", 0x0163, \"tcheharabic\", 0x0686, \"tchehfinalarabic\", 0xfb7b, \"tchehinitialarabic\", 0xfb7c, \"tchehmedialarabic\", 0xfb7d, \"tcircle\", 0x24e3, \"tcircumflexbelow\", 0x1e71, \"tcommaaccent\", 0x0163, \"tdieresis\", 0x1e97, \"tdotaccent\", 0x1e6b, \"tdotbelow\", 0x1e6d, \"tecyrillic\", 0x0442, \"tedescendercyrillic\", 0x04ad, \"teharabic\", 0x062a, \"tehfinalarabic\", 0xfe96, \"tehhahinitialarabic\", 0xfca2, \"tehhahisolatedarabic\", 0xfc0c, \"tehinitialarabic\", 0xfe97, \"tehiragana\", 0x3066, \"tehjeeminitialarabic\", 0xfca1, \"tehjeemisolatedarabic\", 0xfc0b, \"tehmarbutaarabic\", 0x0629, \"tehmarbutafinalarabic\", 0xfe94, \"tehmedialarabic\", 0xfe98, \"tehmeeminitialarabic\", 0xfca4, \"tehmeemisolatedarabic\", 0xfc0e, \"tehnoonfinalarabic\", 0xfc73, \"tekatakana\", 0x30c6, \"tekatakanahalfwidth\", 0xff83, \"telephone\", 0x2121, \"telephoneblack\", 0x260e, \"telishagedolahebrew\", 0x05a0, \"telishaqetanahebrew\", 0x05a9, \"tencircle\", 0x2469, \"tenideographicparen\", 0x3229, \"tenparen\", 0x247d, \"tenperiod\", 0x2491, \"tenroman\", 0x2179, \"tesh\", 0x02a7, \"tet\", 0x05d8, \"tetdagesh\", 0xfb38, \"tetdageshhebrew\", 0xfb38, \"tethebrew\", 0x05d8, \"tetsecyrillic\", 0x04b5, \"tevirhebrew\", 0x059b, \"tevirlefthebrew\", 0x059b, \"thabengali\", 0x09a5, \"thadeva\", 0x0925, \"thagujarati\", 0x0aa5, \"thagurmukhi\", 0x0a25, \"thalarabic\", 0x0630, \"thalfinalarabic\", 0xfeac, \"thanthakhatlowleftthai\", 0xf898, \"thanthakhatlowrightthai\", 0xf897, \"thanthakhatthai\", 0x0e4c, \"thanthakhatupperleftthai\", 0xf896, \"theharabic\", 0x062b, \"thehfinalarabic\", 0xfe9a, \"thehinitialarabic\", 0xfe9b, \"thehmedialarabic\", 0xfe9c, \"thereexists\", 0x2203, \"therefore\", 0x2234, \"theta\", 0x03b8, \"theta1\", 0x03d1, \"thetasymbolgreek\", 0x03d1, \"thieuthacirclekorean\", 0x3279, \"thieuthaparenkorean\", 0x3219, \"thieuthcirclekorean\", 0x326b, \"thieuthkorean\", 0x314c, \"thieuthparenkorean\", 0x320b, \"thirteencircle\", 0x246c, \"thirteenparen\", 0x2480, \"thirteenperiod\", 0x2494, \"thonangmonthothai\", 0x0e11, \"thook\", 0x01ad, \"thophuthaothai\", 0x0e12, \"thorn\", 0x00fe, \"thothahanthai\", 0x0e17, \"thothanthai\", 0x0e10, \"thothongthai\", 0x0e18, \"thothungthai\", 0x0e16, \"thousandcyrillic\", 0x0482, \"thousandsseparatorarabic\", 0x066c, \"thousandsseparatorpersian\", 0x066c, \"three\", 0x0033, \"threearabic\", 0x0663, \"threebengali\", 0x09e9, \"threecircle\", 0x2462, \"threecircleinversesansserif\", 0x278c, \"threedeva\", 0x0969, \"threeeighths\", 0x215c, \"threegujarati\", 0x0ae9, \"threegurmukhi\", 0x0a69, \"threehackarabic\", 0x0663, \"threehangzhou\", 0x3023, \"threeideographicparen\", 0x3222, \"threeinferior\", 0x2083, \"threemonospace\", 0xff13, \"threenumeratorbengali\", 0x09f6, \"threeoldstyle\", 0xf733, \"threeparen\", 0x2476, \"threeperiod\", 0x248a, \"threepersian\", 0x06f3, \"threequarters\", 0x00be, \"threequartersemdash\", 0xf6de, \"threeroman\", 0x2172, \"threesuperior\", 0x00b3, \"threethai\", 0x0e53, \"thzsquare\", 0x3394, \"tihiragana\", 0x3061, \"tikatakana\", 0x30c1, \"tikatakanahalfwidth\", 0xff81, \"tikeutacirclekorean\", 0x3270, \"tikeutaparenkorean\", 0x3210, \"tikeutcirclekorean\", 0x3262, \"tikeutkorean\", 0x3137, \"tikeutparenkorean\", 0x3202, \"tilde\", 0x02dc, \"tildebelowcmb\", 0x0330, \"tildecmb\", 0x0303, \"tildecomb\", 0x0303, \"tildedoublecmb\", 0x0360, \"tildeoperator\", 0x223c, \"tildeoverlaycmb\", 0x0334, \"tildeverticalcmb\", 0x033e, \"timescircle\", 0x2297, \"tipehahebrew\", 0x0596, \"tipehalefthebrew\", 0x0596, \"tippigurmukhi\", 0x0a70, \"titlocyrilliccmb\", 0x0483, \"tiwnarmenian\", 0x057f, \"tlinebelow\", 0x1e6f, \"tmonospace\", 0xff54, \"toarmenian\", 0x0569, \"tohiragana\", 0x3068, \"tokatakana\", 0x30c8, \"tokatakanahalfwidth\", 0xff84, \"tonebarextrahighmod\", 0x02e5, \"tonebarextralowmod\", 0x02e9, \"tonebarhighmod\", 0x02e6, \"tonebarlowmod\", 0x02e8, \"tonebarmidmod\", 0x02e7, \"tonefive\", 0x01bd, \"tonesix\", 0x0185, \"tonetwo\", 0x01a8, \"tonos\", 0x0384, \"tonsquare\", 0x3327, \"topatakthai\", 0x0e0f, \"tortoiseshellbracketleft\", 0x3014, \"tortoiseshellbracketleftsmall\", 0xfe5d, \"tortoiseshellbracketleftvertical\", 0xfe39, \"tortoiseshellbracketright\", 0x3015, \"tortoiseshellbracketrightsmall\", 0xfe5e, \"tortoiseshellbracketrightvertical\", 0xfe3a, \"totaothai\", 0x0e15, \"tpalatalhook\", 0x01ab, \"tparen\", 0x24af, \"trademark\", 0x2122, \"trademarksans\", 0xf8ea, \"trademarkserif\", 0xf6db, \"tretroflexhook\", 0x0288, \"triagdn\", 0x25bc, \"triaglf\", 0x25c4, \"triagrt\", 0x25ba, \"triagup\", 0x25b2, \"ts\", 0x02a6, \"tsadi\", 0x05e6, \"tsadidagesh\", 0xfb46, \"tsadidageshhebrew\", 0xfb46, \"tsadihebrew\", 0x05e6, \"tsecyrillic\", 0x0446, \"tsere\", 0x05b5, \"tsere12\", 0x05b5, \"tsere1e\", 0x05b5, \"tsere2b\", 0x05b5, \"tserehebrew\", 0x05b5, \"tserenarrowhebrew\", 0x05b5, \"tserequarterhebrew\", 0x05b5, \"tserewidehebrew\", 0x05b5, \"tshecyrillic\", 0x045b, \"tsuperior\", 0xf6f3, \"ttabengali\", 0x099f, \"ttadeva\", 0x091f, \"ttagujarati\", 0x0a9f, \"ttagurmukhi\", 0x0a1f, \"tteharabic\", 0x0679, \"ttehfinalarabic\", 0xfb67, \"ttehinitialarabic\", 0xfb68, \"ttehmedialarabic\", 0xfb69, \"tthabengali\", 0x09a0, \"tthadeva\", 0x0920, \"tthagujarati\", 0x0aa0, \"tthagurmukhi\", 0x0a20, \"tturned\", 0x0287, \"tuhiragana\", 0x3064, \"tukatakana\", 0x30c4, \"tukatakanahalfwidth\", 0xff82, \"tusmallhiragana\", 0x3063, \"tusmallkatakana\", 0x30c3, \"tusmallkatakanahalfwidth\", 0xff6f, \"twelvecircle\", 0x246b, \"twelveparen\", 0x247f, \"twelveperiod\", 0x2493, \"twelveroman\", 0x217b, \"twentycircle\", 0x2473, \"twentyhangzhou\", 0x5344, \"twentyparen\", 0x2487, \"twentyperiod\", 0x249b, \"two\", 0x0032, \"twoarabic\", 0x0662, \"twobengali\", 0x09e8, \"twocircle\", 0x2461, \"twocircleinversesansserif\", 0x278b, \"twodeva\", 0x0968, \"twodotenleader\", 0x2025, \"twodotleader\", 0x2025, \"twodotleadervertical\", 0xfe30, \"twogujarati\", 0x0ae8, \"twogurmukhi\", 0x0a68, \"twohackarabic\", 0x0662, \"twohangzhou\", 0x3022, \"twoideographicparen\", 0x3221, \"twoinferior\", 0x2082, \"twomonospace\", 0xff12, \"twonumeratorbengali\", 0x09f5, \"twooldstyle\", 0xf732, \"twoparen\", 0x2475, \"twoperiod\", 0x2489, \"twopersian\", 0x06f2, \"tworoman\", 0x2171, \"twostroke\", 0x01bb, \"twosuperior\", 0x00b2, \"twothai\", 0x0e52, \"twothirds\", 0x2154, \"u\", 0x0075, \"uacute\", 0x00fa, \"ubar\", 0x0289, \"ubengali\", 0x0989, \"ubopomofo\", 0x3128, \"ubreve\", 0x016d, \"ucaron\", 0x01d4, \"ucircle\", 0x24e4, \"ucircumflex\", 0x00fb, \"ucircumflexbelow\", 0x1e77, \"ucyrillic\", 0x0443, \"udattadeva\", 0x0951, \"udblacute\", 0x0171, \"udblgrave\", 0x0215, \"udeva\", 0x0909, \"udieresis\", 0x00fc, \"udieresisacute\", 0x01d8, \"udieresisbelow\", 0x1e73, \"udieresiscaron\", 0x01da, \"udieresiscyrillic\", 0x04f1, \"udieresisgrave\", 0x01dc, \"udieresismacron\", 0x01d6, \"udotbelow\", 0x1ee5, \"ugrave\", 0x00f9, \"ugujarati\", 0x0a89, \"ugurmukhi\", 0x0a09, \"uhiragana\", 0x3046, \"uhookabove\", 0x1ee7, \"uhorn\", 0x01b0, \"uhornacute\", 0x1ee9, \"uhorndotbelow\", 0x1ef1, \"uhorngrave\", 0x1eeb, \"uhornhookabove\", 0x1eed, \"uhorntilde\", 0x1eef, \"uhungarumlaut\", 0x0171, \"uhungarumlautcyrillic\", 0x04f3, \"uinvertedbreve\", 0x0217, \"ukatakana\", 0x30a6, \"ukatakanahalfwidth\", 0xff73, \"ukcyrillic\", 0x0479, \"ukorean\", 0x315c, \"umacron\", 0x016b, \"umacroncyrillic\", 0x04ef, \"umacrondieresis\", 0x1e7b, \"umatragurmukhi\", 0x0a41, \"umonospace\", 0xff55, \"underscore\", 0x005f, \"underscoredbl\", 0x2017, \"underscoremonospace\", 0xff3f, \"underscorevertical\", 0xfe33, \"underscorewavy\", 0xfe4f, \"union\", 0x222a, \"universal\", 0x2200, \"uogonek\", 0x0173, \"uparen\", 0x24b0, \"upblock\", 0x2580, \"upperdothebrew\", 0x05c4, \"upsilon\", 0x03c5, \"upsilondieresis\", 0x03cb, \"upsilondieresistonos\", 0x03b0, \"upsilonlatin\", 0x028a, \"upsilontonos\", 0x03cd, \"uptackbelowcmb\", 0x031d, \"uptackmod\", 0x02d4, \"uragurmukhi\", 0x0a73, \"uring\", 0x016f, \"ushortcyrillic\", 0x045e, \"usmallhiragana\", 0x3045, \"usmallkatakana\", 0x30a5, \"usmallkatakanahalfwidth\", 0xff69, \"ustraightcyrillic\", 0x04af, \"ustraightstrokecyrillic\", 0x04b1, \"utilde\", 0x0169, \"utildeacute\", 0x1e79, \"utildebelow\", 0x1e75, \"uubengali\", 0x098a, \"uudeva\", 0x090a, \"uugujarati\", 0x0a8a, \"uugurmukhi\", 0x0a0a, \"uumatragurmukhi\", 0x0a42, \"uuvowelsignbengali\", 0x09c2, \"uuvowelsigndeva\", 0x0942, \"uuvowelsigngujarati\", 0x0ac2, \"uvowelsignbengali\", 0x09c1, \"uvowelsigndeva\", 0x0941, \"uvowelsigngujarati\", 0x0ac1, \"v\", 0x0076, \"vadeva\", 0x0935, \"vagujarati\", 0x0ab5, \"vagurmukhi\", 0x0a35, \"vakatakana\", 0x30f7, \"vav\", 0x05d5, \"vavdagesh\", 0xfb35, \"vavdagesh65\", 0xfb35, \"vavdageshhebrew\", 0xfb35, \"vavhebrew\", 0x05d5, \"vavholam\", 0xfb4b, \"vavholamhebrew\", 0xfb4b, \"vavvavhebrew\", 0x05f0, \"vavyodhebrew\", 0x05f1, \"vcircle\", 0x24e5, \"vdotbelow\", 0x1e7f, \"vecyrillic\", 0x0432, \"veharabic\", 0x06a4, \"vehfinalarabic\", 0xfb6b, \"vehinitialarabic\", 0xfb6c, \"vehmedialarabic\", 0xfb6d, \"vekatakana\", 0x30f9, \"venus\", 0x2640, \"verticalbar\", 0x007c, \"verticallineabovecmb\", 0x030d, \"verticallinebelowcmb\", 0x0329, \"verticallinelowmod\", 0x02cc, \"verticallinemod\", 0x02c8, \"vewarmenian\", 0x057e, \"vhook\", 0x028b, \"vikatakana\", 0x30f8, \"viramabengali\", 0x09cd, \"viramadeva\", 0x094d, \"viramagujarati\", 0x0acd, \"visargabengali\", 0x0983, \"visargadeva\", 0x0903, \"visargagujarati\", 0x0a83, \"vmonospace\", 0xff56, \"voarmenian\", 0x0578, \"voicediterationhiragana\", 0x309e, \"voicediterationkatakana\", 0x30fe, \"voicedmarkkana\", 0x309b, \"voicedmarkkanahalfwidth\", 0xff9e, \"vokatakana\", 0x30fa, \"vparen\", 0x24b1, \"vtilde\", 0x1e7d, \"vturned\", 0x028c, \"vuhiragana\", 0x3094, \"vukatakana\", 0x30f4, \"w\", 0x0077, \"wacute\", 0x1e83, \"waekorean\", 0x3159, \"wahiragana\", 0x308f, \"wakatakana\", 0x30ef, \"wakatakanahalfwidth\", 0xff9c, \"wakorean\", 0x3158, \"wasmallhiragana\", 0x308e, \"wasmallkatakana\", 0x30ee, \"wattosquare\", 0x3357, \"wavedash\", 0x301c, \"wavyunderscorevertical\", 0xfe34, \"wawarabic\", 0x0648, \"wawfinalarabic\", 0xfeee, \"wawhamzaabovearabic\", 0x0624, \"wawhamzaabovefinalarabic\", 0xfe86, \"wbsquare\", 0x33dd, \"wcircle\", 0x24e6, \"wcircumflex\", 0x0175, \"wdieresis\", 0x1e85, \"wdotaccent\", 0x1e87, \"wdotbelow\", 0x1e89, \"wehiragana\", 0x3091, \"weierstrass\", 0x2118, \"wekatakana\", 0x30f1, \"wekorean\", 0x315e, \"weokorean\", 0x315d, \"wgrave\", 0x1e81, \"whitebullet\", 0x25e6, \"whitecircle\", 0x25cb, \"whitecircleinverse\", 0x25d9, \"whitecornerbracketleft\", 0x300e, \"whitecornerbracketleftvertical\", 0xfe43, \"whitecornerbracketright\", 0x300f, \"whitecornerbracketrightvertical\", 0xfe44, \"whitediamond\", 0x25c7, \"whitediamondcontainingblacksmalldiamond\", 0x25c8, \"whitedownpointingsmalltriangle\", 0x25bf, \"whitedownpointingtriangle\", 0x25bd, \"whiteleftpointingsmalltriangle\", 0x25c3, \"whiteleftpointingtriangle\", 0x25c1, \"whitelenticularbracketleft\", 0x3016, \"whitelenticularbracketright\", 0x3017, \"whiterightpointingsmalltriangle\", 0x25b9, \"whiterightpointingtriangle\", 0x25b7, \"whitesmallsquare\", 0x25ab, \"whitesmilingface\", 0x263a, \"whitesquare\", 0x25a1, \"whitestar\", 0x2606, \"whitetelephone\", 0x260f, \"whitetortoiseshellbracketleft\", 0x3018, \"whitetortoiseshellbracketright\", 0x3019, \"whiteuppointingsmalltriangle\", 0x25b5, \"whiteuppointingtriangle\", 0x25b3, \"wihiragana\", 0x3090, \"wikatakana\", 0x30f0, \"wikorean\", 0x315f, \"wmonospace\", 0xff57, \"wohiragana\", 0x3092, \"wokatakana\", 0x30f2, \"wokatakanahalfwidth\", 0xff66, \"won\", 0x20a9, \"wonmonospace\", 0xffe6, \"wowaenthai\", 0x0e27, \"wparen\", 0x24b2, \"wring\", 0x1e98, \"wsuperior\", 0x02b7, \"wturned\", 0x028d, \"wynn\", 0x01bf, \"x\", 0x0078, \"xabovecmb\", 0x033d, \"xbopomofo\", 0x3112, \"xcircle\", 0x24e7, \"xdieresis\", 0x1e8d, \"xdotaccent\", 0x1e8b, \"xeharmenian\", 0x056d, \"xi\", 0x03be, \"xmonospace\", 0xff58, \"xparen\", 0x24b3, \"xsuperior\", 0x02e3, \"y\", 0x0079, \"yaadosquare\", 0x334e, \"yabengali\", 0x09af, \"yacute\", 0x00fd, \"yadeva\", 0x092f, \"yaekorean\", 0x3152, \"yagujarati\", 0x0aaf, \"yagurmukhi\", 0x0a2f, \"yahiragana\", 0x3084, \"yakatakana\", 0x30e4, \"yakatakanahalfwidth\", 0xff94, \"yakorean\", 0x3151, \"yamakkanthai\", 0x0e4e, \"yasmallhiragana\", 0x3083, \"yasmallkatakana\", 0x30e3, \"yasmallkatakanahalfwidth\", 0xff6c, \"yatcyrillic\", 0x0463, \"ycircle\", 0x24e8, \"ycircumflex\", 0x0177, \"ydieresis\", 0x00ff, \"ydotaccent\", 0x1e8f, \"ydotbelow\", 0x1ef5, \"yeharabic\", 0x064a, \"yehbarreearabic\", 0x06d2, \"yehbarreefinalarabic\", 0xfbaf, \"yehfinalarabic\", 0xfef2, \"yehhamzaabovearabic\", 0x0626, \"yehhamzaabovefinalarabic\", 0xfe8a, \"yehhamzaaboveinitialarabic\", 0xfe8b, \"yehhamzaabovemedialarabic\", 0xfe8c, \"yehinitialarabic\", 0xfef3, \"yehmedialarabic\", 0xfef4, \"yehmeeminitialarabic\", 0xfcdd, \"yehmeemisolatedarabic\", 0xfc58, \"yehnoonfinalarabic\", 0xfc94, \"yehthreedotsbelowarabic\", 0x06d1, \"yekorean\", 0x3156, \"yen\", 0x00a5, \"yenmonospace\", 0xffe5, \"yeokorean\", 0x3155, \"yeorinhieuhkorean\", 0x3186, \"yerahbenyomohebrew\", 0x05aa, \"yerahbenyomolefthebrew\", 0x05aa, \"yericyrillic\", 0x044b, \"yerudieresiscyrillic\", 0x04f9, \"yesieungkorean\", 0x3181, \"yesieungpansioskorean\", 0x3183, \"yesieungsioskorean\", 0x3182, \"yetivhebrew\", 0x059a, \"ygrave\", 0x1ef3, \"yhook\", 0x01b4, \"yhookabove\", 0x1ef7, \"yiarmenian\", 0x0575, \"yicyrillic\", 0x0457, \"yikorean\", 0x3162, \"yinyang\", 0x262f, \"yiwnarmenian\", 0x0582, \"ymonospace\", 0xff59, \"yod\", 0x05d9, \"yoddagesh\", 0xfb39, \"yoddageshhebrew\", 0xfb39, \"yodhebrew\", 0x05d9, \"yodyodhebrew\", 0x05f2, \"yodyodpatahhebrew\", 0xfb1f, \"yohiragana\", 0x3088, \"yoikorean\", 0x3189, \"yokatakana\", 0x30e8, \"yokatakanahalfwidth\", 0xff96, \"yokorean\", 0x315b, \"yosmallhiragana\", 0x3087, \"yosmallkatakana\", 0x30e7, \"yosmallkatakanahalfwidth\", 0xff6e, \"yotgreek\", 0x03f3, \"yoyaekorean\", 0x3188, \"yoyakorean\", 0x3187, \"yoyakthai\", 0x0e22, \"yoyingthai\", 0x0e0d, \"yparen\", 0x24b4, \"ypogegrammeni\", 0x037a, \"ypogegrammenigreekcmb\", 0x0345, \"yr\", 0x01a6, \"yring\", 0x1e99, \"ysuperior\", 0x02b8, \"ytilde\", 0x1ef9, \"yturned\", 0x028e, \"yuhiragana\", 0x3086, \"yuikorean\", 0x318c, \"yukatakana\", 0x30e6, \"yukatakanahalfwidth\", 0xff95, \"yukorean\", 0x3160, \"yusbigcyrillic\", 0x046b, \"yusbigiotifiedcyrillic\", 0x046d, \"yuslittlecyrillic\", 0x0467, \"yuslittleiotifiedcyrillic\", 0x0469, \"yusmallhiragana\", 0x3085, \"yusmallkatakana\", 0x30e5, \"yusmallkatakanahalfwidth\", 0xff6d, \"yuyekorean\", 0x318b, \"yuyeokorean\", 0x318a, \"yyabengali\", 0x09df, \"yyadeva\", 0x095f, \"z\", 0x007a, \"zaarmenian\", 0x0566, \"zacute\", 0x017a, \"zadeva\", 0x095b, \"zagurmukhi\", 0x0a5b, \"zaharabic\", 0x0638, \"zahfinalarabic\", 0xfec6, \"zahinitialarabic\", 0xfec7, \"zahiragana\", 0x3056, \"zahmedialarabic\", 0xfec8, \"zainarabic\", 0x0632, \"zainfinalarabic\", 0xfeb0, \"zakatakana\", 0x30b6, \"zaqefgadolhebrew\", 0x0595, \"zaqefqatanhebrew\", 0x0594, \"zarqahebrew\", 0x0598, \"zayin\", 0x05d6, \"zayindagesh\", 0xfb36, \"zayindageshhebrew\", 0xfb36, \"zayinhebrew\", 0x05d6, \"zbopomofo\", 0x3117, \"zcaron\", 0x017e, \"zcircle\", 0x24e9, \"zcircumflex\", 0x1e91, \"zcurl\", 0x0291, \"zdot\", 0x017c, \"zdotaccent\", 0x017c, \"zdotbelow\", 0x1e93, \"zecyrillic\", 0x0437, \"zedescendercyrillic\", 0x0499, \"zedieresiscyrillic\", 0x04df, \"zehiragana\", 0x305c, \"zekatakana\", 0x30bc, \"zero\", 0x0030, \"zeroarabic\", 0x0660, \"zerobengali\", 0x09e6, \"zerodeva\", 0x0966, \"zerogujarati\", 0x0ae6, \"zerogurmukhi\", 0x0a66, \"zerohackarabic\", 0x0660, \"zeroinferior\", 0x2080, \"zeromonospace\", 0xff10, \"zerooldstyle\", 0xf730, \"zeropersian\", 0x06f0, \"zerosuperior\", 0x2070, \"zerothai\", 0x0e50, \"zerowidthjoiner\", 0xfeff, \"zerowidthnonjoiner\", 0x200c, \"zerowidthspace\", 0x200b, \"zeta\", 0x03b6, \"zhbopomofo\", 0x3113, \"zhearmenian\", 0x056a, \"zhebrevecyrillic\", 0x04c2, \"zhecyrillic\", 0x0436, \"zhedescendercyrillic\", 0x0497, \"zhedieresiscyrillic\", 0x04dd, \"zihiragana\", 0x3058, \"zikatakana\", 0x30b8, \"zinorhebrew\", 0x05ae, \"zlinebelow\", 0x1e95, \"zmonospace\", 0xff5a, \"zohiragana\", 0x305e, \"zokatakana\", 0x30be, \"zparen\", 0x24b5, \"zretroflexhook\", 0x0290, \"zstroke\", 0x01b6, \"zuhiragana\", 0x305a, \"zukatakana\", 0x30ba, \".notdef\", 0x0000, \"angbracketleftbig\", 0x2329, \"angbracketleftBig\", 0x2329, \"angbracketleftbigg\", 0x2329, \"angbracketleftBigg\", 0x2329, \"angbracketrightBig\", 0x232a, \"angbracketrightbig\", 0x232a, \"angbracketrightBigg\", 0x232a, \"angbracketrightbigg\", 0x232a, \"arrowhookleft\", 0x21aa, \"arrowhookright\", 0x21a9, \"arrowlefttophalf\", 0x21bc, \"arrowleftbothalf\", 0x21bd, \"arrownortheast\", 0x2197, \"arrownorthwest\", 0x2196, \"arrowrighttophalf\", 0x21c0, \"arrowrightbothalf\", 0x21c1, \"arrowsoutheast\", 0x2198, \"arrowsouthwest\", 0x2199, \"backslashbig\", 0x2216, \"backslashBig\", 0x2216, \"backslashBigg\", 0x2216, \"backslashbigg\", 0x2216, \"bardbl\", 0x2016, \"bracehtipdownleft\", 0xfe37, \"bracehtipdownright\", 0xfe37, \"bracehtipupleft\", 0xfe38, \"bracehtipupright\", 0xfe38, \"braceleftBig\", 0x007b, \"braceleftbig\", 0x007b, \"braceleftbigg\", 0x007b, \"braceleftBigg\", 0x007b, \"bracerightBig\", 0x007d, \"bracerightbig\", 0x007d, \"bracerightbigg\", 0x007d, \"bracerightBigg\", 0x007d, \"bracketleftbig\", 0x005b, \"bracketleftBig\", 0x005b, \"bracketleftbigg\", 0x005b, \"bracketleftBigg\", 0x005b, \"bracketrightBig\", 0x005d, \"bracketrightbig\", 0x005d, \"bracketrightbigg\", 0x005d, \"bracketrightBigg\", 0x005d, \"ceilingleftbig\", 0x2308, \"ceilingleftBig\", 0x2308, \"ceilingleftBigg\", 0x2308, \"ceilingleftbigg\", 0x2308, \"ceilingrightbig\", 0x2309, \"ceilingrightBig\", 0x2309, \"ceilingrightbigg\", 0x2309, \"ceilingrightBigg\", 0x2309, \"circledotdisplay\", 0x2299, \"circledottext\", 0x2299, \"circlemultiplydisplay\", 0x2297, \"circlemultiplytext\", 0x2297, \"circleplusdisplay\", 0x2295, \"circleplustext\", 0x2295, \"contintegraldisplay\", 0x222e, \"contintegraltext\", 0x222e, \"coproductdisplay\", 0x2210, \"coproducttext\", 0x2210, \"floorleftBig\", 0x230a, \"floorleftbig\", 0x230a, \"floorleftbigg\", 0x230a, \"floorleftBigg\", 0x230a, \"floorrightbig\", 0x230b, \"floorrightBig\", 0x230b, \"floorrightBigg\", 0x230b, \"floorrightbigg\", 0x230b, \"hatwide\", 0x0302, \"hatwider\", 0x0302, \"hatwidest\", 0x0302, \"intercal\", 0x1d40, \"integraldisplay\", 0x222b, \"integraltext\", 0x222b, \"intersectiondisplay\", 0x22c2, \"intersectiontext\", 0x22c2, \"logicalanddisplay\", 0x2227, \"logicalandtext\", 0x2227, \"logicalordisplay\", 0x2228, \"logicalortext\", 0x2228, \"parenleftBig\", 0x0028, \"parenleftbig\", 0x0028, \"parenleftBigg\", 0x0028, \"parenleftbigg\", 0x0028, \"parenrightBig\", 0x0029, \"parenrightbig\", 0x0029, \"parenrightBigg\", 0x0029, \"parenrightbigg\", 0x0029, \"prime\", 0x2032, \"productdisplay\", 0x220f, \"producttext\", 0x220f, \"radicalbig\", 0x221a, \"radicalBig\", 0x221a, \"radicalBigg\", 0x221a, \"radicalbigg\", 0x221a, \"radicalbt\", 0x221a, \"radicaltp\", 0x221a, \"radicalvertex\", 0x221a, \"slashbig\", 0x002f, \"slashBig\", 0x002f, \"slashBigg\", 0x002f, \"slashbigg\", 0x002f, \"summationdisplay\", 0x2211, \"summationtext\", 0x2211, \"tildewide\", 0x02dc, \"tildewider\", 0x02dc, \"tildewidest\", 0x02dc, \"uniondisplay\", 0x22c3, \"unionmultidisplay\", 0x228e, \"unionmultitext\", 0x228e, \"unionsqdisplay\", 0x2294, \"unionsqtext\", 0x2294, \"uniontext\", 0x22c3, \"vextenddouble\", 0x2225, \"vextendsingle\", 0x2223 ]; }); const getDingbatsGlyphsUnicode = (0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getArrayLookupTableFactory)(function () { return [ \"space\", 0x0020, \"a1\", 0x2701, \"a2\", 0x2702, \"a202\", 0x2703, \"a3\", 0x2704, \"a4\", 0x260e, \"a5\", 0x2706, \"a119\", 0x2707, \"a118\", 0x2708, \"a117\", 0x2709, \"a11\", 0x261b, \"a12\", 0x261e, \"a13\", 0x270c, \"a14\", 0x270d, \"a15\", 0x270e, \"a16\", 0x270f, \"a105\", 0x2710, \"a17\", 0x2711, \"a18\", 0x2712, \"a19\", 0x2713, \"a20\", 0x2714, \"a21\", 0x2715, \"a22\", 0x2716, \"a23\", 0x2717, \"a24\", 0x2718, \"a25\", 0x2719, \"a26\", 0x271a, \"a27\", 0x271b, \"a28\", 0x271c, \"a6\", 0x271d, \"a7\", 0x271e, \"a8\", 0x271f, \"a9\", 0x2720, \"a10\", 0x2721, \"a29\", 0x2722, \"a30\", 0x2723, \"a31\", 0x2724, \"a32\", 0x2725, \"a33\", 0x2726, \"a34\", 0x2727, \"a35\", 0x2605, \"a36\", 0x2729, \"a37\", 0x272a, \"a38\", 0x272b, \"a39\", 0x272c, \"a40\", 0x272d, \"a41\", 0x272e, \"a42\", 0x272f, \"a43\", 0x2730, \"a44\", 0x2731, \"a45\", 0x2732, \"a46\", 0x2733, \"a47\", 0x2734, \"a48\", 0x2735, \"a49\", 0x2736, \"a50\", 0x2737, \"a51\", 0x2738, \"a52\", 0x2739, \"a53\", 0x273a, \"a54\", 0x273b, \"a55\", 0x273c, \"a56\", 0x273d, \"a57\", 0x273e, \"a58\", 0x273f, \"a59\", 0x2740, \"a60\", 0x2741, \"a61\", 0x2742, \"a62\", 0x2743, \"a63\", 0x2744, \"a64\", 0x2745, \"a65\", 0x2746, \"a66\", 0x2747, \"a67\", 0x2748, \"a68\", 0x2749, \"a69\", 0x274a, \"a70\", 0x274b, \"a71\", 0x25cf, \"a72\", 0x274d, \"a73\", 0x25a0, \"a74\", 0x274f, \"a203\", 0x2750, \"a75\", 0x2751, \"a204\", 0x2752, \"a76\", 0x25b2, \"a77\", 0x25bc, \"a78\", 0x25c6, \"a79\", 0x2756, \"a81\", 0x25d7, \"a82\", 0x2758, \"a83\", 0x2759, \"a84\", 0x275a, \"a97\", 0x275b, \"a98\", 0x275c, \"a99\", 0x275d, \"a100\", 0x275e, \"a101\", 0x2761, \"a102\", 0x2762, \"a103\", 0x2763, \"a104\", 0x2764, \"a106\", 0x2765, \"a107\", 0x2766, \"a108\", 0x2767, \"a112\", 0x2663, \"a111\", 0x2666, \"a110\", 0x2665, \"a109\", 0x2660, \"a120\", 0x2460, \"a121\", 0x2461, \"a122\", 0x2462, \"a123\", 0x2463, \"a124\", 0x2464, \"a125\", 0x2465, \"a126\", 0x2466, \"a127\", 0x2467, \"a128\", 0x2468, \"a129\", 0x2469, \"a130\", 0x2776, \"a131\", 0x2777, \"a132\", 0x2778, \"a133\", 0x2779, \"a134\", 0x277a, \"a135\", 0x277b, \"a136\", 0x277c, \"a137\", 0x277d, \"a138\", 0x277e, \"a139\", 0x277f, \"a140\", 0x2780, \"a141\", 0x2781, \"a142\", 0x2782, \"a143\", 0x2783, \"a144\", 0x2784, \"a145\", 0x2785, \"a146\", 0x2786, \"a147\", 0x2787, \"a148\", 0x2788, \"a149\", 0x2789, \"a150\", 0x278a, \"a151\", 0x278b, \"a152\", 0x278c, \"a153\", 0x278d, \"a154\", 0x278e, \"a155\", 0x278f, \"a156\", 0x2790, \"a157\", 0x2791, \"a158\", 0x2792, \"a159\", 0x2793, \"a160\", 0x2794, \"a161\", 0x2192, \"a163\", 0x2194, \"a164\", 0x2195, \"a196\", 0x2798, \"a165\", 0x2799, \"a192\", 0x279a, \"a166\", 0x279b, \"a167\", 0x279c, \"a168\", 0x279d, \"a169\", 0x279e, \"a170\", 0x279f, \"a171\", 0x27a0, \"a172\", 0x27a1, \"a173\", 0x27a2, \"a162\", 0x27a3, \"a174\", 0x27a4, \"a175\", 0x27a5, \"a176\", 0x27a6, \"a177\", 0x27a7, \"a178\", 0x27a8, \"a179\", 0x27a9, \"a193\", 0x27aa, \"a180\", 0x27ab, \"a199\", 0x27ac, \"a181\", 0x27ad, \"a200\", 0x27ae, \"a182\", 0x27af, \"a201\", 0x27b1, \"a183\", 0x27b2, \"a184\", 0x27b3, \"a197\", 0x27b4, \"a185\", 0x27b5, \"a194\", 0x27b6, \"a198\", 0x27b7, \"a186\", 0x27b8, \"a195\", 0x27b9, \"a187\", 0x27ba, \"a188\", 0x27bb, \"a189\", 0x27bc, \"a190\", 0x27bd, \"a191\", 0x27be, \"a89\", 0x2768, \"a90\", 0x2769, \"a93\", 0x276a, \"a94\", 0x276b, \"a91\", 0x276c, \"a92\", 0x276d, \"a205\", 0x276e, \"a85\", 0x276f, \"a206\", 0x2770, \"a86\", 0x2771, \"a87\", 0x2772, \"a88\", 0x2773, \"a95\", 0x2774, \"a96\", 0x2775, \".notdef\", 0x0000 ]; }); /***/ }), /* 21 */ /***/ ((__unused_webpack_module, __webpack_exports__, __w_pdfjs_require__) => { __w_pdfjs_require__.r(__webpack_exports__); /* harmony export */ __w_pdfjs_require__.d(__webpack_exports__, { /* harmony export */ \"clearUnicodeCaches\": () => (/* binding */ clearUnicodeCaches), /* harmony export */ \"getCharUnicodeCategory\": () => (/* binding */ getCharUnicodeCategory), /* harmony export */ \"getNormalizedUnicodes\": () => (/* binding */ getNormalizedUnicodes), /* harmony export */ \"getUnicodeForGlyph\": () => (/* binding */ getUnicodeForGlyph), /* harmony export */ \"getUnicodeRangeFor\": () => (/* binding */ getUnicodeRangeFor), /* harmony export */ \"mapSpecialUnicodeValues\": () => (/* binding */ mapSpecialUnicodeValues), /* harmony export */ \"reverseIfRtl\": () => (/* binding */ reverseIfRtl) /* harmony export */ }); /* harmony import */ var _core_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __w_pdfjs_require__(8); const getSpecialPUASymbols = (0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getLookupTableFactory)(function (t) { t[63721] = 0x00a9; t[63193] = 0x00a9; t[63720] = 0x00ae; t[63194] = 0x00ae; t[63722] = 0x2122; t[63195] = 0x2122; t[63729] = 0x23a7; t[63730] = 0x23a8; t[63731] = 0x23a9; t[63740] = 0x23ab; t[63741] = 0x23ac; t[63742] = 0x23ad; t[63726] = 0x23a1; t[63727] = 0x23a2; t[63728] = 0x23a3; t[63737] = 0x23a4; t[63738] = 0x23a5; t[63739] = 0x23a6; t[63723] = 0x239b; t[63724] = 0x239c; t[63725] = 0x239d; t[63734] = 0x239e; t[63735] = 0x239f; t[63736] = 0x23a0; }); function mapSpecialUnicodeValues(code) { if (code >= 0xfff0 && code = 0xf600 && code = 5 && nameLen = 0) { return unicode; } } } return -1; } const UnicodeRanges = [ { begin: 0x0000, end: 0x007f }, { begin: 0x0080, end: 0x00ff }, { begin: 0x0100, end: 0x017f }, { begin: 0x0180, end: 0x024f }, { begin: 0x0250, end: 0x02af }, { begin: 0x02b0, end: 0x02ff }, { begin: 0x0300, end: 0x036f }, { begin: 0x0370, end: 0x03ff }, { begin: 0x2c80, end: 0x2cff }, { begin: 0x0400, end: 0x04ff }, { begin: 0x0530, end: 0x058f }, { begin: 0x0590, end: 0x05ff }, { begin: 0xa500, end: 0xa63f }, { begin: 0x0600, end: 0x06ff }, { begin: 0x07c0, end: 0x07ff }, { begin: 0x0900, end: 0x097f }, { begin: 0x0980, end: 0x09ff }, { begin: 0x0a00, end: 0x0a7f }, { begin: 0x0a80, end: 0x0aff }, { begin: 0x0b00, end: 0x0b7f }, { begin: 0x0b80, end: 0x0bff }, { begin: 0x0c00, end: 0x0c7f }, { begin: 0x0c80, end: 0x0cff }, { begin: 0x0d00, end: 0x0d7f }, { begin: 0x0e00, end: 0x0e7f }, { begin: 0x0e80, end: 0x0eff }, { begin: 0x10a0, end: 0x10ff }, { begin: 0x1b00, end: 0x1b7f }, { begin: 0x1100, end: 0x11ff }, { begin: 0x1e00, end: 0x1eff }, { begin: 0x1f00, end: 0x1fff }, { begin: 0x2000, end: 0x206f }, { begin: 0x2070, end: 0x209f }, { begin: 0x20a0, end: 0x20cf }, { begin: 0x20d0, end: 0x20ff }, { begin: 0x2100, end: 0x214f }, { begin: 0x2150, end: 0x218f }, { begin: 0x2190, end: 0x21ff }, { begin: 0x2200, end: 0x22ff }, { begin: 0x2300, end: 0x23ff }, { begin: 0x2400, end: 0x243f }, { begin: 0x2440, end: 0x245f }, { begin: 0x2460, end: 0x24ff }, { begin: 0x2500, end: 0x257f }, { begin: 0x2580, end: 0x259f }, { begin: 0x25a0, end: 0x25ff }, { begin: 0x2600, end: 0x26ff }, { begin: 0x2700, end: 0x27bf }, { begin: 0x3000, end: 0x303f }, { begin: 0x3040, end: 0x309f }, { begin: 0x30a0, end: 0x30ff }, { begin: 0x3100, end: 0x312f }, { begin: 0x3130, end: 0x318f }, { begin: 0xa840, end: 0xa87f }, { begin: 0x3200, end: 0x32ff }, { begin: 0x3300, end: 0x33ff }, { begin: 0xac00, end: 0xd7af }, { begin: 0xd800, end: 0xdfff }, { begin: 0x10900, end: 0x1091f }, { begin: 0x4e00, end: 0x9fff }, { begin: 0xe000, end: 0xf8ff }, { begin: 0x31c0, end: 0x31ef }, { begin: 0xfb00, end: 0xfb4f }, { begin: 0xfb50, end: 0xfdff }, { begin: 0xfe20, end: 0xfe2f }, { begin: 0xfe10, end: 0xfe1f }, { begin: 0xfe50, end: 0xfe6f }, { begin: 0xfe70, end: 0xfeff }, { begin: 0xff00, end: 0xffef }, { begin: 0xfff0, end: 0xffff }, { begin: 0x0f00, end: 0x0fff }, { begin: 0x0700, end: 0x074f }, { begin: 0x0780, end: 0x07bf }, { begin: 0x0d80, end: 0x0dff }, { begin: 0x1000, end: 0x109f }, { begin: 0x1200, end: 0x137f }, { begin: 0x13a0, end: 0x13ff }, { begin: 0x1400, end: 0x167f }, { begin: 0x1680, end: 0x169f }, { begin: 0x16a0, end: 0x16ff }, { begin: 0x1780, end: 0x17ff }, { begin: 0x1800, end: 0x18af }, { begin: 0x2800, end: 0x28ff }, { begin: 0xa000, end: 0xa48f }, { begin: 0x1700, end: 0x171f }, { begin: 0x10300, end: 0x1032f }, { begin: 0x10330, end: 0x1034f }, { begin: 0x10400, end: 0x1044f }, { begin: 0x1d000, end: 0x1d0ff }, { begin: 0x1d400, end: 0x1d7ff }, { begin: 0xff000, end: 0xffffd }, { begin: 0xfe00, end: 0xfe0f }, { begin: 0xe0000, end: 0xe007f }, { begin: 0x1900, end: 0x194f }, { begin: 0x1950, end: 0x197f }, { begin: 0x1980, end: 0x19df }, { begin: 0x1a00, end: 0x1a1f }, { begin: 0x2c00, end: 0x2c5f }, { begin: 0x2d30, end: 0x2d7f }, { begin: 0x4dc0, end: 0x4dff }, { begin: 0xa800, end: 0xa82f }, { begin: 0x10000, end: 0x1007f }, { begin: 0x10140, end: 0x1018f }, { begin: 0x10380, end: 0x1039f }, { begin: 0x103a0, end: 0x103df }, { begin: 0x10450, end: 0x1047f }, { begin: 0x10480, end: 0x104af }, { begin: 0x10800, end: 0x1083f }, { begin: 0x10a00, end: 0x10a5f }, { begin: 0x1d300, end: 0x1d35f }, { begin: 0x12000, end: 0x123ff }, { begin: 0x1d360, end: 0x1d37f }, { begin: 0x1b80, end: 0x1bbf }, { begin: 0x1c00, end: 0x1c4f }, { begin: 0x1c50, end: 0x1c7f }, { begin: 0xa880, end: 0xa8df }, { begin: 0xa900, end: 0xa92f }, { begin: 0xa930, end: 0xa95f }, { begin: 0xaa00, end: 0xaa5f }, { begin: 0x10190, end: 0x101cf }, { begin: 0x101d0, end: 0x101ff }, { begin: 0x102a0, end: 0x102df }, { begin: 0x1f030, end: 0x1f09f } ]; function getUnicodeRangeFor(value) { for (let i = 0, ii = UnicodeRanges.length; i < ii; i++) { const range = UnicodeRanges[i]; if (value >= range.begin && value < range.end) { return i; } } return -1; } function isRTLRangeFor(value) { let range = UnicodeRanges[13]; if (value >= range.begin && value < range.end) { return true; } range = UnicodeRanges[11]; if (value >= range.begin && value < range.end) { return true; } return false; } const getNormalizedUnicodes = (0,_core_utils_js__WEBPACK_IMPORTED_MODULE_0__.getArrayLookupTableFactory)(function () { return [ \"\\u00A8\", \"\\u0020\\u0308\", \"\\u00AF\", \"\\u0020\\u0304\", \"\\u00B4\", \"\\u0020\\u0301\", \"\\u00B5\", \"\\u03BC\", \"\\u00B8\", \"\\u0020\\u0327\", \"\\u0132\", \"\\u0049\\u004A\", \"\\u0133\", \"\\u0069\\u006A\", \"\\u013F\", \"\\u004C\\u00B7\", \"\\u0140\", \"\\u006C\\u00B7\", \"\\u0149\", \"\\u02BC\\u006E\", \"\\u017F\", \"\\u0073\", \"\\u01C4\", \"\\u0044\\u017D\", \"\\u01C5\", \"\\u0044\\u017E\", \"\\u01C6\", \"\\u0064\\u017E\", \"\\u01C7\", \"\\u004C\\u004A\", \"\\u01C8\", \"\\u004C\\u006A\", \"\\u01C9\", \"\\u006C\\u006A\", \"\\u01CA\", \"\\u004E\\u004A\", \"\\u01CB\", \"\\u004E\\u006A\", \"\\u01CC\", \"\\u006E\\u006A\", \"\\u01F1\", \"\\u0044\\u005A\", \"\\u01F2\", \"\\u0044\\u007A\", \"\\u01F3\", \"\\u0064\\u007A\", \"\\u02D8\", \"\\u0020\\u0306\", \"\\u02D9\", \"\\u0020\\u0307\", \"\\u02DA\", \"\\u0020\\u030A\", \"\\u02DB\", \"\\u0020\\u0328\", \"\\u02DC\", \"\\u0020\\u0303\", \"\\u02DD\", \"\\u0020\\u030B\", \"\\u037A\", \"\\u0020\\u0345\", \"\\u0384\", \"\\u0020\\u0301\", \"\\u03D0\", \"\\u03B2\", \"\\u03D1\", \"\\u03B8\", \"\\u03D2\", \"\\u03A5\", \"\\u03D5\", \"\\u03C6\", \"\\u03D6\", \"\\u03C0\", \"\\u03F0\", \"\\u03BA\", \"\\u03F1\", \"\\u03C1\", \"\\u03F2\", \"\\u03C2\", \"\\u03F4\", \"\\u0398\", \"\\u03F5\", \"\\u03B5\", \"\\u03F9\", \"\\u03A3\", \"\\u0587\", \"\\u0565\\u0582\", \"\\u0675\", \"\\u0627\\u0674\", \"\\u0676\", \"\\u0648\\u0674\", \"\\u0677\", \"\\u06C7\\u0674\", \"\\u0678\", \"\\u064A\\u0674\", \"\\u0E33\", \"\\u0E4D\\u0E32\", \"\\u0EB3\", \"\\u0ECD\\u0EB2\", \"\\u0EDC\", \"\\u0EAB\\u0E99\", \"\\u0EDD\", \"\\u0EAB\\u0EA1\", \"\\u0F77\", \"\\u0FB2\\u0F81\", \"\\u0F79\", \"\\u0FB3\\u0F81\", \"\\u1E9A\", \"\\u0061\\u02BE\", \"\\u1FBD\", \"\\u0020\\u0313\", \"\\u1FBF\", \"\\u0020\\u0313\", \"\\u1FC0\", \"\\u0020\\u0342\", \"\\u1FFE\", \"\\u0020\\u0314\", \"\\u2002\", \"\\u0020\", \"\\u2003\", \"\\u0020\", \"\\u2004\", \"\\u0020\", \"\\u2005\", \"\\u0020\", \"\\u2006\", \"\\u0020\", \"\\u2008\", \"\\u0020\", \"\\u2009\", \"\\u0020\", \"\\u200A\", \"\\u0020\", \"\\u2017\", \"\\u0020\\u0333\", \"\\u2024\", \"\\u002E\", \"\\u2025\", \"\\u002E\\u002E\", \"\\u2026\", \"\\u002E\\u002E\\u002E\", \"\\u2033\", \"\\u2032\\u2032\", \"\\u2034\", \"\\u2032\\u2032\\u2032\", \"\\u2036\", \"\\u2035\\u2035\", \"\\u2037\", \"\\u2035\\u2035\\u2035\", \"\\u203C\", \"\\u0021\\u0021\", \"\\u203E\", \"\\u0020\\u0305\", \"\\u2047\", \"\\u003F\\u003F\", \"\\u2048\", \"\\u003F\\u0021\", \"\\u2049\", \"\\u0021\\u003F\", \"\\u2057\", \"\\u2032\\u2032\\u2032\\u2032\", \"\\u205F\", \"\\u0020\", \"\\u20A8\", \"\\u0052\\u0073\", \"\\u2100\", \"\\u0061\\u002F\\u0063\", \"\\u2101\", \"\\u0061\\u002F\\u0073\", \"\\u2103\", \"\\u00B0\\u0043\", \"\\u2105\", \"\\u0063\\u002F\\u006F\", \"\\u2106\", \"\\u0063\\u002F\\u0075\", \"\\u2107\", \"\\u0190\", \"\\u2109\", \"\\u00B0\\u0046\", \"\\u2116\", \"\\u004E\\u006F\", \"\\u2121\", \"\\u0054\\u0045\\u004C\", \"\\u2135\", \"\\u05D0\", \"\\u2136\", \"\\u05D1\", \"\\u2137\", \"\\u05D2\", \"\\u2138\", \"\\u05D3\", \"\\u213B\", \"\\u0046\\u0041\\u0058\", \"\\u2160\", \"\\u0049\", \"\\u2161\", \"\\u0049\\u0049\", \"\\u2162\", \"\\u0049\\u0049\\u0049\", \"\\u2163\", \"\\u0049\\u0056\", \"\\u2164\", \"\\u0056\", \"\\u2165\", \"\\u0056\\u0049\", \"\\u2166\", \"\\u0056\\u0049\\u0049\", \"\\u2167\", \"\\u0056\\u0049\\u0049\\u0049\", \"\\u2168\", \"\\u0049\\u0058\", \"\\u2169\", \"\\u0058\", \"\\u216A\", \"\\u0058\\u0049\", \"\\u216B\", \"\\u0058\\u0049\\u0049\", \"\\u216C\", \"\\u004C\", \"\\u216D\", \"\\u0043\", \"\\u216E\", \"\\u0044\", \"\\u216F\", \"\\u004D\", \"\\u2170\", \"\\u0069\", \"\\u2171\", \"\\u0069\\u0069\", \"\\u2172\", \"\\u0069\\u0069\\u0069\", \"\\u2173\", \"\\u0069\\u0076\", \"\\u2174\", \"\\u0076\", \"\\u2175\", \"\\u0076\\u0069\", \"\\u2176\", \"\\u0076\\u0069\\u0069\", \"\\u2177\", \"\\u0076\\u0069\\u0069\\u0069\", \"\\u2178\", \"\\u0069\\u0078\", \"\\u2179\", \"\\u0078\", \"\\u217A\", \"\\u0078\\u0069\", \"\\u217B\", \"\\u0078\\u0069\\u0069\", \"\\u217C\", \"\\u006C\", \"\\u217D\", \"\\u0063\", \"\\u217E\", \"\\u0064\", \"\\u217F\", \"\\u006D\", \"\\u222C\", \"\\u222B\\u222B\", \"\\u222D\", \"\\u222B\\u222B\\u222B\", \"\\u222F\", \"\\u222E\\u222E\", \"\\u2230\", \"\\u222E\\u222E\\u222E\", \"\\u2474\", \"\\u0028\\u0031\\u0029\", \"\\u2475\", \"\\u0028\\u0032\\u0029\", \"\\u2476\", \"\\u0028\\u0033\\u0029\", \"\\u2477\", \"\\u0028\\u0034\\u0029\", \"\\u2478\", \"\\u0028\\u0035\\u0029\", \"\\u2479\", \"\\u0028\\u0036\\u0029\", \"\\u247A\", \"\\u0028\\u0037\\u0029\", \"\\u247B\", \"\\u0028\\u0038\\u0029\", \"\\u247C\", \"\\u0028\\u0039\\u0029\", \"\\u247D\", \"\\u0028\\u0031\\u0030\\u0029\", \"\\u247E\", \"\\u0028\\u0031\\u0031\\u0029\", \"\\u247F\", \"\\u0028\\u0031\\u0032\\u0029\", \"\\u2480\", \"\\u0028\\u0031\\u0033\\u0029\", \"\\u2481\", \"\\u0028\\u0031\\u0034\\u0029\", \"\\u2482\", \"\\u0028\\u0031\\u0035\\u0029\", \"\\u2483\", \"\\u0028\\u0031\\u0036\\u0029\", \"\\u2484\", \"\\u0028\\u0031\\u0037\\u0029\", \"\\u2485\", \"\\u0028\\u0031\\u0038\\u0029\", \"\\u2486\", \"\\u0028\\u0031\\u0039\\u0029\", \"\\u2487\", \"\\u0028\\u0032\\u0030\\u0029\", \"\\u2488\", \"\\u0031\\u002E\", \"\\u2489\", \"\\u0032\\u002E\", \"\\u248A\", \"\\u0033\\u002E\", \"\\u248B\", \"\\u0034\\u002E\", \"\\u248C\", \"\\u0035\\u002E\", \"\\u248D\", \"\\u0036\\u002E\", \"\\u248E\", \"\\u0037\\u002E\", \"\\u248F\", \"\\u0038\\u002E\", \"\\u2490\", \"\\u0039\\u002E\", \"\\u2491\", \"\\u0031\\u0030\\u002E\", \"\\u2492\", \"\\u0031\\u0031\\u002E\", \"\\u2493\", \"\\u0031\\u0032\\u002E\", \"\\u2494\", \"\\u0031\\u0033\\u002E\", \"\\u2495\", \"\\u0031\\u0034\\u002E\", \"\\u2496\", \"\\u0031\\u0035\\u002E\", \"\\u2497\", \"\\u0031\\u0036\\u002E\", \"\\u2498\", \"\\u0031\\u0037\\u002E\", \"\\u2499\", \"\\u0031\\u0038\\u002E\", \"\\u249A\", \"\\u0031\\u0039\\u002E\", \"\\u249B\", \"\\u0032\\u0030\\u002E\", \"\\u249C\", \"\\u0028\\u0061\\u0029\", \"\\u249D\", \"\\u0028\\u0062\\u0029\", \"\\u249E\", \"\\u0028\\u0063\\u0029\", \"\\u249F\", \"\\u0028\\u0064\\u0029\", \"\\u24A0\", \"\\u0028\\u0065\\u0029\", \"\\u24A1\", \"\\u0028\\u0066\\u0029\", \"\\u24A2\", \"\\u0028\\u0067\\u0029\", \"\\u24A3\", \"\\u0028\\u0068\\u0029\", \"\\u24A4\", \"\\u0028\\u0069\\u0029\", \"\\u24A5\", \"\\u0028\\u006A\\u0029\", \"\\u24A6\", \"\\u0028\\u006B\\u0029\", \"\\u24A7\", \"\\u0028\\u006C\\u0029\", \"\\u24A8\", \"\\u0028\\u006D\\u0029\", \"\\u24A9\", \"\\u0028\\u006E\\u0029\", \"\\u24AA\", \"\\u0028\\u006F\\u0029\", \"\\u24AB\", \"\\u0028\\u0070\\u0029\", \"\\u24AC\", \"\\u0028\\u0071\\u0029\", \"\\u24AD\", \"\\u0028\\u0072\\u0029\", \"\\u24AE\", \"\\u0028\\u0073\\u0029\", \"\\u24AF\", \"\\u0028\\u0074\\u0029\", \"\\u24B0\", \"\\u0028\\u0075\\u0029\", \"\\u24B1\", \"\\u0028\\u0076\\u0029\", \"\\u24B2\", \"\\u0028\\u0077\\u0029\", \"\\u24B3\", \"\\u0028\\u0078\\u0029\", \"\\u24B4\", \"\\u0028\\u0079\\u0029\", \"\\u24B5\", \"\\u0028\\u007A\\u0029\", \"\\u2A0C\", \"\\u222B\\u222B\\u222B\\u222B\", \"\\u2A74\", \"\\u003A\\u003A\\u003D\", \"\\u2A75\", \"\\u003D\\u003D\", \"\\u2A76\", \"\\u003D\\u003D\\u003D\", \"\\u2E9F\", \"\\u6BCD\", \"\\u2EF3\", \"\\u9F9F\", \"\\u2F00\", \"\\u4E00\", \"\\u2F01\", \"\\u4E28\", \"\\u2F02\", \"\\u4E36\", \"\\u2F03\", \"\\u4E3F\", \"\\u2F04\", \"\\u4E59\", \"\\u2F05\", \"\\u4E85\", \"\\u2F06\", \"\\u4E8C\", \"\\u2F07\", \"\\u4EA0\", \"\\u2F08\", \"\\u4EBA\", \"\\u2F09\", \"\\u513F\", \"\\u2F0A\", \"\\u5165\", \"\\u2F0B\", \"\\u516B\", \"\\u2F0C\", \"\\u5182\", \"\\u2F0D\", \"\\u5196\", \"\\u2F0E\", \"\\u51AB\", \"\\u2F0F\", \"\\u51E0\", \"\\u2F10\", \"\\u51F5\", \"\\u2F11\", \"\\u5200\", \"\\u2F12\", \"\\u529B\", \"\\u2F13\", \"\\u52F9\", \"\\u2F14\", \"\\u5315\", \"\\u2F15\", \"\\u531A\", \"\\u2F16\", \"\\u5338\", \"\\u2F17\", \"\\u5341\", \"\\u2F18\", \"\\u535C\", \"\\u2F19\", \"\\u5369\", \"\\u2F1A\", \"\\u5382\", \"\\u2F1B\", \"\\u53B6\", \"\\u2F1C\", \"\\u53C8\", \"\\u2F1D\", \"\\u53E3\", \"\\u2F1E\", \"\\u56D7\", \"\\u2F1F\", \"\\u571F\", \"\\u2F20\", \"\\u58EB\", \"\\u2F21\", \"\\u5902\", \"\\u2F22\", \"\\u590A\", \"\\u2F23\", \"\\u5915\", \"\\u2F24\", \"\\u5927\", \"\\u2F25\", \"\\u5973\", \"\\u2F26\", \"\\u5B50\", \"\\u2F27\", \"\\u5B80\", \"\\u2F28\", \"\\u5BF8\", \"\\u2F29\", \"\\u5C0F\", \"\\u2F2A\", \"\\u5C22\", \"\\u2F2B\", \"\\u5C38\", \"\\u2F2C\", \"\\u5C6E\", \"\\u2F2D\", \"\\u5C71\", \"\\u2F2E\", \"\\u5DDB\", \"\\u2F2F\", \"\\u5DE5\", \"\\u2F30\", \"\\u5DF1\", \"\\u2F31\", \"\\u5DFE\", \"\\u2F32\", \"\\u5E72\", \"\\u2F33\", \"\\u5E7A\", \"\\u2F34\", \"\\u5E7F\", \"\\u2F35\", \"\\u5EF4\", \"\\u2F36\", \"\\u5EFE\", \"\\u2F37\", \"\\u5F0B\", \"\\u2F38\", \"\\u5F13\", \"\\u2F39\", \"\\u5F50\", \"\\u2F3A\", \"\\u5F61\", \"\\u2F3B\", \"\\u5F73\", \"\\u2F3C\", \"\\u5FC3\", \"\\u2F3D\", \"\\u6208\", \"\\u2F3E\", \"\\u6236\", \"\\u2F3F\", \"\\u624B\", \"\\u2F40\", \"\\u652F\", \"\\u2F41\", \"\\u6534\", \"\\u2F42\", \"\\u6587\", \"\\u2F43\", \"\\u6597\", \"\\u2F44\", \"\\u65A4\", \"\\u2F45\", \"\\u65B9\", \"\\u2F46\", \"\\u65E0\", \"\\u2F47\", \"\\u65E5\", \"\\u2F48\", \"\\u66F0\", \"\\u2F49\", \"\\u6708\", \"\\u2F4A\", \"\\u6728\", \"\\u2F4B\", \"\\u6B20\", \"\\u2F4C\", \"\\u6B62\", \"\\u2F4D\", \"\\u6B79\", \"\\u2F4E\", \"\\u6BB3\", \"\\u2F4F\", \"\\u6BCB\", \"\\u2F50\", \"\\u6BD4\", \"\\u2F51\", \"\\u6BDB\", \"\\u2F52\", \"\\u6C0F\", \"\\u2F53\", \"\\u6C14\", \"\\u2F54\", \"\\u6C34\", \"\\u2F55\", \"\\u706B\", \"\\u2F56\", \"\\u722A\", \"\\u2F57\", \"\\u7236\", \"\\u2F58\", \"\\u723B\", \"\\u2F59\", \"\\u723F\", \"\\u2F5A\", \"\\u7247\", \"\\u2F5B\", \"\\u7259\", \"\\u2F5C\", \"\\u725B\", \"\\u2F5D\", \"\\u72AC\", \"\\u2F5E\", \"\\u7384\", \"\\u2F5F\", \"\\u7389\", \"\\u2F60\", \"\\u74DC\", \"\\u2F61\", \"\\u74E6\", \"\\u2F62\", \"\\u7518\", \"\\u2F63\", \"\\u751F\", \"\\u2F64\", \"\\u7528\", \"\\u2F65\", \"\\u7530\", \"\\u2F66\", \"\\u758B\", \"\\u2F67\", \"\\u7592\", \"\\u2F68\", \"\\u7676\", \"\\u2F69\", \"\\u767D\", \"\\u2F6A\", \"\\u76AE\", \"\\u2F6B\", \"\\u76BF\", \"\\u2F6C\", \"\\u76EE\", \"\\u2F6D\", \"\\u77DB\", \"\\u2F6E\", \"\\u77E2\", \"\\u2F6F\", \"\\u77F3\", \"\\u2F70\", \"\\u793A\", \"\\u2F71\", \"\\u79B8\", \"\\u2F72\", \"\\u79BE\", \"\\u2F73\", \"\\u7A74\", \"\\u2F74\", \"\\u7ACB\", \"\\u2F75\", \"\\u7AF9\", \"\\u2F76\", \"\\u7C73\", \"\\u2F77\", \"\\u7CF8\", \"\\u2F78\", \"\\u7F36\", \"\\u2F79\", \"\\u7F51\", \"\\u2F7A\", \"\\u7F8A\", \"\\u2F7B\", \"\\u7FBD\", \"\\u2F7C\", \"\\u8001\", \"\\u2F7D\", \"\\u800C\", \"\\u2F7E\", \"\\u8012\", \"\\u2F7F\", \"\\u8033\", \"\\u2F80\", \"\\u807F\", \"\\u2F81\", \"\\u8089\", \"\\u2F82\", \"\\u81E3\", \"\\u2F83\", \"\\u81EA\", \"\\u2F84\", \"\\u81F3\", \"\\u2F85\", \"\\u81FC\", \"\\u2F86\", \"\\u820C\", \"\\u2F87\", \"\\u821B\", \"\\u2F88\", \"\\u821F\", \"\\u2F89\", \"\\u826E\", \"\\u2F8A\", \"\\u8272\", \"\\u2F8B\", \"\\u8278\", \"\\u2F8C\", \"\\u864D\", \"\\u2F8D\", \"\\u866B\", \"\\u2F8E\", \"\\u8840\", \"\\u2F8F\", \"\\u884C\", \"\\u2F90\", \"\\u8863\", \"\\u2F91\", \"\\u897E\", \"\\u2F92\", \"\\u898B\", \"\\u2F93\", \"\\u89D2\", \"\\u2F94\", \"\\u8A00\", \"\\u2F95\", \"\\u8C37\", \"\\u2F96\", \"\\u8C46\", \"\\u2F97\", \"\\u8C55\", \"\\u2F98\", \"\\u8C78\", \"\\u2F99\", \"\\u8C9D\", \"\\u2F9A\", \"\\u8D64\", \"\\u2F9B\", \"\\u8D70\", \"\\u2F9C\", \"\\u8DB3\", \"\\u2F9D\", \"\\u8EAB\", \"\\u2F9E\", \"\\u8ECA\", \"\\u2F9F\", \"\\u8F9B\", \"\\u2FA0\", \"\\u8FB0\", \"\\u2FA1\", \"\\u8FB5\", \"\\u2FA2\", \"\\u9091\", \"\\u2FA3\", \"\\u9149\", \"\\u2FA4\", \"\\u91C6\", \"\\u2FA5\", \"\\u91CC\", \"\\u2FA6\", \"\\u91D1\", \"\\u2FA7\", \"\\u9577\", \"\\u2FA8\", \"\\u9580\", \"\\u2FA9\", \"\\u961C\", \"\\u2FAA\", \"\\u96B6\", \"\\u2FAB\", \"\\u96B9\", \"\\u2FAC\", \"\\u96E8\", \"\\u2FAD\", \"\\u9751\", \"\\u2FAE\", \"\\u975E\", \"\\u2FAF\", \"\\u9762\", \"\\u2FB0\", \"\\u9769\", \"\\u2FB1\", \"\\u97CB\", \"\\u2FB2\", \"\\u97ED\", \"\\u2FB3\", \"\\u97F3\", \"\\u2FB4\", \"\\u9801\", \"\\u2FB5\", \"\\u98A8\", \"\\u2FB6\", \"\\u98DB\", \"\\u2FB7\", \"\\u98DF\", \"\\u2FB8\", \"\\u9996\", \"\\u2FB9\", \"\\u9999\", \"\\u2FBA\", \"\\u99AC\", \"\\u2FBB\", \"\\u9AA8\", \"\\u2FBC\", \"\\u9AD8\", \"\\u2FBD\", \"\\u9ADF\", \"\\u2FBE\", \"\\u9B25\", \"\\u2FBF\", \"\\u9B2F\", \"\\u2FC0\", \"\\u9B32\", \"\\u2FC1\", \"\\u9B3C\", \"\\u2FC2\", \"\\u9B5A\", \"\\u2FC3\", \"\\u9CE5\", \"\\u2FC4\", \"\\u9E75\", \"\\u2FC5\", \"\\u9E7F\", \"\\u2FC6\", \"\\u9EA5\", \"\\u2FC7\", \"\\u9EBB\", \"\\u2FC8\", \"\\u9EC3\", \"\\u2FC9\", \"\\u9ECD\", \"\\u2FCA\", \"\\u9ED1\", \"\\u2FCB\", \"\\u9EF9\", \"\\u2FCC\", \"\\u9EFD\", \"\\u2FCD\", \"\\u9F0E\", \"\\u2FCE\", \"\\u9F13\", \"\\u2FCF\", \"\\u9F20\", \"\\u2FD0\", \"\\u9F3B\", \"\\u2FD1\", \"\\u9F4A\", \"\\u2FD2\", \"\\u9F52\", \"\\u2FD3\", \"\\u9F8D\", \"\\u2FD4\", \"\\u9F9C\", \"\\u2FD5\", \"\\u9FA0\", \"\\u3036\", \"\\u3012\", \"\\u3038\", \"\\u5341\", \"\\u3039\", \"\\u5344\", \"\\u303A\", \"\\u5345\", \"\\u309B\", \"\\u0020\\u3099\", \"\\u309C\", \"\\u0020\\u309A\", \"\\u3131\", \"\\u1100\", \"\\u3132\", \"\\u1101\", \"\\u3133\", \"\\u11AA\", \"\\u3134\", \"\\u1102\", \"\\u3135\", \"\\u11AC\", \"\\u3136\", \"\\u11AD\", \"\\u3137\", \"\\u1103\", \"\\u3138\", \"\\u1104\", \"\\u3139\", \"\\u1105\", \"\\u313A\", \"\\u11B0\", \"\\u313B\", \"\\u11B1\", \"\\u313C\", \"\\u11B2\", \"\\u313D\", \"\\u11B3\", \"\\u313E\", \"\\u11B4\", \"\\u313F\", \"\\u11B5\", \"\\u3140\", \"\\u111A\", \"\\u3141\", \"\\u1106\", \"\\u3142\", \"\\u1107\", \"\\u3143\", \"\\u1108\", \"\\u3144\", \"\\u1121\", \"\\u3145\", \"\\u1109\", \"\\u3146\", \"\\u110A\", \"\\u3147\", \"\\u110B\", \"\\u3148\", \"\\u110C\", \"\\u3149\", \"\\u110D\", \"\\u314A\", \"\\u110E\", \"\\u314B\", \"\\u110F\", \"\\u314C\", \"\\u1110\", \"\\u314D\", \"\\u1111\", \"\\u314E\", \"\\u1112\", \"\\u314F\", \"\\u1161\", \"\\u3150\", \"\\u1162\", \"\\u3151\", \"\\u1163\", \"\\u3152\", \"\\u1164\", \"\\u3153\", \"\\u1165\", \"\\u3154\", \"\\u1166\", \"\\u3155\", \"\\u1167\", \"\\u3156\", \"\\u1168\", \"\\u3157\", \"\\u1169\", \"\\u3158\", \"\\u116A\", \"\\u3159\", \"\\u116B\", \"\\u315A\", \"\\u116C\", \"\\u315B\", \"\\u116D\", \"\\u315C\", \"\\u116E\", \"\\u315D\", \"\\u116F\", \"\\u315E\", \"\\u1170\", \"\\u315F\", \"\\u1171\", \"\\u3160\", \"\\u1172\", \"\\u3161\", \"\\u1173\", \"\\u3162\", \"\\u1174\", \"\\u3163\", \"\\u1175\", \"\\u3164\", \"\\u1160\", \"\\u3165\", \"\\u1114\", \"\\u3166\", \"\\u1115\", \"\\u3167\", \"\\u11C7\", \"\\u3168\", \"\\u11C8\", \"\\u3169\", \"\\u11CC\", \"\\u316A\", \"\\u11CE\", \"\\u316B\", \"\\u11D3\", \"\\u316C\", \"\\u11D7\", \"\\u316D\", \"\\u11D9\", \"\\u316E\", \"\\u111C\", \"\\u316F\", \"\\u11DD\", \"\\u3170\", \"\\u11DF\", \"\\u3171\", \"\\u111D\", \"\\u3172\", \"\\u111E\", \"\\u3173\", \"\\u1120\", \"\\u3174\", \"\\u1122\", \"\\u3175\", \"\\u1123\", \"\\u3176\", \"\\u1127\", \"\\u3177\", \"\\u1129\", \"\\u3178\", \"\\u112B\", \"\\u3179\", \"\\u112C\", \"\\u317A\", \"\\u112D\", \"\\u317B\", \"\\u112E\", \"\\u317C\", \"\\u112F\", \"\\u317D\", \"\\u1132\", \"\\u317E\", \"\\u1136\", \"\\u317F\", \"\\u1140\", \"\\u3180\", \"\\u1147\", \"\\u3181\", \"\\u114C\", \"\\u3182\", \"\\u11F1\", \"\\u3183\", \"\\u11F2\", \"\\u3184\", \"\\u1157\", \"\\u3185\", \"\\u1158\", \"\\u3186\", \"\\u1159\", \"\\u3187\", \"\\u1184\", \"\\u3188\", \"\\u1185\", \"\\u3189\", \"\\u1188\", \"\\u318A\", \"\\u1191\", \"\\u318B\", \"\\u1192\", \"\\u318C\", \"\\u1194\", \"\\u318D\", \"\\u119E\", \"\\u318E\", \"\\u11A1\", \"\\u3200\", \"\\u0028\\u1100\\u0029\", \"\\u3201\", \"\\u0028\\u1102\\u0029\", \"\\u3202\", \"\\u0028\\u1103\\u0029\", \"\\u3203\", \"\\u0028\\u1105\\u0029\", \"\\u3204\", \"\\u0028\\u1106\\u0029\", \"\\u3205\", \"\\u0028\\u1107\\u0029\", \"\\u3206\", \"\\u0028\\u1109\\u0029\", \"\\u3207\", \"\\u0028\\u110B\\u0029\", \"\\u3208\", \"\\u0028\\u110C\\u0029\", \"\\u3209\", \"\\u0028\\u110E\\u0029\", \"\\u320A\", \"\\u0028\\u110F\\u0029\", \"\\u320B\", \"\\u0028\\u1110\\u0029\", \"\\u320C\", \"\\u0028\\u1111\\u0029\", \"\\u320D\", \"\\u0028\\u1112\\u0029\", \"\\u320E\", \"\\u0028\\u1100\\u1161\\u0029\", \"\\u320F\", \"\\u0028\\u1102\\u1161\\u0029\", \"\\u3210\", \"\\u0028\\u1103\\u1161\\u0029\", \"\\u3211\", \"\\u0028\\u1105\\u1161\\u0029\", \"\\u3212\", \"\\u0028\\u1106\\u1161\\u0029\", \"\\u3213\", \"\\u0028\\u1107\\u1161\\u0029\", \"\\u3214\", \"\\u0028\\u1109\\u1161\\u0029\", \"\\u3215\", \"\\u0028\\u110B\\u1161\\u0029\", \"\\u3216\", \"\\u0028\\u110C\\u1161\\u0029\", \"\\u3217\", \"\\u0028\\u110E\\u1161\\u0029\", \"\\u3218\", \"\\u0028\\u110F\\u1161\\u0029\", \"\\u3219\", \"\\u0028\\u1110\\u1161\\u0029\", \"\\u321A\", \"\\u0028\\u1111\\u1161\\u0029\", \"\\u321B\", \"\\u0028\\u1112\\u1161\\u0029\", \"\\u321C\", \"\\u0028\\u110C\\u116E\\u0029\", \"\\u321D\", \"\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029\", \"\\u321E\", \"\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029\", \"\\u3220\", \"\\u0028\\u4E00\\u0029\", \"\\u3221\", \"\\u0028\\u4E8C\\u0029\", \"\\u3222\", \"\\u0028\\u4E09\\u0029\", \"\\u3223\", \"\\u0028\\u56DB\\u0029\", \"\\u3224\", \"\\u0028\\u4E94\\u0029\", \"\\u3225\", \"\\u0028\\u516D\\u0029\", \"\\u3226\", \"\\u0028\\u4E03\\u0029\", \"\\u3227\", \"\\u0028\\u516B\\u0029\", \"\\u3228\", \"\\u0028\\u4E5D\\u0029\", \"\\u3229\", \"\\u0028\\u5341\\u0029\", \"\\u322A\", \"\\u0028\\u6708\\u0029\", \"\\u322B\", \"\\u0028\\u706B\\u0029\", \"\\u322C\", \"\\u0028\\u6C34\\u0029\", \"\\u322D\", \"\\u0028\\u6728\\u0029\", \"\\u322E\", \"\\u0028\\u91D1\\u0029\", \"\\u322F\", \"\\u0028\\u571F\\u0029\", \"\\u3230\", \"\\u0028\\u65E5\\u0029\", \"\\u3231\", \"\\u0028\\u682A\\u0029\", \"\\u3232\", \"\\u0028\\u6709\\u0029\", \"\\u3233\", \"\\u0028\\u793E\\u0029\", \"\\u3234\", \"\\u0028\\u540D\\u0029\", \"\\u3235\", \"\\u0028\\u7279\\u0029\", \"\\u3236\", \"\\u0028\\u8CA1\\u0029\", \"\\u3237\", \"\\u0028\\u795D\\u0029\", \"\\u3238\", \"\\u0028\\u52B4\\u0029\", \"\\u3239\", \"\\u0028\\u4EE3\\u0029\", \"\\u323A\", \"\\u0028\\u547C\\u0029\", \"\\u323B\", \"\\u0028\\u5B66\\u0029\", \"\\u323C\", \"\\u0028\\u76E3\\u0029\", \"\\u323D\", \"\\u0028\\u4F01\\u0029\", \"\\u323E\", \"\\u0028\\u8CC7\\u0029\", \"\\u323F\", \"\\u0028\\u5354\\u0029\", \"\\u3240\", \"\\u0028\\u796D\\u0029\", \"\\u3241\", \"\\u0028\\u4F11\\u0029\", \"\\u3242\", \"\\u0028\\u81EA\\u0029\", \"\\u3243\", \"\\u0028\\u81F3\\u0029\", \"\\u32C0\", \"\\u0031\\u6708\", \"\\u32C1\", \"\\u0032\\u6708\", \"\\u32C2\", \"\\u0033\\u6708\", \"\\u32C3\", \"\\u0034\\u6708\", \"\\u32C4\", \"\\u0035\\u6708\", \"\\u32C5\", \"\\u0036\\u6708\", \"\\u32C6\", \"\\u0037\\u6708\", \"\\u32C7\", \"\\u0038\\u6708\", \"\\u32C8\", \"\\u0039\\u6708\", \"\\u32C9\", \"\\u0031\\u0030\\u6708\", \"\\u32CA\", \"\\u0031\\u0031\\u6708\", \"\\u32CB\", \"\\u0031\\u0032\\u6708\", \"\\u3358\", \"\\u0030\\u70B9\", \"\\u3359\", \"\\u0031\\u70B9\", \"\\u335A\", \"\\u0032\\u70B9\", \"\\u335B\", \"\\u0033\\u70B9\", \"\\u335C\", \"\\u0034\\u70B9\", \"\\u335D\", \"\\u0035\\u70B9\", \"\\u335E\", \"\\u0036\\u70B9\", \"\\u335F\", \"\\u0037\\u70B9\", \"\\u3360\", \"\\u0038\\u70B9\", \"\\u3361\", \"\\u0039\\u70B9\", \"\\u3362\", \"\\u0031\\u0030\\u70B9\", \"\\u3363\", \"\\u0031\\u0031\\u70B9\", \"\\u3364\", \"\\u0031\\u0032\\u70B9\", \"\\u3365\", \"\\u0031\\u0033\\u70B9\", \"\\u3366\", \"\\u0031\\u0034\\u70B9\", \"\\u3367\", \"\\u0031\\u0035\\u70B9\", \"\\u3368\", \"\\u0031\\u0036\\u70B9\", \"\\u3369\", \"\\u0031\\u0037\\u70B9\", \"\\u336A\", \"\\u0031\\u0038\\u70B9\", \"\\u336B\", \"\\u0031\\u0039\\u70B9\", \"\\u336C\", \"\\u0032\\u0030\\u70B9\", \"\\u336D\", \"\\u0032\\u0031\\u70B9\", \"\\u336E\", \"\\u0032\\u0032\\u70B9\", \"\\u336F\", \"\\u0032\\u0033\\u70B9\", \"\\u3370\", \"\\u0032\\u0034\\u70B9\", \"\\u33E0\", \"\\u0031\\u65E5\", \"\\u33E1\", \"\\u0032\\u65E5\", \"\\u33E2\", \"\\u0033\\u65E5\", \"\\u33E3\", \"\\u0034\\u65E5\", \"\\u33E4\", \"\\u0035\\u65E5\", \"\\u33E5\", \"\\u0036\\u65E5\", \"\\u33E6\", \"\\u0037\\u65E5\", \"\\u33E7\", \"\\u0038\\u65E5\", \"\\u33E8\", \"\\u0039\\u65E5\", \"\\u33E9\", \"\\u0031\\u0030\\u65E5\", \"\\u33EA\", \"\\u0031\\u0031\\u65E5\", \"\\u33EB\", \"\\u0031\\u0032\\u65E5\", \"\\u33EC\", \"\\u0031\\u0033\\u65E5\", \"\\u33ED\", \"\\u0031\\u0034\\u65E5\", \"\\u33EE\", \"\\u0031\\u0035\\u65E5\", \"\\u33EF\", \"\\u0031\\u0036\\u65E5\", \"\\u33F0\", \"\\u0031\\u0037\\u65E5\", \"\\u33F1\", \"\\u0031\\u0038\\u65E5\", \"\\u33F2\", \"\\u0031\\u0039\\u65E5\", \"\\u33F3\", \"\\u0032\\u0030\\u65E5\", \"\\u33F4\", \"\\u0032\\u0031\\u65E5\", \"\\u33F5\", \"\\u0032\\u0032\\u65E5\", \"\\u33F6\", \"\\u0032\\u0033\\u65E5\", \"\\u33F7\", \"\\u0032\\u0034\\u65E5\", \"\\u33F8\", \"\\u0032\\u0035\\u65E5\", \"\\u33F9\", \"\\u0032\\u0036\\u65E5\", \"\\u33FA\", \"\\u0032\\u0037\\u65E5\", \"\\u33FB\", \"\\u0032\\u0038\\u65E5\", \"\\u33FC\", \"\\u0032\\u0039\\u65E5\", \"\\u33FD\", \"\\u0033\\u0030\\u65E5\", \"\\u33FE\", \"\\u0033\\u0031\\u65E5\", \"\\uFB00\", \"\\u0066\\u0066\", \"\\uFB01\", \"\\u0066\\u0069\", \"\\uFB02\", \"\\u0066\\u006C\", \"\\uFB03\", \"\\u0066\\u0066\\u0069\", \"\\uFB04\", \"\\u0066\\u0066\\u006C\", \"\\uFB05\", \"\\u017F\\u0074\", \"\\uFB06\", \"\\u0073\\u0074\", \"\\uFB13\", \"\\u0574\\u0576\", \"\\uFB14\", \"\\u0574\\u0565\", \"\\uFB15\", \"\\u0574\\u056B\", \"\\uFB16\", \"\\u057E\\u0576\", \"\\uFB17\", \"\\u0574\\u056D\", \"\\uFB4F\", \"\\u05D0\\u05DC\", \"\\uFB50\", \"\\u0671\", \"\\uFB51\", \"\\u0671\", \"\\uFB52\", \"\\u067B\", \"\\uFB53\", \"\\u067B\", \"\\uFB54\", \"\\u067B\", \"\\uFB55\", \"\\u067B\", \"\\uFB56\", \"\\u067E\", \"\\uFB57\", \"\\u067E\", \"\\uFB58\", \"\\u067E\", \"\\uFB59\", \"\\u067E\", \"\\uFB5A\", \"\\u0680\", \"\\uFB5B\", \"\\u0680\", \"\\uFB5C\", \"\\u0680\", \"\\uFB5D\", \"\\u0680\", \"\\uFB5E\", \"\\u067A\", \"\\uFB5F\", \"\\u067A\", \"\\uFB60\", \"\\u067A\", \"\\uFB61\", \"\\u067A\", \"\\uFB62\", \"\\u067F\", \"\\uFB63\", \"\\u067F\", \"\\uFB64\", \"\\u067F\", \"\\uFB65\", \"\\u067F\", \"\\uFB66\", \"\\u0679\", \"\\uFB67\", \"\\u0679\", \"\\uFB68\", \"\\u0679\", \"\\uFB69\", \"\\u0679\", \"\\uFB6A\", \"\\u06A4\", \"\\uFB6B\", \"\\u06A4\", \"\\uFB6C\", \"\\u06A4\", \"\\uFB6D\", \"\\u06A4\", \"\\uFB6E\", \"\\u06A6\", \"\\uFB6F\", \"\\u06A6\", \"\\uFB70\", \"\\u06A6\", \"\\uFB71\", \"\\u06A6\", \"\\uFB72\", \"\\u0684\", \"\\uFB73\", \"\\u0684\", \"\\uFB74\", \"\\u0684\", \"\\uFB75\", \"\\u0684\", \"\\uFB76\", \"\\u0683\", \"\\uFB77\", \"\\u0683\", \"\\uFB78\", \"\\u0683\", \"\\uFB79\", \"\\u0683\", \"\\uFB7A\", \"\\u0686\", \"\\uFB7B\", \"\\u0686\", \"\\uFB7C\", \"\\u0686\", \"\\uFB7D\", \"\\u0686\", \"\\uFB7E\", \"\\u0687\", \"\\uFB7F\", \"\\u0687\", \"\\uFB80\", \"\\u0687\", \"\\uFB81\", \"\\u0687\", \"\\uFB82\", \"\\u068D\", \"\\uFB83\", \"\\u068D\", \"\\uFB84\", \"\\u068C\", \"\\uFB85\", \"\\u068C\", \"\\uFB86\", \"\\u068E\", \"\\uFB87\", \"\\u068E\", \"\\uFB88\", \"\\u0688\", \"\\uFB89\", \"\\u0688\", \"\\uFB8A\", \"\\u0698\", \"\\uFB8B\", \"\\u0698\", \"\\uFB8C\", \"\\u0691\", \"\\uFB8D\", \"\\u0691\", \"\\uFB8E\", \"\\u06A9\", \"\\uFB8F\", \"\\u06A9\", \"\\uFB90\", \"\\u06A9\", \"\\uFB91\", \"\\u06A9\", \"\\uFB92\", \"\\u06AF\", \"\\uFB93\", \"\\u06AF\", \"\\uFB94\", \"\\u06AF\", \"\\uFB95\", \"\\u06AF\", \"\\uFB96\", \"\\u06B3\", \"\\uFB97\", \"\\u06B3\", \"\\uFB98\", \"\\u06B3\", \"\\uFB99\", \"\\u06B3\", \"\\uFB9A\", \"\\u06B1\", \"\\uFB9B\", \"\\u06B1\", \"\\uFB9C\", \"\\u06B1\", \"\\uFB9D\", \"\\u06B1\", \"\\uFB9E\", \"\\u06BA\", \"\\uFB9F\", \"\\u06BA\", \"\\uFBA0\", \"\\u06BB\", \"\\uFBA1\", \"\\u06BB\", \"\\uFBA2\", \"\\u06BB\", \"\\uFBA3\", \"\\u06BB\", \"\\uFBA4\", \"\\u06C0\", \"\\uFBA5\", \"\\u06C0\", \"\\uFBA6\", \"\\u06C1\", \"\\uFBA7\", \"\\u06C1\", \"\\uFBA8\", \"\\u06C1\", \"\\uFBA9\", \"\\u06C1\", \"\\uFBAA\", \"\\u06BE\", \"\\uFBAB\", \"\\u06BE\", \"\\uFBAC\", \"\\u06BE\", \"\\uFBAD\", \"\\u06BE\", \"\\uFBAE\", \"\\u06D2\", \"\\uFBAF\", \"\\u06D2\", \"\\uFBB0\", \"\\u06D3\", \"\\uFBB1\", \"\\u06D3\", \"\\uFBD3\", \"\\u06AD\", \"\\uFBD4\", \"\\u06AD\", \"\\uFBD5\", \"\\u06AD\", \"\\uFBD6\", \"\\u06AD\", \"\\uFBD7\", \"\\u06C7\", \"\\uFBD8\", \"\\u06C7\", \"\\uFBD9\", \"\\u06C6\", \"\\uFBDA\", \"\\u06C6\", \"\\uFBDB\", \"\\u06C8\", \"\\uFBDC\", \"\\u06C8\", \"\\uFBDD\", \"\\u0677\", \"\\uFBDE\", \"\\u06CB\", \"\\uFBDF\", \"\\u06CB\", \"\\uFBE0\", \"\\u06C5\", \"\\uFBE1\", \"\\u06C5\", \"\\uFBE2\", \"\\u06C9\", \"\\uFBE3\", \"\\u06C9\", \"\\uFBE4\", \"\\u06D0\", \"\\uFBE5\", \"\\u06D0\", \"\\uFBE6\", \"\\u06D0\", \"\\uFBE7\", \"\\u06D0\", \"\\uFBE8\", \"\\u0649\", \"\\uFBE9\", \"\\u0649\", \"\\uFBEA\", \"\\u0626\\u0627\", \"\\uFBEB\", \"\\u0626\\u0627\", \"\\uFBEC\", \"\\u0626\\u06D5\", \"\\uFBED\", \"\\u0626\\u06D5\", \"\\uFBEE\", \"\\u0626\\u0648\", \"\\uFBEF\", \"\\u0626\\u0648\", \"\\uFBF0\", \"\\u0626\\u06C7\", \"\\uFBF1\", \"\\u0626\\u06C7\", \"\\uFBF2\", \"\\u0626\\u06C6\", \"\\uFBF3\", \"\\u0626\\u06C6\", \"\\uFBF4\", \"\\u0626\\u06C8\", \"\\uFBF5\", \"\\u0626\\u06C8\", \"\\uFBF6\", \"\\u0626\\u06D0\", \"\\uFBF7\", \"\\u0626\\u06D0\", \"\\uFBF8\", \"\\u0626\\u06D0\", \"\\uFBF9\", \"\\u0626\\u0649\", \"\\uFBFA\", \"\\u0626\\u0649\", \"\\uFBFB\", \"\\u0626\\u0649\", \"\\uFBFC\", \"\\u06CC\", \"\\uFBFD\", \"\\u06CC\", \"\\uFBFE\", \"\\u06CC\", \"\\uFBFF\", \"\\u06CC\", \"\\uFC00\", \"\\u0626\\u062C\", \"\\uFC01\", \"\\u0626\\u062D\", \"\\uFC02\", \"\\u0626\\u0645\", \"\\uFC03\", \"\\u0626\\u0649\", \"\\uFC04\", \"\\u0626\\u064A\", \"\\uFC05\", \"\\u0628\\u062C\", \"\\uFC06\", \"\\u0628\\u062D\", \"\\uFC07\", \"\\u0628\\u062E\", \"\\uFC08\", \"\\u0628\\u0645\", \"\\uFC09\", \"\\u0628\\u0649\", \"\\uFC0A\", \"\\u0628\\u064A\", \"\\uFC0B\", \"\\u062A\\u062C\", \"\\uFC0C\", \"\\u062A\\u062D\", \"\\uFC0D\", \"\\u062A\\u062E\", \"\\uFC0E\", \"\\u062A\\u0645\", \"\\uFC0F\", \"\\u062A\\u0649\", \"\\uFC10\", \"\\u062A\\u064A\", \"\\uFC11\", \"\\u062B\\u062C\", \"\\uFC12\", \"\\u062B\\u0645\", \"\\uFC13\", \"\\u062B\\u0649\", \"\\uFC14\", \"\\u062B\\u064A\", \"\\uFC15\", \"\\u062C\\u062D\", \"\\uFC16\", \"\\u062C\\u0645\", \"\\uFC17\", \"\\u062D\\u062C\", \"\\uFC18\", \"\\u062D\\u0645\", \"\\uFC19\", \"\\u062E\\u062C\", \"\\uFC1A\", \"\\u062E\\u062D\", \"\\uFC1B\", \"\\u062E\\u0645\", \"\\uFC1C\", \"\\u0633\\u062C\", \"\\uFC1D\", \"\\u0633\\u062D\", \"\\uFC1E\", \"\\u0633\\u062E\", \"\\uFC1F\", \"\\u0633\\u0645\", \"\\uFC20\", \"\\u0635\\u062D\", \"\\uFC21\", \"\\u0635\\u0645\", \"\\uFC22\", \"\\u0636\\u062C\", \"\\uFC23\", \"\\u0636\\u062D\", \"\\uFC24\", \"\\u0636\\u062E\", \"\\uFC25\", \"\\u0636\\u0645\", \"\\uFC26\", \"\\u0637\\u062D\", \"\\uFC27\", \"\\u0637\\u0645\", \"\\uFC28\", \"\\u0638\\u0645\", \"\\uFC29\", \"\\u0639\\u062C\", \"\\uFC2A\", \"\\u0639\\u0645\", \"\\uFC2B\", \"\\u063A\\u062C\", \"\\uFC2C\", \"\\u063A\\u0645\", \"\\uFC2D\", \"\\u0641\\u062C\", \"\\uFC2E\", \"\\u0641\\u062D\", \"\\uFC2F\", \"\\u0641\\u062E\", \"\\uFC30\", \"\\u0641\\u0645\", \"\\uFC31\", \"\\u0641\\u0649\", \"\\uFC32\", \"\\u0641\\u064A\", \"\\uFC33\", \"\\u0642\\u062D\", \"\\uFC34\", \"\\u0642\\u0645\", \"\\uFC35\", \"\\u0642\\u0649\", \"\\uFC36\", \"\\u0642\\u064A\", \"\\uFC37\", \"\\u0643\\u0627\", \"\\uFC38\", \"\\u0643\\u062C\", \"\\uFC39\", \"\\u0643\\u062D\", \"\\uFC3A\", \"\\u0643\\u062E\", \"\\uFC3B\", \"\\u0643\\u0644\", \"\\uFC3C\", \"\\u0643\\u0645\", \"\\uFC3D\", \"\\u0643\\u0649\", \"\\uFC3E\", \"\\u0643\\u064A\", \"\\uFC3F\", \"\\u0644\\u062C\", \"\\uFC40\", \"\\u0644\\u062D\", \"\\uFC41\", \"\\u0644\\u062E\", \"\\uFC42\", \"\\u0644\\u0645\", \"\\uFC43\", \"\\u0644\\u0649\", \"\\uFC44\", \"\\u0644\\u064A\", \"\\uFC45\", \"\\u0645\\u062C\", \"\\uFC46\", \"\\u0645\\u062D\", \"\\uFC47\", \"\\u0645\\u062E\", \"\\uFC48\", \"\\u0645\\u0645\", \"\\uFC49\", \"\\u0645\\u0649\", \"\\uFC4A\", \"\\u0645\\u064A\", \"\\uFC4B\", \"\\u0646\\u062C\", \"\\uFC4C\", \"\\u0646\\u062D\", \"\\uFC4D\", \"\\u0646\\u062E\", \"\\uFC4E\", \"\\u0646\\u0645\", \"\\uFC4F\", \"\\u0646\\u0649\", \"\\uFC50\", \"\\u0646\\u064A\", \"\\uFC51\", \"\\u0647\\u062C\", \"\\uFC52\", \"\\u0647\\u0645\", \"\\uFC53\", \"\\u0647\\u0649\", \"\\uFC54\", \"\\u0647\\u064A\", \"\\uFC55\", \"\\u064A\\u062C\", \"\\uFC56\", \"\\u064A\\u062D\", \"\\uFC57\", \"\\u064A\\u062E\", \"\\uFC58\", \"\\u064A\\u0645\", \"\\uFC59\", \"\\u064A\\u0649\", \"\\uFC5A\", \"\\u064A\\u064A\", \"\\uFC5B\", \"\\u0630\\u0670\", \"\\uFC5C\", \"\\u0631\\u0670\", \"\\uFC5D\", \"\\u0649\\u0670\", \"\\uFC5E\", \"\\u0020\\u064C\\u0651\", \"\\uFC5F\", \"\\u0020\\u064D\\u0651\", \"\\uFC60\", \"\\u0020\\u064E\\u0651\", \"\\uFC61\", \"\\u0020\\u064F\\u0651\", \"\\uFC62\", \"\\u0020\\u0650\\u0651\", \"\\uFC63\", \"\\u0020\\u0651\\u0670\", \"\\uFC64\", \"\\u0626\\u0631\", \"\\uFC65\", \"\\u0626\\u0632\", \"\\uFC66\", \"\\u0626\\u0645\", \"\\uFC67\", \"\\u0626\\u0646\", \"\\uFC68\", \"\\u0626\\u0649\", \"\\uFC69\", \"\\u0626\\u064A\", \"\\uFC6A\", \"\\u0628\\u0631\", \"\\uFC6B\", \"\\u0628\\u0632\", \"\\uFC6C\", \"\\u0628\\u0645\", \"\\uFC6D\", \"\\u0628\\u0646\", \"\\uFC6E\", \"\\u0628\\u0649\", \"\\uFC6F\", \"\\u0628\\u064A\", \"\\uFC70\", \"\\u062A\\u0631\", \"\\uFC71\", \"\\u062A\\u0632\", \"\\uFC72\", \"\\u062A\\u0645\", \"\\uFC73\", \"\\u062A\\u0646\", \"\\uFC74\", \"\\u062A\\u0649\", \"\\uFC75\", \"\\u062A\\u064A\", \"\\uFC76\", \"\\u062B\\u0631\", \"\\uFC77\", \"\\u062B\\u0632\", \"\\uFC78\", \"\\u062B\\u0645\", \"\\uFC79\", \"\\u062B\\u0646\", \"\\uFC7A\", \"\\u062B\\u0649\", \"\\uFC7B\", \"\\u062B\\u064A\", \"\\uFC7C\", \"\\u0641\\u0649\", \"\\uFC7D\", \"\\u0641\\u064A\", \"\\uFC7E\", \"\\u0642\\u0649\", \"\\uFC7F\", \"\\u0642\\u064A\", \"\\uFC80\", \"\\u0643\\u0627\", \"\\uFC81\", \"\\u0643\\u0644\", \"\\uFC82\", \"\\u0643\\u0645\", \"\\uFC83\", \"\\u0643\\u0649\", \"\\uFC84\", \"\\u0643\\u064A\", \"\\uFC85\", \"\\u0644\\u0645\", \"\\uFC86\", \"\\u0644\\u0649\", \"\\uFC87\", \"\\u0644\\u064A\", \"\\uFC88\", \"\\u0645\\u0627\", \"\\uFC89\", \"\\u0645\\u0645\", \"\\uFC8A\", \"\\u0646\\u0631\", \"\\uFC8B\", \"\\u0646\\u0632\", \"\\uFC8C\", \"\\u0646\\u0645\", \"\\uFC8D\", \"\\u0646\\u0646\", \"\\uFC8E\", \"\\u0646\\u0649\", \"\\uFC8F\", \"\\u0646\\u064A\", \"\\uFC90\", \"\\u0649\\u0670\", \"\\uFC91\", \"\\u064A\\u0631\", \"\\uFC92\", \"\\u064A\\u0632\", \"\\uFC93\", \"\\u064A\\u0645\", \"\\uFC94\", \"\\u064A\\u0646\", \"\\uFC95\", \"\\u064A\\u0649\", \"\\uFC96\", \"\\u064A\\u064A\", \"\\uFC97\", \"\\u0626\\u062C\", \"\\uFC98\", \"\\u0626\\u062D\", \"\\uFC99\", \"\\u0626\\u062E\", \"\\uFC9A\", \"\\u0626\\u0645\", \"\\uFC9B\", \"\\u0626\\u0647\", \"\\uFC9C\", \"\\u0628\\u062C\", \"\\uFC9D\", \"\\u0628\\u062D\", \"\\uFC9E\", \"\\u0628\\u062E\", \"\\uFC9F\", \"\\u0628\\u0645\", \"\\uFCA0\", \"\\u0628\\u0647\", \"\\uFCA1\", \"\\u062A\\u062C\", \"\\uFCA2\", \"\\u062A\\u062D\", \"\\uFCA3\", \"\\u062A\\u062E\", \"\\uFCA4\", \"\\u062A\\u0645\", \"\\uFCA5\", \"\\u062A\\u0647\", \"\\uFCA6\", \"\\u062B\\u0645\", \"\\uFCA7\", \"\\u062C\\u062D\", \"\\uFCA8\", \"\\u062C\\u0645\", \"\\uFCA9\", \"\\u062D\\u062C\", \"\\uFCAA\", \"\\u062D\\u0645\", \"\\uFCAB\", \"\\u062E\\u062C\", \"\\uFCAC\", \"\\u062E\\u0645\", \"\\uFCAD\", \"\\u0633\\u062C\", \"\\uFCAE\", \"\\u0633\\u062D\", \"\\uFCAF\", \"\\u0633\\u062E\", \"\\uFCB0\", \"\\u0633\\u0645\", \"\\uFCB1\", \"\\u0635\\u062D\", \"\\uFCB2\", \"\\u0635\\u062E\", \"\\uFCB3\", \"\\u0635\\u0645\", \"\\uFCB4\", \"\\u0636\\u062C\", \"\\uFCB5\", \"\\u0636\\u062D\", \"\\uFCB6\", \"\\u0636\\u062E\", \"\\uFCB7\", \"\\u0636\\u0645\", \"\\uFCB8\", \"\\u0637\\u062D\", \"\\uFCB9\", \"\\u0638\\u0645\", \"\\uFCBA\", \"\\u0639\\u062C\", \"\\uFCBB\", \"\\u0639\\u0645\", \"\\uFCBC\", \"\\u063A\\u062C\", \"\\uFCBD\", \"\\u063A\\u0645\", \"\\uFCBE\", \"\\u0641\\u062C\", \"\\uFCBF\", \"\\u0641\\u062D\", \"\\uFCC0\", \"\\u0641\\u062E\", \"\\uFCC1\", \"\\u0641\\u0645\", \"\\uFCC2\", \"\\u0642\\u062D\", \"\\uFCC3\", \"\\u0642\\u0645\", \"\\uFCC4\", \"\\u0643\\u062C\", \"\\uFCC5\", \"\\u0643\\u062D\", \"\\uFCC6\", \"\\u0643\\u062E\", \"\\uFCC7\", \"\\u0643\\u0644\", \"\\uFCC8\", \"\\u0643\\u0645\", \"\\uFCC9\", \"\\u0644\\u062C\", \"\\uFCCA\", \"\\u0644\\u062D\", \"\\uFCCB\", \"\\u0644\\u062E\", \"\\uFCCC\", \"\\u0644\\u0645\", \"\\uFCCD\", \"\\u0644\\u0647\", \"\\uFCCE\", \"\\u0645\\u062C\", \"\\uFCCF\", \"\\u0645\\u062D\", \"\\uFCD0\", \"\\u0645\\u062E\", \"\\uFCD1\", \"\\u0645\\u0645\", \"\\uFCD2\", \"\\u0646\\u062C\", \"\\uFCD3\", \"\\u0646\\u062D\", \"\\uFCD4\", \"\\u0646\\u062E\", \"\\uFCD5\", \"\\u0646\\u0645\", \"\\uFCD6\", \"\\u0646\\u0647\", \"\\uFCD7\", \"\\u0647\\u062C\", \"\\uFCD8\", \"\\u0647\\u0645\", \"\\uFCD9\", \"\\u0647\\u0670\", \"\\uFCDA\", \"\\u064A\\u062C\", \"\\uFCDB\", \"\\u064A\\u062D\", \"\\uFCDC\", \"\\u064A\\u062E\", \"\\uFCDD\", \"\\u064A\\u0645\", \"\\uFCDE\", \"\\u064A\\u0647\", \"\\uFCDF\", \"\\u0626\\u0645\", \"\\uFCE0\", \"\\u0626\\u0647\", \"\\uFCE1\", \"\\u0628\\u0645\", \"\\uFCE2\", \"\\u0628\\u0647\", \"\\uFCE3\", \"\\u062A\\u0645\", \"\\uFCE4\", \"\\u062A\\u0647\", \"\\uFCE5\", \"\\u062B\\u0645\", \"\\uFCE6\", \"\\u062B\\u0647\", \"\\uFCE7\", \"\\u0633\\u0645\", \"\\uFCE8\", \"\\u0633\\u0647\", \"\\uFCE9\", \"\\u0634\\u0645\", \"\\uFCEA\", \"\\u0634\\u0647\", \"\\uFCEB\", \"\\u0643\\u0644\", \"\\uFCEC\", \"\\u0643\\u0645\", \"\\uFCED\", \"\\u0644\\u0645\", \"\\uFCEE\", \"\\u0646\\u0645\", \"\\uFCEF\", \"\\u0646\\u0647\", \"\\uFCF0\", \"\\u064A\\u0645\", \"\\uFCF1\", \"\\u064A\\u0647\", \"\\uFCF2\", \"\\u0640\\u064E\\u0651\", \"\\uFCF3\", \"\\u0640\\u064F\\u0651\", \"\\uFCF4\", \"\\u0640\\u0650\\u0651\", \"\\uFCF5\", \"\\u0637\\u0649\", \"\\uFCF6\", \"\\u0637\\u064A\", \"\\uFCF7\", \"\\u0639\\u0649\", \"\\uFCF8\", \"\\u0639\\u064A\", \"\\uFCF9\", \"\\u063A\\u0649\", \"\\uFCFA\", \"\\u063A\\u064A\", \"\\uFCFB\", \"\\u0633\\u0649\", \"\\uFCFC\", \"\\u0633\\u064A\", \"\\uFCFD\", \"\\u0634\\u0649\", \"\\uFCFE\", \"\\u0634\\u064A\", \"\\uFCFF\", \"\\u062D\\u0649\", \"\\uFD00\", \"\\u062D\\u064A\", \"\\uFD01\", \"\\u062C\\u0649\", \"\\uFD02\", \"\\u062C\\u064A\", \"\\uFD03\", \"\\u062E\\u0649\", \"\\uFD04\", \"\\u062E\\u064A\", \"\\uFD05\", \"\\u0635\\u0649\", \"\\uFD06\", \"\\u0635\\u064A\", \"\\uFD07\", \"\\u0636\\u0649\", \"\\uFD08\", \"\\u0636\\u064A\", \"\\uFD09\", \"\\u0634\\u062C\", \"\\uFD0A\", \"\\u0634\\u062D\", \"\\uFD0B\", \"\\u0634\\u062E\", \"\\uFD0C\", \"\\u0634\\u0645\", \"\\uFD0D\", \"\\u0634\\u0631\", \"\\uFD0E\", \"\\u0633\\u0631\", \"\\uFD0F\", \"\\u0635\\u0631\", \"\\uFD10\", \"\\u0636\\u0631\", \"\\uFD11\", \"\\u0637\\u0649\", \"\\uFD12\", \"\\u0637\\u064A\", \"\\uFD13\", \"\\u0639\\u0649\", \"\\uFD14\", \"\\u0639\\u064A\", \"\\uFD15\", \"\\u063A\\u0649\", \"\\uFD16\", \"\\u063A\\u064A\", \"\\uFD17\", \"\\u0633\\u0649\", \"\\uFD18\", \"\\u0633\\u064A\", \"\\uFD19\", \"\\u0634\\u0649\", \"\\uFD1A\", \"\\u0634\\u064A\", \"\\uFD1B\", \"\\u062D\\u0649\", \"\\uFD1C\", \"\\u062D\\u064A\", \"\\uFD1D\", \"\\u062C\\u0649\", \"\\uFD1E\", \"\\u062C\\u064A\", \"\\uFD1F\", \"\\u062E\\u0649\", \"\\uFD20\", \"\\u062E\\u064A\", \"\\uFD21\", \"\\u0635\\u0649\", \"\\uFD22\", \"\\u0635\\u064A\", \"\\uFD23\", \"\\u0636\\u0649\", \"\\uFD24\", \"\\u0636\\u064A\", \"\\uFD25\", \"\\u0634\\u062C\", \"\\uFD26\", \"\\u0634\\u062D\", \"\\uFD27\", \"\\u0634\\u062E\", \"\\uFD28\", \"\\u0634\\u0645\", \"\\uFD29\", \"\\u0634\\u0631\", \"\\uFD2A\", \"\\u0633\\u0631\", \"\\uFD2B\", \"\\u0635\\u0631\", \"\\uFD2C\", \"\\u0636\\u0631\", \"\\uFD2D\", \"\\u0634\\u062C\", \"\\uFD2E\", \"\\u0634\\u062D\", \"\\uFD2F\", \"\\u0634\\u062E\", \"\\uFD30\", \"\\u0634\\u0645\", \"\\uFD31\", \"\\u0633\\u0647\", \"\\uFD32\", \"\\u0634\\u0647\", \"\\uFD33\", \"\\u0637\\u0645\", \"\\uFD34\", \"\\u0633\\u062C\", \"\\uFD35\", \"\\u0633\\u062D\", \"\\uFD36\", \"\\u0633\\u062E\", \"\\uFD37\", \"\\u0634\\u062C\", \"\\uFD38\", \"\\u0634\\u062D\", \"\\uFD39\", \"\\u0634\\u062E\", \"\\uFD3A\", \"\\u0637\\u0645\", \"\\uFD3B\", \"\\u0638\\u0645\", \"\\uFD3C\", \"\\u0627\\u064B\", \"\\uFD3D\", \"\\u0627\\u064B\", \"\\uFD50\", \"\\u062A\\u062C\\u0645\", \"\\uFD51\", \"\\u062A\\u062D\\u062C\", \"\\uFD52\", \"\\u062A\\u062D\\u062C\", \"\\uFD53\", \"\\u062A\\u062D\\u0645\", \"\\uFD54\", \"\\u062A\\u062E\\u0645\", \"\\uFD55\", \"\\u062A\\u0645\\u062C\", \"\\uFD56\", \"\\u062A\\u0645\\u062D\", \"\\uFD57\", \"\\u062A\\u0645\\u062E\", \"\\uFD58\", \"\\u062C\\u0645\\u062D\", \"\\uFD59\", \"\\u062C\\u0645\\u062D\", \"\\uFD5A\", \"\\u062D\\u0645\\u064A\", \"\\uFD5B\", \"\\u062D\\u0645\\u0649\", \"\\uFD5C\", \"\\u0633\\u062D\\u062C\", \"\\uFD5D\", \"\\u0633\\u062C\\u062D\", \"\\uFD5E\", \"\\u0633\\u062C\\u0649\", \"\\uFD5F\", \"\\u0633\\u0645\\u062D\", \"\\uFD60\", \"\\u0633\\u0645\\u062D\", \"\\uFD61\", \"\\u0633\\u0645\\u062C\", \"\\uFD62\", \"\\u0633\\u0645\\u0645\", \"\\uFD63\", \"\\u0633\\u0645\\u0645\", \"\\uFD64\", \"\\u0635\\u062D\\u062D\", \"\\uFD65\", \"\\u0635\\u062D\\u062D\", \"\\uFD66\", \"\\u0635\\u0645\\u0645\", \"\\uFD67\", \"\\u0634\\u062D\\u0645\", \"\\uFD68\", \"\\u0634\\u062D\\u0645\", \"\\uFD69\", \"\\u0634\\u062C\\u064A\", \"\\uFD6A\", \"\\u0634\\u0645\\u062E\", \"\\uFD6B\", \"\\u0634\\u0645\\u062E\", \"\\uFD6C\", \"\\u0634\\u0645\\u0645\", \"\\uFD6D\", \"\\u0634\\u0645\\u0645\", \"\\uFD6E\", \"\\u0636\\u062D\\u0649\", \"\\uFD6F\", \"\\u0636\\u062E\\u0645\", \"\\uFD70\", \"\\u0636\\u062E\\u0645\", \"\\uFD71\", \"\\u0637\\u0645\\u062D\", \"\\uFD72\", \"\\u0637\\u0645\\u062D\", \"\\uFD73\", \"\\u0637\\u0645\\u0645\", \"\\uFD74\", \"\\u0637\\u0645\\u064A\", \"\\uFD75\", \"\\u0639\\u062C\\u0645\", \"\\uFD76\", \"\\u0639\\u0645\\u0645\", \"\\uFD77\", \"\\u0639\\u0645\\u0645\", \"\\uFD78\", \"\\u0639\\u0645\\u0649\", \"\\uFD79\", \"\\u063A\\u0645\\u0645\", \"\\uFD7A\", \"\\u063A\\u0645\\u064A\", \"\\uFD7B\", \"\\u063A\\u0645\\u0649\", \"\\uFD7C\", \"\\u0641\\u062E\\u0645\", \"\\uFD7D\", \"\\u0641\\u062E\\u0645\", \"\\uFD7E\", \"\\u0642\\u0645\\u062D\", \"\\uFD7F\", \"\\u0642\\u0645\\u0645\", \"\\uFD80\", \"\\u0644\\u062D\\u0645\", \"\\uFD81\", \"\\u0644\\u062D\\u064A\", \"\\uFD82\", \"\\u0644\\u062D\\u0649\", \"\\uFD83\", \"\\u0644\\u062C\\u062C\", \"\\uFD84\", \"\\u0644\\u062C\\u062C\", \"\\uFD85\", \"\\u0644\\u062E\\u0645\", \"\\uFD86\", \"\\u0644\\u062E\\u0645\", \"\\uFD87\", \"\\u0644\\u0645\\u062D\", \"\\uFD88\", \"\\u0644\\u0645\\u062D\", \"\\uFD89\", \"\\u0645\\u062D\\u062C\", \"\\uFD8A\", \"\\u0645\\u062D\\u0645\", \"\\uFD8B\", \"\\u0645\\u062D\\u064A\", \"\\uFD8C\", \"\\u0645\\u062C\\u062D\", \"\\uFD8D\", \"\\u0645\\u062C\\u0645\", \"\\uFD8E\", \"\\u0645\\u062E\\u062C\", \"\\uFD8F\", \"\\u0645\\u062E\\u0645\", \"\\uFD92\", \"\\u0645\\u062C\\u062E\", \"\\uFD93\", \"\\u0647\\u0645\\u062C\", \"\\uFD94\", \"\\u0647\\u0645\\u0645\", \"\\uFD95\", \"\\u0646\\u062D\\u0645\", \"\\uFD96\", \"\\u0646\\u062D\\u0649\", \"\\uFD97\", \"\\u0646\\u062C\\u0645\", \"\\uFD98\", \"\\u0646\\u062C\\u0645\", \"\\uFD99\", \"\\u0646\\u062C\\u0649\", \"\\uFD9A\", \"\\u0646\\u0645\\u064A\", \"\\uFD9B\", \"\\u0646\\u0645\\u0649\", \"\\uFD9C\", \"\\u064A\\u0645\\u0645\", \"\\uFD9D\", \"\\u064A\\u0645\\u0645\", \"\\uFD9E\", \"\\u0628\\u062E\\u064A\", \"\\uFD9F\", \"\\u062A\\u062C\\u064A\", \"\\uFDA0\", \"\\u062A\\u062C\\u0649\", \"\\uFDA1\", \"\\u062A\\u062E\\u064A\", \"\\uFDA2\", \"\\u062A\\u062E\\u0649\", \"\\uFDA3\", \"\\u062A\\u0645\\u064A\", \"\\uFDA4\", \"\\u062A\\u0645\\u0649\", \"\\uFDA5\", \"\\u062C\\u0645\\u064A\", \"\\uFDA6\", \"\\u062C\\u062D\\u0649\", \"\\uFDA7\", \"\\u062C\\u0645\\u0649\", \"\\uFDA8\", \"\\u0633\\u062E\\u0649\", \"\\uFDA9\", \"\\u0635\\u062D\\u064A\", \"\\uFDAA\", \"\\u0634\\u062D\\u064A\", \"\\uFDAB\", \"\\u0636\\u062D\\u064A\", \"\\uFDAC\", \"\\u0644\\u062C\\u064A\", \"\\uFDAD\", \"\\u0644\\u0645\\u064A\", \"\\uFDAE\", \"\\u064A\\u062D\\u064A\", \"\\uFDAF\", \"\\u064A\\u062C\\u064A\", \"\\uFDB0\", \"\\u064A\\u0645\\u064A\", \"\\uFDB1\", \"\\u0645\\u0645\\u064A\", \"\\uFDB2\", \"\\u0642\\u0645\\u064A\", \"\\uFDB3\", \"\\u0646\\u062D\\u064A\", \"\\uFDB4\", \"\\u0642\\u0645\\u062D\", \"\\uFDB5\", \"\\u0644\\u062D\\u0645\", \"\\uFDB6\", \"\\u0639\\u0645\\u064A\", \"\\uFDB7\", \"\\u0643\\u0645\\u064A\", \"\\uFDB8\", \"\\u0646\\u062C\\u062D\", \"\\uFDB9\", \"\\u0645\\u062E\\u064A\", \"\\uFDBA\", \"\\u0644\\u062C\\u0645\", \"\\uFDBB\", \"\\u0643\\u0645\\u0645\", \"\\uFDBC\", \"\\u0644\\u062C\\u0645\", \"\\uFDBD\", \"\\u0646\\u062C\\u062D\", \"\\uFDBE\", \"\\u062C\\u062D\\u064A\", \"\\uFDBF\", \"\\u062D\\u062C\\u064A\", \"\\uFDC0\", \"\\u0645\\u062C\\u064A\", \"\\uFDC1\", \"\\u0641\\u0645\\u064A\", \"\\uFDC2\", \"\\u0628\\u062D\\u064A\", \"\\uFDC3\", \"\\u0643\\u0645\\u0645\", \"\\uFDC4\", \"\\u0639\\u062C\\u0645\", \"\\uFDC5\", \"\\u0635\\u0645\\u0645\", \"\\uFDC6\", \"\\u0633\\u062E\\u064A\", \"\\uFDC7\", \"\\u0646\\u062C\\u064A\", \"\\uFE49\", \"\\u203E\", \"\\uFE4A\", \"\\u203E\", \"\\uFE4B\", \"\\u203E\", \"\\uFE4C\", \"\\u203E\", \"\\uFE4D\", \"\\u005F\", \"\\uFE4E\", \"\\u005F\", \"\\uFE4F\", \"\\u005F\", \"\\uFE80\", \"\\u0621\", \"\\uFE81\", \"\\u0622\", \"\\uFE82\", \"\\u0622\", \"\\uFE83\", \"\\u0623\", \"\\uFE84\", \"\\u0623\", \"\\uFE85\", \"\\u0624\", \"\\uFE86\", \"\\u0624\", \"\\uFE87\", \"\\u0625\", \"\\uFE88\", \"\\u0625\", \"\\uFE89\", \"\\u0626\", \"\\uFE8A\", \"\\u0626\", \"\\uFE8B\", \"\\u0626\", \"\\uFE8C\", \"\\u0626\", \"\\uFE8D\", \"\\u0627\", \"\\uFE8E\", \"\\u0627\", \"\\uFE8F\", \"\\u0628\", \"\\uFE90\", \"\\u0628\", \"\\uFE91\", \"\\u0628\", \"\\uFE92\", \"\\u0628\", \"\\uFE93\", \"\\u0629\", \"\\uFE94\", \"\\u0629\", \"\\uFE95\", \"\\u062A\", \"\\uFE96\", \"\\u062A\", \"\\uFE97\", \"\\u062A\", \"\\uFE98\", \"\\u062A\", \"\\uFE99\", \"\\u062B\", \"\\uFE9A\", \"\\u062B\", \"\\uFE9B\", \"\\u062B\", \"\\uFE9C\", \"\\u062B\", \"\\uFE9D\", \"\\u062C\", \"\\uFE9E\", \"\\u062C\", \"\\uFE9F\", \"\\u062C\", \"\\uFEA0\", \"\\u062C\", \"\\uFEA1\", \"\\u062D\", \"\\uFEA2\", \"\\u062D\", \"\\uFEA3\", \"\\u062D\", \"\\uFEA4\", \"\\u062D\", \"\\uFEA5\", \"\\u062E\", \"\\uFEA6\", \"\\u062E\", \"\\uFEA7\", \"\\u062E\", \"\\uFEA8\", \"\\u062E\", \"\\uFEA9\", \"\\u062F\", \"\\uFEAA\", \"\\u062F\", \"\\uFEAB\", \"\\u0630\", \"\\uFEAC\", \"\\u0630\", \"\\uFEAD\", \"\\u0631\", \"\\uFEAE\", \"\\u0631\", \"\\uFEAF\", \"\\u0632\", \"\\uFEB0\", \"\\u0632\", \"\\uFEB1\", \"\\u0633\", \"\\uFEB2\", \"\\u0633\", \"\\uFEB3\", \"\\u0633\", \"\\uFEB4\", \"\\u0633\", \"\\uFEB5\", \"\\u0634\", \"\\uFEB6\", \"\\u0634\", \"\\uFEB7\", \"\\u0634\", \"\\uFEB8\", \"\\u0634\", \"\\uFEB9\", \"\\u0635\", \"\\uFEBA\", \"\\u0635\", \"\\uFEBB\", \"\\u0635\", \"\\uFEBC\", \"\\u0635\", \"\\uFEBD\", \"\\u0636\", \"\\uFEBE\", \"\\u0636\", \"\\uFEBF\", \"\\u0636\", \"\\uFEC0\", \"\\u0636\", \"\\uFEC1\", \"\\u0637\", \"\\uFEC2\", \"\\u0637\", \"\\uFEC3\", \"\\u0637\", \"\\uFEC4\", \"\\u0637\", \"\\uFEC5\", \"\\u0638\", \"\\uFEC6\", \"\\u0638\", \"\\uFEC7\", \"\\u0638\", \"\\uFEC8\", \"\\u0638\", \"\\uFEC9\", \"\\u0639\", \"\\uFECA\", \"\\u0639\", \"\\uFECB\", \"\\u0639\", \"\\uFECC\", \"\\u0639\", \"\\uFECD\", \"\\u063A\", \"\\uFECE\", \"\\u063A\", \"\\uFECF\", \"\\u063A\", \"\\uFED0\", \"\\u063A\", \"\\uFED1\", \"\\u0641\", \"\\uFED2\", \"\\u0641\", \"\\uFED3\", \"\\u0641\", \"\\uFED4\", \"\\u0641\", \"\\uFED5\", \"\\u0642\", \"\\uFED6\", \"\\u0642\", \"\\uFED7\", \"\\u0642\", \"\\uFED8\", \"\\u0642\", \"\\uFED9\", \"\\u0643\", \"\\uFEDA\", \"\\u0643\", \"\\uFEDB\", \"\\u0643\", \"\\uFEDC\", \"\\u0643\", \"\\uFEDD\", \"\\u0644\", \"\\uFEDE\", \"\\u0644\", \"\\uFEDF\", \"\\u0644\", \"\\uFEE0\", \"\\u0644\", \"\\uFEE1\", \"\\u0645\", \"\\uFEE2\", \"\\u0645\", \"\\uFEE3\", \"\\u0645\", \"\\uFEE4\", \"\\u0645\", \"\\uFEE5\", \"\\u0646\", \"\\uFEE6\", \"\\u0646\", \"\\uFEE7\", \"\\u0646\", \"\\uFEE8\", \"\\u0646\", \"\\uFEE9\", \"\\u0647\", \"\\uFEEA\", \"\\u0647\", \"\\uFEEB\", \"\\u0647\", \"\\uFEEC\", \"\\u0647\", \"\\uFEED\", \"\\u0648\", \"\\uFEEE\", \"\\u0648\", \"\\uFEEF\", \"\\u0649\", \"\\uFEF0\", \"\\u0649\", \"\\uFEF1\", \"\\u064A\", \"\\uFEF2\", \"\\u064A\", \"\\uFEF3\", \"\\u064A\", \"\\uFEF4\", \"\\u064A\", \"\\uFEF5\", \"\\u0644\\u0622\", \"\\uFEF6\", \"\\u0644\\u0622\", \"\\uFEF7\", \"\\u0644\\u0623\", \"\\uFEF8\", \"\\u0644\\u0623\", \"\\uFEF9\", \"\\u0644\\u0625\", \"\\uFEFA\", \"\\u0644\\u0625\", \"\\uFEFB\", \"\\u0644\\u0627\", \"\\uFEFC\", \"\\u0644\\u0627\" ]; }); function reverseIfRtl(chars) { const charsLength = chars.length; if (charsLength = 0; ii--) { buf.push(chars[ii]); } return buf.join(\"\"); } const SpecialCharRegExp = new RegExp(\"^(\\\\s)|(\\\\p{Mn})|(\\\\p{Cf})$\", \"u\"); const CategoryCache = new Map(); function getCharUnicodeCategory(char) { const cachedCategory = CategoryCache.get(char); if (cachedCategory) { return cachedCategory; } const groups = char.match(SpecialCharRegExp); const category = { isWhitespace: !!(groups && groups[1]), isZeroWidthDiacritic: !!(groups && groups[2]), isInvisibleFormatMark: !!(groups && groups[3]) }; CategoryCache.set(char, category); return category; } function clearUnicodeCaches() { CategoryCache.clear(); } /***/ }), /* 22 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.MarkupAnnotation = exports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = void 0; exports.getQuadPoints = getQuadPoints; var _util = __w_pdfjs_require__(2); var _core_utils = __w_pdfjs_require__(8); var _default_appearance = __w_pdfjs_require__(23); var _primitives = __w_pdfjs_require__(5); var _base_stream = __w_pdfjs_require__(9); var _bidi = __w_pdfjs_require__(60); var _catalog = __w_pdfjs_require__(65); var _colorspace = __w_pdfjs_require__(24); var _file_spec = __w_pdfjs_require__(68); var _object_loader = __w_pdfjs_require__(72); var _operator_list = __w_pdfjs_require__(62); var _stream = __w_pdfjs_require__(10); var _writer = __w_pdfjs_require__(73); var _factory = __w_pdfjs_require__(76); const LINE_FACTOR = 1.35; class AnnotationFactory { static create(xref, ref, pdfManager, idFactory, collectFields) { return Promise.all([pdfManager.ensureCatalog(\"acroForm\"), pdfManager.ensureCatalog(\"baseUrl\"), pdfManager.ensureDoc(\"xfaDatasets\"), collectFields ? this._getPageIndex(xref, ref, pdfManager) : -1]).then(([acroForm, baseUrl, xfaDatasets, pageIndex]) => pdfManager.ensure(this, \"_create\", [xref, ref, pdfManager, idFactory, acroForm, xfaDatasets, collectFields, pageIndex])); } static _create(xref, ref, pdfManager, idFactory, acroForm, xfaDatasets, collectFields, pageIndex = -1) { const dict = xref.fetchIfRef(ref); if (!(dict instanceof _primitives.Dict)) { return undefined; } const id = ref instanceof _primitives.Ref ? ref.toString() : `annot_${idFactory.createObjId()}`; let subtype = dict.get(\"Subtype\"); subtype = subtype instanceof _primitives.Name ? subtype.name : null; const parameters = { xref, ref, dict, subtype, id, pdfManager, acroForm: acroForm instanceof _primitives.Dict ? acroForm : _primitives.Dict.empty, xfaDatasets, collectFields, pageIndex }; switch (subtype) { case \"Link\": return new LinkAnnotation(parameters); case \"Text\": return new TextAnnotation(parameters); case \"Widget\": let fieldType = (0, _core_utils.getInheritableProperty)({ dict, key: \"FT\" }); fieldType = fieldType instanceof _primitives.Name ? fieldType.name : null; switch (fieldType) { case \"Tx\": return new TextWidgetAnnotation(parameters); case \"Btn\": return new ButtonWidgetAnnotation(parameters); case \"Ch\": return new ChoiceWidgetAnnotation(parameters); case \"Sig\": return new SignatureWidgetAnnotation(parameters); } (0, _util.warn)(`Unimplemented widget field type \"${fieldType}\", ` + \"falling back to base field type.\"); return new WidgetAnnotation(parameters); case \"Popup\": return new PopupAnnotation(parameters); case \"FreeText\": return new FreeTextAnnotation(parameters); case \"Line\": return new LineAnnotation(parameters); case \"Square\": return new SquareAnnotation(parameters); case \"Circle\": return new CircleAnnotation(parameters); case \"PolyLine\": return new PolylineAnnotation(parameters); case \"Polygon\": return new PolygonAnnotation(parameters); case \"Caret\": return new CaretAnnotation(parameters); case \"Ink\": return new InkAnnotation(parameters); case \"Highlight\": return new HighlightAnnotation(parameters); case \"Underline\": return new UnderlineAnnotation(parameters); case \"Squiggly\": return new SquigglyAnnotation(parameters); case \"StrikeOut\": return new StrikeOutAnnotation(parameters); case \"Stamp\": return new StampAnnotation(parameters); case \"FileAttachment\": return new FileAttachmentAnnotation(parameters); default: if (!collectFields) { if (!subtype) { (0, _util.warn)(\"Annotation is missing the required /Subtype.\"); } else { (0, _util.warn)(`Unimplemented annotation type \"${subtype}\", ` + \"falling back to base annotation.\"); } } return new Annotation(parameters); } } static async _getPageIndex(xref, ref, pdfManager) { try { const annotDict = await xref.fetchIfRefAsync(ref); if (!(annotDict instanceof _primitives.Dict)) { return -1; } const pageRef = annotDict.getRaw(\"P\"); if (!(pageRef instanceof _primitives.Ref)) { return -1; } const pageIndex = await pdfManager.ensureCatalog(\"getPageIndex\", [pageRef]); return pageIndex; } catch (ex) { (0, _util.warn)(`_getPageIndex: \"${ex}\".`); return -1; } } } exports.AnnotationFactory = AnnotationFactory; function getRgbColor(color, defaultColor = new Uint8ClampedArray(3)) { if (!Array.isArray(color)) { return defaultColor; } const rgbColor = defaultColor || new Uint8ClampedArray(3); switch (color.length) { case 0: return null; case 1: _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0); return rgbColor; case 3: _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0); return rgbColor; case 4: _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0); return rgbColor; default: return defaultColor; } } function getQuadPoints(dict, rect) { if (!dict.has(\"QuadPoints\")) { return null; } const quadPoints = dict.getArray(\"QuadPoints\"); if (!Array.isArray(quadPoints) || quadPoints.length === 0 || quadPoints.length % 8 > 0) { return null; } const quadPointsLists = []; for (let i = 0, ii = quadPoints.length / 8; i < ii; i++) { quadPointsLists.push([]); for (let j = i * 8, jj = i * 8 + 8; j < jj; j += 2) { const x = quadPoints[j]; const y = quadPoints[j + 1]; if (rect !== null && (x < rect[0] || x > rect[2] || y < rect[1] || y > rect[3])) { return null; } quadPointsLists[i].push({ x, y }); } } return quadPointsLists.map(quadPointsList => { const [minX, maxX, minY, maxY] = quadPointsList.reduce(([mX, MX, mY, MY], quadPoint) => [Math.min(mX, quadPoint.x), Math.max(MX, quadPoint.x), Math.min(mY, quadPoint.y), Math.max(MY, quadPoint.y)], [Number.MAX_VALUE, Number.MIN_VALUE, Number.MAX_VALUE, Number.MIN_VALUE]); return [{ x: minX, y: maxY }, { x: maxX, y: maxY }, { x: minX, y: minY }, { x: maxX, y: minY }]; }); } function getTransformMatrix(rect, bbox, matrix) { const [minX, minY, maxX, maxY] = _util.Util.getAxialAlignedBoundingBox(bbox, matrix); if (minX === maxX || minY === maxY) { return [1, 0, 0, 1, rect[0], rect[1]]; } const xRatio = (rect[2] - rect[0]) / (maxX - minX); const yRatio = (rect[3] - rect[1]) / (maxY - minY); return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio]; } class Annotation { constructor(params) { const dict = params.dict; this.setTitle(dict.get(\"T\")); this.setContents(dict.get(\"Contents\")); this.setModificationDate(dict.get(\"M\")); this.setFlags(dict.get(\"F\")); this.setRectangle(dict.getArray(\"Rect\")); this.setColor(dict.getArray(\"C\")); this.setBorderStyle(dict); this.setAppearance(dict); this.setBorderAndBackgroundColors(dict.get(\"MK\")); this._streams = []; if (this.appearance) { this._streams.push(this.appearance); } this.data = { annotationFlags: this.flags, borderStyle: this.borderStyle, color: this.color, backgroundColor: this.backgroundColor, borderColor: this.borderColor, contentsObj: this._contents, hasAppearance: !!this.appearance, id: params.id, modificationDate: this.modificationDate, rect: this.rectangle, subtype: params.subtype, hasOwnCanvas: false }; if (params.collectFields) { const kids = dict.get(\"Kids\"); if (Array.isArray(kids)) { const kidIds = []; for (const kid of kids) { if (kid instanceof _primitives.Ref) { kidIds.push(kid.toString()); } } if (kidIds.length !== 0) { this.data.kidIds = kidIds; } } this.data.actions = (0, _core_utils.collectActions)(params.xref, dict, _util.AnnotationActionEventType); this.data.fieldName = this._constructFieldName(dict); this.data.pageIndex = params.pageIndex; } this._fallbackFontDict = null; } _hasFlag(flags, flag) { return !!(flags & flag); } _isViewable(flags) { return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW); } _isPrintable(flags) { return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE); } mustBeViewed(annotationStorage) { const storageEntry = annotationStorage && annotationStorage.get(this.data.id); if (storageEntry && storageEntry.hidden !== undefined) { return !storageEntry.hidden; } return this.viewable && !this._hasFlag(this.flags, _util.AnnotationFlag.HIDDEN); } mustBePrinted(annotationStorage) { const storageEntry = annotationStorage && annotationStorage.get(this.data.id); if (storageEntry && storageEntry.print !== undefined) { return storageEntry.print; } return this.printable; } get viewable() { if (this.data.quadPoints === null) { return false; } if (this.flags === 0) { return true; } return this._isViewable(this.flags); } get printable() { if (this.data.quadPoints === null) { return false; } if (this.flags === 0) { return false; } return this._isPrintable(this.flags); } _parseStringHelper(data) { const str = typeof data === \"string\" ? (0, _util.stringToPDFString)(data) : \"\"; const dir = str && (0, _bidi.bidi)(str).dir === \"rtl\" ? \"rtl\" : \"ltr\"; return { str, dir }; } setTitle(title) { this._title = this._parseStringHelper(title); } setContents(contents) { this._contents = this._parseStringHelper(contents); } setModificationDate(modificationDate) { this.modificationDate = typeof modificationDate === \"string\" ? modificationDate : null; } setFlags(flags) { this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0; } hasFlag(flag) { return this._hasFlag(this.flags, flag); } setRectangle(rectangle) { if (Array.isArray(rectangle) && rectangle.length === 4) { this.rectangle = _util.Util.normalizeRect(rectangle); } else { this.rectangle = [0, 0, 0, 0]; } } setColor(color) { this.color = getRgbColor(color); } setBorderAndBackgroundColors(mk) { if (mk instanceof _primitives.Dict) { this.borderColor = getRgbColor(mk.getArray(\"BC\"), null); this.backgroundColor = getRgbColor(mk.getArray(\"BG\"), null); } else { this.borderColor = this.backgroundColor = null; } } setBorderStyle(borderStyle) { this.borderStyle = new AnnotationBorderStyle(); if (!(borderStyle instanceof _primitives.Dict)) { return; } if (borderStyle.has(\"BS\")) { const dict = borderStyle.get(\"BS\"); const dictType = dict.get(\"Type\"); if (!dictType || (0, _primitives.isName)(dictType, \"Border\")) { this.borderStyle.setWidth(dict.get(\"W\"), this.rectangle); this.borderStyle.setStyle(dict.get(\"S\")); this.borderStyle.setDashArray(dict.getArray(\"D\")); } } else if (borderStyle.has(\"Border\")) { const array = borderStyle.getArray(\"Border\"); if (Array.isArray(array) && array.length >= 3) { this.borderStyle.setHorizontalCornerRadius(array[0]); this.borderStyle.setVerticalCornerRadius(array[1]); this.borderStyle.setWidth(array[2], this.rectangle); if (array.length === 4) { this.borderStyle.setDashArray(array[3], true); } } } else { this.borderStyle.setWidth(0); } } setAppearance(dict) { this.appearance = null; const appearanceStates = dict.get(\"AP\"); if (!(appearanceStates instanceof _primitives.Dict)) { return; } const normalAppearanceState = appearanceStates.get(\"N\"); if (normalAppearanceState instanceof _base_stream.BaseStream) { this.appearance = normalAppearanceState; return; } if (!(normalAppearanceState instanceof _primitives.Dict)) { return; } const as = dict.get(\"AS\"); if (!(as instanceof _primitives.Name) || !normalAppearanceState.has(as.name)) { return; } this.appearance = normalAppearanceState.get(as.name); } loadResources(keys, appearance) { return appearance.dict.getAsync(\"Resources\").then(resources => { if (!resources) { return undefined; } const objectLoader = new _object_loader.ObjectLoader(resources, keys, resources.xref); return objectLoader.load().then(function () { return resources; }); }); } getOperatorList(evaluator, task, intent, renderForms, annotationStorage) { const data = this.data; let appearance = this.appearance; const isUsingOwnCanvas = data.hasOwnCanvas && intent & _util.RenderingIntentFlag.DISPLAY; if (!appearance) { if (!isUsingOwnCanvas) { return Promise.resolve(new _operator_list.OperatorList()); } appearance = new _stream.StringStream(\"\"); appearance.dict = new _primitives.Dict(); } const appearanceDict = appearance.dict; const resourcesPromise = this.loadResources([\"ExtGState\", \"ColorSpace\", \"Pattern\", \"Shading\", \"XObject\", \"Font\"], appearance); const bbox = appearanceDict.getArray(\"BBox\") || [0, 0, 1, 1]; const matrix = appearanceDict.getArray(\"Matrix\") || [1, 0, 0, 1, 0, 0]; const transform = getTransformMatrix(data.rect, bbox, matrix); return resourcesPromise.then(resources => { const opList = new _operator_list.OperatorList(); opList.addOp(_util.OPS.beginAnnotation, [data.id, data.rect, transform, matrix, isUsingOwnCanvas]); return evaluator.getOperatorList({ stream: appearance, task, resources, operatorList: opList, fallbackFontDict: this._fallbackFontDict }).then(() => { opList.addOp(_util.OPS.endAnnotation, []); this.reset(); return opList; }); }); } async save(evaluator, task, annotationStorage) { return null; } getFieldObject() { if (this.data.kidIds) { return { id: this.data.id, actions: this.data.actions, name: this.data.fieldName, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type: \"\", kidIds: this.data.kidIds, page: this.data.pageIndex }; } return null; } reset() { for (const stream of this._streams) { stream.reset(); } } _constructFieldName(dict) { if (!dict.has(\"T\") && !dict.has(\"Parent\")) { (0, _util.warn)(\"Unknown field name, falling back to empty field name.\"); return \"\"; } if (!dict.has(\"Parent\")) { return (0, _util.stringToPDFString)(dict.get(\"T\")); } const fieldName = []; if (dict.has(\"T\")) { fieldName.unshift((0, _util.stringToPDFString)(dict.get(\"T\"))); } let loopDict = dict; const visited = new _primitives.RefSet(); if (dict.objId) { visited.put(dict.objId); } while (loopDict.has(\"Parent\")) { loopDict = loopDict.get(\"Parent\"); if (!(loopDict instanceof _primitives.Dict) || loopDict.objId && visited.has(loopDict.objId)) { break; } if (loopDict.objId) { visited.put(loopDict.objId); } if (loopDict.has(\"T\")) { fieldName.unshift((0, _util.stringToPDFString)(loopDict.get(\"T\"))); } } return fieldName.join(\".\"); } } exports.Annotation = Annotation; class AnnotationBorderStyle { constructor() { this.width = 1; this.style = _util.AnnotationBorderStyleType.SOLID; this.dashArray = [3]; this.horizontalCornerRadius = 0; this.verticalCornerRadius = 0; } setWidth(width, rect = [0, 0, 0, 0]) { if (width instanceof _primitives.Name) { this.width = 0; return; } if (typeof width === \"number\") { if (width > 0) { const maxWidth = (rect[2] - rect[0]) / 2; const maxHeight = (rect[3] - rect[1]) / 2; if (maxWidth > 0 && maxHeight > 0 && (width > maxWidth || width > maxHeight)) { (0, _util.warn)(`AnnotationBorderStyle.setWidth - ignoring width: ${width}`); width = 1; } } this.width = width; } } setStyle(style) { if (!(style instanceof _primitives.Name)) { return; } switch (style.name) { case \"S\": this.style = _util.AnnotationBorderStyleType.SOLID; break; case \"D\": this.style = _util.AnnotationBorderStyleType.DASHED; break; case \"B\": this.style = _util.AnnotationBorderStyleType.BEVELED; break; case \"I\": this.style = _util.AnnotationBorderStyleType.INSET; break; case \"U\": this.style = _util.AnnotationBorderStyleType.UNDERLINE; break; default: break; } } setDashArray(dashArray, forceStyle = false) { if (Array.isArray(dashArray) && dashArray.length > 0) { let isValid = true; let allZeros = true; for (const element of dashArray) { const validNumber = +element >= 0; if (!validNumber) { isValid = false; break; } else if (element > 0) { allZeros = false; } } if (isValid && !allZeros) { this.dashArray = dashArray; if (forceStyle) { this.setStyle(_primitives.Name.get(\"D\")); } } else { this.width = 0; } } else if (dashArray) { this.width = 0; } } setHorizontalCornerRadius(radius) { if (Number.isInteger(radius)) { this.horizontalCornerRadius = radius; } } setVerticalCornerRadius(radius) { if (Number.isInteger(radius)) { this.verticalCornerRadius = radius; } } } exports.AnnotationBorderStyle = AnnotationBorderStyle; class MarkupAnnotation extends Annotation { constructor(parameters) { super(parameters); const dict = parameters.dict; if (dict.has(\"IRT\")) { const rawIRT = dict.getRaw(\"IRT\"); this.data.inReplyTo = rawIRT instanceof _primitives.Ref ? rawIRT.toString() : null; const rt = dict.get(\"RT\"); this.data.replyType = rt instanceof _primitives.Name ? rt.name : _util.AnnotationReplyType.REPLY; } if (this.data.replyType === _util.AnnotationReplyType.GROUP) { const parent = dict.get(\"IRT\"); this.setTitle(parent.get(\"T\")); this.data.titleObj = this._title; this.setContents(parent.get(\"Contents\")); this.data.contentsObj = this._contents; if (!parent.has(\"CreationDate\")) { this.data.creationDate = null; } else { this.setCreationDate(parent.get(\"CreationDate\")); this.data.creationDate = this.creationDate; } if (!parent.has(\"M\")) { this.data.modificationDate = null; } else { this.setModificationDate(parent.get(\"M\")); this.data.modificationDate = this.modificationDate; } this.data.hasPopup = parent.has(\"Popup\"); if (!parent.has(\"C\")) { this.data.color = null; } else { this.setColor(parent.getArray(\"C\")); this.data.color = this.color; } } else { this.data.titleObj = this._title; this.setCreationDate(dict.get(\"CreationDate\")); this.data.creationDate = this.creationDate; this.data.hasPopup = dict.has(\"Popup\"); if (!dict.has(\"C\")) { this.data.color = null; } } if (dict.has(\"RC\")) { this.data.richText = _factory.XFAFactory.getRichTextAsHtml(dict.get(\"RC\")); } } setCreationDate(creationDate) { this.creationDate = typeof creationDate === \"string\" ? creationDate : null; } _setDefaultAppearance({ xref, extra, strokeColor, fillColor, blendMode, strokeAlpha, fillAlpha, pointsCallback }) { let minX = Number.MAX_VALUE; let minY = Number.MAX_VALUE; let maxX = Number.MIN_VALUE; let maxY = Number.MIN_VALUE; const buffer = [\"q\"]; if (extra) { buffer.push(extra); } if (strokeColor) { buffer.push(`${strokeColor[0]} ${strokeColor[1]} ${strokeColor[2]} RG`); } if (fillColor) { buffer.push(`${fillColor[0]} ${fillColor[1]} ${fillColor[2]} rg`); } let pointsArray = this.data.quadPoints; if (!pointsArray) { pointsArray = [[{ x: this.rectangle[0], y: this.rectangle[3] }, { x: this.rectangle[2], y: this.rectangle[3] }, { x: this.rectangle[0], y: this.rectangle[1] }, { x: this.rectangle[2], y: this.rectangle[1] }]]; } for (const points of pointsArray) { const [mX, MX, mY, MY] = pointsCallback(buffer, points); minX = Math.min(minX, mX); maxX = Math.max(maxX, MX); minY = Math.min(minY, mY); maxY = Math.max(maxY, MY); } buffer.push(\"Q\"); const formDict = new _primitives.Dict(xref); const appearanceStreamDict = new _primitives.Dict(xref); appearanceStreamDict.set(\"Subtype\", _primitives.Name.get(\"Form\")); const appearanceStream = new _stream.StringStream(buffer.join(\" \")); appearanceStream.dict = appearanceStreamDict; formDict.set(\"Fm0\", appearanceStream); const gsDict = new _primitives.Dict(xref); if (blendMode) { gsDict.set(\"BM\", _primitives.Name.get(blendMode)); } if (typeof strokeAlpha === \"number\") { gsDict.set(\"CA\", strokeAlpha); } if (typeof fillAlpha === \"number\") { gsDict.set(\"ca\", fillAlpha); } const stateDict = new _primitives.Dict(xref); stateDict.set(\"GS0\", gsDict); const resources = new _primitives.Dict(xref); resources.set(\"ExtGState\", stateDict); resources.set(\"XObject\", formDict); const appearanceDict = new _primitives.Dict(xref); appearanceDict.set(\"Resources\", resources); const bbox = this.data.rect = [minX, minY, maxX, maxY]; appearanceDict.set(\"BBox\", bbox); this.appearance = new _stream.StringStream(\"/GS0 gs /Fm0 Do\"); this.appearance.dict = appearanceDict; this._streams.push(this.appearance, appearanceStream); } } exports.MarkupAnnotation = MarkupAnnotation; class WidgetAnnotation extends Annotation { constructor(params) { super(params); const dict = params.dict; const data = this.data; this.ref = params.ref; data.annotationType = _util.AnnotationType.WIDGET; if (data.fieldName === undefined) { data.fieldName = this._constructFieldName(dict); } if (data.actions === undefined) { data.actions = (0, _core_utils.collectActions)(params.xref, dict, _util.AnnotationActionEventType); } let fieldValue = (0, _core_utils.getInheritableProperty)({ dict, key: \"V\", getArray: true }); data.fieldValue = this._decodeFormValue(fieldValue); const defaultFieldValue = (0, _core_utils.getInheritableProperty)({ dict, key: \"DV\", getArray: true }); data.defaultFieldValue = this._decodeFormValue(defaultFieldValue); if (fieldValue === undefined && params.xfaDatasets) { const path = this._title.str; if (path) { this._hasValueFromXFA = true; data.fieldValue = fieldValue = params.xfaDatasets.getValue(path); } } if (fieldValue === undefined && data.defaultFieldValue !== null) { data.fieldValue = data.defaultFieldValue; } data.alternativeText = (0, _util.stringToPDFString)(dict.get(\"TU\") || \"\"); const defaultAppearance = (0, _core_utils.getInheritableProperty)({ dict, key: \"DA\" }) || params.acroForm.get(\"DA\"); this._defaultAppearance = typeof defaultAppearance === \"string\" ? defaultAppearance : \"\"; data.defaultAppearanceData = (0, _default_appearance.parseDefaultAppearance)(this._defaultAppearance); const fieldType = (0, _core_utils.getInheritableProperty)({ dict, key: \"FT\" }); data.fieldType = fieldType instanceof _primitives.Name ? fieldType.name : null; const localResources = (0, _core_utils.getInheritableProperty)({ dict, key: \"DR\" }); const acroFormResources = params.acroForm.get(\"DR\"); const appearanceResources = this.appearance && this.appearance.dict.get(\"Resources\"); this._fieldResources = { localResources, acroFormResources, appearanceResources, mergedResources: _primitives.Dict.merge({ xref: params.xref, dictArray: [localResources, appearanceResources, acroFormResources], mergeSubDicts: true }) }; data.fieldFlags = (0, _core_utils.getInheritableProperty)({ dict, key: \"Ff\" }); if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) { data.fieldFlags = 0; } data.readOnly = this.hasFieldFlag(_util.AnnotationFieldFlag.READONLY); data.hidden = this._hasFlag(data.annotationFlags, _util.AnnotationFlag.HIDDEN); } _decodeFormValue(formValue) { if (Array.isArray(formValue)) { return formValue.filter(item => typeof item === \"string\").map(item => (0, _util.stringToPDFString)(item)); } else if (formValue instanceof _primitives.Name) { return (0, _util.stringToPDFString)(formValue.name); } else if (typeof formValue === \"string\") { return (0, _util.stringToPDFString)(formValue); } return null; } hasFieldFlag(flag) { return !!(this.data.fieldFlags & flag); } getOperatorList(evaluator, task, intent, renderForms, annotationStorage) { if (renderForms && !(this instanceof SignatureWidgetAnnotation)) { return Promise.resolve(new _operator_list.OperatorList()); } if (!this._hasText) { return super.getOperatorList(evaluator, task, intent, renderForms, annotationStorage); } return this._getAppearance(evaluator, task, annotationStorage).then(content => { if (this.appearance && content === null) { return super.getOperatorList(evaluator, task, intent, renderForms, annotationStorage); } const operatorList = new _operator_list.OperatorList(); if (!this._defaultAppearance || content === null) { return operatorList; } const matrix = [1, 0, 0, 1, 0, 0]; const bbox = [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]]; const transform = getTransformMatrix(this.data.rect, bbox, matrix); operatorList.addOp(_util.OPS.beginAnnotation, [this.data.id, this.data.rect, transform, matrix]); const stream = new _stream.StringStream(content); return evaluator.getOperatorList({ stream, task, resources: this._fieldResources.mergedResources, operatorList }).then(function () { operatorList.addOp(_util.OPS.endAnnotation, []); return operatorList; }); }); } async save(evaluator, task, annotationStorage) { const storageEntry = annotationStorage ? annotationStorage.get(this.data.id) : undefined; let value = storageEntry && storageEntry.value; if (value === this.data.fieldValue || value === undefined) { if (!this._hasValueFromXFA) { return null; } value = value || this.data.fieldValue; } if (!this._hasValueFromXFA && Array.isArray(value) && Array.isArray(this.data.fieldValue) && value.length === this.data.fieldValue.length && value.every((x, i) => x === this.data.fieldValue[i])) { return null; } let appearance = await this._getAppearance(evaluator, task, annotationStorage); if (appearance === null) { return null; } const { xref } = evaluator; const dict = xref.fetchIfRef(this.ref); if (!(dict instanceof _primitives.Dict)) { return null; } const bbox = [0, 0, this.data.rect[2] - this.data.rect[0], this.data.rect[3] - this.data.rect[1]]; const xfa = { path: (0, _util.stringToPDFString)(dict.get(\"T\") || \"\"), value }; const newRef = xref.getNewRef(); const AP = new _primitives.Dict(xref); AP.set(\"N\", newRef); const encrypt = xref.encrypt; let originalTransform = null; let newTransform = null; if (encrypt) { originalTransform = encrypt.createCipherTransform(this.ref.num, this.ref.gen); newTransform = encrypt.createCipherTransform(newRef.num, newRef.gen); appearance = newTransform.encryptString(appearance); } const encoder = val => (0, _util.isAscii)(val) ? val : (0, _util.stringToUTF16BEString)(val); dict.set(\"V\", Array.isArray(value) ? value.map(encoder) : encoder(value)); dict.set(\"AP\", AP); dict.set(\"M\", `D:${(0, _util.getModificationDate)()}`); const appearanceDict = new _primitives.Dict(xref); appearanceDict.set(\"Length\", appearance.length); appearanceDict.set(\"Subtype\", _primitives.Name.get(\"Form\")); appearanceDict.set(\"Resources\", this._getSaveFieldResources(xref)); appearanceDict.set(\"BBox\", bbox); const bufferOriginal = [`${this.ref.num} ${this.ref.gen} obj `]; (0, _writer.writeDict)(dict, bufferOriginal, originalTransform); bufferOriginal.push(\" endobj \"); const bufferNew = [`${newRef.num} ${newRef.gen} obj `]; (0, _writer.writeDict)(appearanceDict, bufferNew, newTransform); bufferNew.push(\" stream \", appearance, \" endstream endobj \"); return [{ ref: this.ref, data: bufferOriginal.join(\"\"), xfa }, { ref: newRef, data: bufferNew.join(\"\"), xfa: null }]; } async _getAppearance(evaluator, task, annotationStorage) { const isPassword = this.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD); if (isPassword) { return null; } const storageEntry = annotationStorage ? annotationStorage.get(this.data.id) : undefined; let value = storageEntry && storageEntry.value; if (value === undefined) { if (!this._hasValueFromXFA || this.appearance) { return null; } value = this.data.fieldValue; if (!value) { return \"\"; } } value = value.trim(); if (value === \"\") { return \"\"; } let lineCount = -1; if (this.data.multiLine) { lineCount = value.split(/\\r |\\r| /).length; } const defaultPadding = 2; const hPadding = defaultPadding; const totalHeight = this.data.rect[3] - this.data.rect[1]; const totalWidth = this.data.rect[2] - this.data.rect[0]; if (!this._defaultAppearance) { this.data.defaultAppearanceData = (0, _default_appearance.parseDefaultAppearance)(this._defaultAppearance = \"/Helvetica 0 Tf 0 g\"); } const font = await this._getFontData(evaluator, task); const [defaultAppearance, fontSize] = this._computeFontSize(totalHeight - defaultPadding, totalWidth - 2 * hPadding, value, font, lineCount); let descent = font.descent; if (isNaN(descent)) { descent = 0; } const vPadding = defaultPadding + Math.abs(descent) * fontSize; const alignment = this.data.textAlignment; if (this.data.multiLine) { return this._getMultilineAppearance(defaultAppearance, value, font, fontSize, totalWidth, totalHeight, alignment, hPadding, vPadding); } const encodedString = font.encodeString(value).join(\"\"); if (this.data.comb) { return this._getCombAppearance(defaultAppearance, font, encodedString, totalWidth, hPadding, vPadding); } if (alignment === 0 || alignment > 2) { return \"/Tx BMC q BT \" + defaultAppearance + ` 1 0 0 1 ${hPadding} ${vPadding} Tm (${(0, _util.escapeString)(encodedString)}) Tj` + \" ET Q EMC\"; } const renderedText = this._renderText(encodedString, font, fontSize, totalWidth, alignment, hPadding, vPadding); return \"/Tx BMC q BT \" + defaultAppearance + ` 1 0 0 1 0 0 Tm ${renderedText}` + \" ET Q EMC\"; } async _getFontData(evaluator, task) { const operatorList = new _operator_list.OperatorList(); const initialState = { font: null, clone() { return this; } }; const { fontName, fontSize } = this.data.defaultAppearanceData; await evaluator.handleSetFont(this._fieldResources.mergedResources, [fontName && _primitives.Name.get(fontName), fontSize], null, operatorList, task, initialState, null); return initialState.font; } _getTextWidth(text, font) { return font.charsToGlyphs(text).reduce((width, glyph) => width + glyph.width, 0) / 1000; } _computeFontSize(height, width, text, font, lineCount) { let { fontSize } = this.data.defaultAppearanceData; if (!fontSize) { const roundWithTwoDigits = x => Math.floor(x * 100) / 100; if (lineCount === -1) { const textWidth = this._getTextWidth(text, font); fontSize = roundWithTwoDigits(Math.min(height / LINE_FACTOR, width / textWidth)); } else { const lines = text.split(/\\r ?| /); const cachedLines = []; for (const line of lines) { const encoded = font.encodeString(line).join(\"\"); const glyphs = font.charsToGlyphs(encoded); const positions = font.getCharPositions(encoded); cachedLines.push({ line: encoded, glyphs, positions }); } const isTooBig = fsize => { let totalHeight = 0; for (const cache of cachedLines) { const chunks = this._splitLine(null, font, fsize, width, cache); totalHeight += chunks.length * fsize; if (totalHeight > height) { return true; } } return false; }; fontSize = 12; let lineHeight = fontSize * LINE_FACTOR; let numberOfLines = Math.round(height / lineHeight); numberOfLines = Math.max(numberOfLines, lineCount); while (true) { lineHeight = height / numberOfLines; fontSize = roundWithTwoDigits(lineHeight / LINE_FACTOR); if (isTooBig(fontSize)) { numberOfLines++; continue; } break; } } const { fontName, fontColor } = this.data.defaultAppearanceData; this._defaultAppearance = (0, _default_appearance.createDefaultAppearance)({ fontSize, fontName, fontColor }); } return [this._defaultAppearance, fontSize]; } _renderText(text, font, fontSize, totalWidth, alignment, hPadding, vPadding) { let shift; if (alignment === 1) { const width = this._getTextWidth(text, font) * fontSize; shift = (totalWidth - width) / 2; } else if (alignment === 2) { const width = this._getTextWidth(text, font) * fontSize; shift = totalWidth - width - hPadding; } else { shift = hPadding; } shift = shift.toFixed(2); vPadding = vPadding.toFixed(2); return `${shift} ${vPadding} Td (${(0, _util.escapeString)(text)}) Tj`; } _getSaveFieldResources(xref) { const { localResources, appearanceResources, acroFormResources } = this._fieldResources; const fontName = this.data.defaultAppearanceData && this.data.defaultAppearanceData.fontName; if (!fontName) { return localResources || _primitives.Dict.empty; } for (const resources of [localResources, appearanceResources]) { if (resources instanceof _primitives.Dict) { const localFont = resources.get(\"Font\"); if (localFont instanceof _primitives.Dict && localFont.has(fontName)) { return resources; } } } if (acroFormResources instanceof _primitives.Dict) { const acroFormFont = acroFormResources.get(\"Font\"); if (acroFormFont instanceof _primitives.Dict && acroFormFont.has(fontName)) { const subFontDict = new _primitives.Dict(xref); subFontDict.set(fontName, acroFormFont.getRaw(fontName)); const subResourcesDict = new _primitives.Dict(xref); subResourcesDict.set(\"Font\", subFontDict); return _primitives.Dict.merge({ xref, dictArray: [subResourcesDict, localResources], mergeSubDicts: true }); } } return localResources || _primitives.Dict.empty; } getFieldObject() { return null; } } class TextWidgetAnnotation extends WidgetAnnotation { constructor(params) { super(params); this._hasText = true; const dict = params.dict; if (typeof this.data.fieldValue !== \"string\") { this.data.fieldValue = \"\"; } let alignment = (0, _core_utils.getInheritableProperty)({ dict, key: \"Q\" }); if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) { alignment = null; } this.data.textAlignment = alignment; let maximumLength = (0, _core_utils.getInheritableProperty)({ dict, key: \"MaxLen\" }); if (!Number.isInteger(maximumLength) || maximumLength < 0) { maximumLength = null; } this.data.maxLen = maximumLength; this.data.multiLine = this.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE); this.data.comb = this.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !this.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null; } _getCombAppearance(defaultAppearance, font, text, width, hPadding, vPadding) { const combWidth = (width / this.data.maxLen).toFixed(2); const buf = []; const positions = font.getCharPositions(text); for (const [start, end] of positions) { buf.push(`(${(0, _util.escapeString)(text.substring(start, end))}) Tj`); } const renderedComb = buf.join(` ${combWidth} 0 Td `); return \"/Tx BMC q BT \" + defaultAppearance + ` 1 0 0 1 ${hPadding} ${vPadding} Tm ${renderedComb}` + \" ET Q EMC\"; } _getMultilineAppearance(defaultAppearance, text, font, fontSize, width, height, alignment, hPadding, vPadding) { const lines = text.split(/\\r ?| /); const buf = []; const totalWidth = width - 2 * hPadding; for (const line of lines) { const chunks = this._splitLine(line, font, fontSize, totalWidth); for (const chunk of chunks) { const padding = buf.length === 0 ? hPadding : 0; buf.push(this._renderText(chunk, font, fontSize, width, alignment, padding, -fontSize)); } } const renderedText = buf.join(\" \"); return \"/Tx BMC q BT \" + defaultAppearance + ` 1 0 0 1 0 ${height} Tm ${renderedText}` + \" ET Q EMC\"; } _splitLine(line, font, fontSize, width, cache = {}) { line = cache.line || font.encodeString(line).join(\"\"); const glyphs = cache.glyphs || font.charsToGlyphs(line); if (glyphs.length width) { if (lastSpacePosInStringStart !== -1) { chunks.push(line.substring(startChunk, lastSpacePosInStringEnd)); startChunk = lastSpacePosInStringEnd; i = lastSpacePos + 1; lastSpacePosInStringStart = -1; currentWidth = 0; } else { chunks.push(line.substring(startChunk, start)); startChunk = start; currentWidth = glyphWidth; } } else { currentWidth += glyphWidth; } } } if (startChunk < line.length) { chunks.push(line.substring(startChunk, line.length)); } return chunks; } getFieldObject() { return { id: this.data.id, value: this.data.fieldValue, defaultValue: this.data.defaultFieldValue, multiline: this.data.multiLine, password: this.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD), charLimit: this.data.maxLen, comb: this.data.comb, editable: !this.data.readOnly, hidden: this.data.hidden, name: this.data.fieldName, rect: this.data.rect, actions: this.data.actions, page: this.data.pageIndex, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type: \"text\" }; } } class ButtonWidgetAnnotation extends WidgetAnnotation { constructor(params) { super(params); this.checkedAppearance = null; this.uncheckedAppearance = null; this.data.checkBox = !this.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON); this.data.radioButton = this.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON); this.data.pushButton = this.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON); this.data.isTooltipOnly = false; if (this.data.checkBox) { this._processCheckBox(params); } else if (this.data.radioButton) { this._processRadioButton(params); } else if (this.data.pushButton) { this.data.hasOwnCanvas = true; this._processPushButton(params); } else { (0, _util.warn)(\"Invalid field flags for button widget annotation\"); } } async getOperatorList(evaluator, task, intent, renderForms, annotationStorage) { if (this.data.pushButton) { return super.getOperatorList(evaluator, task, intent, false, annotationStorage); } let value = null; if (annotationStorage) { const storageEntry = annotationStorage.get(this.data.id); value = storageEntry ? storageEntry.value : null; } if (value === null) { if (this.appearance) { return super.getOperatorList(evaluator, task, intent, renderForms, annotationStorage); } if (this.data.checkBox) { value = this.data.fieldValue === this.data.exportValue; } else { value = this.data.fieldValue === this.data.buttonValue; } } const appearance = value ? this.checkedAppearance : this.uncheckedAppearance; if (appearance) { const savedAppearance = this.appearance; this.appearance = appearance; const operatorList = super.getOperatorList(evaluator, task, intent, renderForms, annotationStorage); this.appearance = savedAppearance; return operatorList; } return new _operator_list.OperatorList(); } async save(evaluator, task, annotationStorage) { if (this.data.checkBox) { return this._saveCheckbox(evaluator, task, annotationStorage); } if (this.data.radioButton) { return this._saveRadioButton(evaluator, task, annotationStorage); } return null; } async _saveCheckbox(evaluator, task, annotationStorage) { if (!annotationStorage) { return null; } const storageEntry = annotationStorage.get(this.data.id); const value = storageEntry && storageEntry.value; if (value === undefined) { return null; } const defaultValue = this.data.fieldValue === this.data.exportValue; if (defaultValue === value) { return null; } const dict = evaluator.xref.fetchIfRef(this.ref); if (!(dict instanceof _primitives.Dict)) { return null; } const xfa = { path: (0, _util.stringToPDFString)(dict.get(\"T\") || \"\"), value: value ? this.data.exportValue : \"\" }; const name = _primitives.Name.get(value ? this.data.exportValue : \"Off\"); dict.set(\"V\", name); dict.set(\"AS\", name); dict.set(\"M\", `D:${(0, _util.getModificationDate)()}`); const encrypt = evaluator.xref.encrypt; let originalTransform = null; if (encrypt) { originalTransform = encrypt.createCipherTransform(this.ref.num, this.ref.gen); } const buffer = [`${this.ref.num} ${this.ref.gen} obj `]; (0, _writer.writeDict)(dict, buffer, originalTransform); buffer.push(\" endobj \"); return [{ ref: this.ref, data: buffer.join(\"\"), xfa }]; } async _saveRadioButton(evaluator, task, annotationStorage) { if (!annotationStorage) { return null; } const storageEntry = annotationStorage.get(this.data.id); const value = storageEntry && storageEntry.value; if (value === undefined) { return null; } const defaultValue = this.data.fieldValue === this.data.buttonValue; if (defaultValue === value) { return null; } const dict = evaluator.xref.fetchIfRef(this.ref); if (!(dict instanceof _primitives.Dict)) { return null; } const xfa = { path: (0, _util.stringToPDFString)(dict.get(\"T\") || \"\"), value: value ? this.data.buttonValue : \"\" }; const name = _primitives.Name.get(value ? this.data.buttonValue : \"Off\"); let parentBuffer = null; const encrypt = evaluator.xref.encrypt; if (value) { if (this.parent instanceof _primitives.Ref) { const parent = evaluator.xref.fetch(this.parent); let parentTransform = null; if (encrypt) { parentTransform = encrypt.createCipherTransform(this.parent.num, this.parent.gen); } parent.set(\"V\", name); parentBuffer = [`${this.parent.num} ${this.parent.gen} obj `]; (0, _writer.writeDict)(parent, parentBuffer, parentTransform); parentBuffer.push(\" endobj \"); } else if (this.parent instanceof _primitives.Dict) { this.parent.set(\"V\", name); } } dict.set(\"AS\", name); dict.set(\"M\", `D:${(0, _util.getModificationDate)()}`); let originalTransform = null; if (encrypt) { originalTransform = encrypt.createCipherTransform(this.ref.num, this.ref.gen); } const buffer = [`${this.ref.num} ${this.ref.gen} obj `]; (0, _writer.writeDict)(dict, buffer, originalTransform); buffer.push(\" endobj \"); const newRefs = [{ ref: this.ref, data: buffer.join(\"\"), xfa }]; if (parentBuffer !== null) { newRefs.push({ ref: this.parent, data: parentBuffer.join(\"\"), xfa: null }); } return newRefs; } _getDefaultCheckedAppearance(params, type) { const width = this.data.rect[2] - this.data.rect[0]; const height = this.data.rect[3] - this.data.rect[1]; const bbox = [0, 0, width, height]; const FONT_RATIO = 0.8; const fontSize = Math.min(width, height) * FONT_RATIO; let metrics, char; if (type === \"check\") { metrics = { width: 0.755 * fontSize, height: 0.705 * fontSize }; char = \"\\x33\"; } else if (type === \"disc\") { metrics = { width: 0.791 * fontSize, height: 0.705 * fontSize }; char = \"\\x6C\"; } else { (0, _util.unreachable)(`_getDefaultCheckedAppearance - unsupported type: ${type}`); } const xShift = (width - metrics.width) / 2; const yShift = (height - metrics.height) / 2; const appearance = `q BT /PdfJsZaDb ${fontSize} Tf 0 g ${xShift} ${yShift} Td (${char}) Tj ET Q`; const appearanceStreamDict = new _primitives.Dict(params.xref); appearanceStreamDict.set(\"FormType\", 1); appearanceStreamDict.set(\"Subtype\", _primitives.Name.get(\"Form\")); appearanceStreamDict.set(\"Type\", _primitives.Name.get(\"XObject\")); appearanceStreamDict.set(\"BBox\", bbox); appearanceStreamDict.set(\"Matrix\", [1, 0, 0, 1, 0, 0]); appearanceStreamDict.set(\"Length\", appearance.length); const resources = new _primitives.Dict(params.xref); const font = new _primitives.Dict(params.xref); font.set(\"PdfJsZaDb\", this.fallbackFontDict); resources.set(\"Font\", font); appearanceStreamDict.set(\"Resources\", resources); this.checkedAppearance = new _stream.StringStream(appearance); this.checkedAppearance.dict = appearanceStreamDict; this._streams.push(this.checkedAppearance); } _processCheckBox(params) { const customAppearance = params.dict.get(\"AP\"); if (!(customAppearance instanceof _primitives.Dict)) { return; } const normalAppearance = customAppearance.get(\"N\"); if (!(normalAppearance instanceof _primitives.Dict)) { return; } const asValue = this._decodeFormValue(params.dict.get(\"AS\")); if (typeof asValue === \"string\") { this.data.fieldValue = asValue; } const yes = this.data.fieldValue !== null && this.data.fieldValue !== \"Off\" ? this.data.fieldValue : \"Yes\"; const exportValues = normalAppearance.getKeys(); if (exportValues.length === 0) { exportValues.push(\"Off\", yes); } else if (exportValues.length === 1) { if (exportValues[0] === \"Off\") { exportValues.push(yes); } else { exportValues.unshift(\"Off\"); } } else if (exportValues.includes(yes)) { exportValues.length = 0; exportValues.push(\"Off\", yes); } else { const otherYes = exportValues.find(v => v !== \"Off\"); exportValues.length = 0; exportValues.push(\"Off\", otherYes); } if (!exportValues.includes(this.data.fieldValue)) { this.data.fieldValue = \"Off\"; } this.data.exportValue = exportValues[1]; this.checkedAppearance = normalAppearance.get(this.data.exportValue) || null; this.uncheckedAppearance = normalAppearance.get(\"Off\") || null; if (this.checkedAppearance) { this._streams.push(this.checkedAppearance); } else { this._getDefaultCheckedAppearance(params, \"check\"); } if (this.uncheckedAppearance) { this._streams.push(this.uncheckedAppearance); } this._fallbackFontDict = this.fallbackFontDict; } _processRadioButton(params) { this.data.fieldValue = this.data.buttonValue = null; const fieldParent = params.dict.get(\"Parent\"); if (fieldParent instanceof _primitives.Dict) { this.parent = params.dict.getRaw(\"Parent\"); const fieldParentValue = fieldParent.get(\"V\"); if (fieldParentValue instanceof _primitives.Name) { this.data.fieldValue = this._decodeFormValue(fieldParentValue); } } const appearanceStates = params.dict.get(\"AP\"); if (!(appearanceStates instanceof _primitives.Dict)) { return; } const normalAppearance = appearanceStates.get(\"N\"); if (!(normalAppearance instanceof _primitives.Dict)) { return; } for (const key of normalAppearance.getKeys()) { if (key !== \"Off\") { this.data.buttonValue = this._decodeFormValue(key); break; } } this.checkedAppearance = normalAppearance.get(this.data.buttonValue) || null; this.uncheckedAppearance = normalAppearance.get(\"Off\") || null; if (this.checkedAppearance) { this._streams.push(this.checkedAppearance); } else { this._getDefaultCheckedAppearance(params, \"disc\"); } if (this.uncheckedAppearance) { this._streams.push(this.uncheckedAppearance); } this._fallbackFontDict = this.fallbackFontDict; } _processPushButton(params) { if (!params.dict.has(\"A\") && !params.dict.has(\"AA\") && !this.data.alternativeText) { (0, _util.warn)(\"Push buttons without action dictionaries are not supported\"); return; } this.data.isTooltipOnly = !params.dict.has(\"A\") && !params.dict.has(\"AA\"); _catalog.Catalog.parseDestDictionary({ destDict: params.dict, resultObj: this.data, docBaseUrl: params.pdfManager.docBaseUrl }); } getFieldObject() { let type = \"button\"; let exportValues; if (this.data.checkBox) { type = \"checkbox\"; exportValues = this.data.exportValue; } else if (this.data.radioButton) { type = \"radiobutton\"; exportValues = this.data.buttonValue; } return { id: this.data.id, value: this.data.fieldValue || \"Off\", defaultValue: this.data.defaultFieldValue, exportValues, editable: !this.data.readOnly, name: this.data.fieldName, rect: this.data.rect, hidden: this.data.hidden, actions: this.data.actions, page: this.data.pageIndex, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type }; } get fallbackFontDict() { const dict = new _primitives.Dict(); dict.set(\"BaseFont\", _primitives.Name.get(\"ZapfDingbats\")); dict.set(\"Type\", _primitives.Name.get(\"FallbackType\")); dict.set(\"Subtype\", _primitives.Name.get(\"FallbackType\")); dict.set(\"Encoding\", _primitives.Name.get(\"ZapfDingbatsEncoding\")); return (0, _util.shadow)(this, \"fallbackFontDict\", dict); } } class ChoiceWidgetAnnotation extends WidgetAnnotation { constructor(params) { super(params); this.data.options = []; const options = (0, _core_utils.getInheritableProperty)({ dict: params.dict, key: \"Opt\" }); if (Array.isArray(options)) { const xref = params.xref; for (let i = 0, ii = options.length; i < ii; i++) { const option = xref.fetchIfRef(options[i]); const isOptionArray = Array.isArray(option); this.data.options[i] = { exportValue: this._decodeFormValue(isOptionArray ? xref.fetchIfRef(option[0]) : option), displayValue: this._decodeFormValue(isOptionArray ? xref.fetchIfRef(option[1]) : option) }; } } if (typeof this.data.fieldValue === \"string\") { this.data.fieldValue = [this.data.fieldValue]; } else if (!this.data.fieldValue) { this.data.fieldValue = []; } this.data.combo = this.hasFieldFlag(_util.AnnotationFieldFlag.COMBO); this.data.multiSelect = this.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT); this._hasText = true; } getFieldObject() { const type = this.data.combo ? \"combobox\" : \"listbox\"; const value = this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null; return { id: this.data.id, value, defaultValue: this.data.defaultFieldValue, editable: !this.data.readOnly, name: this.data.fieldName, rect: this.data.rect, numItems: this.data.fieldValue.length, multipleSelection: this.data.multiSelect, hidden: this.data.hidden, actions: this.data.actions, items: this.data.options, page: this.data.pageIndex, strokeColor: this.data.borderColor, fillColor: this.data.backgroundColor, type }; } async _getAppearance(evaluator, task, annotationStorage) { if (this.data.combo) { return super._getAppearance(evaluator, task, annotationStorage); } if (!annotationStorage) { return null; } const storageEntry = annotationStorage.get(this.data.id); let exportedValue = storageEntry && storageEntry.value; if (exportedValue === undefined) { return null; } if (!Array.isArray(exportedValue)) { exportedValue = [exportedValue]; } const defaultPadding = 2; const hPadding = defaultPadding; const totalHeight = this.data.rect[3] - this.data.rect[1]; const totalWidth = this.data.rect[2] - this.data.rect[0]; const lineCount = this.data.options.length; const valueIndices = []; for (let i = 0; i < lineCount; i++) { const { exportValue } = this.data.options[i]; if (exportedValue.includes(exportValue)) { valueIndices.push(i); } } if (!this._defaultAppearance) { this.data.defaultAppearanceData = (0, _default_appearance.parseDefaultAppearance)(this._defaultAppearance = \"/Helvetica 0 Tf 0 g\"); } const font = await this._getFontData(evaluator, task); let defaultAppearance; let { fontSize } = this.data.defaultAppearanceData; if (!fontSize) { const lineHeight = (totalHeight - defaultPadding) / lineCount; let lineWidth = -1; let value; for (const { displayValue } of this.data.options) { const width = this._getTextWidth(displayValue); if (width > lineWidth) { lineWidth = width; value = displayValue; } } [defaultAppearance, fontSize] = this._computeFontSize(lineHeight, totalWidth - 2 * hPadding, value, font, -1); } else { defaultAppearance = this._defaultAppearance; } const lineHeight = fontSize * LINE_FACTOR; const vPadding = (lineHeight - fontSize) / 2; const numberOfVisibleLines = Math.floor(totalHeight / lineHeight); let firstIndex; if (valueIndices.length === 1) { const valuePosition = valueIndices[0]; const indexInPage = valuePosition % numberOfVisibleLines; firstIndex = valuePosition - indexInPage; } else { firstIndex = valueIndices.length ? valueIndices[0] : 0; } const end = Math.min(firstIndex + numberOfVisibleLines + 1, lineCount); const buf = [\"/Tx BMC q\", `1 1 ${totalWidth} ${totalHeight} re W n`]; if (valueIndices.length) { buf.push(\"0.600006 0.756866 0.854904 rg\"); for (const index of valueIndices) { if (firstIndex { buffer.push(`${lineCoordinates[0]} ${lineCoordinates[1]} m`, `${lineCoordinates[2]} ${lineCoordinates[3]} l`, \"S\"); return [points[0].x - borderWidth, points[1].x + borderWidth, points[3].y - borderWidth, points[1].y + borderWidth]; } }); } } } class SquareAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.SQUARE; if (!this.appearance) { const strokeColor = this.color ? Array.from(this.color).map(c => c / 255) : [0, 0, 0]; const strokeAlpha = parameters.dict.get(\"CA\"); let fillColor = null, interiorColor = parameters.dict.getArray(\"IC\"); if (interiorColor) { interiorColor = getRgbColor(interiorColor, null); fillColor = interiorColor ? Array.from(interiorColor).map(c => c / 255) : null; } const fillAlpha = fillColor ? strokeAlpha : null; if (this.borderStyle.width === 0 && !fillColor) { return; } this._setDefaultAppearance({ xref: parameters.xref, extra: `${this.borderStyle.width} w`, strokeColor, fillColor, strokeAlpha, fillAlpha, pointsCallback: (buffer, points) => { const x = points[2].x + this.borderStyle.width / 2; const y = points[2].y + this.borderStyle.width / 2; const width = points[3].x - points[2].x - this.borderStyle.width; const height = points[1].y - points[3].y - this.borderStyle.width; buffer.push(`${x} ${y} ${width} ${height} re`); if (fillColor) { buffer.push(\"B\"); } else { buffer.push(\"S\"); } return [points[0].x, points[1].x, points[3].y, points[1].y]; } }); } } } class CircleAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.CIRCLE; if (!this.appearance) { const strokeColor = this.color ? Array.from(this.color).map(c => c / 255) : [0, 0, 0]; const strokeAlpha = parameters.dict.get(\"CA\"); let fillColor = null; let interiorColor = parameters.dict.getArray(\"IC\"); if (interiorColor) { interiorColor = getRgbColor(interiorColor, null); fillColor = interiorColor ? Array.from(interiorColor).map(c => c / 255) : null; } const fillAlpha = fillColor ? strokeAlpha : null; if (this.borderStyle.width === 0 && !fillColor) { return; } const controlPointsDistance = 4 / 3 * Math.tan(Math.PI / (2 * 4)); this._setDefaultAppearance({ xref: parameters.xref, extra: `${this.borderStyle.width} w`, strokeColor, fillColor, strokeAlpha, fillAlpha, pointsCallback: (buffer, points) => { const x0 = points[0].x + this.borderStyle.width / 2; const y0 = points[0].y - this.borderStyle.width / 2; const x1 = points[3].x - this.borderStyle.width / 2; const y1 = points[3].y + this.borderStyle.width / 2; const xMid = x0 + (x1 - x0) / 2; const yMid = y0 + (y1 - y0) / 2; const xOffset = (x1 - x0) / 2 * controlPointsDistance; const yOffset = (y1 - y0) / 2 * controlPointsDistance; buffer.push(`${xMid} ${y1} m`, `${xMid + xOffset} ${y1} ${x1} ${yMid + yOffset} ${x1} ${yMid} c`, `${x1} ${yMid - yOffset} ${xMid + xOffset} ${y0} ${xMid} ${y0} c`, `${xMid - xOffset} ${y0} ${x0} ${yMid - yOffset} ${x0} ${yMid} c`, `${x0} ${yMid + yOffset} ${xMid - xOffset} ${y1} ${xMid} ${y1} c`, \"h\"); if (fillColor) { buffer.push(\"B\"); } else { buffer.push(\"S\"); } return [points[0].x, points[1].x, points[3].y, points[1].y]; } }); } } } class PolylineAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.POLYLINE; this.data.vertices = []; const rawVertices = parameters.dict.getArray(\"Vertices\"); if (!Array.isArray(rawVertices)) { return; } for (let i = 0, ii = rawVertices.length; i < ii; i += 2) { this.data.vertices.push({ x: rawVertices[i], y: rawVertices[i + 1] }); } if (!this.appearance) { const strokeColor = this.color ? Array.from(this.color).map(c => c / 255) : [0, 0, 0]; const strokeAlpha = parameters.dict.get(\"CA\"); const borderWidth = this.borderStyle.width || 1, borderAdjust = 2 * borderWidth; const bbox = [Infinity, Infinity, -Infinity, -Infinity]; for (const vertex of this.data.vertices) { bbox[0] = Math.min(bbox[0], vertex.x - borderAdjust); bbox[1] = Math.min(bbox[1], vertex.y - borderAdjust); bbox[2] = Math.max(bbox[2], vertex.x + borderAdjust); bbox[3] = Math.max(bbox[3], vertex.y + borderAdjust); } if (!_util.Util.intersect(this.rectangle, bbox)) { this.rectangle = bbox; } this._setDefaultAppearance({ xref: parameters.xref, extra: `${borderWidth} w`, strokeColor, strokeAlpha, pointsCallback: (buffer, points) => { const vertices = this.data.vertices; for (let i = 0, ii = vertices.length; i < ii; i++) { buffer.push(`${vertices[i].x} ${vertices[i].y} ${i === 0 ? \"m\" : \"l\"}`); } buffer.push(\"S\"); return [points[0].x, points[1].x, points[3].y, points[1].y]; } }); } } } class PolygonAnnotation extends PolylineAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.POLYGON; } } class CaretAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.CARET; } } class InkAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.INK; this.data.inkLists = []; const rawInkLists = parameters.dict.getArray(\"InkList\"); if (!Array.isArray(rawInkLists)) { return; } const xref = parameters.xref; for (let i = 0, ii = rawInkLists.length; i < ii; ++i) { this.data.inkLists.push([]); for (let j = 0, jj = rawInkLists[i].length; j < jj; j += 2) { this.data.inkLists[i].push({ x: xref.fetchIfRef(rawInkLists[i][j]), y: xref.fetchIfRef(rawInkLists[i][j + 1]) }); } } if (!this.appearance) { const strokeColor = this.color ? Array.from(this.color).map(c => c / 255) : [0, 0, 0]; const strokeAlpha = parameters.dict.get(\"CA\"); const borderWidth = this.borderStyle.width || 1, borderAdjust = 2 * borderWidth; const bbox = [Infinity, Infinity, -Infinity, -Infinity]; for (const inkLists of this.data.inkLists) { for (const vertex of inkLists) { bbox[0] = Math.min(bbox[0], vertex.x - borderAdjust); bbox[1] = Math.min(bbox[1], vertex.y - borderAdjust); bbox[2] = Math.max(bbox[2], vertex.x + borderAdjust); bbox[3] = Math.max(bbox[3], vertex.y + borderAdjust); } } if (!_util.Util.intersect(this.rectangle, bbox)) { this.rectangle = bbox; } this._setDefaultAppearance({ xref: parameters.xref, extra: `${borderWidth} w`, strokeColor, strokeAlpha, pointsCallback: (buffer, points) => { for (const inkList of this.data.inkLists) { for (let i = 0, ii = inkList.length; i < ii; i++) { buffer.push(`${inkList[i].x} ${inkList[i].y} ${i === 0 ? \"m\" : \"l\"}`); } buffer.push(\"S\"); } return [points[0].x, points[1].x, points[3].y, points[1].y]; } }); } } } class HighlightAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.HIGHLIGHT; const quadPoints = this.data.quadPoints = getQuadPoints(parameters.dict, null); if (quadPoints) { const resources = this.appearance && this.appearance.dict.get(\"Resources\"); if (!this.appearance || !(resources && resources.has(\"ExtGState\"))) { if (this.appearance) { (0, _util.warn)(\"HighlightAnnotation - ignoring built-in appearance stream.\"); } const fillColor = this.color ? Array.from(this.color).map(c => c / 255) : [1, 1, 0]; const fillAlpha = parameters.dict.get(\"CA\"); this._setDefaultAppearance({ xref: parameters.xref, fillColor, blendMode: \"Multiply\", fillAlpha, pointsCallback: (buffer, points) => { buffer.push(`${points[0].x} ${points[0].y} m`, `${points[1].x} ${points[1].y} l`, `${points[3].x} ${points[3].y} l`, `${points[2].x} ${points[2].y} l`, \"f\"); return [points[0].x, points[1].x, points[3].y, points[1].y]; } }); } } else { this.data.hasPopup = false; } } } class UnderlineAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.UNDERLINE; const quadPoints = this.data.quadPoints = getQuadPoints(parameters.dict, null); if (quadPoints) { if (!this.appearance) { const strokeColor = this.color ? Array.from(this.color).map(c => c / 255) : [0, 0, 0]; const strokeAlpha = parameters.dict.get(\"CA\"); this._setDefaultAppearance({ xref: parameters.xref, extra: \"[] 0 d 1 w\", strokeColor, strokeAlpha, pointsCallback: (buffer, points) => { buffer.push(`${points[2].x} ${points[2].y} m`, `${points[3].x} ${points[3].y} l`, \"S\"); return [points[0].x, points[1].x, points[3].y, points[1].y]; } }); } } else { this.data.hasPopup = false; } } } class SquigglyAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.SQUIGGLY; const quadPoints = this.data.quadPoints = getQuadPoints(parameters.dict, null); if (quadPoints) { if (!this.appearance) { const strokeColor = this.color ? Array.from(this.color).map(c => c / 255) : [0, 0, 0]; const strokeAlpha = parameters.dict.get(\"CA\"); this._setDefaultAppearance({ xref: parameters.xref, extra: \"[] 0 d 1 w\", strokeColor, strokeAlpha, pointsCallback: (buffer, points) => { const dy = (points[0].y - points[2].y) / 6; let shift = dy; let x = points[2].x; const y = points[2].y; const xEnd = points[3].x; buffer.push(`${x} ${y + shift} m`); do { x += 2; shift = shift === 0 ? dy : 0; buffer.push(`${x} ${y + shift} l`); } while (x < xEnd); buffer.push(\"S\"); return [points[2].x, xEnd, y - 2 * dy, y + 2 * dy]; } }); } } else { this.data.hasPopup = false; } } } class StrikeOutAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.STRIKEOUT; const quadPoints = this.data.quadPoints = getQuadPoints(parameters.dict, null); if (quadPoints) { if (!this.appearance) { const strokeColor = this.color ? Array.from(this.color).map(c => c / 255) : [0, 0, 0]; const strokeAlpha = parameters.dict.get(\"CA\"); this._setDefaultAppearance({ xref: parameters.xref, extra: \"[] 0 d 1 w\", strokeColor, strokeAlpha, pointsCallback: (buffer, points) => { buffer.push(`${(points[0].x + points[2].x) / 2} ` + `${(points[0].y + points[2].y) / 2} m`, `${(points[1].x + points[3].x) / 2} ` + `${(points[1].y + points[3].y) / 2} l`, \"S\"); return [points[0].x, points[1].x, points[3].y, points[1].y]; } }); } } else { this.data.hasPopup = false; } } } class StampAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); this.data.annotationType = _util.AnnotationType.STAMP; } } class FileAttachmentAnnotation extends MarkupAnnotation { constructor(parameters) { super(parameters); const file = new _file_spec.FileSpec(parameters.dict.get(\"FS\"), parameters.xref); this.data.annotationType = _util.AnnotationType.FILEATTACHMENT; this.data.file = file.serializable; } } /***/ }), /* 23 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.createDefaultAppearance = createDefaultAppearance; exports.parseDefaultAppearance = parseDefaultAppearance; var _util = __w_pdfjs_require__(2); var _colorspace = __w_pdfjs_require__(24); var _core_utils = __w_pdfjs_require__(8); var _evaluator = __w_pdfjs_require__(25); var _primitives = __w_pdfjs_require__(5); var _stream = __w_pdfjs_require__(10); class DefaultAppearanceEvaluator extends _evaluator.EvaluatorPreprocessor { constructor(str) { super(new _stream.StringStream(str)); } parse() { const operation = { fn: 0, args: [] }; const result = { fontSize: 0, fontName: \"\", fontColor: new Uint8ClampedArray(3) }; try { while (true) { operation.args.length = 0; if (!this.read(operation)) { break; } if (this.savedStatesDepth !== 0) { continue; } const { fn, args } = operation; switch (fn | 0) { case _util.OPS.setFont: const [fontName, fontSize] = args; if (fontName instanceof _primitives.Name) { result.fontName = fontName.name; } if (typeof fontSize === \"number\" && fontSize > 0) { result.fontSize = fontSize; } break; case _util.OPS.setFillRGBColor: _colorspace.ColorSpace.singletons.rgb.getRgbItem(args, 0, result.fontColor, 0); break; case _util.OPS.setFillGray: _colorspace.ColorSpace.singletons.gray.getRgbItem(args, 0, result.fontColor, 0); break; case _util.OPS.setFillColorSpace: _colorspace.ColorSpace.singletons.cmyk.getRgbItem(args, 0, result.fontColor, 0); break; } } } catch (reason) { (0, _util.warn)(`parseDefaultAppearance - ignoring errors: \"${reason}\".`); } return result; } } function parseDefaultAppearance(str) { return new DefaultAppearanceEvaluator(str).parse(); } function createDefaultAppearance({ fontSize, fontName, fontColor }) { let colorCmd; if (fontColor.every(c => c === 0)) { colorCmd = \"0 g\"; } else { colorCmd = Array.from(fontColor).map(c => (c / 255).toFixed(2)).join(\" \") + \" rg\"; } return `/${(0, _core_utils.escapePDFName)(fontName)} ${fontSize} Tf ${colorCmd}`; } /***/ }), /* 24 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ColorSpace = void 0; var _util = __w_pdfjs_require__(2); var _primitives = __w_pdfjs_require__(5); var _base_stream = __w_pdfjs_require__(9); var _core_utils = __w_pdfjs_require__(8); function resizeRgbImage(src, dest, w1, h1, w2, h2, alpha01) { const COMPONENTS = 3; alpha01 = alpha01 !== 1 ? 0 : alpha01; const xRatio = w1 / w2; const yRatio = h1 / h2; let newIndex = 0, oldIndex; const xScaled = new Uint16Array(w2); const w1Scanline = w1 * COMPONENTS; for (let i = 0; i < w2; i++) { xScaled[i] = Math.floor(i * xRatio) * COMPONENTS; } for (let i = 0; i < h2; i++) { const py = Math.floor(i * yRatio) * w1Scanline; for (let j = 0; j < w2; j++) { oldIndex = py + xScaled[j]; dest[newIndex++] = src[oldIndex++]; dest[newIndex++] = src[oldIndex++]; dest[newIndex++] = src[oldIndex++]; newIndex += alpha01; } } } class ColorSpace { constructor(name, numComps) { if (this.constructor === ColorSpace) { (0, _util.unreachable)(\"Cannot initialize ColorSpace.\"); } this.name = name; this.numComps = numComps; } getRgb(src, srcOffset) { const rgb = new Uint8ClampedArray(3); this.getRgbItem(src, srcOffset, rgb, 0); return rgb; } getRgbItem(src, srcOffset, dest, destOffset) { (0, _util.unreachable)(\"Should not call ColorSpace.getRgbItem\"); } getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) { (0, _util.unreachable)(\"Should not call ColorSpace.getRgbBuffer\"); } getOutputLength(inputLength, alpha01) { (0, _util.unreachable)(\"Should not call ColorSpace.getOutputLength\"); } isPassthrough(bits) { return false; } isDefaultDecode(decodeMap, bpc) { return ColorSpace.isDefaultDecode(decodeMap, this.numComps); } fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) { const count = originalWidth * originalHeight; let rgbBuf = null; const numComponentColors = 1 < bpc; const needsResizing = originalHeight !== height || originalWidth !== width; if (this.isPassthrough(bpc)) { rgbBuf = comps; } else if (this.numComps === 1 && count > numComponentColors && this.name !== \"DeviceGray\" && this.name !== \"DeviceRGB\") { const allColors = bpc { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.NamespaceSetUp = void 0; var _config = __w_pdfjs_require__(91); var _connection_set = __w_pdfjs_require__(92); var _datasets = __w_pdfjs_require__(93); var _locale_set = __w_pdfjs_require__(94); var _signature = __w_pdfjs_require__(95); var _stylesheet = __w_pdfjs_require__(96); var _template = __w_pdfjs_require__(82); var _xdp = __w_pdfjs_require__(97); var _xhtml = __w_pdfjs_require__(98); const NamespaceSetUp = { config: _config.ConfigNamespace, connection: _connection_set.ConnectionSetNamespace, datasets: _datasets.DatasetsNamespace, localeSet: _locale_set.LocaleSetNamespace, signature: _signature.SignatureNamespace, stylesheet: _stylesheet.StylesheetNamespace, template: _template.TemplateNamespace, xdp: _xdp.XdpNamespace, xhtml: _xhtml.XhtmlNamespace }; exports.NamespaceSetUp = NamespaceSetUp; /***/ }), /* 91 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ConfigNamespace = void 0; var _namespaces = __w_pdfjs_require__(79); var _xfa_object = __w_pdfjs_require__(77); var _utils = __w_pdfjs_require__(78); var _util = __w_pdfjs_require__(2); const CONFIG_NS_ID = _namespaces.NamespaceIds.config.id; class Acrobat extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"acrobat\", true); this.acrobat7 = null; this.autoSave = null; this.common = null; this.validate = null; this.validateApprovalSignatures = null; this.submitUrl = new _xfa_object.XFAObjectArray(); } } class Acrobat7 extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"acrobat7\", true); this.dynamicRender = null; } } class ADBE_JSConsole extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"ADBE_JSConsole\", [\"delegate\", \"Enable\", \"Disable\"]); } } class ADBE_JSDebugger extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"ADBE_JSDebugger\", [\"delegate\", \"Enable\", \"Disable\"]); } } class AddSilentPrint extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"addSilentPrint\"); } } class AddViewerPreferences extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"addViewerPreferences\"); } } class AdjustData extends _xfa_object.Option10 { constructor(attributes) { super(CONFIG_NS_ID, \"adjustData\"); } } class AdobeExtensionLevel extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"adobeExtensionLevel\", 0, n => n >= 1 && n n >= 1 && n x.includes(\":\")).map(x => x.split(\":\", 2))); } } class Cache extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"cache\", true); this.templateCache = null; } } class Change extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"change\"); } } class Common extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"common\", true); this.data = null; this.locale = null; this.localeSet = null; this.messaging = null; this.suppressBanner = null; this.template = null; this.validationMessaging = null; this.versionControl = null; this.log = new _xfa_object.XFAObjectArray(); } } class Compress extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"compress\"); this.scope = (0, _utils.getStringOption)(attributes.scope, [\"imageOnly\", \"document\"]); } } class CompressLogicalStructure extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"compressLogicalStructure\"); } } class CompressObjectStream extends _xfa_object.Option10 { constructor(attributes) { super(CONFIG_NS_ID, \"compressObjectStream\"); } } class Compression extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"compression\", true); this.compressLogicalStructure = null; this.compressObjectStream = null; this.level = null; this.type = null; } } class Config extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"config\", true); this.acrobat = null; this.present = null; this.trace = null; this.agent = new _xfa_object.XFAObjectArray(); } } class Conformance extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"conformance\", [\"A\", \"B\"]); } } class ContentCopy extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"contentCopy\"); } } class Copies extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"copies\", 1, n => n >= 1); } } class Creator extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"creator\"); } } class CurrentPage extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"currentPage\", 0, n => n >= 0); } } class Data extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"data\", true); this.adjustData = null; this.attributes = null; this.incrementalLoad = null; this.outputXSL = null; this.range = null; this.record = null; this.startNode = null; this.uri = null; this.window = null; this.xsl = null; this.excludeNS = new _xfa_object.XFAObjectArray(); this.transform = new _xfa_object.XFAObjectArray(); } } class Debug extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"debug\", true); this.uri = null; } } class DefaultTypeface extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"defaultTypeface\"); this.writingScript = (0, _utils.getStringOption)(attributes.writingScript, [\"*\", \"Arabic\", \"Cyrillic\", \"EastEuropeanRoman\", \"Greek\", \"Hebrew\", \"Japanese\", \"Korean\", \"Roman\", \"SimplifiedChinese\", \"Thai\", \"TraditionalChinese\", \"Vietnamese\"]); } } class Destination extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"destination\", [\"pdf\", \"pcl\", \"ps\", \"webClient\", \"zpl\"]); } } class DocumentAssembly extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"documentAssembly\"); } } class Driver extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"driver\", true); this.name = attributes.name ? attributes.name.trim() : \"\"; this.fontInfo = null; this.xdc = null; } } class DuplexOption extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"duplexOption\", [\"simplex\", \"duplexFlipLongEdge\", \"duplexFlipShortEdge\"]); } } class DynamicRender extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"dynamicRender\", [\"forbidden\", \"required\"]); } } class Embed extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"embed\"); } } class Encrypt extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"encrypt\"); } } class Encryption extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"encryption\", true); this.encrypt = null; this.encryptionLevel = null; this.permissions = null; } } class EncryptionLevel extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"encryptionLevel\", [\"40bit\", \"128bit\"]); } } class Enforce extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"enforce\"); } } class Equate extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"equate\"); this.force = (0, _utils.getInteger)({ data: attributes.force, defaultValue: 1, validate: n => n === 0 }); this.from = attributes.from || \"\"; this.to = attributes.to || \"\"; } } class EquateRange extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"equateRange\"); this.from = attributes.from || \"\"; this.to = attributes.to || \"\"; this._unicodeRange = attributes.unicodeRange || \"\"; } get unicodeRange() { const ranges = []; const unicodeRegex = /U\\+([0-9a-fA-F]+)/; const unicodeRange = this._unicodeRange; for (let range of unicodeRange.split(\",\").map(x => x.trim()).filter(x => !!x)) { range = range.split(\"-\", 2).map(x => { const found = x.match(unicodeRegex); if (!found) { return 0; } return parseInt(found[1], 16); }); if (range.length === 1) { range.push(range[0]); } ranges.push(range); } return (0, _util.shadow)(this, \"unicodeRange\", ranges); } } class Exclude extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"exclude\"); } [_xfa_object.$finalize]() { this[_xfa_object.$content] = this[_xfa_object.$content].trim().split(/\\s+/).filter(x => x && [\"calculate\", \"close\", \"enter\", \"exit\", \"initialize\", \"ready\", \"validate\"].includes(x)); } } class ExcludeNS extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"excludeNS\"); } } class FlipLabel extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"flipLabel\", [\"usePrinterSetting\", \"on\", \"off\"]); } } class FontInfo extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"fontInfo\", true); this.embed = null; this.map = null; this.subsetBelow = null; this.alwaysEmbed = new _xfa_object.XFAObjectArray(); this.defaultTypeface = new _xfa_object.XFAObjectArray(); this.neverEmbed = new _xfa_object.XFAObjectArray(); } } class FormFieldFilling extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"formFieldFilling\"); } } class GroupParent extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"groupParent\"); } } class IfEmpty extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"ifEmpty\", [\"dataValue\", \"dataGroup\", \"ignore\", \"remove\"]); } } class IncludeXDPContent extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"includeXDPContent\"); } } class IncrementalLoad extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"incrementalLoad\", [\"none\", \"forwardOnly\"]); } } class IncrementalMerge extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"incrementalMerge\"); } } class Interactive extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"interactive\"); } } class Jog extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"jog\", [\"usePrinterSetting\", \"none\", \"pageSet\"]); } } class LabelPrinter extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"labelPrinter\", true); this.name = (0, _utils.getStringOption)(attributes.name, [\"zpl\", \"dpl\", \"ipl\", \"tcpl\"]); this.batchOutput = null; this.flipLabel = null; this.fontInfo = null; this.xdc = null; } } class Layout extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"layout\", [\"paginate\", \"panel\"]); } } class Level extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"level\", 0, n => n > 0); } } class Linearized extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"linearized\"); } } class Locale extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"locale\"); } } class LocaleSet extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"localeSet\"); } } class Log extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"log\", true); this.mode = null; this.threshold = null; this.to = null; this.uri = null; } } class MapElement extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"map\", true); this.equate = new _xfa_object.XFAObjectArray(); this.equateRange = new _xfa_object.XFAObjectArray(); } } class MediumInfo extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"mediumInfo\", true); this.map = null; } } class Message extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"message\", true); this.msgId = null; this.severity = null; } } class Messaging extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"messaging\", true); this.message = new _xfa_object.XFAObjectArray(); } } class Mode extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"mode\", [\"append\", \"overwrite\"]); } } class ModifyAnnots extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"modifyAnnots\"); } } class MsgId extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"msgId\", 1, n => n >= 1); } } class NameAttr extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"nameAttr\"); } } class NeverEmbed extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"neverEmbed\"); } } class NumberOfCopies extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"numberOfCopies\", null, n => n >= 2 && n [\"config\", \"datasets\", \"template\", \"xfdf\", \"xslt\"].includes(x)); } } class PageOffset extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"pageOffset\"); this.x = (0, _utils.getInteger)({ data: attributes.x, defaultValue: \"useXDCSetting\", validate: n => true }); this.y = (0, _utils.getInteger)({ data: attributes.y, defaultValue: \"useXDCSetting\", validate: n => true }); } } class PageRange extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"pageRange\"); } [_xfa_object.$finalize]() { const numbers = this[_xfa_object.$content].trim().split(/\\s+/).map(x => parseInt(x, 10)); const ranges = []; for (let i = 0, ii = numbers.length; i < ii; i += 2) { ranges.push(numbers.slice(i, i + 2)); } this[_xfa_object.$content] = ranges; } } class Pagination extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"pagination\", [\"simplex\", \"duplexShortEdge\", \"duplexLongEdge\"]); } } class PaginationOverride extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"paginationOverride\", [\"none\", \"forceDuplex\", \"forceDuplexLongEdge\", \"forceDuplexShortEdge\", \"forceSimplex\"]); } } class Part extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"part\", 1, n => false); } } class Pcl extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"pcl\", true); this.name = attributes.name || \"\"; this.batchOutput = null; this.fontInfo = null; this.jog = null; this.mediumInfo = null; this.outputBin = null; this.pageOffset = null; this.staple = null; this.xdc = null; } } class Pdf extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"pdf\", true); this.name = attributes.name || \"\"; this.adobeExtensionLevel = null; this.batchOutput = null; this.compression = null; this.creator = null; this.encryption = null; this.fontInfo = null; this.interactive = null; this.linearized = null; this.openAction = null; this.pdfa = null; this.producer = null; this.renderPolicy = null; this.scriptModel = null; this.silentPrint = null; this.submitFormat = null; this.tagged = null; this.version = null; this.viewerPreferences = null; this.xdc = null; } } class Pdfa extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"pdfa\", true); this.amd = null; this.conformance = null; this.includeXDPContent = null; this.part = null; } } class Permissions extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"permissions\", true); this.accessibleContent = null; this.change = null; this.contentCopy = null; this.documentAssembly = null; this.formFieldFilling = null; this.modifyAnnots = null; this.plaintextMetadata = null; this.print = null; this.printHighQuality = null; } } class PickTrayByPDFSize extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"pickTrayByPDFSize\"); } } class Picture extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"picture\"); } } class PlaintextMetadata extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"plaintextMetadata\"); } } class Presence extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"presence\", [\"preserve\", \"dissolve\", \"dissolveStructure\", \"ignore\", \"remove\"]); } } class Present extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"present\", true); this.behaviorOverride = null; this.cache = null; this.common = null; this.copies = null; this.destination = null; this.incrementalMerge = null; this.layout = null; this.output = null; this.overprint = null; this.pagination = null; this.paginationOverride = null; this.script = null; this.validate = null; this.xdp = null; this.driver = new _xfa_object.XFAObjectArray(); this.labelPrinter = new _xfa_object.XFAObjectArray(); this.pcl = new _xfa_object.XFAObjectArray(); this.pdf = new _xfa_object.XFAObjectArray(); this.ps = new _xfa_object.XFAObjectArray(); this.submitUrl = new _xfa_object.XFAObjectArray(); this.webClient = new _xfa_object.XFAObjectArray(); this.zpl = new _xfa_object.XFAObjectArray(); } } class Print extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"print\"); } } class PrintHighQuality extends _xfa_object.Option01 { constructor(attributes) { super(CONFIG_NS_ID, \"printHighQuality\"); } } class PrintScaling extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"printScaling\", [\"appdefault\", \"noScaling\"]); } } class PrinterName extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"printerName\"); } } class Producer extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"producer\"); } } class Ps extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"ps\", true); this.name = attributes.name || \"\"; this.batchOutput = null; this.fontInfo = null; this.jog = null; this.mediumInfo = null; this.outputBin = null; this.staple = null; this.xdc = null; } } class Range extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"range\"); } [_xfa_object.$finalize]() { this[_xfa_object.$content] = this[_xfa_object.$content].trim().split(/\\s*,\\s*/, 2).map(range => range.split(\"-\").map(x => parseInt(x.trim(), 10))).filter(range => range.every(x => !isNaN(x))).map(range => { if (range.length === 1) { range.push(range[0]); } return range; }); } } class Record extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"record\"); } [_xfa_object.$finalize]() { this[_xfa_object.$content] = this[_xfa_object.$content].trim(); const n = parseInt(this[_xfa_object.$content], 10); if (!isNaN(n) && n >= 0) { this[_xfa_object.$content] = n; } } } class Relevant extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"relevant\"); } [_xfa_object.$finalize]() { this[_xfa_object.$content] = this[_xfa_object.$content].trim().split(/\\s+/); } } class Rename extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"rename\"); } [_xfa_object.$finalize]() { this[_xfa_object.$content] = this[_xfa_object.$content].trim(); if (this[_xfa_object.$content].toLowerCase().startsWith(\"xml\") || this[_xfa_object.$content].match(new RegExp(\"[\\\\p{L}_][\\\\p{L}\\\\d._\\\\p{M}-]*\", \"u\"))) { (0, _util.warn)(\"XFA - Rename: invalid XFA name\"); } } } class RenderPolicy extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"renderPolicy\", [\"server\", \"client\"]); } } class RunScripts extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"runScripts\", [\"both\", \"client\", \"none\", \"server\"]); } } class Script extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"script\", true); this.currentPage = null; this.exclude = null; this.runScripts = null; } } class ScriptModel extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"scriptModel\", [\"XFA\", \"none\"]); } } class Severity extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"severity\", [\"ignore\", \"error\", \"information\", \"trace\", \"warning\"]); } } class SilentPrint extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"silentPrint\", true); this.addSilentPrint = null; this.printerName = null; } } class Staple extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"staple\"); this.mode = (0, _utils.getStringOption)(attributes.mode, [\"usePrinterSetting\", \"on\", \"off\"]); } } class StartNode extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"startNode\"); } } class StartPage extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"startPage\", 0, n => true); } } class SubmitFormat extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"submitFormat\", [\"html\", \"delegate\", \"fdf\", \"xml\", \"pdf\"]); } } class SubmitUrl extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"submitUrl\"); } } class SubsetBelow extends _xfa_object.IntegerObject { constructor(attributes) { super(CONFIG_NS_ID, \"subsetBelow\", 100, n => n >= 0 && n n >= 0 }); } } class Trace extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"trace\", true); this.area = new _xfa_object.XFAObjectArray(); } } class Transform extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"transform\", true); this.groupParent = null; this.ifEmpty = null; this.nameAttr = null; this.picture = null; this.presence = null; this.rename = null; this.whitespace = null; } } class Type extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"type\", [\"none\", \"ascii85\", \"asciiHex\", \"ccittfax\", \"flate\", \"lzw\", \"runLength\", \"native\", \"xdp\", \"mergedXDP\"]); } } class Uri extends _xfa_object.StringObject { constructor(attributes) { super(CONFIG_NS_ID, \"uri\"); } } class Validate extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"validate\", [\"preSubmit\", \"prePrint\", \"preExecute\", \"preSave\"]); } } class ValidateApprovalSignatures extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"validateApprovalSignatures\"); } [_xfa_object.$finalize]() { this[_xfa_object.$content] = this[_xfa_object.$content].trim().split(/\\s+/).filter(x => [\"docReady\", \"postSign\"].includes(x)); } } class ValidationMessaging extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"validationMessaging\", [\"allMessagesIndividually\", \"allMessagesTogether\", \"firstMessageOnly\", \"noMessages\"]); } } class Version extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"version\", [\"1.7\", \"1.6\", \"1.5\", \"1.4\", \"1.3\", \"1.2\"]); } } class VersionControl extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"VersionControl\"); this.outputBelow = (0, _utils.getStringOption)(attributes.outputBelow, [\"warn\", \"error\", \"update\"]); this.sourceAbove = (0, _utils.getStringOption)(attributes.sourceAbove, [\"warn\", \"error\"]); this.sourceBelow = (0, _utils.getStringOption)(attributes.sourceBelow, [\"update\", \"maintain\"]); } } class ViewerPreferences extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"viewerPreferences\", true); this.ADBE_JSConsole = null; this.ADBE_JSDebugger = null; this.addViewerPreferences = null; this.duplexOption = null; this.enforce = null; this.numberOfCopies = null; this.pageRange = null; this.pickTrayByPDFSize = null; this.printScaling = null; } } class WebClient extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"webClient\", true); this.name = attributes.name ? attributes.name.trim() : \"\"; this.fontInfo = null; this.xdc = null; } } class Whitespace extends _xfa_object.OptionObject { constructor(attributes) { super(CONFIG_NS_ID, \"whitespace\", [\"preserve\", \"ltrim\", \"normalize\", \"rtrim\", \"trim\"]); } } class Window extends _xfa_object.ContentObject { constructor(attributes) { super(CONFIG_NS_ID, \"window\"); } [_xfa_object.$finalize]() { const pair = this[_xfa_object.$content].trim().split(/\\s*,\\s*/, 2).map(x => parseInt(x, 10)); if (pair.some(x => isNaN(x))) { this[_xfa_object.$content] = [0, 0]; return; } if (pair.length === 1) { pair.push(pair[0]); } this[_xfa_object.$content] = pair; } } class Xdc extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"xdc\", true); this.uri = new _xfa_object.XFAObjectArray(); this.xsl = new _xfa_object.XFAObjectArray(); } } class Xdp extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"xdp\", true); this.packets = null; } } class Xsl extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"xsl\", true); this.debug = null; this.uri = null; } } class Zpl extends _xfa_object.XFAObject { constructor(attributes) { super(CONFIG_NS_ID, \"zpl\", true); this.name = attributes.name ? attributes.name.trim() : \"\"; this.batchOutput = null; this.flipLabel = null; this.fontInfo = null; this.xdc = null; } } class ConfigNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (ConfigNamespace.hasOwnProperty(name)) { return ConfigNamespace[name](attributes); } return undefined; } static acrobat(attrs) { return new Acrobat(attrs); } static acrobat7(attrs) { return new Acrobat7(attrs); } static ADBE_JSConsole(attrs) { return new ADBE_JSConsole(attrs); } static ADBE_JSDebugger(attrs) { return new ADBE_JSDebugger(attrs); } static addSilentPrint(attrs) { return new AddSilentPrint(attrs); } static addViewerPreferences(attrs) { return new AddViewerPreferences(attrs); } static adjustData(attrs) { return new AdjustData(attrs); } static adobeExtensionLevel(attrs) { return new AdobeExtensionLevel(attrs); } static agent(attrs) { return new Agent(attrs); } static alwaysEmbed(attrs) { return new AlwaysEmbed(attrs); } static amd(attrs) { return new Amd(attrs); } static area(attrs) { return new Area(attrs); } static attributes(attrs) { return new Attributes(attrs); } static autoSave(attrs) { return new AutoSave(attrs); } static base(attrs) { return new Base(attrs); } static batchOutput(attrs) { return new BatchOutput(attrs); } static behaviorOverride(attrs) { return new BehaviorOverride(attrs); } static cache(attrs) { return new Cache(attrs); } static change(attrs) { return new Change(attrs); } static common(attrs) { return new Common(attrs); } static compress(attrs) { return new Compress(attrs); } static compressLogicalStructure(attrs) { return new CompressLogicalStructure(attrs); } static compressObjectStream(attrs) { return new CompressObjectStream(attrs); } static compression(attrs) { return new Compression(attrs); } static config(attrs) { return new Config(attrs); } static conformance(attrs) { return new Conformance(attrs); } static contentCopy(attrs) { return new ContentCopy(attrs); } static copies(attrs) { return new Copies(attrs); } static creator(attrs) { return new Creator(attrs); } static currentPage(attrs) { return new CurrentPage(attrs); } static data(attrs) { return new Data(attrs); } static debug(attrs) { return new Debug(attrs); } static defaultTypeface(attrs) { return new DefaultTypeface(attrs); } static destination(attrs) { return new Destination(attrs); } static documentAssembly(attrs) { return new DocumentAssembly(attrs); } static driver(attrs) { return new Driver(attrs); } static duplexOption(attrs) { return new DuplexOption(attrs); } static dynamicRender(attrs) { return new DynamicRender(attrs); } static embed(attrs) { return new Embed(attrs); } static encrypt(attrs) { return new Encrypt(attrs); } static encryption(attrs) { return new Encryption(attrs); } static encryptionLevel(attrs) { return new EncryptionLevel(attrs); } static enforce(attrs) { return new Enforce(attrs); } static equate(attrs) { return new Equate(attrs); } static equateRange(attrs) { return new EquateRange(attrs); } static exclude(attrs) { return new Exclude(attrs); } static excludeNS(attrs) { return new ExcludeNS(attrs); } static flipLabel(attrs) { return new FlipLabel(attrs); } static fontInfo(attrs) { return new FontInfo(attrs); } static formFieldFilling(attrs) { return new FormFieldFilling(attrs); } static groupParent(attrs) { return new GroupParent(attrs); } static ifEmpty(attrs) { return new IfEmpty(attrs); } static includeXDPContent(attrs) { return new IncludeXDPContent(attrs); } static incrementalLoad(attrs) { return new IncrementalLoad(attrs); } static incrementalMerge(attrs) { return new IncrementalMerge(attrs); } static interactive(attrs) { return new Interactive(attrs); } static jog(attrs) { return new Jog(attrs); } static labelPrinter(attrs) { return new LabelPrinter(attrs); } static layout(attrs) { return new Layout(attrs); } static level(attrs) { return new Level(attrs); } static linearized(attrs) { return new Linearized(attrs); } static locale(attrs) { return new Locale(attrs); } static localeSet(attrs) { return new LocaleSet(attrs); } static log(attrs) { return new Log(attrs); } static map(attrs) { return new MapElement(attrs); } static mediumInfo(attrs) { return new MediumInfo(attrs); } static message(attrs) { return new Message(attrs); } static messaging(attrs) { return new Messaging(attrs); } static mode(attrs) { return new Mode(attrs); } static modifyAnnots(attrs) { return new ModifyAnnots(attrs); } static msgId(attrs) { return new MsgId(attrs); } static nameAttr(attrs) { return new NameAttr(attrs); } static neverEmbed(attrs) { return new NeverEmbed(attrs); } static numberOfCopies(attrs) { return new NumberOfCopies(attrs); } static openAction(attrs) { return new OpenAction(attrs); } static output(attrs) { return new Output(attrs); } static outputBin(attrs) { return new OutputBin(attrs); } static outputXSL(attrs) { return new OutputXSL(attrs); } static overprint(attrs) { return new Overprint(attrs); } static packets(attrs) { return new Packets(attrs); } static pageOffset(attrs) { return new PageOffset(attrs); } static pageRange(attrs) { return new PageRange(attrs); } static pagination(attrs) { return new Pagination(attrs); } static paginationOverride(attrs) { return new PaginationOverride(attrs); } static part(attrs) { return new Part(attrs); } static pcl(attrs) { return new Pcl(attrs); } static pdf(attrs) { return new Pdf(attrs); } static pdfa(attrs) { return new Pdfa(attrs); } static permissions(attrs) { return new Permissions(attrs); } static pickTrayByPDFSize(attrs) { return new PickTrayByPDFSize(attrs); } static picture(attrs) { return new Picture(attrs); } static plaintextMetadata(attrs) { return new PlaintextMetadata(attrs); } static presence(attrs) { return new Presence(attrs); } static present(attrs) { return new Present(attrs); } static print(attrs) { return new Print(attrs); } static printHighQuality(attrs) { return new PrintHighQuality(attrs); } static printScaling(attrs) { return new PrintScaling(attrs); } static printerName(attrs) { return new PrinterName(attrs); } static producer(attrs) { return new Producer(attrs); } static ps(attrs) { return new Ps(attrs); } static range(attrs) { return new Range(attrs); } static record(attrs) { return new Record(attrs); } static relevant(attrs) { return new Relevant(attrs); } static rename(attrs) { return new Rename(attrs); } static renderPolicy(attrs) { return new RenderPolicy(attrs); } static runScripts(attrs) { return new RunScripts(attrs); } static script(attrs) { return new Script(attrs); } static scriptModel(attrs) { return new ScriptModel(attrs); } static severity(attrs) { return new Severity(attrs); } static silentPrint(attrs) { return new SilentPrint(attrs); } static staple(attrs) { return new Staple(attrs); } static startNode(attrs) { return new StartNode(attrs); } static startPage(attrs) { return new StartPage(attrs); } static submitFormat(attrs) { return new SubmitFormat(attrs); } static submitUrl(attrs) { return new SubmitUrl(attrs); } static subsetBelow(attrs) { return new SubsetBelow(attrs); } static suppressBanner(attrs) { return new SuppressBanner(attrs); } static tagged(attrs) { return new Tagged(attrs); } static template(attrs) { return new Template(attrs); } static templateCache(attrs) { return new TemplateCache(attrs); } static threshold(attrs) { return new Threshold(attrs); } static to(attrs) { return new To(attrs); } static trace(attrs) { return new Trace(attrs); } static transform(attrs) { return new Transform(attrs); } static type(attrs) { return new Type(attrs); } static uri(attrs) { return new Uri(attrs); } static validate(attrs) { return new Validate(attrs); } static validateApprovalSignatures(attrs) { return new ValidateApprovalSignatures(attrs); } static validationMessaging(attrs) { return new ValidationMessaging(attrs); } static version(attrs) { return new Version(attrs); } static versionControl(attrs) { return new VersionControl(attrs); } static viewerPreferences(attrs) { return new ViewerPreferences(attrs); } static webClient(attrs) { return new WebClient(attrs); } static whitespace(attrs) { return new Whitespace(attrs); } static window(attrs) { return new Window(attrs); } static xdc(attrs) { return new Xdc(attrs); } static xdp(attrs) { return new Xdp(attrs); } static xsl(attrs) { return new Xsl(attrs); } static zpl(attrs) { return new Zpl(attrs); } } exports.ConfigNamespace = ConfigNamespace; /***/ }), /* 92 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.ConnectionSetNamespace = void 0; var _namespaces = __w_pdfjs_require__(79); var _xfa_object = __w_pdfjs_require__(77); const CONNECTION_SET_NS_ID = _namespaces.NamespaceIds.connectionSet.id; class ConnectionSet extends _xfa_object.XFAObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"connectionSet\", true); this.wsdlConnection = new _xfa_object.XFAObjectArray(); this.xmlConnection = new _xfa_object.XFAObjectArray(); this.xsdConnection = new _xfa_object.XFAObjectArray(); } } class EffectiveInputPolicy extends _xfa_object.XFAObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"effectiveInputPolicy\"); this.id = attributes.id || \"\"; this.name = attributes.name || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class EffectiveOutputPolicy extends _xfa_object.XFAObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"effectiveOutputPolicy\"); this.id = attributes.id || \"\"; this.name = attributes.name || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class Operation extends _xfa_object.StringObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"operation\"); this.id = attributes.id || \"\"; this.input = attributes.input || \"\"; this.name = attributes.name || \"\"; this.output = attributes.output || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class RootElement extends _xfa_object.StringObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"rootElement\"); this.id = attributes.id || \"\"; this.name = attributes.name || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class SoapAction extends _xfa_object.StringObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"soapAction\"); this.id = attributes.id || \"\"; this.name = attributes.name || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class SoapAddress extends _xfa_object.StringObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"soapAddress\"); this.id = attributes.id || \"\"; this.name = attributes.name || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class Uri extends _xfa_object.StringObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"uri\"); this.id = attributes.id || \"\"; this.name = attributes.name || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class WsdlAddress extends _xfa_object.StringObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"wsdlAddress\"); this.id = attributes.id || \"\"; this.name = attributes.name || \"\"; this.use = attributes.use || \"\"; this.usehref = attributes.usehref || \"\"; } } class WsdlConnection extends _xfa_object.XFAObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"wsdlConnection\", true); this.dataDescription = attributes.dataDescription || \"\"; this.name = attributes.name || \"\"; this.effectiveInputPolicy = null; this.effectiveOutputPolicy = null; this.operation = null; this.soapAction = null; this.soapAddress = null; this.wsdlAddress = null; } } class XmlConnection extends _xfa_object.XFAObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"xmlConnection\", true); this.dataDescription = attributes.dataDescription || \"\"; this.name = attributes.name || \"\"; this.uri = null; } } class XsdConnection extends _xfa_object.XFAObject { constructor(attributes) { super(CONNECTION_SET_NS_ID, \"xsdConnection\", true); this.dataDescription = attributes.dataDescription || \"\"; this.name = attributes.name || \"\"; this.rootElement = null; this.uri = null; } } class ConnectionSetNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (ConnectionSetNamespace.hasOwnProperty(name)) { return ConnectionSetNamespace[name](attributes); } return undefined; } static connectionSet(attrs) { return new ConnectionSet(attrs); } static effectiveInputPolicy(attrs) { return new EffectiveInputPolicy(attrs); } static effectiveOutputPolicy(attrs) { return new EffectiveOutputPolicy(attrs); } static operation(attrs) { return new Operation(attrs); } static rootElement(attrs) { return new RootElement(attrs); } static soapAction(attrs) { return new SoapAction(attrs); } static soapAddress(attrs) { return new SoapAddress(attrs); } static uri(attrs) { return new Uri(attrs); } static wsdlAddress(attrs) { return new WsdlAddress(attrs); } static wsdlConnection(attrs) { return new WsdlConnection(attrs); } static xmlConnection(attrs) { return new XmlConnection(attrs); } static xsdConnection(attrs) { return new XsdConnection(attrs); } } exports.ConnectionSetNamespace = ConnectionSetNamespace; /***/ }), /* 93 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.DatasetsNamespace = void 0; var _xfa_object = __w_pdfjs_require__(77); var _namespaces = __w_pdfjs_require__(79); const DATASETS_NS_ID = _namespaces.NamespaceIds.datasets.id; class Data extends _xfa_object.XmlObject { constructor(attributes) { super(DATASETS_NS_ID, \"data\", attributes); } [_xfa_object.$isNsAgnostic]() { return true; } } class Datasets extends _xfa_object.XFAObject { constructor(attributes) { super(DATASETS_NS_ID, \"datasets\", true); this.data = null; this.Signature = null; } [_xfa_object.$onChild](child) { const name = child[_xfa_object.$nodeName]; if (name === \"data\" && child[_xfa_object.$namespaceId] === DATASETS_NS_ID || name === \"Signature\" && child[_xfa_object.$namespaceId] === _namespaces.NamespaceIds.signature.id) { this[name] = child; } this[_xfa_object.$appendChild](child); } } class DatasetsNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (DatasetsNamespace.hasOwnProperty(name)) { return DatasetsNamespace[name](attributes); } return undefined; } static datasets(attributes) { return new Datasets(attributes); } static data(attributes) { return new Data(attributes); } } exports.DatasetsNamespace = DatasetsNamespace; /***/ }), /* 94 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.LocaleSetNamespace = void 0; var _namespaces = __w_pdfjs_require__(79); var _xfa_object = __w_pdfjs_require__(77); var _utils = __w_pdfjs_require__(78); const LOCALE_SET_NS_ID = _namespaces.NamespaceIds.localeSet.id; class CalendarSymbols extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"calendarSymbols\", true); this.name = \"gregorian\"; this.dayNames = new _xfa_object.XFAObjectArray(2); this.eraNames = null; this.meridiemNames = null; this.monthNames = new _xfa_object.XFAObjectArray(2); } } class CurrencySymbol extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"currencySymbol\"); this.name = (0, _utils.getStringOption)(attributes.name, [\"symbol\", \"isoname\", \"decimal\"]); } } class CurrencySymbols extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"currencySymbols\", true); this.currencySymbol = new _xfa_object.XFAObjectArray(3); } } class DatePattern extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"datePattern\"); this.name = (0, _utils.getStringOption)(attributes.name, [\"full\", \"long\", \"med\", \"short\"]); } } class DatePatterns extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"datePatterns\", true); this.datePattern = new _xfa_object.XFAObjectArray(4); } } class DateTimeSymbols extends _xfa_object.ContentObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"dateTimeSymbols\"); } } class Day extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"day\"); } } class DayNames extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"dayNames\", true); this.abbr = (0, _utils.getInteger)({ data: attributes.abbr, defaultValue: 0, validate: x => x === 1 }); this.day = new _xfa_object.XFAObjectArray(7); } } class Era extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"era\"); } } class EraNames extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"eraNames\", true); this.era = new _xfa_object.XFAObjectArray(2); } } class Locale extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"locale\", true); this.desc = attributes.desc || \"\"; this.name = \"isoname\"; this.calendarSymbols = null; this.currencySymbols = null; this.datePatterns = null; this.dateTimeSymbols = null; this.numberPatterns = null; this.numberSymbols = null; this.timePatterns = null; this.typeFaces = null; } } class LocaleSet extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"localeSet\", true); this.locale = new _xfa_object.XFAObjectArray(); } } class Meridiem extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"meridiem\"); } } class MeridiemNames extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"meridiemNames\", true); this.meridiem = new _xfa_object.XFAObjectArray(2); } } class Month extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"month\"); } } class MonthNames extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"monthNames\", true); this.abbr = (0, _utils.getInteger)({ data: attributes.abbr, defaultValue: 0, validate: x => x === 1 }); this.month = new _xfa_object.XFAObjectArray(12); } } class NumberPattern extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"numberPattern\"); this.name = (0, _utils.getStringOption)(attributes.name, [\"full\", \"long\", \"med\", \"short\"]); } } class NumberPatterns extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"numberPatterns\", true); this.numberPattern = new _xfa_object.XFAObjectArray(4); } } class NumberSymbol extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"numberSymbol\"); this.name = (0, _utils.getStringOption)(attributes.name, [\"decimal\", \"grouping\", \"percent\", \"minus\", \"zero\"]); } } class NumberSymbols extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"numberSymbols\", true); this.numberSymbol = new _xfa_object.XFAObjectArray(5); } } class TimePattern extends _xfa_object.StringObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"timePattern\"); this.name = (0, _utils.getStringOption)(attributes.name, [\"full\", \"long\", \"med\", \"short\"]); } } class TimePatterns extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"timePatterns\", true); this.timePattern = new _xfa_object.XFAObjectArray(4); } } class TypeFace extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"typeFace\", true); this.name = attributes.name | \"\"; } } class TypeFaces extends _xfa_object.XFAObject { constructor(attributes) { super(LOCALE_SET_NS_ID, \"typeFaces\", true); this.typeFace = new _xfa_object.XFAObjectArray(); } } class LocaleSetNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (LocaleSetNamespace.hasOwnProperty(name)) { return LocaleSetNamespace[name](attributes); } return undefined; } static calendarSymbols(attrs) { return new CalendarSymbols(attrs); } static currencySymbol(attrs) { return new CurrencySymbol(attrs); } static currencySymbols(attrs) { return new CurrencySymbols(attrs); } static datePattern(attrs) { return new DatePattern(attrs); } static datePatterns(attrs) { return new DatePatterns(attrs); } static dateTimeSymbols(attrs) { return new DateTimeSymbols(attrs); } static day(attrs) { return new Day(attrs); } static dayNames(attrs) { return new DayNames(attrs); } static era(attrs) { return new Era(attrs); } static eraNames(attrs) { return new EraNames(attrs); } static locale(attrs) { return new Locale(attrs); } static localeSet(attrs) { return new LocaleSet(attrs); } static meridiem(attrs) { return new Meridiem(attrs); } static meridiemNames(attrs) { return new MeridiemNames(attrs); } static month(attrs) { return new Month(attrs); } static monthNames(attrs) { return new MonthNames(attrs); } static numberPattern(attrs) { return new NumberPattern(attrs); } static numberPatterns(attrs) { return new NumberPatterns(attrs); } static numberSymbol(attrs) { return new NumberSymbol(attrs); } static numberSymbols(attrs) { return new NumberSymbols(attrs); } static timePattern(attrs) { return new TimePattern(attrs); } static timePatterns(attrs) { return new TimePatterns(attrs); } static typeFace(attrs) { return new TypeFace(attrs); } static typeFaces(attrs) { return new TypeFaces(attrs); } } exports.LocaleSetNamespace = LocaleSetNamespace; /***/ }), /* 95 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.SignatureNamespace = void 0; var _namespaces = __w_pdfjs_require__(79); var _xfa_object = __w_pdfjs_require__(77); const SIGNATURE_NS_ID = _namespaces.NamespaceIds.signature.id; class Signature extends _xfa_object.XFAObject { constructor(attributes) { super(SIGNATURE_NS_ID, \"signature\", true); } } class SignatureNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (SignatureNamespace.hasOwnProperty(name)) { return SignatureNamespace[name](attributes); } return undefined; } static signature(attributes) { return new Signature(attributes); } } exports.SignatureNamespace = SignatureNamespace; /***/ }), /* 96 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.StylesheetNamespace = void 0; var _namespaces = __w_pdfjs_require__(79); var _xfa_object = __w_pdfjs_require__(77); const STYLESHEET_NS_ID = _namespaces.NamespaceIds.stylesheet.id; class Stylesheet extends _xfa_object.XFAObject { constructor(attributes) { super(STYLESHEET_NS_ID, \"stylesheet\", true); } } class StylesheetNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (StylesheetNamespace.hasOwnProperty(name)) { return StylesheetNamespace[name](attributes); } return undefined; } static stylesheet(attributes) { return new Stylesheet(attributes); } } exports.StylesheetNamespace = StylesheetNamespace; /***/ }), /* 97 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.XdpNamespace = void 0; var _namespaces = __w_pdfjs_require__(79); var _xfa_object = __w_pdfjs_require__(77); const XDP_NS_ID = _namespaces.NamespaceIds.xdp.id; class Xdp extends _xfa_object.XFAObject { constructor(attributes) { super(XDP_NS_ID, \"xdp\", true); this.uuid = attributes.uuid || \"\"; this.timeStamp = attributes.timeStamp || \"\"; this.config = null; this.connectionSet = null; this.datasets = null; this.localeSet = null; this.stylesheet = new _xfa_object.XFAObjectArray(); this.template = null; } [_xfa_object.$onChildCheck](child) { const ns = _namespaces.NamespaceIds[child[_xfa_object.$nodeName]]; return ns && child[_xfa_object.$namespaceId] === ns.id; } } class XdpNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (XdpNamespace.hasOwnProperty(name)) { return XdpNamespace[name](attributes); } return undefined; } static xdp(attributes) { return new Xdp(attributes); } } exports.XdpNamespace = XdpNamespace; /***/ }), /* 98 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.XhtmlNamespace = void 0; var _xfa_object = __w_pdfjs_require__(77); var _namespaces = __w_pdfjs_require__(79); var _html_utils = __w_pdfjs_require__(84); var _utils = __w_pdfjs_require__(78); const XHTML_NS_ID = _namespaces.NamespaceIds.xhtml.id; const $richText = Symbol(); const VALID_STYLES = new Set([\"color\", \"font\", \"font-family\", \"font-size\", \"font-stretch\", \"font-style\", \"font-weight\", \"margin\", \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"letter-spacing\", \"line-height\", \"orphans\", \"page-break-after\", \"page-break-before\", \"page-break-inside\", \"tab-interval\", \"tab-stop\", \"text-align\", \"text-decoration\", \"text-indent\", \"vertical-align\", \"widows\", \"kerning-mode\", \"xfa-font-horizontal-scale\", \"xfa-font-vertical-scale\", \"xfa-spacerun\", \"xfa-tab-stops\"]); const StyleMapping = new Map([[\"page-break-after\", \"breakAfter\"], [\"page-break-before\", \"breakBefore\"], [\"page-break-inside\", \"breakInside\"], [\"kerning-mode\", value => value === \"none\" ? \"none\" : \"normal\"], [\"xfa-font-horizontal-scale\", value => `scaleX(${Math.max(0, Math.min(parseInt(value) / 100)).toFixed(2)})`], [\"xfa-font-vertical-scale\", value => `scaleY(${Math.max(0, Math.min(parseInt(value) / 100)).toFixed(2)})`], [\"xfa-spacerun\", \"\"], [\"xfa-tab-stops\", \"\"], [\"font-size\", (value, original) => { value = original.fontSize = (0, _utils.getMeasurement)(value); return (0, _html_utils.measureToString)(0.99 * value); }], [\"letter-spacing\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"line-height\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"margin\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"margin-bottom\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"margin-left\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"margin-right\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"margin-top\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"text-indent\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))], [\"font-family\", value => value], [\"vertical-align\", value => (0, _html_utils.measureToString)((0, _utils.getMeasurement)(value))]]); const spacesRegExp = /\\s+/g; const crlfRegExp = /[\\r ]+/g; const crlfForRichTextRegExp = /\\r ?/g; function mapStyle(styleStr, node, richText) { const style = Object.create(null); if (!styleStr) { return style; } const original = Object.create(null); for (const [key, value] of styleStr.split(\";\").map(s => s.split(\":\", 2))) { const mapping = StyleMapping.get(key); if (mapping === \"\") { continue; } let newValue = value; if (mapping) { if (typeof mapping === \"string\") { newValue = mapping; } else { newValue = mapping(value, original); } } if (key.endsWith(\"scale\")) { if (style.transform) { style.transform = `${style[key]} ${newValue}`; } else { style.transform = newValue; } } else { style[key.replaceAll(/-([a-zA-Z])/g, (_, x) => x.toUpperCase())] = newValue; } } if (style.fontFamily) { (0, _html_utils.setFontFamily)({ typeface: style.fontFamily, weight: style.fontWeight || \"normal\", posture: style.fontStyle || \"normal\", size: original.fontSize || 0 }, node, node[_xfa_object.$globalData].fontFinder, style); } if (richText && style.verticalAlign && style.verticalAlign !== \"0px\" && style.fontSize) { const SUB_SUPER_SCRIPT_FACTOR = 0.583; const VERTICAL_FACTOR = 0.333; const fontSize = (0, _utils.getMeasurement)(style.fontSize); style.fontSize = (0, _html_utils.measureToString)(fontSize * SUB_SUPER_SCRIPT_FACTOR); style.verticalAlign = (0, _html_utils.measureToString)(Math.sign((0, _utils.getMeasurement)(style.verticalAlign)) * fontSize * VERTICAL_FACTOR); } (0, _html_utils.fixTextIndent)(style); return style; } function checkStyle(node) { if (!node.style) { return \"\"; } return node.style.trim().split(/\\s*;\\s*/).filter(s => !!s).map(s => s.split(/\\s*:\\s*/, 2)).filter(([key, value]) => { if (key === \"font-family\") { node[_xfa_object.$globalData].usedTypefaces.add(value); } return VALID_STYLES.has(key); }).map(kv => kv.join(\":\")).join(\";\"); } const NoWhites = new Set([\"body\", \"html\"]); class XhtmlObject extends _xfa_object.XmlObject { constructor(attributes, name) { super(XHTML_NS_ID, name); this[$richText] = false; this.style = attributes.style || \"\"; } [_xfa_object.$clean](builder) { super[_xfa_object.$clean](builder); this.style = checkStyle(this); } [_xfa_object.$acceptWhitespace]() { return !NoWhites.has(this[_xfa_object.$nodeName]); } [_xfa_object.$onText](str, richText = false) { if (!richText) { str = str.replace(crlfRegExp, \"\"); if (!this.style.includes(\"xfa-spacerun:yes\")) { str = str.replace(spacesRegExp, \" \"); } } else { this[$richText] = true; } if (str) { this[_xfa_object.$content] += str; } } [_xfa_object.$pushGlyphs](measure, mustPop = true) { const xfaFont = Object.create(null); const margin = { top: NaN, bottom: NaN, left: NaN, right: NaN }; let lineHeight = null; for (const [key, value] of this.style.split(\";\").map(s => s.split(\":\", 2))) { switch (key) { case \"font-family\": xfaFont.typeface = (0, _utils.stripQuotes)(value); break; case \"font-size\": xfaFont.size = (0, _utils.getMeasurement)(value); break; case \"font-weight\": xfaFont.weight = value; break; case \"font-style\": xfaFont.posture = value; break; case \"letter-spacing\": xfaFont.letterSpacing = (0, _utils.getMeasurement)(value); break; case \"margin\": const values = value.split(/ \\t/).map(x => (0, _utils.getMeasurement)(x)); switch (values.length) { case 1: margin.top = margin.bottom = margin.left = margin.right = values[0]; break; case 2: margin.top = margin.bottom = values[0]; margin.left = margin.right = values[1]; break; case 3: margin.top = values[0]; margin.bottom = values[2]; margin.left = margin.right = values[1]; break; case 4: margin.top = values[0]; margin.left = values[1]; margin.bottom = values[2]; margin.right = values[3]; break; } break; case \"margin-top\": margin.top = (0, _utils.getMeasurement)(value); break; case \"margin-bottom\": margin.bottom = (0, _utils.getMeasurement)(value); break; case \"margin-left\": margin.left = (0, _utils.getMeasurement)(value); break; case \"margin-right\": margin.right = (0, _utils.getMeasurement)(value); break; case \"line-height\": lineHeight = (0, _utils.getMeasurement)(value); break; } } measure.pushData(xfaFont, margin, lineHeight); if (this[_xfa_object.$content]) { measure.addString(this[_xfa_object.$content]); } else { for (const child of this[_xfa_object.$getChildren]()) { if (child[_xfa_object.$nodeName] === \"#text\") { measure.addString(child[_xfa_object.$content]); continue; } child[_xfa_object.$pushGlyphs](measure); } } if (mustPop) { measure.popFont(); } } [_xfa_object.$toHTML](availableSpace) { const children = []; this[_xfa_object.$extra] = { children }; this[_xfa_object.$childrenToHTML]({}); if (children.length === 0 && !this[_xfa_object.$content]) { return _utils.HTMLResult.EMPTY; } let value; if (this[$richText]) { value = this[_xfa_object.$content] ? this[_xfa_object.$content].replace(crlfForRichTextRegExp, \" \") : undefined; } else { value = this[_xfa_object.$content] || undefined; } return _utils.HTMLResult.success({ name: this[_xfa_object.$nodeName], attributes: { href: this.href, style: mapStyle(this.style, this, this[$richText]) }, children, value }); } } class A extends XhtmlObject { constructor(attributes) { super(attributes, \"a\"); this.href = (0, _html_utils.fixURL)(attributes.href) || \"\"; } } class B extends XhtmlObject { constructor(attributes) { super(attributes, \"b\"); } [_xfa_object.$pushGlyphs](measure) { measure.pushFont({ weight: \"bold\" }); super[_xfa_object.$pushGlyphs](measure); measure.popFont(); } } class Body extends XhtmlObject { constructor(attributes) { super(attributes, \"body\"); } [_xfa_object.$toHTML](availableSpace) { const res = super[_xfa_object.$toHTML](availableSpace); const { html } = res; if (!html) { return _utils.HTMLResult.EMPTY; } html.name = \"div\"; html.attributes.class = [\"xfaRich\"]; return res; } } class Br extends XhtmlObject { constructor(attributes) { super(attributes, \"br\"); } [_xfa_object.$text]() { return \" \"; } [_xfa_object.$pushGlyphs](measure) { measure.addString(\" \"); } [_xfa_object.$toHTML](availableSpace) { return _utils.HTMLResult.success({ name: \"br\" }); } } class Html extends XhtmlObject { constructor(attributes) { super(attributes, \"html\"); } [_xfa_object.$toHTML](availableSpace) { const children = []; this[_xfa_object.$extra] = { children }; this[_xfa_object.$childrenToHTML]({}); if (children.length === 0) { return _utils.HTMLResult.success({ name: \"div\", attributes: { class: [\"xfaRich\"], style: {} }, value: this[_xfa_object.$content] || \"\" }); } if (children.length === 1) { const child = children[0]; if (child.attributes && child.attributes.class.includes(\"xfaRich\")) { return _utils.HTMLResult.success(child); } } return _utils.HTMLResult.success({ name: \"div\", attributes: { class: [\"xfaRich\"], style: {} }, children }); } } class I extends XhtmlObject { constructor(attributes) { super(attributes, \"i\"); } [_xfa_object.$pushGlyphs](measure) { measure.pushFont({ posture: \"italic\" }); super[_xfa_object.$pushGlyphs](measure); measure.popFont(); } } class Li extends XhtmlObject { constructor(attributes) { super(attributes, \"li\"); } } class Ol extends XhtmlObject { constructor(attributes) { super(attributes, \"ol\"); } } class P extends XhtmlObject { constructor(attributes) { super(attributes, \"p\"); } [_xfa_object.$pushGlyphs](measure) { super[_xfa_object.$pushGlyphs](measure, false); measure.addString(\" \"); measure.addPara(); measure.popFont(); } [_xfa_object.$text]() { const siblings = this[_xfa_object.$getParent]()[_xfa_object.$getChildren](); if (siblings[siblings.length - 1] === this) { return super[_xfa_object.$text](); } return super[_xfa_object.$text]() + \" \"; } } class Span extends XhtmlObject { constructor(attributes) { super(attributes, \"span\"); } } class Sub extends XhtmlObject { constructor(attributes) { super(attributes, \"sub\"); } } class Sup extends XhtmlObject { constructor(attributes) { super(attributes, \"sup\"); } } class Ul extends XhtmlObject { constructor(attributes) { super(attributes, \"ul\"); } } class XhtmlNamespace { static [_namespaces.$buildXFAObject](name, attributes) { if (XhtmlNamespace.hasOwnProperty(name)) { return XhtmlNamespace[name](attributes); } return undefined; } static a(attributes) { return new A(attributes); } static b(attributes) { return new B(attributes); } static body(attributes) { return new Body(attributes); } static br(attributes) { return new Br(attributes); } static html(attributes) { return new Html(attributes); } static i(attributes) { return new I(attributes); } static li(attributes) { return new Li(attributes); } static ol(attributes) { return new Ol(attributes); } static p(attributes) { return new P(attributes); } static span(attributes) { return new Span(attributes); } static sub(attributes) { return new Sub(attributes); } static sup(attributes) { return new Sup(attributes); } static ul(attributes) { return new Ul(attributes); } } exports.XhtmlNamespace = XhtmlNamespace; /***/ }), /* 99 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.UnknownNamespace = void 0; var _namespaces = __w_pdfjs_require__(79); var _xfa_object = __w_pdfjs_require__(77); class UnknownNamespace { constructor(nsId) { this.namespaceId = nsId; } [_namespaces.$buildXFAObject](name, attributes) { return new _xfa_object.XmlObject(this.namespaceId, name, attributes); } } exports.UnknownNamespace = UnknownNamespace; /***/ }), /* 100 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.DatasetReader = void 0; var _util = __w_pdfjs_require__(2); var _core_utils = __w_pdfjs_require__(8); var _xml_parser = __w_pdfjs_require__(70); function decodeString(str) { try { return (0, _util.stringToUTF8String)(str); } catch (ex) { (0, _util.warn)(`UTF-8 decoding failed: \"${ex}\".`); return str; } } class DatasetXMLParser extends _xml_parser.SimpleXMLParser { constructor(options) { super(options); this.node = null; } onEndElement(name) { const node = super.onEndElement(name); if (node && name === \"xfa:datasets\") { this.node = node; throw new Error(\"Aborting DatasetXMLParser.\"); } } } class DatasetReader { constructor(data) { if (data.datasets) { this.node = new _xml_parser.SimpleXMLParser({ hasAttributes: true }).parseFromString(data.datasets).documentElement; } else { const parser = new DatasetXMLParser({ hasAttributes: true }); try { parser.parseFromString(data[\"xdp:xdp\"]); } catch (_) {} this.node = parser.node; } } getValue(path) { if (!this.node || !path) { return \"\"; } const node = this.node.searchNode((0, _core_utils.parseXFAPath)(path), 0); if (!node) { return \"\"; } const first = node.firstChild; if (first && first.nodeName === \"value\") { return node.children.map(child => decodeString(child.textContent)); } return decodeString(node.textContent); } } exports.DatasetReader = DatasetReader; /***/ }), /* 101 */ /***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => { Object.defineProperty(exports, \"__esModule\", ({ value: true })); exports.XRef = void 0; var _util = __w_pdfjs_require__(2); var _primitives = __w_pdfjs_require__(5); var _core_utils = __w_pdfjs_require__(8); var _parser = __w_pdfjs_require__(27); var _base_stream = __w_pdfjs_require__(9); var _crypto = __w_pdfjs_require__(74); class XRef { constructor(stream, pdfManager) { this.stream = stream; this.pdfManager = pdfManager; this.entries = []; this.xrefstms = Object.create(null); this._cacheMap = new Map(); this._pendingRefs = new _primitives.RefSet(); this.stats = new _core_utils.DocStats(pdfManager.msgHandler); this._newRefNum = null; } getNewRef() { if (this._newRefNum === null) { this._newRefNum = this.entries.length; } return _primitives.Ref.get(this._newRefNum++, 0); } resetNewRef() { this._newRefNum = null; } setStartXRef(startXRef) { this.startXRefQueue = [startXRef]; } parse(recoveryMode = false) { let trailerDict; if (!recoveryMode) { trailerDict = this.readXRef(); } else { (0, _util.warn)(\"Indexing all PDF objects\"); trailerDict = this.indexObjects(); } trailerDict.assignXref(this); this.trailer = trailerDict; let encrypt; try { encrypt = trailerDict.get(\"Encrypt\"); } catch (ex) { if (ex instanceof _core_utils.MissingDataException) { throw ex; } (0, _util.warn)(`XRef.parse - Invalid \"Encrypt\" reference: \"${ex}\".`); } if (encrypt instanceof _primitives.Dict) { const ids = trailerDict.get(\"ID\"); const fileId = ids && ids.length ? ids[0] : \"\"; encrypt.suppressEncryption = true; this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password); } let root; try { root = trailerDict.get(\"Root\"); } catch (ex) { if (ex instanceof _core_utils.MissingDataException) { throw ex; } (0, _util.warn)(`XRef.parse - Invalid \"Root\" reference: \"${ex}\".`); } if (root instanceof _primitives.Dict) { try { const pages = root.get(\"Pages\"); if (pages instanceof _primitives.Dict) { this.root = root; return; } } catch (ex) { if (ex instanceof _core_utils.MissingDataException) { throw ex; } (0, _util.warn)(`XRef.parse - Invalid \"Pages\" reference: \"${ex}\".`); } } if (!recoveryMode) { throw new _core_utils.XRefParseException(); } throw new _util.InvalidPDFException(\"Invalid Root reference.\"); } processXRefTable(parser) { if (!(\"tableState\" in this)) { this.tableState = { entryNum: 0, streamPos: parser.lexer.stream.pos, parserBuf1: parser.buf1, parserBuf2: parser.buf2 }; } const obj = this.readXRefTable(parser); if (!(0, _primitives.isCmd)(obj, \"trailer\")) { throw new _util.FormatError(\"Invalid XRef table: could not find trailer dictionary\"); } let dict = parser.getObj(); if (!(dict instanceof _primitives.Dict) && dict.dict) { dict = dict.dict; } if (!(dict instanceof _primitives.Dict)) { throw new _util.FormatError(\"Invalid XRef table: could not parse trailer dictionary\"); } delete this.tableState; return dict; } readXRefTable(parser) { const stream = parser.lexer.stream; const tableState = this.tableState; stream.pos = tableState.streamPos; parser.buf1 = tableState.parserBuf1; parser.buf2 = tableState.parserBuf2; let obj; while (true) { if (!(\"firstEntryNum\" in tableState) || !(\"entryCount\" in tableState)) { if ((0, _primitives.isCmd)(obj = parser.getObj(), \"trailer\")) { break; } tableState.firstEntryNum = obj; tableState.entryCount = parser.getObj(); } let first = tableState.firstEntryNum; const count = tableState.entryCount; if (!Number.isInteger(first) || !Number.isInteger(count)) { throw new _util.FormatError(\"Invalid XRef table: wrong types in subsection header\"); } for (let i = tableState.entryNum; i < count; i++) { tableState.streamPos = stream.pos; tableState.entryNum = i; tableState.parserBuf1 = parser.buf1; tableState.parserBuf2 = parser.buf2; const entry = {}; entry.offset = parser.getObj(); entry.gen = parser.getObj(); const type = parser.getObj(); if (type instanceof _primitives.Cmd) { switch (type.cmd) { case \"f\": entry.free = true; break; case \"n\": entry.uncompressed = true; break; } } if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) { throw new _util.FormatError(`Invalid entry in XRef subsection: ${first}, ${count}`); } if (i === 0 && entry.free && first === 1) { first = 0; } if (!this.entries[i + first]) { this.entries[i + first] = entry; } } tableState.entryNum = 0; tableState.streamPos = stream.pos; tableState.parserBuf1 = parser.buf1; tableState.parserBuf2 = parser.buf2; delete tableState.firstEntryNum; delete tableState.entryCount; } if (this.entries[0] && !this.entries[0].free) { throw new _util.FormatError(\"Invalid XRef table: unexpected first object\"); } return obj; } processXRefStream(stream) { if (!(\"streamState\" in this)) { const streamParameters = stream.dict; const byteWidths = streamParameters.get(\"W\"); let range = streamParameters.get(\"Index\"); if (!range) { range = [0, streamParameters.get(\"Size\")]; } this.streamState = { entryRanges: range, byteWidths, entryNum: 0, streamPos: stream.pos }; } this.readXRefStream(stream); delete this.streamState; return stream.dict; } readXRefStream(stream) { const streamState = this.streamState; stream.pos = streamState.streamPos; const [typeFieldWidth, offsetFieldWidth, generationFieldWidth] = streamState.byteWidths; const entryRanges = streamState.entryRanges; while (entryRanges.length > 0) { const [first, n] = entryRanges; if (!Number.isInteger(first) || !Number.isInteger(n)) { throw new _util.FormatError(`Invalid XRef range fields: ${first}, ${n}`); } if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) { throw new _util.FormatError(`Invalid XRef entry fields length: ${first}, ${n}`); } for (let i = streamState.entryNum; i < n; ++i) { streamState.entryNum = i; streamState.streamPos = stream.pos; let type = 0, offset = 0, generation = 0; for (let j = 0; j < typeFieldWidth; ++j) { const typeByte = stream.getByte(); if (typeByte === -1) { throw new _util.FormatError(\"Invalid XRef byteWidths 'type'.\"); } type = type < 8 | typeByte; } if (typeFieldWidth === 0) { type = 1; } for (let j = 0; j < offsetFieldWidth; ++j) { const offsetByte = stream.getByte(); if (offsetByte === -1) { throw new _util.FormatError(\"Invalid XRef byteWidths 'offset'.\"); } offset = offset < 8 | offsetByte; } for (let j = 0; j < generationFieldWidth; ++j) { const generationByte = stream.getByte(); if (generationByte === -1) { throw new _util.FormatError(\"Invalid XRef byteWidths 'generation'.\"); } generation = generation < 8 | generationByte; } const entry = {}; entry.offset = offset; entry.gen = generation; switch (type) { case 0: entry.free = true; break; case 1: entry.uncompressed = true; break; case 2: break; default: throw new _util.FormatError(`Invalid XRef entry type: ${type}`); } if (!this.entries[first + i]) { this.entries[first + i] = entry; } } streamState.entryNum = 0; streamState.streamPos = stream.pos; entryRanges.splice(0, 2); } } indexObjects() { const TAB = 0x9, LF = 0xa, CR = 0xd, SPACE = 0x20; const PERCENT = 0x25, LT = 0x3c; function readToken(data, offset) { let token = \"\", ch = data[offset]; while (ch !== LF && ch !== CR && ch !== LT) { if (++offset >= data.length) { break; } token += String.fromCharCode(ch); ch = data[offset]; } return token; } function skipUntil(data, offset, what) { const length = what.length, dataLength = data.length; let skipped = 0; while (offset < dataLength) { let i = 0; while (i < length && data[offset + i] === what[i]) { ++i; } if (i >= length) { break; } offset++; skipped++; } return skipped; } const objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/; const endobjRegExp = /\\bendobj[\\b\\s]$/; const nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s { /******/ if(typeof Symbol !== 'undefined' && Symbol.toStringTag) { /******/ Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' }); /******/ } /******/ Object.defineProperty(exports, '__esModule', { value: true }); /******/ }; /******/ })(); /******/ /************************************************************************/ var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk. (() => { var exports = __webpack_exports__; Object.defineProperty(exports, \"__esModule\", ({ value: true })); Object.defineProperty(exports, \"WorkerMessageHandler\", ({ enumerable: true, get: function () { return _worker.WorkerMessageHandler; } })); var _worker = __w_pdfjs_require__(1); const pdfjsVersion = '2.14.0'; const pdfjsBuild = '75ac897'; })(); /******/ return __webpack_exports__; /******/ })() ; }); //# sourceMappingURL=pdf.worker.js.map"}]